"format global";
(function(global) {

  var defined = {};

  // indexOf polyfill for IE8
  var indexOf = Array.prototype.indexOf || function(item) {
    for (var i = 0, l = this.length; i < l; i++)
      if (this[i] === item)
        return i;
    return -1;
  }

  var getOwnPropertyDescriptor = true;
  try {
    Object.getOwnPropertyDescriptor({ a: 0 }, 'a');
  }
  catch(e) {
    getOwnPropertyDescriptor = false;
  }

  var defineProperty;
  (function () {
    try {
      if (!!Object.defineProperty({}, 'a', {}))
        defineProperty = Object.defineProperty;
    }
    catch (e) {
      defineProperty = function(obj, prop, opt) {
        try {
          obj[prop] = opt.value || opt.get.call(obj);
        }
        catch(e) {}
      }
    }
  })();

  function register(name, deps, declare) {
    if (arguments.length === 4)
      return registerDynamic.apply(this, arguments);
    doRegister(name, {
      declarative: true,
      deps: deps,
      declare: declare
    });
  }

  function registerDynamic(name, deps, executingRequire, execute) {
    doRegister(name, {
      declarative: false,
      deps: deps,
      executingRequire: executingRequire,
      execute: execute
    });
  }

  function doRegister(name, entry) {
    entry.name = name;

    // we never overwrite an existing define
    if (!(name in defined))
      defined[name] = entry;

    // we have to normalize dependencies
    // (assume dependencies are normalized for now)
    // entry.normalizedDeps = entry.deps.map(normalize);
    entry.normalizedDeps = entry.deps;
  }


  function buildGroups(entry, groups) {
    groups[entry.groupIndex] = groups[entry.groupIndex] || [];

    if (indexOf.call(groups[entry.groupIndex], entry) != -1)
      return;

    groups[entry.groupIndex].push(entry);

    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
      var depName = entry.normalizedDeps[i];
      var depEntry = defined[depName];

      // not in the registry means already linked / ES6
      if (!depEntry || depEntry.evaluated)
        continue;

      // now we know the entry is in our unlinked linkage group
      var depGroupIndex = entry.groupIndex + (depEntry.declarative != entry.declarative);

      // the group index of an entry is always the maximum
      if (depEntry.groupIndex === undefined || depEntry.groupIndex < depGroupIndex) {

        // if already in a group, remove from the old group
        if (depEntry.groupIndex !== undefined) {
          groups[depEntry.groupIndex].splice(indexOf.call(groups[depEntry.groupIndex], depEntry), 1);

          // if the old group is empty, then we have a mixed depndency cycle
          if (groups[depEntry.groupIndex].length == 0)
            throw new TypeError("Mixed dependency cycle detected");
        }

        depEntry.groupIndex = depGroupIndex;
      }

      buildGroups(depEntry, groups);
    }
  }

  function link(name) {
    var startEntry = defined[name];

    startEntry.groupIndex = 0;

    var groups = [];

    buildGroups(startEntry, groups);

    var curGroupDeclarative = !!startEntry.declarative == groups.length % 2;
    for (var i = groups.length - 1; i >= 0; i--) {
      var group = groups[i];
      for (var j = 0; j < group.length; j++) {
        var entry = group[j];

        // link each group
        if (curGroupDeclarative)
          linkDeclarativeModule(entry);
        else
          linkDynamicModule(entry);
      }
      curGroupDeclarative = !curGroupDeclarative; 
    }
  }

  // module binding records
  var moduleRecords = {};
  function getOrCreateModuleRecord(name) {
    return moduleRecords[name] || (moduleRecords[name] = {
      name: name,
      dependencies: [],
      exports: {}, // start from an empty module and extend
      importers: []
    })
  }

  function linkDeclarativeModule(entry) {
    // only link if already not already started linking (stops at circular)
    if (entry.module)
      return;

    var module = entry.module = getOrCreateModuleRecord(entry.name);
    var exports = entry.module.exports;

    var declaration = entry.declare.call(global, function(name, value) {
      module.locked = true;

      if (typeof name == 'object') {
        for (var p in name)
          exports[p] = name[p];
      }
      else {
        exports[name] = value;
      }

      for (var i = 0, l = module.importers.length; i < l; i++) {
        var importerModule = module.importers[i];
        if (!importerModule.locked) {
          for (var j = 0; j < importerModule.dependencies.length; ++j) {
            if (importerModule.dependencies[j] === module) {
              importerModule.setters[j](exports);
            }
          }
        }
      }

      module.locked = false;
      return value;
    });

    module.setters = declaration.setters;
    module.execute = declaration.execute;

    // now link all the module dependencies
    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
      var depName = entry.normalizedDeps[i];
      var depEntry = defined[depName];
      var depModule = moduleRecords[depName];

      // work out how to set depExports based on scenarios...
      var depExports;

      if (depModule) {
        depExports = depModule.exports;
      }
      else if (depEntry && !depEntry.declarative) {
        depExports = depEntry.esModule;
      }
      // in the module registry
      else if (!depEntry) {
        depExports = load(depName);
      }
      // we have an entry -> link
      else {
        linkDeclarativeModule(depEntry);
        depModule = depEntry.module;
        depExports = depModule.exports;
      }

      // only declarative modules have dynamic bindings
      if (depModule && depModule.importers) {
        depModule.importers.push(module);
        module.dependencies.push(depModule);
      }
      else
        module.dependencies.push(null);

      // run the setter for this dependency
      if (module.setters[i])
        module.setters[i](depExports);
    }
  }

  // An analog to loader.get covering execution of all three layers (real declarative, simulated declarative, simulated dynamic)
  function getModule(name) {
    var exports;
    var entry = defined[name];

    if (!entry) {
      exports = load(name);
      if (!exports)
        throw new Error("Unable to load dependency " + name + ".");
    }

    else {
      if (entry.declarative)
        ensureEvaluated(name, []);

      else if (!entry.evaluated)
        linkDynamicModule(entry);

      exports = entry.module.exports;
    }

    if ((!entry || entry.declarative) && exports && exports.__useDefault)
      return exports['default'];

    return exports;
  }

  function linkDynamicModule(entry) {
    if (entry.module)
      return;

    var exports = {};

    var module = entry.module = { exports: exports, id: entry.name };

    // AMD requires execute the tree first
    if (!entry.executingRequire) {
      for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
        var depName = entry.normalizedDeps[i];
        var depEntry = defined[depName];
        if (depEntry)
          linkDynamicModule(depEntry);
      }
    }

    // now execute
    entry.evaluated = true;
    var output = entry.execute.call(global, function(name) {
      for (var i = 0, l = entry.deps.length; i < l; i++) {
        if (entry.deps[i] != name)
          continue;
        return getModule(entry.normalizedDeps[i]);
      }
      throw new TypeError('Module ' + name + ' not declared as a dependency.');
    }, exports, module);

    if (output)
      module.exports = output;

    // create the esModule object, which allows ES6 named imports of dynamics
    exports = module.exports;
 
    if (exports && exports.__esModule) {
      entry.esModule = exports;
    }
    else {
      entry.esModule = {};
      
      // don't trigger getters/setters in environments that support them
      if ((typeof exports == 'object' || typeof exports == 'function') && exports !== global) {
        if (getOwnPropertyDescriptor) {
          var d;
          for (var p in exports)
            if (d = Object.getOwnPropertyDescriptor(exports, p))
              defineProperty(entry.esModule, p, d);
        }
        else {
          var hasOwnProperty = exports && exports.hasOwnProperty;
          for (var p in exports) {
            if (!hasOwnProperty || exports.hasOwnProperty(p))
              entry.esModule[p] = exports[p];
          }
         }
       }
      entry.esModule['default'] = exports;
      defineProperty(entry.esModule, '__useDefault', {
        value: true
      });
    }
  }

  /*
   * Given a module, and the list of modules for this current branch,
   *  ensure that each of the dependencies of this module is evaluated
   *  (unless one is a circular dependency already in the list of seen
   *  modules, in which case we execute it)
   *
   * Then we evaluate the module itself depth-first left to right 
   * execution to match ES6 modules
   */
  function ensureEvaluated(moduleName, seen) {
    var entry = defined[moduleName];

    // if already seen, that means it's an already-evaluated non circular dependency
    if (!entry || entry.evaluated || !entry.declarative)
      return;

    // this only applies to declarative modules which late-execute

    seen.push(moduleName);

    for (var i = 0, l = entry.normalizedDeps.length; i < l; i++) {
      var depName = entry.normalizedDeps[i];
      if (indexOf.call(seen, depName) == -1) {
        if (!defined[depName])
          load(depName);
        else
          ensureEvaluated(depName, seen);
      }
    }

    if (entry.evaluated)
      return;

    entry.evaluated = true;
    entry.module.execute.call(global);
  }

  // magical execution function
  var modules = {};
  function load(name) {
    if (modules[name])
      return modules[name];

    // node core modules
    if (name.substr(0, 6) == '@node/')
      return require(name.substr(6));

    var entry = defined[name];

    // first we check if this module has already been defined in the registry
    if (!entry)
      throw "Module " + name + " not present.";

    // recursively ensure that the module and all its 
    // dependencies are linked (with dependency group handling)
    link(name);

    // now handle dependency execution in correct order
    ensureEvaluated(name, []);

    // remove from the registry
    defined[name] = undefined;

    // exported modules get __esModule defined for interop
    if (entry.declarative)
      defineProperty(entry.module.exports, '__esModule', { value: true });

    // return the defined module object
    return modules[name] = entry.declarative ? entry.module.exports : entry.esModule;
  };

  return function(mains, depNames, declare) {
    return function(formatDetect) {
      formatDetect(function(deps) {
        var System = {
          _nodeRequire: typeof require != 'undefined' && require.resolve && typeof process != 'undefined' && require,
          register: register,
          registerDynamic: registerDynamic,
          get: load, 
          set: function(name, module) {
            modules[name] = module; 
          },
          newModule: function(module) {
            return module;
          }
        };
        System.set('@empty', {});

        // register external dependencies
        for (var i = 0; i < depNames.length; i++) (function(depName, dep) {
          if (dep && dep.__esModule)
            System.register(depName, [], function(_export) {
              return {
                setters: [],
                execute: function() {
                  for (var p in dep)
                    if (p != '__esModule' && !(typeof p == 'object' && p + '' == 'Module'))
                      _export(p, dep[p]);
                }
              };
            });
          else
            System.registerDynamic(depName, [], false, function() {
              return dep;
            });
        })(depNames[i], arguments[i]);

        // register modules in this bundle
        declare(System);

        // load mains
        var firstLoad = load(mains[0]);
        if (mains.length > 1)
          for (var i = 1; i < mains.length; i++)
            load(mains[i]);

        if (firstLoad.__useDefault)
          return firstLoad['default'];
        else
          return firstLoad;
      });
    };
  };

})(typeof self != 'undefined' ? self : global)
/* (['mainModule'], ['external-dep'], function($__System) {
  System.register(...);
})
(function(factory) {
  if (typeof define && define.amd)
    define(['external-dep'], factory);
  // etc UMD / module pattern
})*/

(['1'], [], function($__System) {

(function(__global) {
  var loader = $__System;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var indexOf = Array.prototype.indexOf || function(item) {
    for (var i = 0, l = this.length; i < l; i++)
      if (this[i] === item)
        return i;
    return -1;
  }

  function readMemberExpression(p, value) {
    var pParts = p.split('.');
    while (pParts.length)
      value = value[pParts.shift()];
    return value;
  }

  // bare minimum ignores for IE8
  var ignoredGlobalProps = ['_g', 'sessionStorage', 'localStorage', 'clipboardData', 'frames', 'external', 'mozAnimationStartTime', 'webkitStorageInfo', 'webkitIndexedDB'];

  var globalSnapshot;

  function forEachGlobal(callback) {
    if (Object.keys)
      Object.keys(__global).forEach(callback);
    else
      for (var g in __global) {
        if (!hasOwnProperty.call(__global, g))
          continue;
        callback(g);
      }
  }

  function forEachGlobalValue(callback) {
    forEachGlobal(function(globalName) {
      if (indexOf.call(ignoredGlobalProps, globalName) != -1)
        return;
      try {
        var value = __global[globalName];
      }
      catch (e) {
        ignoredGlobalProps.push(globalName);
      }
      callback(globalName, value);
    });
  }

  loader.set('@@global-helpers', loader.newModule({
    prepareGlobal: function(moduleName, exportName, globals) {
      // disable module detection
      var curDefine = __global.define;
       
      __global.define = undefined;
      __global.exports = undefined;
      if (__global.module && __global.module.exports)
        __global.module = undefined;

      // set globals
      var oldGlobals;
      if (globals) {
        oldGlobals = {};
        for (var g in globals) {
          oldGlobals[g] = globals[g];
          __global[g] = globals[g];
        }
      }

      // store a complete copy of the global object in order to detect changes
      if (!exportName) {
        globalSnapshot = {};

        forEachGlobalValue(function(name, value) {
          globalSnapshot[name] = value;
        });
      }

      // return function to retrieve global
      return function() {
        var globalValue;

        if (exportName) {
          globalValue = readMemberExpression(exportName, __global);
        }
        else {
          var singleGlobal;
          var multipleExports;
          var exports = {};

          forEachGlobalValue(function(name, value) {
            if (globalSnapshot[name] === value)
              return;
            if (typeof value == 'undefined')
              return;
            exports[name] = value;

            if (typeof singleGlobal != 'undefined') {
              if (!multipleExports && singleGlobal !== value)
                multipleExports = true;
            }
            else {
              singleGlobal = value;
            }
          });
          globalValue = multipleExports ? exports : singleGlobal;
        }

        // revert globals
        if (oldGlobals) {
          for (var g in oldGlobals)
            __global[g] = oldGlobals[g];
        }
        __global.define = curDefine;

        return globalValue;
      };
    }
  }));

})(typeof self != 'undefined' ? self : global);

(function(__global) {
  var loader = $__System;
  var indexOf = Array.prototype.indexOf || function(item) {
    for (var i = 0, l = this.length; i < l; i++)
      if (this[i] === item)
        return i;
    return -1;
  }

  var commentRegEx = /(\/\*([\s\S]*?)\*\/|([^:]|^)\/\/(.*)$)/mg;
  var cjsRequirePre = "(?:^|[^$_a-zA-Z\\xA0-\\uFFFF.])";
  var cjsRequirePost = "\\s*\\(\\s*(\"([^\"]+)\"|'([^']+)')\\s*\\)";
  var fnBracketRegEx = /\(([^\)]*)\)/;
  var wsRegEx = /^\s+|\s+$/g;
  
  var requireRegExs = {};

  function getCJSDeps(source, requireIndex) {

    // remove comments
    source = source.replace(commentRegEx, '');

    // determine the require alias
    var params = source.match(fnBracketRegEx);
    var requireAlias = (params[1].split(',')[requireIndex] || 'require').replace(wsRegEx, '');

    // find or generate the regex for this requireAlias
    var requireRegEx = requireRegExs[requireAlias] || (requireRegExs[requireAlias] = new RegExp(cjsRequirePre + requireAlias + cjsRequirePost, 'g'));

    requireRegEx.lastIndex = 0;

    var deps = [];

    var match;
    while (match = requireRegEx.exec(source))
      deps.push(match[2] || match[3]);

    return deps;
  }

  /*
    AMD-compatible require
    To copy RequireJS, set window.require = window.requirejs = loader.amdRequire
  */
  function require(names, callback, errback, referer) {
    // in amd, first arg can be a config object... we just ignore
    if (typeof names == 'object' && !(names instanceof Array))
      return require.apply(null, Array.prototype.splice.call(arguments, 1, arguments.length - 1));

    // amd require
    if (typeof names == 'string' && typeof callback == 'function')
      names = [names];
    if (names instanceof Array) {
      var dynamicRequires = [];
      for (var i = 0; i < names.length; i++)
        dynamicRequires.push(loader['import'](names[i], referer));
      Promise.all(dynamicRequires).then(function(modules) {
        if (callback)
          callback.apply(null, modules);
      }, errback);
    }

    // commonjs require
    else if (typeof names == 'string') {
      var module = loader.get(names);
      return module.__useDefault ? module['default'] : module;
    }

    else
      throw new TypeError('Invalid require');
  }

  function define(name, deps, factory) {
    if (typeof name != 'string') {
      factory = deps;
      deps = name;
      name = null;
    }
    if (!(deps instanceof Array)) {
      factory = deps;
      deps = ['require', 'exports', 'module'].splice(0, factory.length);
    }

    if (typeof factory != 'function')
      factory = (function(factory) {
        return function() { return factory; }
      })(factory);

    // in IE8, a trailing comma becomes a trailing undefined entry
    if (deps[deps.length - 1] === undefined)
      deps.pop();

    // remove system dependencies
    var requireIndex, exportsIndex, moduleIndex;
    
    if ((requireIndex = indexOf.call(deps, 'require')) != -1) {
      
      deps.splice(requireIndex, 1);

      // only trace cjs requires for non-named
      // named defines assume the trace has already been done
      if (!name)
        deps = deps.concat(getCJSDeps(factory.toString(), requireIndex));
    }

    if ((exportsIndex = indexOf.call(deps, 'exports')) != -1)
      deps.splice(exportsIndex, 1);
    
    if ((moduleIndex = indexOf.call(deps, 'module')) != -1)
      deps.splice(moduleIndex, 1);

    var define = {
      name: name,
      deps: deps,
      execute: function(req, exports, module) {

        var depValues = [];
        for (var i = 0; i < deps.length; i++)
          depValues.push(req(deps[i]));

        module.uri = module.id;

        module.config = function() {};

        // add back in system dependencies
        if (moduleIndex != -1)
          depValues.splice(moduleIndex, 0, module);
        
        if (exportsIndex != -1)
          depValues.splice(exportsIndex, 0, exports);
        
        if (requireIndex != -1) 
          depValues.splice(requireIndex, 0, function(names, callback, errback) {
            if (typeof names == 'string' && typeof callback != 'function')
              return req(names);
            return require.call(loader, names, callback, errback, module.id);
          });

        var output = factory.apply(exportsIndex == -1 ? __global : exports, depValues);

        if (typeof output == 'undefined' && module)
          output = module.exports;

        if (typeof output != 'undefined')
          return output;
      }
    };

    // anonymous define
    if (!name) {
      // already defined anonymously -> throw
      if (lastModule.anonDefine)
        throw new TypeError('Multiple defines for anonymous module');
      lastModule.anonDefine = define;
    }
    // named define
    else {
      // if we don't have any other defines,
      // then let this be an anonymous define
      // this is just to support single modules of the form:
      // define('jquery')
      // still loading anonymously
      // because it is done widely enough to be useful
      if (!lastModule.anonDefine && !lastModule.isBundle) {
        lastModule.anonDefine = define;
      }
      // otherwise its a bundle only
      else {
        // if there is an anonDefine already (we thought it could have had a single named define)
        // then we define it now
        // this is to avoid defining named defines when they are actually anonymous
        if (lastModule.anonDefine && lastModule.anonDefine.name)
          loader.registerDynamic(lastModule.anonDefine.name, lastModule.anonDefine.deps, false, lastModule.anonDefine.execute);

        lastModule.anonDefine = null;
      }

      // note this is now a bundle
      lastModule.isBundle = true;

      // define the module through the register registry
      loader.registerDynamic(name, define.deps, false, define.execute);
    }
  }
  define.amd = {};

  // adds define as a global (potentially just temporarily)
  function createDefine(loader) {
    lastModule.anonDefine = null;
    lastModule.isBundle = false;

    // ensure no NodeJS environment detection
    var oldModule = __global.module;
    var oldExports = __global.exports;
    var oldDefine = __global.define;

    __global.module = undefined;
    __global.exports = undefined;
    __global.define = define;

    return function() {
      __global.define = oldDefine;
      __global.module = oldModule;
      __global.exports = oldExports;
    };
  }

  var lastModule = {
    isBundle: false,
    anonDefine: null
  };

  loader.set('@@amd-helpers', loader.newModule({
    createDefine: createDefine,
    require: require,
    define: define,
    lastModule: lastModule
  }));
  loader.amdDefine = define;
  loader.amdRequire = require;
})(typeof self != 'undefined' ? self : global);

"bundle";
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("2", [], function() {
  return "<% if (!Shared.isDesktop()) { %>\n\n<% _.each(messages, function(message){ %>\n  <% var lastMsgJID = ''; %>\n\t<% if (message.jid != \"me\") { %>\n    <div class=\"fullWidth\" style=\"text-align: left; font-size: 10px; color: #777777; margin-bottom: 10px; padding-left: 20px;\">\n      <%=moment(message.date).format(\"hh:mm\")%> - (<%=moment(message.date).fromNow()%>)\n    </div>\n\t\t<div class=\"fullWidth\">\n  \t\t<img class=\"chat-picture left\">\n  \t\t<div class=\"triangle-right left\">\n  \t\t\t<%=message.body%>\n  \t\t</div>\n  \t\t<div class=\"clear\"></div>\n  \t</div>\n\t<% } else { %>\n    <div class=\"fullWidth\" style=\"text-align: right; font-size: 10px; color: #777777; margin-bottom: 10px; padding-right: 20px;\">\n      <%=moment(message.date).format(\"hh:mm\")%> - (<%=moment(message.date).fromNow()%>)\n    </div>\n  \t<div class=\"fullWidth\">\n  \t\t<img class=\"myPicture chat-picture right\">\n  \t\t<div class=\"triangle-right right\">\n  \t\t\t<%=message.body%>\n  \t\t</div>\n  \t\t<div class=\"clear\"></div>\n  \t</div>\n\t<% } %>\n  <% lastMsgJID = message.jid; %>\n<% }); %>\n<div id=\"last_message_<%=chatID%>\"></div>\n\n<% } else { %>\n<% _.each(messages, function(message){ %>\n  <% if (message.jid != \"me\") { %>\n       <div class=\"fullWidth\" style=\"text-align: left; font-size: 10px; color: #777777; margin-bottom: 10px; padding-left: 20px;\">\n      <%=moment(message.date).format(\"hh:mm\")%> - (<%=moment(message.date).fromNow()%>)\n    </div>\n    <div class=\"fullWidth\">\n      <img class=\"chat-picture left\">\n      <div class=\"triangle-right left\">\n        <%=message.body%>\n      </div>\n      <div class=\"clear\"></div>\n    </div>\n\n  <% } else { %>\n    <div class=\"fullWidth\" style=\"text-align: right; font-size: 10px; color: #777777; margin-bottom: 10px; padding-right: 20px;\">\n        <%=moment(message.date).format(\"hh:mm\")%> - (<%=moment(message.date).fromNow()%>)\n      </div>\n      <div class=\"fullWidth\">\n        <img class=\"myPicture chat-picture right\">\n        <div class=\"triangle-right right\">\n          <%=message.body%>\n        </div>\n        <div class=\"clear\"></div>\n      </div>\n\n  <% } %>\n<% }); %>\n<div id=\"last_message_<%=chatID%>\"></div>\n<% } %>";
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("3", [], function() {
  return "<% if (!Shared.isDesktop()) { %>\n<h2 id=\"chatUserName\">\n\t<% if ($.trim(contact.name) != '') { %><%=contact.name%><% } else { %><%=contact.jid%><% } %>\n</h2>\n<div class=\"chatArea\">\n\t<input id='msgToSend' type=\"text\" class=\"chatTextField\" value=\"\" placeholder=\"Mensagem:\"  onKeyPress=\"\"/>\n</div>\n<article id=\"wrapperDetail\" class=\"contentScroll\">\n  <div id=\"scrollerDetail\">\n  \t\n  </div>\n</article>\n<% } else { %>\n\t<div id=\"chat_window_content_<%=chatID%>\" class=\"row chat-window col-xs-5 col-md-3\" style=\"margin:0px; padding: 0px; z-index: 200;\">\n        <div class=\"col-xs-12 col-md-12\">\n          <div class=\"panel panel-default panel-collapsed\">\n                <div class=\"panel-heading top-bar\">\n                    <div class=\"col-md-8 col-xs-8\">\n                        <h3 class=\"panel-title\"><!--<span id=\"chatUserName\" class=\"glyphicon glyphicon-comment\"></span> --><% if ($.trim(contact.name) != '') { %><%=contact.name%><% } else { %><%=contact.jid%><% } %></h3>\n                    </div>\n                    <div class=\"col-md-4 col-xs-4\" style=\"text-align: right;\">\n                        <a href=\"#\"><span id=\"minim_chat_window_<%=chatID%>\" class=\"glyphicon glyphicon-minus icon_minim\"></span></a>\n                        <a href=\"#\"><span class=\"glyphicon glyphicon-remove icon_close\" data-id=\"chat_window_1\"></span></a>\n                    </div>\n                </div>\n                <div id=\"msgs_content_<%=chatID%>\" class=\"panel-body msg_container_base\">\n                    \n                </div>\n                <div id=\"panel_footer_<%=chatID%>\" class=\"panel-footer\" style=\"padding: 5px;\">\n                    <div class=\"input-group\">\n                        <input id=\"msgToSend\" type=\"text\" class=\"form-control input-sm chat_input\" placeholder=\"Escreva aqui sua mensagem...\" />\n                        <span class=\"input-group-btn\">\n                        <button class=\"btn btn-primary btn-sm\" id=\"btn-chat\">Enviar</button>\n                        </span>\n                    </div>\n                </div>\n        </div>\n        </div>\n    </div> \n<% } %>";
});

_removeDefine();
})();
$__System.register("4", ["5", "6", "7", "8", "9", "3", "2", "a"], function($__export) {
  "use strict";
  var __moduleName = "4";
  var $,
      _,
      Backbone,
      Shared,
      moment,
      chatWindowTemplate,
      chatWindowMessagesTemplate,
      LoadingView,
      ChatWindowView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      moment = $__m.default;
    }, function($__m) {
      chatWindowTemplate = $__m.default;
    }, function($__m) {
      chatWindowMessagesTemplate = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }],
    execute: function() {
      ChatWindowView = Backbone.View.extend({
        el: $("#content"),
        chatID: "",
        currentContact: null,
        render: function() {
          var ThisContact = Shared.im.getContactsByID(this.chatID);
          this.currentContact = ThisContact;
          var that = this;
          var onMessageFunction = function(message) {
            that.renderMessages();
            Shared.menuView.setChatBadge(Shared.im.qtdUnreadMessages());
          };
          var onComposingFunction = function(message) {
            if (message.from == that.currentContact.jid) {
              var composingText = "";
              if (message.state == "composing") {
                composingText = " (está escrevendo...)";
              }
              if ($.trim(ThisContact.name) != "") {
                $("#chatUserName").html(ThisContact.name + composingText);
              } else {
                $("#chatUserName").html(ThisContact.jid + composingText);
              }
            }
          };
          Shared.im.addOnMessageListener(onMessageFunction);
          Shared.im.addOnComposingListener(onComposingFunction);
          Shared.im.addOnErrorListener(Shared.onIMErrorFunction);
          Shared.im.addOnDisconnectListener(Shared.onIMDisconnectFunction);
          Shared.menuView.setChatBadge(Shared.im.qtdUnreadMessages());
          var data = {
            chatID: this.chatID,
            contact: ThisContact,
            _: _,
            Shared: Shared
          };
          var htmlTemplate = _.template(chatWindowTemplate);
          var compiledTemplate = htmlTemplate(data);
          this.$el.html(compiledTemplate);
          this.renderMessages();
          var top = $('.topHeader').outerHeight(true);
          var chat = $('.chatArea').outerHeight(true) == null ? 0 : $('.chatArea').outerHeight(true);
          this.scrollToLastMessage();
          Shared.setCurrentView(2, this);
        },
        events: {
          "keydown #msgToSend": "sendMessage",
          "click .icon_close": "closeChatWindow",
          "click .panel-heading span.icon_minim": "minimChatWindow"
        },
        closeChatWindow: function(e) {
          if (e != undefined) {
            e.preventDefault();
          }
          $("#chat_window_content_" + this.chatID).remove();
        },
        minimChatWindow: function(e) {
          if (e != undefined) {
            e.preventDefault();
          }
          console.log("minimChatWindow");
          var $this = $('#minim_chat_window_' + this.chatID);
          console.log($this);
          if (!$this.hasClass('panel-collapsed')) {
            $this.parents('.panel').find('.panel-body').hide();
            $this.addClass('panel-collapsed');
            $this.removeClass('glyphicon-minus').addClass('glyphicon-plus');
            $('#panel_footer_' + this.chatID).hide();
          } else {
            $this.parents('.panel').find('.panel-body').show();
            $this.removeClass('panel-collapsed');
            $this.removeClass('glyphicon-plus').addClass('glyphicon-minus');
            $('#panel_footer_' + this.chatID).show();
          }
        },
        sendMessage: function(e) {
          if (e.which == 13 && !e.shiftKey) {
            Shared.im.sendMessage(this.currentContact.jid, $('#msgToSend').val());
            $('#msgToSend').val("");
            $('#msgToSend').blur();
            $('#msgToSend').focus();
          }
        },
        renderMessages: function() {
          var allMessages = Shared.im.getMessagesFromID(this.chatID);
          var ThisContact = Shared.im.getContactsByID(this.chatID);
          var data = {
            Shared: Shared,
            messages: allMessages,
            chatID: this.chatID,
            contact: ThisContact,
            moment: moment,
            _: _,
            $: $
          };
          var elementID = "#scrollerDetail";
          if (Shared.isDesktop()) {
            elementID = "#msgs_content_" + this.chatID;
          }
          var htmlTemplate = _.template(chatWindowMessagesTemplate);
          var compiledMessagesTemplate = htmlTemplate(data);
          $(elementID).html(compiledMessagesTemplate);
          $('.myPicture').each(function() {
            $(this).css("background-image", $("#userPicture").css("background-image"));
            $(this).css("background-size", "46px 61px");
          });
          this.scrollToLastMessage();
        },
        scrollToLastMessage: function() {
          if (Shared.scrollDetail != null) {
            Shared.scrollDetail.refresh();
            Shared.scrollDetail.scrollToElement(document.getElementById("last_message_" + this.chatID), 200);
          } else {
            var element = document.getElementById('msgs_content_' + this.chatID);
            var maxScrollPosition = element.scrollHeight - element.clientHeight;
            $("#msgs_content_" + this.chatID).animate({scrollTop: maxScrollPosition}, 200);
          }
        }
      });
      $__export('default', ChatWindowView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("b", [], function() {
  return "<% if (isConnected) { %>\n<% for (var i in contacts) { %>\n    <dt id=\"list_title_<%=i%>\" <% if (contacts[i].length == 0) { %>class=\"hidden\"<% } %>>\n      <% if (i == 'online') { %>Online<% } %>\n      <% if (i == 'busy') { %>Ocupado<% } %>\n      <% if (i == 'away') { %>Ausente<% } %>\n      <% if (i == 'offline') { %>Offline<% } %>\n    </dt>\n    <ul id=\"list_<%=i%>\">\n      <% _.each(contacts[i], function(contact){ %>\n        <% if (contact.id != null) { %>\n        <li id=\"<%=contact.id%>\"> \n          <a href=\"/Chat/<%=contact.id%>\" class=\"listItemLink\">\n            <div id=\"<%=contact.id%>_status\" class=\"chat-<%=i%>\"></div>\n            <div id=\"<%=contact.id%>_badge\" style=\"\" class=\"badge badge-chat-list <% if (contact.qtdUnread == 0) { %>hidden<% } %>\"><%= contact.qtdUnread %></div>\n            <% if (contact.name != null) { %>\n            <h3 class=\"font-mid\"><%= contact.name %></h3>\n            <span class=\"font-small\"><%= contact.jid %></span>\n            <% } else { %>\n            <h3 class=\"font-mid\"><%= contact.jid %></h3>\n            <% } %>\n          </a>\n        </li>\n        <% } %>\n      <% }); %>\n    </ul>\n<% } %>\n<% } else { %>\n  <dl id=\"chatHelp\">\n      <dt>Est&aacute; com problemas ao se conectar ao CHAT?</dt>\n      <dd>Tente reconectar, se o problema persistir verifique se voc&ecirc; se enquadra em uma das seguintes situa&ccedil;&otilde;es.</dd>\n      <br> \n      <br>\n      <dt>1 - Sua conex&atilde;o pode ter sido perdida</dt>\n      <dd>\n        Caso voc&ecirc; esteja sem acesso a internet ou tenha passado com seu dispositivo m&oacute;vel por uma &aacute;rea onde a conex&atilde;o com a internet tenha sido temporariamente perdida, você ser&aacute; desconectado do servi&ccedil;o de CHAT. Para conectar-se novamente, basta fechar e abrir o aplicativo. Caso esteja em um navegador WEB, atualize a sua p&aacute;gina.\n        <br><br><br>\n      </dd>\n      <dt>2 - Voc&ecirc; pode estar conectado em outro local</dt>\n      <dd>\n        Voc&ecirc; pode estar conectado no CHAT em outro computador ou em outra aba do seu navegador. O servi&ccedil;o de CHAT aceita apenas uma conex&atilde;o por usu&aacute;rio, e caso voc&ecirc; tenha se logado em outro lugar sua conex&atilde;o ser&aacute; perdida.\n        <br><br><br>\n      </dd>\n\n      <% if (!Shared.isPhonegap()) { %>\n      <dt>3 - O seu navegador pode ter bloqueado sua conex&atilde;o.</dt>\n      <dd>Alguns navegadores podem bloquear a conex&atilde;o no servidor de CHAT.<br><br>No navegador Firefox desabilite o bloqueio atrav&eacute;s destes 4 passos bem simples:<br>\n        <br><div class=\"firefox_help\"></div>\n      </dd>\n      <% } %>\n  </dl>\n<% } %>\n\n";
});

_removeDefine();
})();
$__System.register("c", ["5", "6", "7", "8", "b"], function($__export) {
  "use strict";
  var __moduleName = "c";
  var $,
      _,
      Backbone,
      Shared,
      chatListItemsTemplate,
      ChatListItemsView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      chatListItemsTemplate = $__m.default;
    }],
    execute: function() {
      ChatListItemsView = Backbone.View.extend({render: function() {
          var that = this;
          var isConnected = Shared.im.isConnected();
          var AllContacts = [];
          if (isConnected) {
            AllContacts = Shared.im.getAllContacts();
          }
          var data = {
            contacts: AllContacts,
            isConnected: isConnected,
            _: _,
            Shared: Shared
          };
          var htmlTemplate = _.template(chatListItemsTemplate);
          var compiledTemplate = htmlTemplate(data);
          var elementID = "#scrollerList";
          if (Shared.isDesktop()) {
            elementID = "#scrollerListCHAT";
          }
          $(elementID).html(compiledTemplate);
          if (!isConnected) {
            Shared.menuView.renderContextMenu('chatOffline', {});
          }
        }});
      $__export('default', ChatListItemsView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("d", [], function() {
  return "<h2 id=\"chatTitleBar\" class=\"icon-jabber\" style=\"padding: 5px; padding-left: 35px; background-position: 10px; font-size: 14px; background-size: 25px 20px; background-color: #D0D0D0; margin-bottom: 0px; margin-top: 0px;\">Chat</h2>\n<div id=\"chatContacts\">\n\t<div id=\"wrapperCHAT\" class=\"contentScroll\">\n\t  <div id=\"scrollerCHAT\" style=\"overflow-y: auto;\">\n\t\t<dl id=\"scrollerListCHAT\"></dl>\n\t  </div>\n\t</div>\n</div>";
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("e", [], function() {
  return "<h2 class=\"font-big icon-jabber\" style=\"padding-left: 50px; background-position: 10px;\">Chat</h2>\n<div id=\"wrapper\" class=\"contentScroll\">\n  <div id=\"scroller\">\n\t<dl id=\"scrollerList\"></dl>\n  </div>\n</div>";
});

_removeDefine();
})();
$__System.register("f", ["5", "6", "7", "8", "e", "d", "c", "4", "a"], function($__export) {
  "use strict";
  var __moduleName = "f";
  var $,
      _,
      Backbone,
      Shared,
      chatListTemplate,
      chatListTemplateDesktop,
      ChatListItemsView,
      ChatWindowView,
      LoadingView,
      ChatListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      chatListTemplate = $__m.default;
    }, function($__m) {
      chatListTemplateDesktop = $__m.default;
    }, function($__m) {
      ChatListItemsView = $__m.default;
    }, function($__m) {
      ChatWindowView = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }],
    execute: function() {
      ChatListView = Backbone.View.extend({
        secondViewName: '',
        render: function() {
          var that = this;
          var primaryElementID = "#content";
          var detailElementID = "#contentDetail";
          if (Shared.isSmartPhoneResolution()) {
            detailElementID = "#content";
          }
          if (Shared.isDesktop()) {
            primaryElementID = "#chatDesktop";
            detailElementID = "#chatDesktop";
          } else {
            $(detailElementID).html("");
          }
          Shared.im.clearListeners();
          var onMessageFunction = function(message) {
            if (message.id != that.secondViewName) {
              var contact = Shared.im.getContactsByID(message.id);
              that.setChatBadge(message.id, contact.qtdUnread);
              if (message.jid != 'me') {
                var pageMessage = {
                  type: "chat-message",
                  icon: 'icon-jabber',
                  title: message.body,
                  description: message.jid,
                  route: "/Chat/" + message.id,
                  timeout: 3000,
                  elementID: "#pageMessage"
                };
                Shared.showMessage(pageMessage);
              }
            } else {
              that.setChatBadge(that.secondViewName, 0);
              Shared.im.setAsSeenAllMessagesFromContact(that.secondViewName);
            }
            Shared.menuView.setChatBadge(Shared.im.qtdUnreadMessages());
          };
          var onPresenceFunction = function(message) {
            var element = $("#" + message.id);
            element.animate({
              opacity: 0.25,
              height: "toggle"
            }, 1000, function() {
              element.remove();
              $("#list_title_" + message.status).removeClass("hidden");
              $("#list_" + message.status).append(element);
              var elementStatus = $("#" + message.id + "_status");
              elementStatus.removeClass();
              elementStatus.addClass("chat-" + message.status);
              element.animate({
                opacity: 1,
                height: "toggle"
              }, 1000, function() {});
            });
          };
          var onErrorFunction = function() {
            that.renderContactList();
            $(detailElementID).html("");
          };
          Shared.im.addOnMessageListener(onMessageFunction);
          Shared.im.addOnPresenceListener(onPresenceFunction);
          Shared.im.addOnErrorListener(Shared.onIMErrorFunction);
          Shared.im.addOnDisconnectListener(Shared.onIMDisconnectFunction);
          Shared.im.addOnErrorListener(onErrorFunction);
          if (this.secondViewName != null) {
            if (!Shared.isDesktop()) {
              var loadingView = new LoadingView({el: $(detailElementID)});
              loadingView.render();
            }
            if (Shared.detailView != null) {
              Shared.detailView.undelegateEvents();
            }
            setTimeout(function() {
              that.setChatBadge(that.secondViewName, 0);
              Shared.im.setAsSeenAllMessagesFromContact(that.secondViewName);
              if (Shared.isDesktop()) {
                detailElementID = "#chatWindows";
              }
              var chatWindowView = new ChatWindowView({el: $(detailElementID)});
              chatWindowView.chatID = that.secondViewName;
              chatWindowView.render();
            }, Shared.timeoutDelay);
          } else {
            this.renderContactList();
          }
        },
        renderContactList: function() {
          var primaryElementID = "#content";
          if (Shared.isDesktop()) {
            primaryElementID = "#chatDesktop";
          }
          console.log(primaryElementID);
          var that = this;
          var loadingView = new LoadingView({el: $(primaryElementID)});
          loadingView.render();
          setTimeout(function() {
            var newData = {_: _};
            var compiledTemplate;
            if (Shared.isDesktop()) {
              var htmlTemplate = _.template(chatListTemplateDesktop);
              var compiledTemplate = htmlTemplate(newData);
            } else {
              var htmlTemplate = _.template(chatListTemplate);
            }
            $(primaryElementID).html(compiledTemplate);
            var isConnected = Shared.im.isConnected();
            var renderChatList = function() {
              var chatListView = new ChatListItemsView();
              chatListView.render();
              Shared.setCurrentView(1, that);
              Shared.menuView.setChatBadge(Shared.im.qtdUnreadMessages());
            };
            if (!isConnected) {
              var rightNow = new Date();
              if ((rightNow - Shared.lastReconectionTime) >= 60) {
                renderChatList();
              } else {
                var loadingView = new LoadingView({el: $("#scrollerList")});
                loadingView.render();
                Shared.router.navigate("ChatReconnect", {trigger: true});
              }
            } else {
              renderChatList();
            }
          }, Shared.timeoutDelay);
        },
        initialize: function() {
          this.secondViewName = "";
        },
        setChatBadge: function(contactID, value) {
          var elID = "#" + contactID + "_badge";
          if (value > 0) {
            $(elID).removeClass("hidden");
            $(elID).html(value);
          } else {
            $(elID).addClass("hidden");
            $(elID).html(value);
          }
        }
      });
      $__export('default', ChatListView);
    }
  };
});

$__System.register("10", ["5", "6", "7", "8", "11", "a"], function($__export) {
  "use strict";
  var __moduleName = "10";
  var $,
      _,
      Backbone,
      Shared,
      EventModel,
      LoadingView,
      CalendarDeleteEventView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      EventModel = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }],
    execute: function() {
      CalendarDeleteEventView = Backbone.View.extend({
        eventID: 0,
        year: '',
        month: '',
        day: '',
        render: function(options) {
          var self = this;
          if (!Shared.isSmartPhoneResolution())
            this.$el = $('#contentDetail');
          var loadingView = new LoadingView({el: this.$el});
          loadingView.render();
          var callbackSuccess = function(data) {
            Shared.router.navigate('/Calendar/' + self.year + '/' + self.month + '/' + self.day + '/OK', {trigger: true});
          };
          var callbackFail = function(error) {
            Shared.router.navigate('/Calendar/Events/' + self.eventID + '/Error', {trigger: true});
          };
          this.deleteEvent(callbackSuccess, callbackFail);
        },
        deleteEvent: function(callbackSucess, callbackFail) {
          var eventModel = new EventModel();
          eventModel.deleteEvent(this.eventID).done(function(data) {
            if (callbackSucess)
              callbackSucess(data);
          }).fail(function(error) {
            if (callbackFail)
              callbackFail(error);
          });
        },
        initialize: function(options) {}
      });
      $__export('default', CalendarDeleteEventView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("12", [], function() {
  return "<div class=\"expresso-cards \">\n\t <div class=\"expresso-email animation-fadein\">\n\t\t<div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n          <h2 class=\"mdl-card__title-text\">Editar Evento</h2>\n        </div>\n<form id=\"addEvent\">\n\t<div id=\"formMessage\"></div>\n\t<ol>\n\t\t<li>\n\t\t\t<label for=\"eventType\">Tipo *</label>\n\t\t\t<select name=\"eventType\" id=\"eventType\">\n\n\t\t\t\t<% _.each(types, function(t, i) { %>\n\n\t\t\t\t\t<option value=\"<%= i %>\" <%= (i == event.get('eventType')) ? 'selected=\"selected\"' : '' %>><%= t %></option>\n\n\t\t\t\t<% }); %>\n\n\t\t\t</select>\n\t\t</li>\n\t\t<li>\n\t\t\t<label for=\"eventName\">T&iacute;tulo *</label>\n\t\t\t<input type=\"text\" name=\"eventName\" id=\"eventName\" placeholder=\"T&iacute;tulo\" value=\"<%= event.get('eventName') %>\" />\n\t\t</li>\n\t\t<li>\n\t\t\t<label for=\"eventDescription\">Descri&ccedil;&atilde;o</label>\n\t\t\t<textarea name=\"eventDescription\" id=\"eventDescription\" placeholder=\"Descri&ccedil;&atilde;o completa\"><%= event.get('eventDescription') %></textarea>\n\t\t</li>\n\t\t<li class=\"itens\" <% if (eventCategories.length == 0) { %>style=\" display: none; \"<%}%>>\n\t\t\t<label for=\"eventCategoryID\">Categoria</label>\n\n\t\t\t<% if (typeof(eventCategories) != 'undefined' && eventCategories.length > 0) \n\t\t\t{ \n\t\t\t\tvar listCategoriesSelected = (event.get('eventCategoryID')).split(',');\n\t\t\t\t%>\n\t\t\t\t<ol>\n\t\t\t\t\t<% _.each(eventCategories, function(e) { %>\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<input id=\"<%= e.get('eventCategoryID') %>\" type=\"checkbox\" class=\"css-checkbox eventCategories\" name=\"<%= e.get('eventCategoryID') %>\" value=\"<%= e.get('eventCategoryID') %>\" data-name=\"<%= e.get('eventCategoryName') %>\" <%= (_.contains(listCategoriesSelected, e.get('eventCategoryID'))) ? 'checked=\"checked\"' : '' %> /> \n\t\t\t\t\t\t\t<label for=\"<%= e.get('eventCategoryID') %>\" class=\"css-label\"><%= e.get('eventCategoryName') %></label>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t<% }); %>\n\n\t\t\t\t</ol>\n\n\t\t\t<% } %>\n\n\t\t</li>\n\t\t<li>\n\t\t\t<label for=\"eventLocation\">Localiza&ccedil;&atilde;o</label>\n\t\t\t<input type=\"text\" name=\"eventLocation\" id=\"eventLocation\" placeholder=\"Localiza&ccedil;&atilde;o\" value=\"<%= event.get('eventLocation') %>\" />\n\t\t</li>\n\t\t<li class=\"date\">\n\t\t\t<label for=\"eventDateStart\">Data inicial *</label>\n\t\t\t<input type=\"date\" name=\"eventDateStart\" id=\"eventDateStart\" placeholder=\"Data inicial\" value=\"<%= event.get('eventDateStart') %>\" />\n\t\t</li>\n\t\t<li class=\"date\">\n\t\t\t<label for=\"eventTimeStart\">Hora inicial *</label>\n\t\t\t<input type=\"time\" name=\"eventTimeStart\" id=\"eventTimeStart\" placeholder=\"Hora inicial\" value=\"<%= event.get('eventTimeStart') %>\" />\n\t\t</li>\n\t\t<li class=\"date\">\n\t\t\t<label for=\"eventDateEnd\">Data final *</label>\n\t\t\t<input type=\"date\" name=\"eventDateEnd\" id=\"eventDateEnd\" placeholder=\"Data final\" value=\"<%= event.get('eventDateEnd') %>\" />\n\t\t</li>\n\t\t<li class=\"date\">\n\t\t\t<label for=\"eventTimeEnd\">Hora final *</label>\n\t\t\t<input type=\"time\" name=\"eventTimeEnd\" id=\"eventTimeEnd\" placeholder=\"Hora final\" value=\"<%= event.get('eventTimeEnd') %>\" />\n\t\t</li>\n\t\t<li class=\"itens\">\n\t\t\t<!-- <h4>Participantes:</h4> -->\n\t\t\t<label for=\"participantes\">Participantes</label>\n\t\t\t<a href=\"#\" id=\"addParticipants\" title=\"Adicionar participantes\">Adicionar participantes</a>\n\n\t\t\t<% \n\t\t\tvar listParticipantsID = event.get('eventParticipants');\n\n\t\t\tif (typeof(listParticipantsID) != 'undefined' && listParticipantsID.length > 0 && listParticipantsID.length == listParticipants.length) \n\t\t\t{ \n\t\t\t%>\n\t\t\t\t<ol>\n\n\t\t\t\t\t<% _.each(listParticipantsID, function(pID) \n\t\t\t\t\t{ \n\t\t\t\t\t\tvar participant = _.where(listParticipants, { participantID: pID });\n\t\t\t\t\t%>\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<input id=\"<%= pID %>\" type=\"checkbox\" class=\"css-checkbox eventParticipants\" name=\"<%= pID %>\" value=\"<%= pID %>\" data-name=\"<%= participant[0].participantName %>\" checked=\"checked\" /> \n\t\t\t\t\t\t\t<label for=\"<%= pID %>\" class=\"css-label\"><%= participant[0].participantName %></label>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t<% }); %>\n\n\t\t\t\t</ol>\n\n\t\t\t<% } %>\n\t\t</li>\n\t\t<li>\n\t\t\t<label for=\"eventPriority\">Prioridade</label>\n\t\t\t<select name=\"eventPriority\" id=\"eventPriority\">\n\t\t\t\t<% _.each(priorities, function(p, i) { %>\n\n\t\t\t\t\t<option value=\"<%= i %>\" <%= (i == event.get('eventPriority')) ? 'selected=\"selected\"' : '' %>><%= p %></option>\n\n\t\t\t\t<% }); %>\n\t\t\t</select>\n\t\t</li>\n\t\t<li>\n\t\t\t<label for=\"eventExParticipants\">Participantes externos</label>\n\t\t\t<textarea name=\"eventExParticipants\" id=\"eventExParticipants\" placeholder=\"Participantes externos\"><%= event.get('eventExParticipants') %></textarea>\n\t\t</li>\n\t</ol>\n\t<input type=\"hidden\" name=\"eventID\" id=\"eventID\" value=\"<%= event.get('eventID') %>\" />\n</form>\n\t</div>\n</div>";
});

_removeDefine();
})();
$__System.register("13", ["6", "7", "8"], function($__export) {
  "use strict";
  var __moduleName = "13";
  var _,
      Backbone,
      Shared,
      EventCategoryModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }],
    execute: function() {
      EventCategoryModel = Backbone.Model.extend({
        defaults: {},
        initialize: function() {
          this.api = Shared.api;
          this.readResource = '/Calendar/EventCategories';
          this.updateResource = '';
          this.createResource = '';
          this.deleteResource = '';
        },
        route: function() {
          return '/Calendar/Categories';
        },
        done: function(value) {
          this.done = value;
          return this;
        },
        fail: function(value) {
          this.fail = value;
          return this;
        }
      });
      $__export('default', EventCategoryModel);
    }
  };
});

$__System.register("14", ["6", "7", "8", "13"], function($__export) {
  "use strict";
  var __moduleName = "14";
  var _,
      Backbone,
      Shared,
      EventCategoryModel,
      EventCategoriesCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      EventCategoryModel = $__m.default;
    }],
    execute: function() {
      EventCategoriesCollection = Backbone.Collection.extend({
        model: EventCategoryModel,
        _data: {},
        _functions: {},
        done: function(value) {
          this._functions.done = value;
          return this;
        },
        fail: function(value) {
          this._functions.fail = value;
          return this;
        },
        initialize: function(models, options) {
          this.api = Shared.api;
          this.model = EventCategoryModel;
        },
        listEventCategories: function(pCategoryId) {
          var that = this;
          that._data = {};
          var thatModel = EventCategoryModel;
          var data = this._data;
          this.api.resource('Calendar/EventCategories').params({eventCategoryID: pCategoryId}).done(function(result) {
            for (var i in result.eventCategories) {
              var thisModel = new thatModel(result.eventCategories[i]);
              that.add(thisModel);
            }
            if (that._functions.done)
              that._functions.done(that);
          }).fail(function(error) {
            if (that._functions.fail)
              that._functions.fail(error);
          }).execute();
          return that;
        },
        execute: function() {
          return this.api.execute();
        }
      });
      $__export('default', EventCategoriesCollection);
    }
  };
});

$__System.register("15", ["5", "6", "7", "8", "11", "a", "16", "14", "12", "17", "18"], function($__export) {
  "use strict";
  var __moduleName = "15";
  var $,
      _,
      Backbone,
      Shared,
      EventModel,
      LoadingView,
      CalendarEditEventAddParticipantsView,
      EventCategoriesCollection,
      calendarEditEventTemplate,
      detailContentTemplate,
      primaryContentTemplate,
      CalendarEditEventView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      EventModel = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      CalendarEditEventAddParticipantsView = $__m.default;
    }, function($__m) {
      EventCategoriesCollection = $__m.default;
    }, function($__m) {
      calendarEditEventTemplate = $__m.default;
    }, function($__m) {
      detailContentTemplate = $__m.default;
    }, function($__m) {
      primaryContentTemplate = $__m.default;
    }],
    execute: function() {
      CalendarEditEventView = Backbone.View.extend({
        eventID: 0,
        model: EventModel,
        listParticipants: [],
        year: '',
        month: '',
        day: '',
        data: {},
        types: {
          "1": "Normal",
          "2": "Restrito"
        },
        priorities: {
          "": "Nenhum",
          "1": "Baixo",
          "2": "Normal",
          "3": "Alto"
        },
        events: {
          "click #addParticipants": "addParticipants",
          "click .css-checkbox": "removeParticipant"
        },
        render: function(options) {
          var self = this;
          var contentTitle;
          var container;
          if (options != undefined) {
            if (options.model != undefined)
              this.model = options.model;
            if (options.listParticipants != undefined)
              this.listParticipants = options.listParticipants;
          } else {
            this.model.set({eventTimeStart: '08:00'});
            this.model.set({eventTimeEnd: '08:30'});
          }
          if (!Shared.isSmartPhoneResolution()) {
            this.$el.html(_.template(detailContentTemplate));
            $('#contentDetail').empty().append(this.$el);
            container = $('#scrollerDetail');
            contentTitle = $('#contentDetailTitle');
          } else {
            this.$el.html(_.template(primaryContentTemplate));
            $('#content').empty().append(this.$el);
            container = $('#scroller');
            contentTitle = $('#contentTitle');
          }
          var loadingView = new LoadingView({el: container});
          loadingView.render();
          contentTitle.text('Adicionar evento');
          var callback = function(data) {
            var listCategorias = data;
            if (self.eventID > 0) {
              contentTitle.text('Editar evento');
              var callbackGetEvent = function(data) {
                var pad = '00';
                var dateStart = (data.get('eventDateStart')).split('/');
                var dateEnd = (data.get('eventDateEnd')).split('/');
                data.set({eventDateStart: dateStart[2] + '-' + pad.substring(0, pad.length - ("" + dateStart[1]).length) + ("" + dateStart[1]) + '-' + pad.substring(0, pad.length - ("" + dateStart[0]).length) + ("" + dateStart[0])});
                data.set({eventDateEnd: dateEnd[2] + '-' + pad.substring(0, pad.length - ("" + dateEnd[1]).length) + ("" + dateEnd[1]) + '-' + pad.substring(0, pad.length - ("" + dateEnd[0]).length) + ("" + dateEnd[0])});
                if (data.get('eventParticipants') != undefined && data.get('eventParticipants').length > 0) {
                  var listParticipantsID = [];
                  _.each(data.get('eventParticipants'), function(participant) {
                    listParticipantsID.push(participant.contactUIDNumber);
                  });
                  data.set({eventParticipants: listParticipantsID});
                  var listParticipants = [];
                  _.each(data.get('eventParticipantsLdap'), function(participantLdap) {
                    listParticipants.push({
                      participantID: participantLdap.get('contactUIDNumber'),
                      participantName: participantLdap.get('contactFullName')
                    });
                  });
                  self.listParticipants = listParticipants;
                }
                self.model = data;
                var newData = {
                  eventCategories: listCategorias,
                  event: self.model,
                  listParticipants: self.listParticipants,
                  types: self.types,
                  priorities: self.priorities
                };
                var htmlTemplate = _.template(calendarEditEventTemplate);
                var htmlWithData = htmlTemplate(newData);
                container.html(htmlWithData);
                self.setElement(self.$el);
                self.loaded();
              };
              self.getEvent(self.eventID, callbackGetEvent, callbackGetEvent);
            } else {
              var newData = {
                eventCategories: listCategorias,
                event: self.model,
                listParticipants: self.listParticipants,
                types: self.types,
                priorities: self.priorities
              };
              var htmlTemplate = _.template(calendarEditEventTemplate);
              var htmlWithData = htmlTemplate(newData);
              container.html(htmlWithData);
              self.setElement(self.$el);
              self.loaded();
            }
          };
          this.listEventCategories('', callback, callback);
        },
        getEvent: function(pEventID, callbackSucess, callbackFail) {
          var self = this;
          var eventModel = new EventModel();
          eventModel.getEvent(pEventID).done(function(data) {
            if (callbackSucess)
              callbackSucess(data);
          }).fail(function(error) {
            if (callbackFail)
              callbackFail(self.data);
          });
        },
        loaded: function() {
          var width = 0;
          var params = {};
          params.saveCallBack = this.saveEvent;
          params.addParticipantsCallBack = this.addParticipants;
          params.parentCallBack = this;
          Shared.menuView.renderContextMenu('calendarAddEvent', params);
          $('#contentDetail .searchArea').remove();
          $('#content .searchArea').remove();
          var width_date = width / 2 - 30;
          $('body form#addEvent input[type=text]').width(width);
          $('body form#addEvent select').width(width);
          $('body form#addEvent textarea').width(width);
          $('body form#addEvent li.date input[type=text]').width(width_date);
        },
        initialize: function(options) {
          this.model = new EventModel();
          if (options != undefined) {
            this.year = options.year;
            this.month = options.month;
            this.day = options.day;
          }
          if (this.year != '' && this.month != '' && this.day != '') {
            this.model.set({eventDateStart: this.year + '-' + this.month + '-' + this.day});
            this.model.set({eventDateEnd: this.year + '-' + this.month + '-' + this.day});
          }
        },
        listEventCategories: function(pCategoryId, callbackSuccess, callbackFail) {
          var eventCategoriesData = new EventCategoriesCollection();
          eventCategoriesData.done(function(data) {
            callbackSuccess(data.models);
          }).fail(function(error) {
            callbackFail(data.error);
          }).listEventCategories(pCategoryId);
        },
        addParticipants: function(obj) {
          if (obj.target) {
            obj.preventDefault();
            obj = this;
          }
          var categoriesSelected = $('.css-checkbox.eventCategories').map(function() {
            if ($(this).is(':checked'))
              return $(this).val();
          }).toArray().join(',');
          var attrs = {
            eventDateStart: $('#eventDateStart').val(),
            eventTimeStart: $('#eventTimeStart').val(),
            eventDateEnd: $('#eventDateEnd').val(),
            eventTimeEnd: $('#eventTimeEnd').val(),
            eventID: $('#eventID').val(),
            eventType: $('#eventType').val(),
            eventCategoryID: categoriesSelected,
            eventName: $('#eventName').val(),
            eventDescription: $('#eventDescription').val(),
            eventLocation: $('#eventLocation').val(),
            eventPriority: $('#eventPriority').val(),
            eventOwnerIsParticipant: $('#eventOwnerIsParticipant').val(),
            eventExParticipants: $('#eventExParticipants').val()
          };
          obj.model.set(attrs);
          var calendarEditEventAddParticipantsView = new CalendarEditEventAddParticipantsView({
            listParticipants: obj.listParticipants,
            model: obj.model,
            view: new CalendarEditEventView()
          });
          calendarEditEventAddParticipantsView.render();
        },
        saveEvent: function(obj) {
          if (obj.target) {
            obj.preventDefault();
            obj = this;
          }
          var dateStart = ($('#eventDateStart').val()).split('-');
          var dateEnd = ($('#eventDateEnd').val()).split('-');
          var participants = $('.css-checkbox.eventParticipants').map(function() {
            return $(this).val();
          }).toArray();
          var categoriesSelected = $('.css-checkbox.eventCategories').map(function() {
            if ($(this).is(':checked'))
              return $(this).val();
          }).toArray().join(',');
          var attrs = {
            eventDateStart: dateStart[2] + '/' + dateStart[1] + '/' + dateStart[0],
            eventTimeStart: $('#eventTimeStart').val(),
            eventDateEnd: dateEnd[2] + '/' + dateEnd[1] + '/' + dateEnd[0],
            eventTimeEnd: $('#eventTimeEnd').val(),
            eventID: $('#eventID').val(),
            eventType: $('#eventType').val(),
            eventCategoryID: categoriesSelected,
            eventName: $('#eventName').val(),
            eventDescription: $('#eventDescription').val(),
            eventLocation: $('#eventLocation').val(),
            eventPriority: $('#eventPriority').val(),
            eventOwnerIsParticipant: '1',
            eventParticipants: participants.join(),
            eventExternalParticipants: $('#eventExParticipants').val()
          };
          var callbackSucess = function(data) {
            obj.listParticipants = [];
            if (data.event != undefined)
              Shared.router.navigate('/Calendar/Events/' + data.event.get('eventID') + '/OK', {trigger: true});
          };
          var callbackFail = function(data) {
            var message = '*Campos obrigatórios';
            var description = '';
            if (data.error != undefined) {
              message = 'Ocorreu um erro ao salvar o evento.';
              if (data.error.code == "1051")
                description = 'Verifique se já existe um evento para a datas selecionadas ou se os campos foram preenchidos corretamente.';
              else if (data.error.code == "1043")
                description = 'Verifique se o título do evento foi preenchido corretamente.';
            }
            Shared.showMessage({
              type: "error",
              icon: 'icon-agenda',
              title: message,
              description: description,
              timeout: 3000,
              elementID: '#pageMessage'
            });
          };
          obj.save(attrs, callbackSucess, callbackFail);
        },
        save: function(params, callbackSucess, callbackFail) {
          var eventModel = new EventModel();
          eventModel.saveEvent(params).done(function(data) {
            var newData = {
              event: data,
              _: _
            };
            if (callbackSucess)
              callbackSucess(newData);
          }).fail(function(error) {
            if (callbackFail)
              callbackFail(error);
          });
        },
        removeParticipant: function(e) {
          var listParticipantsID = this.model.get('eventParticipants');
          var listParticipants = this.listParticipants;
          var id = $(e.target).val();
          var name = $(e.target).attr('data-name');
          var index = _.indexOf(listParticipantsID, id);
          var indexNames = index;
          _.each(listParticipants, function(participant, i) {
            if (participant.participantID == id && participant.participantName == name)
              indexNames = i;
          });
          if (index != -1) {
            listParticipantsID.splice(index, 1);
            listParticipants.splice(indexNames, 1);
            $(e.target).parent('li').fadeOut(400, function() {
              $(this).remove();
            });
          }
          this.model.set({eventParticipants: listParticipantsID});
        }
      });
      $__export('default', CalendarEditEventView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("19", [], function() {
  return "\n\t<div class=\"expresso-email animation-fadein\">\n\t\t<div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n\t\t\t<h2 class=\"mdl-card__title-text\"><%=event.get('eventDateStart')%></h2>\n\t\t</div>\n\t\t<table id=\"eventDetails\"> \n\t\t\t<tr>\n\t\t\t\t<td class=\"item\">\n\t\t\t\t\tIn&iacute;cio\n\t\t\t\t</td>\n\t\t\t\t<td class=\"description\">\n\t\t\t\t\t<%= event.get('eventDateStart') %> - <%= event.get('eventTimeStart') %>\n\t\t\t\t</td>\n\t\t\t</tr> \n\t\t\t<tr>\n\t\t\t\t<td class=\"item\">\n\t\t\t\t\tT&eacute;rmino\n\t\t\t\t</td>\n\t\t\t\t<td class=\"description\">\n\t\t\t\t\t<%= event.get('eventDateEnd') %> - <%= event.get('eventTimeEnd') %>\n\t\t\t\t</td>\n\t\t\t</tr> \n\t\t\t<tr>\n\t\t\t\t<td class=\"item\">\n\t\t\t\t\tLocal\n\t\t\t\t</td>\n\t\t\t\t<td class=\"description\">\n\t\t\t\t\t<%= _.isEmpty(event.get('eventLocation')) ? '-' : event.get('eventLocation') %>\n\t\t\t\t</td>\n\t\t\t</tr> \n\t\t\t<tr>\n\t\t\t\t<td class=\"item\">\n\t\t\t\t\tPrioridade\n\t\t\t\t</td>\n\t\t\t\t<td class=\"description\">\n\t\t\t\t\t<%= event.get('eventPriority') %>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td class=\"item\">\n\t\t\t\t\tParticipantes\n\t\t\t\t</td>\n\t\t\t\t<td class=\"description\" id=\"listParticipants\">\n\t\t\t\t\t\t\n\t\t\t\t\t<% \n\t\t\t\t\tif (event.get('eventParticipantsLdap').length > 0) \n\t\t\t\t\t{ \n\t\t\t\t\t\t%>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t<%\n\t\t\t\t\t\tvar participants = event.get('eventParticipantsLdap');\n\t\t\t\t\t\tfor (var i in participants) \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!_.isEmpty(participants[i].get('contactFullName')))\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t%>\t\n\t\t\t\t\t\t\t\t<li><%= participants[i].get('contactFullName') %></li>\n\t\t\t\t\t\t\t<%\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t%>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<%\n\t\t\t\t\t}\n\t\t\t\t\t%>\n\n\t\t\t\t</td>\n\t\t\t</tr> \n\t\t\t<tr>\n\t\t\t\t<td class=\"item\">\n\t\t\t\t\tCriado por\n\t\t\t\t</td>\n\t\t\t\t<td class=\"description\">\n\t\t\t\t\t<% if (!_.isEmpty(event.get('eventOwner'))) { %>\n\t\t\t\t\t\t<%= event.get('eventOwner').get('contactFullName') %>\n\t\t\t\t\t<% } %>\n\t\t\t\t</td>\n\t\t\t</tr>  \n\t\t\t<tr>\n\t\t\t\t<td class=\"item\">\n\t\t\t\t\tDescri&ccedil;&atilde;o\n\t\t\t\t</td>\n\t\t\t\t<td class=\"description\">\n\t\t\t\t\t<%= event.get('eventDescription') %>\n\t\t\t\t</td>\n\t\t\t</tr> \n\t\t\t\n\t\t</table>\n\t</div>";
});

_removeDefine();
})();
$__System.register("1a", ["5", "6", "7", "8", "11", "a", "1b", "19", "17", "18"], function($__export) {
  "use strict";
  var __moduleName = "1a";
  var $,
      _,
      Backbone,
      Shared,
      EventModel,
      LoadingView,
      CalendarListView,
      calendarDetailsTemplate,
      detailContentTemplate,
      primaryContentTemplate,
      CalendarDetailsView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      EventModel = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      CalendarListView = $__m.default;
    }, function($__m) {
      calendarDetailsTemplate = $__m.default;
    }, function($__m) {
      detailContentTemplate = $__m.default;
    }, function($__m) {
      primaryContentTemplate = $__m.default;
    }],
    execute: function() {
      CalendarDetailsView = Backbone.View.extend({
        eventID: 0,
        status: '',
        year: '',
        month: '',
        day: '',
        events: {"click #contextMenu ul li a": "selectItem"},
        selectItem: function(e) {
          e.preventDefault();
        },
        render: function() {
          var self = this;
          var contentTitle;
          var container;
          var messageContainer;
          if (!Shared.isSmartPhoneResolution()) {
            this.$el.html(_.template(detailContentTemplate));
            $('#contentDetail').empty().append(this.$el);
            contentTitle = $('#contentDetailTitle');
            container = $('#scrollerDetail');
            messageContainer = '#pageMessage';
          } else {
            this.$el.html(_.template(primaryContentTemplate));
            $('#content').empty().append(this.$el);
            contentTitle = $('#contentTitle');
            container = $('#scroller');
            messageContainer = '#pageMessage';
          }
          var loadingView = new LoadingView({el: container});
          loadingView.render();
          var callback = function(data) {
            var isOwner = data.event.get('eventOwner').get('contactUIDNumber') == Shared.profile.contactUIDNumber;
            var date = data.event.get('eventDateStart').split('/');
            var pad = "00";
            self.year = date[2];
            self.month = pad.substring(0, pad.length - ("" + date[1]).length) + ("" + date[1]);
            self.day = pad.substring(0, pad.length - ("" + date[0]).length) + ("" + date[0]);
            data.event.set({eventPriority: self.getPriority(data.event.get('eventPriority'))});
            self.loaded(data.event.get('eventID'), isOwner);
            if (self.status == 'OK') {
              Shared.showMessage({
                type: "success",
                icon: 'icon-agenda',
                title: 'Evento salvo com sucesso.',
                description: '',
                timeout: 3000,
                elementID: messageContainer
              });
              if (!Shared.isSmartPhoneResolution()) {
                var calendarListView = new CalendarListView();
                calendarListView.year = self.year;
                calendarListView.month = self.month;
                calendarListView.day = self.day;
                calendarListView.onlyDatePicker = true;
                calendarListView.render();
              }
            }
            contentTitle.text(data.event.get('eventName'));
            var htmlTemplate = _.template(calendarDetailsTemplate);
            var htmlWithData = htmlTemplate(data);
            container.empty().append(htmlWithData);
          };
          this.getEvent(this.eventID, callback, callback);
        },
        getEvent: function(pEventID, callbackSucess, callbackFail) {
          var self = this;
          var eventModel = new EventModel();
          eventModel.done(function(data) {
            self.data = {
              event: data,
              _: _
            };
            callbackSucess(self.data);
          }).fail(function(data) {
            self.data = {
              error: data.error,
              _: _
            };
            if (callbackFail)
              callbackFail(self.data);
          }).getEvent(pEventID);
        },
        loaded: function(eventID, isOwner) {
          Shared.menuView.renderContextMenu('calendarDetailsEvent', {
            isOwner: isOwner,
            eventID: eventID,
            year: this.year,
            month: this.month,
            day: this.day
          });
        },
        initialize: function() {
          var pad = "00";
          var today = new Date();
          if (this.year == '' || this.year == undefined)
            this.year = today.getFullYear();
          if (this.month == '' || this.month == undefined) {
            this.month = today.getMonth() + 1;
            this.month = pad.substring(0, pad.length - ("" + this.month).length) + ("" + this.month);
          }
          if (this.day == '' || this.day == undefined)
            this.day = today.getDate();
        },
        getPriority: function(priority) {
          var listPriorities = ['', 'Baixo', 'Normal', 'Alto'];
          if (priority == '')
            return "Nenhum";
          else
            return listPriorities[priority];
        }
      });
      $__export('default', CalendarDetailsView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("1c", [], function() {
  return "<!-- <div id=\"pullDown\">\n  \t<span class=\"pullDownIcon\"></span><span class=\"pullDownLabel\">Puxe para baixo para atualizar</span>\n</div> -->\n<div id=\"pull-to-action-loader\"></div>\n<div id=\"agenda\"></div>\n<div id=\"eventsList\"></div>\n";
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("1d", ["5"], function($) {
  jQuery(function($) {
    $.datepicker.regional['pt-BR'] = {
      closeText: 'Fechar',
      prevText: '&#x3C;Anterior',
      nextText: 'Próximo&#x3E;',
      currentText: 'Hoje',
      monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
      monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
      dayNames: ['Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira', 'Quinta-feira', 'Sexta-feira', 'Sábado'],
      dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],
      dayNamesMin: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb'],
      weekHeader: 'Sm',
      dateFormat: 'dd/mm/yy',
      firstDay: 0,
      isRTL: false,
      showMonthAfterYear: false,
      yearSuffix: ''
    };
    $.datepicker.setDefaults($.datepicker.regional['pt-BR']);
  });
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("1e", [], function() {
  return "<!-- <div class=\"expresso-cards mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-grid\">\n\t<div class=\"expresso-email mdl-card mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-cell--12-col-desktop\"> -->\n<%\nvar startTime = new Date(year, month - 1, day, 0, 0, 0);\nvar endTime = new Date(year, month - 1, day, 23, 30, 0);\n%>\n<div class=\"expresso-email animation-fadein\">\n<div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n\t<h2 class=\"mdl-card__title-text\"><%=day + \"/\" + month + \"/\" + year%></h2>\n</div>\n<table id=\"eventsTable\"> \n\n\t<% while (startTime.getTime() <= endTime.getTime()) { %>\n\n\t\t<%\n\t\t\tvar pad = '00';\n\t\t\tvar hours = startTime.getHours();\n\t\t\tvar minutes = startTime.getMinutes();\n\t\t\tvar time = (pad.substring(0, pad.length - (\"\" + hours).length) + (\"\" + hours)) + ':' + (pad.substring(0, pad.length - (\"\" + minutes).length) + (\"\" + minutes));\n\n\t\t\tif ((typeof(events) != 'undefined' && events.length > 0) && (typeof(hourlyBusy) != 'undefined' && hourlyBusy.length > 0))\n\t\t\t{\n\t\t\t\tvar event = hourlyBusy.filter(function (element)\n\t\t\t\t{\n\t\t\t\t\treturn element.dateStart.getTime() == startTime.getTime();\n\t\t\t\t});\n\n\t\t\t\tvar tdClass = 'description';\n\t\t\t\tvar description = '';\n\t\t\t\tvar eventID = 0;\n\t\t\t\tvar tdRowSpan = '';\n\n\t\t\t\tif (event.length > 0)\n\t\t\t\t{\n\t\t\t\t\ttdClass += ' busy';\n\t\t\t\t\tdescription = events[event[0].index].get('eventName') + ' - ' + events[event[0].index].get('eventDescription');\n\t\t\t\t\teventID = events[event[0].index].get('eventID');\n\n\t\t\t\t\tif (event[0].rowSpan > 1)\n\t\t\t\t\t\ttdRowSpan = ' rowSpan=\"' + event[0].rowSpan + '\"';\n\t\t\t\t}\n\t\t\t}\n\t\t%>\n\n\t\t<tr>\n\n\t\t\t<% if (time == '00:00') { %>\n\n\t\t\t\t<td class=\"period\" rowspan=\"13\">\n\t\t\t\t\t<div>MADRUGADA<Adiv>\n\t\t\t\t</td>\n\t\t\t\n\t\t\t<% } %>\n\n\t\t\t<% if (time == '06:30') { %>\n\n\t\t\t\t<td class=\"period\" rowspan=\"12\">\n\t\t\t\t\t<div>MANH&Atilde;</div>\n\t\t\t\t</td>\n\t\t\t\n\t\t\t<% } %>\n\n\t\t\t<% if (time == '12:30') { %>\n\n\t\t\t\t<td class=\"period\" rowspan=\"12\">\n\t\t\t\t\t<div>TARDE</div>\n\t\t\t\t</td>\n\t\t\t\n\t\t\t<% } %>\n\n\t\t\t<% if (time == '18:30') { %>\n\n\t\t\t\t<td class=\"period noborder\" rowspan=\"12\">\n\t\t\t\t\t<div>NOITE</div>\n\t\t\t\t</td>\n\t\t\t\n\t\t\t<% } %>\n\n\t\t\t<td class=\"hourly\">\n\t\t\t\t<%= time %>\n\t\t\t</td>\n\t\t\t<td class=\"<%= tdClass %>\"<%= tdRowSpan %>>\n\n\t\t\t\t<% if (description != '' && eventID != 0) { %>\n\t\t\t\t\t<a href=\"/Calendar/Events/<%= eventID %>\" title=\"Ver detalhes\">\n\t\t\t\t\t\t<%= description %>\n\t\t\t\t\t</a>\n\t\t\t\t<% } %>\n\t\t\t\t\n\t\t\t</td>\n\t\t</tr>\n\n\t\t<% startTime.setMinutes(startTime.getMinutes() + 30); %>\n\n\t<% } %>\n\n</table>\n</div>\n<!-- </div></div> -->";
});

_removeDefine();
})();
$__System.register("1f", ["5", "6", "7", "8", "20", "a", "1e", "17", "18", "21", "1d"], function($__export) {
  "use strict";
  var __moduleName = "1f";
  var $,
      _,
      Backbone,
      Shared,
      EventsListCollection,
      LoadingView,
      calendarFullDayListTemplate,
      detailContentTemplate,
      primaryContentTemplate,
      jqueryui,
      jqueryui_datepicker_ptBR,
      CalendarFullDayListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      EventsListCollection = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      calendarFullDayListTemplate = $__m.default;
    }, function($__m) {
      detailContentTemplate = $__m.default;
    }, function($__m) {
      primaryContentTemplate = $__m.default;
    }, function($__m) {
      jqueryui = $__m.default;
    }, function($__m) {
      jqueryui_datepicker_ptBR = $__m.default;
    }],
    execute: function() {
      CalendarFullDayListView = Backbone.View.extend({
        year: '',
        month: '',
        day: '',
        data: {},
        dayTitle: '',
        events: {'click #eventsTable a': 'selectItem'},
        render: function() {
          var self = this;
          var contentTitle;
          var container;
          if (!Shared.isSmartPhoneResolution()) {
            this.$el.html(_.template(detailContentTemplate));
            $('#contentDetail').empty().append(this.$el);
            contentTitle = $('#contentDetailTitle');
            container = $('#scrollerDetail');
          } else {
            this.$el.html(_.template(primaryContentTemplate));
            $('#content').empty().append(this.$el);
            contentTitle = $('#contentTitle');
            container = $('#scroller');
          }
          var loadingView = new LoadingView({el: container});
          loadingView.render();
          var dateStart = this.day + '/' + this.month + '/' + this.year;
          var dateEnd = this.day + '/' + this.month + '/' + this.year;
          var callbackSuccess = function(data) {
            var hourlyBusy = [];
            var events = new EventsListCollection();
            var date = new Date(self.year, self.month - 1, self.day);
            var allDayRowSpan = 48;
            for (var i in data.events) {
              var rowSpan = 0;
              var start = (data.events[i].get('eventStartDate')).split(' ');
              var dateStart = start[0].split('/');
              var timeStart = start[1].split(':');
              var dateTimeStart = new Date(dateStart[2], (dateStart[1] - 1), dateStart[0], timeStart[0], timeStart[1]);
              var dateStartAux = new Date(dateStart[2], (dateStart[1] - 1), dateStart[0], timeStart[0], timeStart[1]);
              dateStart = new Date(dateStart[2], (dateStart[1] - 1), dateStart[0]);
              var end = (data.events[i].get('eventEndDate')).split(' ');
              var dateEnd = end[0].split('/');
              var timeEnd = end[1].split(':');
              var dateTimeEnd = new Date(dateEnd[2], (dateEnd[1] - 1), dateEnd[0], timeEnd[0], timeEnd[1]);
              dateEnd = new Date(dateEnd[2], (dateEnd[1] - 1), dateEnd[0]);
              if (dateStart.getTime() == date.getTime() || dateEnd.getTime() == date.getTime()) {
                if (data.events[i].get('eventAllDay') == '1')
                  rowSpan = allDayRowSpan;
                else {
                  while (dateTimeStart.getTime() <= dateTimeEnd.getTime()) {
                    rowSpan = rowSpan + 1;
                    dateTimeStart.setMinutes(dateTimeStart.getMinutes() + 30);
                  }
                }
                events.add(data.events[i]);
                var dateStar = dateTimeStart;
                var eventSummary = new Object();
                eventSummary.dateStart = dateStartAux;
                eventSummary.dateEnd = dateTimeEnd;
                eventSummary.rowSpan = rowSpan;
                eventSummary.index = events.length - 1;
                hourlyBusy.push(eventSummary);
              }
            }
            var newData = {
              events: events.models,
              year: self.year,
              month: self.month,
              day: self.day,
              hourlyBusy: hourlyBusy,
              _: _
            };
            contentTitle.text($.datepicker.formatDate('DD, dd/mm/yy', new Date(self.year, self.month - 1, self.day)));
            var htmlTemplate = _.template(calendarFullDayListTemplate);
            var htmlWithData = htmlTemplate(newData);
            container.empty().append(htmlWithData);
            self.loaded();
          };
          var callbackFail = function(error) {
            Shared.showMessage({
              type: "error",
              icon: 'icon-agenda',
              title: 'Não foi possível listar os eventos do dia. Por favor, tente novamente',
              description: '',
              timeout: 5000,
              elementID: Shared.isSmartPhoneResolution() ? '#message' : '#messageDetail'
            });
          };
          this.listEvents(dateStart, dateEnd, callbackSuccess, callbackFail);
        },
        loaded: function() {
          Shared.menuView.renderContextMenu('calendar', {
            year: this.year,
            month: this.month,
            day: this.day
          });
        },
        initialize: function() {},
        selectItem: function(e) {
          e.preventDefault();
          Shared.router.navigate(e.currentTarget.getAttribute("href"), {trigger: true});
        },
        listEvents: function(pDateStart, pDateEnd, callbackSuccess, callbackFail) {
          var self = this;
          var eventsData = new EventsListCollection();
          eventsData.done(function(data) {
            if (callbackSuccess)
              callbackSuccess({
                events: data.models,
                _: _
              });
          }).fail(function(data) {
            if (callbackFail)
              callbackFail({
                error: data.error,
                _: _
              });
          }).listEvents(pDateStart, pDateEnd);
        }
      });
      $__export('default', CalendarFullDayListView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("22", [], function() {
  return "\n<% if (typeof(events) != 'undefined' && events.length > 0) { %>\n\n\t<ul id=\"events\">\n\t\n\t\t<% _.each(events, function(e) { %>\n\n\t\t\t<li>\n\t\t\t\t<a href=\"/Calendar/Events/<%= e.get('eventID') %>\" title=\"Ver evento\">\n\t\t\t\t\t<div class=\"hourly\">\n\n\t\t\t\t\t\t<% \n\t\t\t\t\t\t\tvar startTime = 'Todo';\n\t\t\t\t\t\t\tvar endTime = 'o dia';\n\n\t\t\t\t\t\t\tif (e.get('eventAllDay') == '0')\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar startTime = (e.get('eventStartDate')).split(' ')[1];\n\t\t\t\t\t\t\t\tvar endTime = (e.get('eventEndDate')).split(\" \")[1];\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t%>\n\n\t\t\t\t\t\t<strong class=\"start\"><%= startTime %></strong>\n\t\t\t\t\t\t<strong class=\"end\"><%= endTime %></strong>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<span><%= e.get('eventName') %></span>\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t\n\t\t<% }); %>\n\n\t\t<li>\n\t\t\t<a href=\"/Calendar/FullDay/<%= year + '/' + month + '/' + day %>\" title=\"Ver evento\" class=\"see_all\">\n\t\t\t\t<span class=\"complete\">Ver tudo</span>\n\t\t\t</a>\n\t\t</li>\n\n\t</ul>\n\n<% } else { %>\n\n\t<ul id=\"events\">\n\t\t<li>\n\t\t\t<a href=\"/Calendar/FullDay/<%= year + '/' + month + '/' + day %>\" title=\"Ver evento\" class=\"see_all\">\n\t\t\t\t<span class=\"complete\">Ver tudo</span>\n\t\t\t</a>\n\t\t</li>\n\t</ul>\n\t<p class=\"noEvent\">Nenhum evento agendado</p>\n\n\n<% } %>\n";
});

_removeDefine();
})();
$__System.register("23", ["5", "6", "7", "8", "20", "a", "22"], function($__export) {
  "use strict";
  var __moduleName = "23";
  var $,
      _,
      Backbone,
      Shared,
      EventsListCollection,
      LoadingView,
      calendarEventsDayListTemplate,
      CalendarEventsDayListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      EventsListCollection = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      calendarEventsDayListTemplate = $__m.default;
    }],
    execute: function() {
      CalendarEventsDayListView = Backbone.View.extend({
        year: '',
        month: '',
        day: '',
        data: {},
        events: {'click #events li a': 'selectItem'},
        render: function() {
          var events = new EventsListCollection();
          var date = new Date(this.year, this.month - 1, this.day);
          for (var i in this.data.events) {
            var dateStart = ((this.data.events[i].get('eventStartDate')).split(' ')[0]).split('/');
            dateStart = new Date(dateStart[2], (dateStart[1] - 1), dateStart[0]);
            if (dateStart.getTime() == date.getTime())
              events.add(this.data.events[i]);
          }
          var newData = {
            events: events.models,
            year: this.year,
            month: this.month,
            day: this.day,
            _: _
          };
          var htmlTemplate = _.template(calendarEventsDayListTemplate);
          var htmlWithData = htmlTemplate(newData);
          this.$el.html(htmlWithData);
          $('#eventsList').empty().append(this.$el);
        },
        initialize: function() {},
        selectItem: function(e) {
          e.preventDefault();
          Shared.router.navigate(e.currentTarget.getAttribute("href"), {trigger: true});
        }
      });
      $__export('default', CalendarEventsDayListView);
    }
  };
});

$__System.register("20", ["6", "7", "8", "11"], function($__export) {
  "use strict";
  var __moduleName = "20";
  var _,
      Backbone,
      Shared,
      EventModel,
      EventsListCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      EventModel = $__m.default;
    }],
    execute: function() {
      EventsListCollection = Backbone.Collection.extend({
        model: EventModel,
        _data: {},
        _functions: {},
        done: function(value) {
          this._functions.done = value;
          return this;
        },
        fail: function(value) {
          this._functions.fail = value;
          return this;
        },
        initialize: function(models, options) {
          this.api = Shared.api;
          this.model = EventModel;
        },
        listEvents: function(pDateStart, pDateEnd, ignoreCache) {
          var that = this;
          that._data = {};
          var thatModel = EventModel;
          var data = this._data;
          if (ignoreCache) {
            console.log("ignoreCache");
            this.api.ignoreCache(true);
          }
          this.api.resource('Calendar/Events').params({
            dateStart: pDateStart,
            dateEnd: pDateEnd
          }).done(function(result) {
            for (var i in result.events) {
              var thisModel = new thatModel(result.events[i]);
              that.add(thisModel);
            }
            if (that._functions.done)
              that._functions.done(that);
          }).fail(function(error) {
            if (that._functions.fail)
              that._functions.fail(error);
          }).execute();
          return that;
        },
        execute: function() {
          return this.api.execute();
        }
      });
      $__export('default', EventsListCollection);
    }
  };
});

$__System.register("1b", ["5", "6", "7", "8", "20", "a", "23", "1f", "24", "1c", "18", "21", "1d"], function($__export) {
  "use strict";
  var __moduleName = "1b";
  var $,
      _,
      Backbone,
      Shared,
      EventsListCollection,
      LoadingView,
      CalendarEventsDayListView,
      CalendarFullDayListView,
      PullToActionView,
      calendarTemplate,
      primaryContentTemplate,
      jqueryui,
      jqueryui_datepicker_ptBR,
      CalendarListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      EventsListCollection = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      CalendarEventsDayListView = $__m.default;
    }, function($__m) {
      CalendarFullDayListView = $__m.default;
    }, function($__m) {
      PullToActionView = $__m.default;
    }, function($__m) {
      calendarTemplate = $__m.default;
    }, function($__m) {
      primaryContentTemplate = $__m.default;
    }, function($__m) {
      jqueryui = $__m.default;
    }, function($__m) {
      jqueryui_datepicker_ptBR = $__m.default;
    }],
    execute: function() {
      CalendarListView = Backbone.View.extend({
        year: '',
        month: '',
        day: '',
        fullDay: false,
        status: '',
        data: {},
        dayTitle: '',
        onlyDatePicker: false,
        render: function() {
          var self = this;
          var pad = "00";
          var today = new Date();
          if (this.year == '' || this.year == undefined)
            this.year = today.getFullYear();
          if (this.month == '' || this.month == undefined) {
            this.month = today.getMonth() + 1;
            this.month = pad.substring(0, pad.length - ("" + this.month).length) + ("" + this.month);
          }
          if (this.day == '' || this.day == undefined) {
            this.day = today.getDate();
            this.day = pad.substring(0, pad.length - ("" + this.day).length) + ("" + this.day);
          }
          this.clean();
          var callback = function(data) {
            self.$el.html(_.template(primaryContentTemplate));
            $('#content').empty().append(self.$el);
            $('#scroller').html(_.template(calendarTemplate));
            self.renderDatePicker();
            if (self.onlyDatePicker === false)
              self.listDayEvents(data);
            self.loaded();
          };
          var lastDay = new Date(this.year, this.month, 0);
          lastDay = lastDay.getDate();
          var pDateStart = '01/' + this.month + '/' + this.year;
          var pDateEnd = lastDay + '/' + this.month + '/' + this.year;
          this.listEvents(pDateStart, pDateEnd, false, callback, callback);
        },
        listEvents: function(pDateStart, pDateEnd, ignoreCache, callbackSucess, callbackFail) {
          var self = this;
          var eventsData = new EventsListCollection();
          eventsData.done(function(data) {
            self.data = {
              events: data.models,
              _: _
            };
            if (callbackSucess)
              callbackSucess(self.data);
          }).fail(function(data) {
            self.data = {
              error: data.error,
              _: _
            };
            if (callbackFail)
              callbackFail(self.data);
          }).listEvents(pDateStart, pDateEnd, ignoreCache);
        },
        listDayEvents: function(data) {
          if (!Shared.isSmartPhoneResolution() || this.fullDay) {
            var calendarFullDayListView = new CalendarFullDayListView();
            calendarFullDayListView.year = this.year;
            calendarFullDayListView.month = this.month;
            calendarFullDayListView.day = this.day;
            calendarFullDayListView.data = data;
            calendarFullDayListView.dayTitle = this.dayTitle;
            calendarFullDayListView.render();
          } else {
            var calendarEventsDayListView = new CalendarEventsDayListView();
            calendarEventsDayListView.year = this.year;
            calendarEventsDayListView.month = this.month;
            calendarEventsDayListView.day = this.day;
            calendarEventsDayListView.data = data;
            calendarEventsDayListView.render();
          }
          this.loaded();
        },
        initialize: function() {
          this.container = $('#scroller');
        },
        changeMonthYear: function(y, m, ignoreCache) {
          var self = this;
          var callback = function(data) {
            self.refreshDatePicker();
          };
          var pad = "00";
          var m = pad.substring(0, pad.length - ("" + m).length) + ("" + m);
          var lastDay = new Date(y, m, 0);
          lastDay = lastDay.getDate();
          this.year = y;
          this.month = m;
          var pDateStart = '01/' + m + '/' + y;
          var pDateEnd = lastDay + '/' + m + '/' + y;
          this.listEvents(pDateStart, pDateEnd, ignoreCache, callback, callback);
        },
        highlightDays: function(date) {
          if (!_.isEmpty(this.data.events)) {
            for (var i in this.data.events) {
              var dateStart = ((this.data.events[i].get('eventStartDate')).split(' ')[0]).split('/');
              dateStart = new Date(dateStart[2], (dateStart[1] - 1), dateStart[0]);
              var dateEnd = ((this.data.events[i].get('eventEndDate')).split(" ")[0]).split('/');
              dateEnd = new Date(dateEnd[2], (dateEnd[1] - 1), dateEnd[0]);
              if (date.getTime() == dateStart.getTime() || date.getTime() == dateEnd.getTime()) {
                return [true, 'hasEvent'];
              }
            }
          }
          return [true, ''];
        },
        refreshDatePicker: function() {
          $('#agenda').datepicker("refresh");
        },
        renderDatePicker: function() {
          var self = this;
          $('#agenda').datepicker({
            dayNamesShort: $.datepicker.regional["pt-BR"].dayNamesShort,
            dayNames: $.datepicker.regional["pt-BR"].dayNames,
            monthNamesShort: $.datepicker.regional["pt-BR"].monthNamesShort,
            monthNames: $.datepicker.regional["pt-BR"].monthNames,
            inline: true,
            autoSize: true,
            nextText: '>',
            prevText: '<',
            dateFormat: 'DD, dd/mm/yy',
            onChangeMonthYear: function(year, month, widget) {
              self.changeMonthYear(year, month, false);
            },
            beforeShowDay: function(date) {
              return self.highlightDays(date);
            },
            onSelect: function(date, obj) {
              var selectedDate = (date.split(', ')[1]).split('/');
              var url = 'Calendar/' + selectedDate[2] + '/' + selectedDate[1] + '/' + selectedDate[0];
              Shared.router.navigate(url, {trigger: true});
            }
          });
          if (this.year != '' && this.month != '' && this.day != '')
            $("#agenda").datepicker("setDate", new Date(this.year, this.month - 1, this.day));
          this.dayTitle = $.datepicker.formatDate('DD, dd/mm/yy', new Date(this.year, this.month - 1, this.day));
        },
        loaded: function() {
          var that = this;
          Shared.menuView.renderContextMenu('calendar', {
            year: this.year,
            month: this.month,
            day: this.day
          });
          Shared.setDefaultIMListeners();
          Shared.setCurrentPageTitle("Agenda");
          var refreshAction = function() {
            that.changeMonthYear(that.year, that.month, true);
          };
          var pullToAction = new PullToActionView({
            refreshAction: refreshAction,
            container: '#pull-to-action-loader'
          });
          pullToAction.render();
          if (this.status == 'OK') {
            Shared.showMessage({
              type: "success",
              icon: 'icon-agenda',
              title: 'Evento excluído com sucesso.',
              description: '',
              timeout: 3000,
              elementID: '#pageMessage'
            });
          }
        },
        pullDownAction: function() {
          this.changeMonthYear(this.year, this.month, true);
          pullDownEl = document.getElementById('pullDown');
          pullDownEl.className = '';
          Shared.scrollerRefresh();
        },
        clean: function() {
          var contentLoadingView = new LoadingView({el: $('#content')});
          contentLoadingView.render();
          if (!Shared.isSmartPhoneResolution() && this.onlyDatePicker === false) {
            var contentDetailLoadingView = new LoadingView({el: $('#contentDetail')});
            contentDetailLoadingView.render();
          }
        }
      });
      $__export('default', CalendarListView);
    }
  };
});

$__System.register("25", ["5", "6", "7", "8", "a", "26", "17", "18", "27", "28", "29"], function($__export) {
  "use strict";
  var __moduleName = "25";
  var $,
      _,
      Backbone,
      Shared,
      LoadingView,
      HomeView,
      detailContentTemplate,
      primaryContentTemplate,
      ContactModel,
      DetailsContactCollection,
      ContextMenuCollection,
      DeleteContactView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      HomeView = $__m.default;
    }, function($__m) {
      detailContentTemplate = $__m.default;
    }, function($__m) {
      primaryContentTemplate = $__m.default;
    }, function($__m) {
      ContactModel = $__m.default;
    }, function($__m) {
      DetailsContactCollection = $__m.default;
    }, function($__m) {
      ContextMenuCollection = $__m.default;
    }],
    execute: function() {
      DeleteContactView = Backbone.View.extend({
        contactID: null,
        render: function(data) {
          var self = this;
          var contentTitle;
          var container;
          var messageContainer;
          if (!Shared.isSmartPhoneResolution()) {
            this.$el.html(_.template(detailContentTemplate));
            $('#contentDetail').empty().append(this.$el);
            contentTitle = $('#contentDetailTitle');
            container = $('#scrollerDetail');
            messageContainer = '#messageDetail';
          } else {
            this.$el.html(_.template(primaryContentTemplate));
            $('#content').empty().append(this.$el);
            contentTitle = $('#contentTitle');
            container = $('#scroller');
            messageContainer = '#message';
          }
          var loadingView = new LoadingView({el: container});
          loadingView.render();
          var doneDelete = function(data) {
            if (data.contact != undefined && Boolean(data.contact.status) == true) {
              Shared.router.navigate('/Contacts/Personal/OK', {trigger: true});
            } else if (data.error != undefined) {
              Shared.router.navigate('/Contacts/Personal/' + self.contactID + '/' + data.error.code, {trigger: true});
            }
          };
          this.deleteContact(this.contactID, doneDelete, doneDelete);
        },
        initialize: function() {},
        loaded: function(pEmail, pContactID) {
          Shared.menuView.renderContextMenu('detailsContact', {
            email: pEmail,
            contactID: pContactID
          });
        },
        deleteContact: function(pContactID, callbackSucess, callbackFail) {
          var contactModel = new ContactModel();
          contactModel.deleteContact({contactID: pContactID}).done(function(data) {
            var newData = {
              contact: data,
              _: _
            };
            if (callbackSucess)
              callbackSucess(newData);
          }).fail(function(error) {
            if (callbackFail)
              callbackFail(error);
          });
        }
      });
      $__export('default', DeleteContactView);
    }
  };
});

$__System.register("2a", ["5", "6", "7", "8", "a", "26", "17", "18", "27", "28", "29"], function($__export) {
  "use strict";
  var __moduleName = "2a";
  var $,
      _,
      Backbone,
      Shared,
      LoadingView,
      HomeView,
      detailContentTemplate,
      primaryContentTemplate,
      ContactModel,
      DetailsContactCollection,
      ContextMenuCollection,
      AddContactView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      HomeView = $__m.default;
    }, function($__m) {
      detailContentTemplate = $__m.default;
    }, function($__m) {
      primaryContentTemplate = $__m.default;
    }, function($__m) {
      ContactModel = $__m.default;
    }, function($__m) {
      DetailsContactCollection = $__m.default;
    }, function($__m) {
      ContextMenuCollection = $__m.default;
    }],
    execute: function() {
      AddContactView = Backbone.View.extend({
        contactID: null,
        render: function(data) {
          var self = this;
          var contentTitle;
          var container;
          var messageContainer;
          if (!Shared.isSmartPhoneResolution()) {
            this.$el.html(_.template(detailContentTemplate));
            $('#contentDetail').empty().append(this.$el);
            contentTitle = $('#contentDetailTitle');
            container = $('#scrollerDetail');
            messageContainer = '#messageDetail';
          } else {
            this.$el.html(_.template(primaryContentTemplate));
            $('#content').empty().append(this.$el);
            contentTitle = $('#contentTitle');
            container = $('#scroller');
            messageContainer = '#message';
          }
          var loadingView = new LoadingView({el: container});
          loadingView.render();
          var done = function(data) {
            var doneAdd = function(data) {
              if (data.contact == true) {
                Shared.router.navigate('/Contacts/General/' + self.contactID + '/OK', {trigger: true});
              } else if (data.error != undefined) {
                Shared.router.navigate('/Contacts/General/' + self.contactID + '/' + data.error.code, {trigger: true});
              }
            };
            var contact = _.first(data.contacts);
            var phoneNumber = contact.get('contactPhones') != '' && contact.get('contactPhones').length > 0 ? contact.get('contactPhones')[0] : '';
            var attrs = {
              contactAlias: contact.get('contactFullName'),
              contactGivenName: contact.get('contactFirstName'),
              contactFamilyName: contact.get('contactLastName'),
              contactEmail: contact.get('contactMails')[0],
              contactPhone: phoneNumber
            };
            self.addContact(attrs, doneAdd, doneAdd);
          };
          this.getContactDetails(this.contactID, done, done);
        },
        initialize: function() {},
        loaded: function(pEmail, pContactID) {
          Shared.menuView.renderContextMenu('detailsContact', {
            email: pEmail,
            contactID: pContactID
          });
        },
        getContactDetails: function(pContactID, callbackSuccess, callbackFail) {
          var detailsContactCollection = new DetailsContactCollection();
          detailsContactCollection.getGeneralContactDetails(pContactID).done(function(data) {
            callbackSuccess({
              contacts: data.models,
              _: _
            });
          }).fail(function(data) {
            callbackFail({
              error: data.error,
              _: _
            });
          });
        },
        addContact: function(params, callbackSucess, callbackFail) {
          var contactModel = new ContactModel();
          contactModel.addContact(params).done(function(data) {
            var newData = {
              contact: data,
              _: _
            };
            if (callbackSucess)
              callbackSucess(newData);
          }).fail(function(error) {
            if (callbackFail)
              callbackFail(error);
          });
        }
      });
      $__export('default', AddContactView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("2b", [], function() {
  return "<!-- <div id=\"picture_contact\" class=\"picture_image\" style=\"margin: 0 10px;\"><img src=\"\" class=\"userPicture\" alt=\"\" style=\"height: 106px; width: 80px;\" /></div> -->\n<%\nvar contactID = decodeURIComponent(contact.get('contactID'));\nvar id;\n\nif (parseInt(contactID) != NaN && parseInt(contactID) % 1 == 0)\n\tid = contactID;\nelse\n{\n\tvar queryUID = contactID.split(\",\")[0]; \n\tvar uid = queryUID.split(\"=\");\n\tid = uid[1].replace(\".\", \"___\");\n}\n%>\n<div id=\"contactDetailCard\" class=\"expresso-email animation-fadein\">\n  <div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n  \t\n    <h2 class=\"mdl-card__title-text\"><div id=\"picture_contact_<%= id %>\" class=\"picture_image\"></div><br>&nbsp;<%=contact.get('contactFullName')%></h2>\n  </div>\n  <div class=\"mdl-card__supporting-text mdl-color-text--grey-600\">\n    \n\t\t<dl id=\"contactDetails\">\n\n\t\t\t<% if (!_.isEmpty(contact.get('contactMails'))) { %>\n\t\t\t\t\t\t\n\t\t\t\t<dt>Contas de e-mail</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<% _.each(contact.get('contactMails'), function (email) { %>\n\t\t\t\t\t\t\t<li>\n\n\t\t\t\t\t\t\t\t<a href=\"/Mail/Message/New/<%= email %>\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect listItemLink\" data-upgraded=\",MaterialButton,MaterialRipple\"><i class=\"material-icons\">email</i>&nbsp;<%= email %><span class=\"mdl-button__ripple-container\"><span class=\"mdl-ripple\"></span></span></a>\n\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<% }); %>\n\t\t\t\t\t</ul>\n\t\t\t\t</dd>\n\n\t\t\t<% } %>\n\n\t\t\t<% if (!_.isEmpty(contact.get('contactPhones')) && !_.isEmpty(_.first(contact.get('contactPhones')))) { %>\n\n\t\t\t\t<dt>Telefones</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<% _.each(contact.get('contactPhones'), function (phone) { %>\n\t\t\t\t\t\t\t<li><i class=\"material-icons\">phone</i>&nbsp;<%= phone %></li>\n\t\t\t\t\t\t<% }); %>\n\t\t\t\t\t</ul>\n\t\t\t\t</dd>\n\n\t\t\t<% } %>\n\n\t\t</dl>\n  </div>\n<!--   <div class=\"mdl-card__actions mdl-card--border\">\n    <a href=\"#\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect\" data-upgraded=\",MaterialButton,MaterialRipple\">Enviar email<span class=\"mdl-button__ripple-container\"><span class=\"mdl-ripple\"></span></span></a>\n  </div> -->\n</div>\n\n\t\t\n";
});

_removeDefine();
})();
$__System.register("2c", ["5", "6", "7", "8", "a", "26", "2d", "17", "18", "2b", "28", "29", "2e"], function($__export) {
  "use strict";
  var __moduleName = "2c";
  var $,
      _,
      Backbone,
      Shared,
      LoadingView,
      HomeView,
      PictureImageContactView,
      detailContentTemplate,
      primaryContentTemplate,
      DetailsContactTemplate,
      DetailsContactCollection,
      ContextMenuCollection,
      ContactPictureImageModel,
      DetailsContactView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      HomeView = $__m.default;
    }, function($__m) {
      PictureImageContactView = $__m.default;
    }, function($__m) {
      detailContentTemplate = $__m.default;
    }, function($__m) {
      primaryContentTemplate = $__m.default;
    }, function($__m) {
      DetailsContactTemplate = $__m.default;
    }, function($__m) {
      DetailsContactCollection = $__m.default;
    }, function($__m) {
      ContextMenuCollection = $__m.default;
    }, function($__m) {
      ContactPictureImageModel = $__m.default;
    }],
    execute: function() {
      DetailsContactView = Backbone.View.extend({
        secondViewName: '',
        contactID: null,
        status: null,
        render: function(data) {
          var self = this;
          var contentTitle;
          var container;
          var messageContainer;
          if (!Shared.isSmartPhoneResolution()) {
            this.$el.html(_.template(detailContentTemplate));
            $('#contentDetail').empty().append(this.$el);
            contentTitle = $('#contentDetailTitle');
            container = $('#scrollerDetail');
            messageContainer = '#pageMessage';
          } else {
            this.$el.html(_.template(primaryContentTemplate));
            $('#content').empty().append(this.$el);
            contentTitle = $('#contentTitle');
            container = $('#scroller');
            messageContainer = '#pageMessage';
          }
          var loadingView = new LoadingView({el: container});
          loadingView.render();
          var done = function(data) {
            var firstContact = _.first(data.contacts);
            if (firstContact != undefined) {
              var contact = {
                contact: _.first(data.contacts),
                _: _
              };
              var contactID = self.secondViewName == 'Personal' ? _.first(data.contacts).get('contactID') : _.first(data.contacts).get('contactUIDNumber');
              var htmlTemplate = _.template(DetailsContactTemplate);
              var compiledTemplate = htmlTemplate(contact);
              container.empty().append(compiledTemplate);
              var pEmail = (_.first(data.contacts).get('contactMails'))[0];
              var pContactID = contactID;
              Shared.menuView.renderContextMenu('detailsContact', {
                email: pEmail,
                contactID: pContactID,
                contactType: this.secondViewName
              });
              var pictureImageContactView = new PictureImageContactView({el: $('.details_picture_image')});
              pictureImageContactView.render(data);
              $('.details_picture_image').css('margin', '0 10px');
              $('.details_picture_image img').css('width', '80px').css('height', '106px');
              $('.details_picture_image img').css('margin-top', '10px').css('background-size', '110px 130px');
            }
            if (self.status == 'OK') {
              var message = '';
              if (self.secondViewName == 'Personal')
                message = 'Contato removido do catálogo pessoal com sucesso.';
              else
                message = 'Contato adicionado ao catálogo pessoal com sucesso.';
              Shared.showMessage({
                type: "success",
                icon: 'icon-agenda',
                title: message,
                description: '',
                timeout: 3000,
                elementID: messageContainer
              });
            } else if (!isNaN(parseInt(self.status))) {
              var error = '';
              switch (self.status) {
                case '1052':
                case '1055':
                  error = 'Endereço de e-mail inválido.';
                  break;
                case '1053':
                  error = 'Contato já existe no catálogo pessoal.';
                  break;
                case '1056':
                  error = 'Erro ao excluir o contato. O ID  está vazio ou é inválido.';
                  break;
                default:
                case '1054':
                  error = 'Não foi possível adicionar o contato no catálogo pessoal. Por favor, tente novamente.';
                  break;
              }
              Shared.showMessage({
                type: "error",
                icon: 'icon-agenda',
                title: error,
                description: '',
                timeout: 3000,
                elementID: messageContainer
              });
            }
          };
          if (this.secondViewName == 'Personal')
            this.getPersonalContactDetails(this.contactID, done, done);
          else
            this.getGeneralContactDetails(this.contactID, done, done);
        },
        initialize: function() {},
        getPersonalContactDetails: function(pContactID, callbackSuccess, callbackFail) {
          var detailsContactCollection = new DetailsContactCollection();
          detailsContactCollection.done(function(data) {
            callbackSuccess({
              contacts: data.models,
              _: _
            });
          }).fail(function(data) {
            callbackFail({
              error: data.error,
              _: _
            });
          }).getPersonalContactDetails(pContactID);
        },
        getGeneralContactDetails: function(pContactID, callbackSuccess, callbackFail) {
          var detailsContactCollection = new DetailsContactCollection();
          detailsContactCollection.done(function(data) {
            callbackSuccess({
              contacts: data.models,
              _: _
            });
          }).fail(function(data) {
            callbackFail({
              error: data.error,
              _: _
            });
          }).getGeneralContactDetails(pContactID);
        }
      });
      $__export('default', DetailsContactView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("2f", [], function() {
  return "<img src=\"\" class=\"userPicture\" alt=\"\" />";
});

_removeDefine();
})();
$__System.register("2e", ["6", "7", "8"], function($__export) {
  "use strict";
  var __moduleName = "2e";
  var _,
      Backbone,
      Shared,
      ContactPictureImageModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }],
    execute: function() {
      ContactPictureImageModel = Backbone.Model.extend({
        defaults: {
          contactID: '',
          contactImagePicture: ''
        },
        initialize: function() {
          this.api = Shared.api;
          this.readResource = '/Catalog/ContactPicture';
          this.updateResource = '';
          this.createResource = '';
          this.deleteResource = '';
        },
        done: function(value) {
          this.done = value;
          return this;
        },
        fail: function(value) {
          this.fail = value;
          return this;
        },
        getImagePicture: function(pContactID, pContactType) {
          var that = this;
          this.api.resource('Catalog/ContactPicture').params({
            contactID: pContactID,
            contactType: pContactType
          }).done(function(result) {
            var thisModel = new ContactPictureImageModel(result.contacts[0]);
            if (that.done)
              that.done(thisModel);
          }).fail(function(error) {
            if (that.fail)
              that.fail(error);
          }).execute();
          return that;
        },
        execute: function() {
          return this.api.execute();
        }
      });
      $__export('default', ContactPictureImageModel);
    }
  };
});

$__System.register("2d", ["5", "6", "7", "8", "a", "2e", "2f"], function($__export) {
  "use strict";
  var __moduleName = "2d";
  var $,
      _,
      Backbone,
      Shared,
      LoadingView,
      ContactPictureImageModel,
      PictureImageContactTemplate,
      PictureImageContactView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      ContactPictureImageModel = $__m.default;
    }, function($__m) {
      PictureImageContactTemplate = $__m.default;
    }],
    execute: function() {
      PictureImageContactView = Backbone.View.extend({
        render: function(data) {
          var done = function(value) {
            var contactID = decodeURIComponent(value.contact.get('contactID'));
            var id;
            if (parseInt(contactID) != NaN && parseInt(contactID) % 1 == 0)
              id = contactID;
            else {
              var queryUID = contactID.split(",")[0];
              var uid = queryUID.split("=");
              id = uid[1].replace(".", "___");
            }
            $('#picture_contact_' + id + ' img').attr('src', 'data:image/gif;base64,' + value.contact.get('contactImagePicture'));
          };
          for (var i in data.contacts) {
            if (data.contacts[i].get('contactHasImagePicture') == 1) {
              this.getContactPictureImage(data.contacts[i].get('contactID'), done, done);
            }
          }
          var compiledTemplate = _.template(PictureImageContactTemplate);
          this.$el.html(compiledTemplate);
          this.loaded();
        },
        initialize: function() {},
        loaded: function() {},
        getContactPictureImage: function(pContactID, callbackSuccess, callbackFail) {
          var pContactType = '2';
          if (parseInt(pContactID) != NaN && parseInt(pContactID) % 1 == 0)
            pContactType = '1';
          var contactPictureImageModel = new ContactPictureImageModel();
          contactPictureImageModel.done(function(data) {
            callbackSuccess({
              contact: data,
              _: _
            });
          }).fail(function(data) {
            callbackFail({
              error: data.error,
              _: _
            });
          }).getImagePicture(pContactID, pContactType);
        }
      });
      $__export('default', PictureImageContactView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("30", [], function() {
  return "<div id=\"pull-to-action-loader\"></div>\n<% if (contacts.length > 0) { %>\n\t\n\t<dl id=\"contactsList\" class=\"personal\">\n\n\t\t<% var summaryLetter = _.first(contacts).get('contactFirstName').charAt(0).toUpperCase(); %>\n\t\t<dt><%=summaryLetter%></dt>\n\t\t<dd>\n\t\t\t<ul>\n\t\t\n\t\t\t\t<% _.each(contacts, function(c) { %>\n\n\t\t\t\t\t<% if (!_.isEqual(summaryLetter, c.get('contactFirstName').charAt(0).toUpperCase())) { %>\n\t\t\t\t\t\n\t\t\t\t\t\t<% summaryLetter = c.get('contactFirstName').charAt(0).toUpperCase(); %>\n\t\t\t\t\t\t\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t<dt><%=summaryLetter%></dt>\n\t\t\t\t\t\t\t<dd>\n\t\t\t\t\t\t\t\t<ul>\n\n\t\t\t\t\t<% } %>\n\n\t\t\t\t\t<li id=\"contact_row_<%=c.get('contactID')%>\" class=\"\">\n\n\t\t\t\t\t\t<a href=\"/Contacts/Personal/<%= c.get('contactID') %>\" title=\"<%=c.get('contactFullName')%>\" class=\"listItemLink\" rowid='contact_row_<%=c.get('contactID')%>'>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<span class=\"mdl-ripple\"></span>\n\n\t\t\t\t\t\t\t<% \n\t\t\t\t\t\t\tvar id = c.get('contactID');\n\t\t\t\t\t\t\t%>\n\n\t\t\t\t\t\t\t<div id=\"picture_contact_<%= id %>\" class=\"picture_image\"></div>\n\t\t\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t\t\t<span class=\"name\"><%=c.get('contactFullName')%></span>\n\t\t\t\t\t\t\t\t<span class=\"email\"><%=c.getFirstEmailAddress()%></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t<% }); %>\n\n\t\t\t</ul>\n\t\t</dd>\n\n\t</dl>\n\n<% } else { %>\n\n\t<p class=\"erro\">Nenhum registro encontrado</p>\n\n<% } %>";
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("31", [], function() {
  return "<div id=\"pull-to-action-loader\"></div>\n<% if (typeof(contacts) != 'undefined' && contacts.length > 0) { %>\n\t\n\n\t<dl id=\"contactsList\" class=\"general\">\n\n\t\t<% var summaryLetter = _.first(contacts).get('contactFirstName').charAt(0).toUpperCase(); %>\n\t\t<dt><%=summaryLetter%></dt>\n\t\t<dd>\n\t\t\t<ul>\n\t\t\n\t\t\t\t<% _.each(contacts, function(c) { %>\n\n\t\t\t\t\t<% if (!_.isEqual(summaryLetter, c.get('contactFirstName').charAt(0).toUpperCase())) { %>\n\t\t\t\t\t\n\t\t\t\t\t\t<% summaryLetter = c.get('contactFirstName').charAt(0).toUpperCase(); %>\n\t\t\t\t\t\t\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t<dt><%=summaryLetter%></dt>\n\t\t\t\t\t\t\t<dd>\n\t\t\t\t\t\t\t\t<ul>\n\n\t\t\t\t\t<% } %>\n\n\t\t\t\t\t<% \n\t\t\t\t\tvar contactID = decodeURIComponent(c.get('contactID'));\n\t\t\t\t\tvar queryUID = contactID.split(\",\")[0]; \n\t\t\t\t\tvar uid = queryUID.split(\"=\");\n\t\t\t\t\tvar id = uid[1].replace(\".\", \"___\");\n\t\t\t\t\t%>\n\n\t\t\t\t\t<li id=\"<%=id%>\">\n\t\t\t\t\t\t<a href=\"/Contacts/General/<%= c.get('contactUIDNumber') %>\" title=\"<%=c.get('contactFullName')%>\">\n\n\n\t\t\t\t\t\t\t<div id=\"picture_contact_<%= id %>\" class=\"picture_image\"></div>\n\t\t\t\t\t\t\t<div class=\"info\">\n\t\t\t\t\t\t\t\t<span class=\"name\"><%=c.get('contactFullName')%></span>\n\t\t\t\t\t\t\t\t<span class=\"email\"><%=c.getFirstEmailAddress()%></span>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\n\t\t\t\t<% }); %>\n\n\t\t\t</ul>\n\t\t</dd>\n\n\t</dl>\n\t\n<% } else { %>\n\n\t<% if (_.isObject(error)) { %>\n\n\t\t<p class=\"erro\"><%= error.message %></p>\n\n\t<% } else { %>\n\n\t\t<p class=\"erro\">Nenhum registro encontrado</p>\n\n\t<% } %>\n\n<% } %>";
});

_removeDefine();
})();
$__System.register("32", ["5", "6", "7", "8", "18", "17", "31", "30", "29", "2d", "a", "26", "33", "24", "34"], function($__export) {
  "use strict";
  var __moduleName = "32";
  var $,
      _,
      Backbone,
      Shared,
      primaryContentTemplate,
      detailContentTemplate,
      GeneralContactsListTemplate,
      PersonalContactsListTemplate,
      ContextMenuCollection,
      PictureImageContactView,
      LoadingView,
      HomeView,
      ContactsListCollection,
      PullToActionView,
      Material,
      ContactsListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      primaryContentTemplate = $__m.default;
    }, function($__m) {
      detailContentTemplate = $__m.default;
    }, function($__m) {
      GeneralContactsListTemplate = $__m.default;
    }, function($__m) {
      PersonalContactsListTemplate = $__m.default;
    }, function($__m) {
      ContextMenuCollection = $__m.default;
    }, function($__m) {
      PictureImageContactView = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      HomeView = $__m.default;
    }, function($__m) {
      ContactsListCollection = $__m.default;
    }, function($__m) {
      PullToActionView = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }],
    execute: function() {
      ContactsListView = Backbone.View.extend({
        searchLength: 0,
        secondViewName: '',
        status: null,
        currentView: null,
        arrayContacts: {},
        events: {
          "keyup .personalContacts .searchField": "searchPersonalContacts",
          "keypress .generalContacts .searchField": "searchGeneralContacts"
        },
        render: function() {
          this.$el.html(_.template(primaryContentTemplate));
          $('#content').empty().append(this.$el);
          Shared.setDefaultIMListeners();
          if (!Shared.isSmartPhoneResolution()) {
            $('#contentDetail').html(_.template(detailContentTemplate));
            $('#contentDetail .searchArea').remove();
          }
          var loadingView = new LoadingView({el: $('#scroller')});
          loadingView.render();
          if (this.secondViewName == 'General')
            this.listGeneralContacts('', false);
          else
            this.listPersonalContacts('', false);
          var that = this;
          var refreshAction = function() {
            $("#scroller").empty();
            if (that.secondViewName == 'General')
              that.listGeneralContacts($('.searchField').val(), true);
            else
              that.listPersonalContacts($('.searchField').val(), true);
          };
          var pullToAction = new PullToActionView({
            refreshAction: refreshAction,
            container: '#pull-to-action-loader'
          });
          pullToAction.render();
        },
        initialize: function() {},
        loaded: function() {
          window.componentHandler.upgradeDom();
        },
        searchPersonalContacts: function(e) {
          this.searchContacts(e, $('.searchField').val(), '1');
        },
        searchGeneralContacts: function(e) {
          if (e.keyCode == 13)
            this.searchContacts(e, $('.searchField').val(), '2');
        },
        searchContacts: function(e, pSearch, pContactType) {
          var search = $('.searchField').val();
          var pSearch = '';
          if (search.length >= 3)
            pSearch = search;
          else
            pSearch = '';
          if (pSearch.length >= 3 || this.searchLength >= 3) {
            var loadingView = new LoadingView({el: $('#scroller')});
            loadingView.render();
            if (pContactType == '1')
              this.listPersonalContacts(pSearch, true);
            else
              this.listGeneralContacts(this.removeAccents(pSearch), true);
          }
          this.searchLength = search.length;
        },
        listPersonalContacts: function(pSearch, ignoreCache) {
          var self = this;
          Shared.setCurrentPageTitle('Contatos Pessoais');
          $('#contentTitle').text('Contatos Pessoais');
          $('#contentTitle').addClass("icon-contacts");
          $('.searchArea').removeClass('generalContacts');
          $('.searchArea').addClass('personalContacts');
          var donePersonalContacts = function(data) {
            Shared.menuView.renderContextMenu(0, []);
            if (self.secondViewName == 'General')
              Shared.menuView.renderContextMenu('generalContacts', {});
            else
              Shared.menuView.renderContextMenu('personalContacts', {});
            if (data.error == undefined) {
              if (data.contacts.length > 0) {
                $('#message').empty();
                var htmlTemplate = _.template(PersonalContactsListTemplate);
                var htmlWithData = htmlTemplate(data);
                $('#scroller').empty().append(htmlWithData);
                self.openFirstContact(data.contacts[0].get('contactID'), data.contacts[0].get('contactID'), 'Personal');
              } else {
                Shared.showMessage({
                  type: "error",
                  icon: 'icon-contacts',
                  title: "Nenhum Resultado Encontrado.",
                  route: "",
                  description: "",
                  timeout: 0,
                  animate: false,
                  elementID: "#message"
                });
                $('#scroller').empty();
              }
            } else {
              $('#scroller').empty();
              Shared.handleErrors(data.error);
            }
            self.setElement(self.$el);
            self.loaded();
            var pictureImageContactView = new PictureImageContactView({el: $('.picture_image')});
            pictureImageContactView.render(data);
          };
          this.listContacts(pSearch, '1', ignoreCache, donePersonalContacts, donePersonalContacts);
        },
        listGeneralContacts: function(pSearch, ignoreCache) {
          var self = this;
          this.personalContact = false;
          Shared.setCurrentPageTitle('Catálogo Geral');
          $('#contentTitle').text('Catálogo Geral');
          $('#contentTitle').addClass("icon-contacts");
          $('.searchArea').removeClass('personalContacts');
          $('.searchArea').addClass('generalContacts');
          var doneGeneralContacts = function(data) {
            if (self.secondViewName == 'General')
              Shared.menuView.renderContextMenu('generalContacts', {});
            else
              Shared.menuView.renderContextMenu('personalContacts', {});
            if (data.error == undefined) {
              $('#message').empty();
              var htmlTemplate = _.template(GeneralContactsListTemplate);
              var htmlWithData = htmlTemplate(data);
              $('#scroller').empty().append(htmlWithData);
              if (data.contacts.length > 0)
                self.openFirstContact(data.contacts[0].get('contactUIDNumber'), data.contacts[0].get('contactID'), 'General');
            } else {
              if (data.error.code == "1001") {
                Shared.showMessage({
                  type: "chat-message",
                  icon: 'icon-contacts',
                  title: "Sua busca deve ser específica.",
                  route: "",
                  description: "Procure pelo nome e sobrenome.<br>Nenhum resultado será exibido caso a sua busca retorne mais do que 200 contatos.",
                  timeout: 0,
                  animate: false,
                  elementID: "#message"
                });
              }
              if (data.error.code == "1019") {
                Shared.showMessage({
                  type: "error",
                  icon: 'icon-contacts',
                  title: "Nenhum Resultado Encontrado.",
                  route: "",
                  description: "Procure pelo nome e sobrenome.<br>Nenhum resultado será exibido caso a sua busca retorne mais do que 200 contatos.",
                  timeout: 0,
                  animate: false,
                  elementID: "#message"
                });
              }
              $('#scroller').empty();
              $("#scroller").append('<div id="pullDown"><span class="pullDownIcon"></span><span class="pullDownLabel"></span></div>');
            }
            self.setElement(self.$el);
            self.loaded();
            var pictureImageContactView = new PictureImageContactView({el: $('.picture_image')});
            pictureImageContactView.render(data);
          };
          this.listContacts(pSearch, '2', ignoreCache, doneGeneralContacts, doneGeneralContacts);
        },
        listContacts: function(pSearch, ptype, ignoreCache, callbackSuccess, callbackFail) {
          var contactsData = new ContactsListCollection();
          contactsData.done(function(data) {
            this.arrayContacts = {
              contacts: data.models,
              search: pSearch,
              _: _
            };
            callbackSuccess(this.arrayContacts);
          }).fail(function(data) {
            callbackFail({
              error: data.error,
              _: _
            });
          }).getContacts(pSearch, ptype, ignoreCache);
        },
        viewContact: function(e) {
          e.preventDefault();
          $('#contactsList ul li').removeAttr('class');
          $(e.target).parents('li').addClass('selected');
          Shared.router.navigate(e.currentTarget.getAttribute("href"), {trigger: true});
        },
        openFirstContact: function(contactUIDNumber, contactID, contactType) {
          if (!Shared.isSmartPhoneResolution()) {
            if (parseInt(contactID) != NaN && parseInt(contactID) % 1 == 0)
              id = contactID;
            else {
              contactID = decodeURIComponent(contactID);
              var queryUID = contactID.split(",")[0];
              var uid = queryUID.split("=");
              id = uid[1].replace(".", "___");
            }
            $('#contactsList ul li').removeAttr('class');
            $('#contact_row_' + id).addClass('selected');
            if (this.status != null)
              Shared.router.navigate('/Contacts/' + contactType + '/' + contactUIDNumber + '/OK', {trigger: true});
            else
              Shared.router.navigate('/Contacts/' + contactType + '/' + contactUIDNumber, {trigger: true});
          }
        },
        removeAccents: function(strAccents) {
          var strAccents = strAccents.split('');
          var strAccentsOut = new Array();
          var strAccentsLen = strAccents.length;
          var accents = 'ÀÁÂÃÄÅàáâãäåÒÓÔÕÕÖØòóôõöøÈÉÊËèéêëðÇçÐÌÍÎÏìíîïÙÚÛÜùúûüÑñŠšŸÿýŽž';
          var accentsOut = "AAAAAAaaaaaaOOOOOOOooooooEEEEeeeeeCcDIIIIiiiiUUUUuuuuNnSsYyyZz";
          for (var y = 0; y < strAccentsLen; y++) {
            if (accents.indexOf(strAccents[y]) != -1)
              strAccentsOut[y] = accentsOut.substr(accents.indexOf(strAccents[y]), 1);
            else
              strAccentsOut[y] = strAccents[y];
          }
          strAccentsOut = strAccentsOut.join('');
          return strAccentsOut;
        }
      });
      $__export('default', ContactsListView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("35", [], function() {
  return "<div id=\"support\" class=\"expresso-email animation-fadein\">\n        <div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n          <h2 class=\"mdl-card__title-text\">Suporte / Sugest&otilde;es</h2>\n        </div>\n\t\t<textarea name=\"sugestao\" id=\"sugestao\" placeholder=\"Envie suas sugest&otilde;es ou cr&iacute;ticas para o time que administra o Expresso.\"></textarea>\n</div>\n\n<!-- <h2 class=\"font-big\">Suporte / Sugest&otilde;es</h2> \n<article id=\"wrapperDetail\" class=\"contentScroll\">\n\t<div id=\"scrollerDetail\">\n\t\t<div id=\"support\">\n\t\t\t<ol>\n\t\t\t\t<li>\n\t\t\t\t\t<textarea name=\"sugestao\" id=\"sugestao\" placeholder=\"Envie suas sugest&otilde;es ou cr&iacute;ticas para o time que administra o Expresso.\"></textarea>\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t</div>\n  \t</div>\n</article>\n-->";
});

_removeDefine();
})();
$__System.register("36", ["5", "6", "7", "8", "35"], function($__export) {
  "use strict";
  var __moduleName = "36";
  var $,
      _,
      Backbone,
      Shared,
      settingsSupportListTemplate,
      SettingsSupportListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      settingsSupportListTemplate = $__m.default;
    }],
    execute: function() {
      SettingsSupportListView = Backbone.View.extend({
        el: $("#content"),
        render: function() {
          var newData = {_: _};
          var htmlTemplate = _.template(settingsSupportListTemplate);
          var compiledTemplate = htmlTemplate(newData);
          this.$el.html(compiledTemplate);
          Shared.menuView.renderContextMenu('support', {
            saveCallBack: this.SendSupportFeedback,
            parentCallback: this
          });
        },
        SendSupportFeedback: function() {
          var sugestao = $("#sugestao").val();
          if (sugestao == "") {
            Shared.showMessage({
              type: "error",
              icon: 'icon-settings',
              title: "Por favor, escreva sua sugestão!",
              description: "",
              elementID: "#pageMessage"
            });
          } else {
            var headerString = "Mensagem enviada pelo Expresso Mobile: ";
            var deviceString = "";
            var resolutionString = "";
            if (Shared.isPhonegap()) {
              deviceString = deviceString + "Phonegap,";
            }
            if (Shared.isAndroid()) {
              deviceString = deviceString + "Android";
            }
            if (Shared.isIDevice()) {
              deviceString = deviceString + "iOS";
            }
            if (Shared.isDesktop()) {
              resolutionString = resolutionString + "Desktop,";
            }
            if (Shared.isTabletResolution()) {
              resolutionString = resolutionString + "Tablet";
            } else {
              if (Shared.isSmartPhoneResolution()) {
                resolutionString = resolutionString + "SmartPhone";
              }
            }
            headerString = headerString + resolutionString + " - " + deviceString + "<br><br>";
            sugestao = headerString + sugestao;
            Shared.api.resource('Mail/SendSupportFeedback').params({message: sugestao}).done(function(result) {
              Shared.showMessage({
                type: "success",
                icon: 'icon-settings',
                title: "Sua Sugestão foi enviada com sucesso!",
                description: "",
                elementID: "#pageMessage"
              });
              Shared.router.navigate("/Settings", {trigger: true});
            }).fail(function(error) {
              Shared.handleErrors(error);
              return false;
            }).execute();
          }
        }
      });
      $__export('default', SettingsSupportListView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("37", [], function() {
  return "<!-- <h2 class=\"font-big\">Resultados Por P&aacute;gina</h2> -->\n <div class=\"expresso-email animation-fadein\">\n        <div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n          <h2 class=\"mdl-card__title-text\">Resultados Por P&aacute;gina</h2>\n        </div>\n<article id=\"wrapperDetail\" class=\"contentScroll\">\n\t<div id=\"scrollerDetail\">\n\t\t<div id=\"detailList\">\n\t\t\t<ul>\n\t\t\t\t<% _.each(possibleValues, function(value){ %>\n\t\t\t\t<li value=\"<%=value%>\" <% if (resultsperpage == value) { %>class=\"selected\"<% } %>>\n\t\t\t\t\t<a href=\"#\" class=\"detailListItemLink\">\n\t\t\t\t\t\t<h3><%=value%></h3>\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<% }); %>\n\t\t\t</ul>\n\t\t</div>\n  \t</div>\n</article>\n</div>";
});

_removeDefine();
})();
$__System.register("38", ["5", "6", "7", "8", "37"], function($__export) {
  "use strict";
  var __moduleName = "38";
  var $,
      _,
      Backbone,
      Shared,
      settingsResultsPerPageListTemplate,
      SettingsResultsPerPageListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      settingsResultsPerPageListTemplate = $__m.default;
    }],
    execute: function() {
      SettingsResultsPerPageListView = Backbone.View.extend({
        elementID: "#content",
        render: function() {
          var possibleValues = [25, 50, 75, 100];
          var that = this;
          Shared.api.resource('Preferences/UserPreferences').params({
            "module": "mail",
            "preference": "max_email_per_page"
          }).done(function(result) {
            var rpp = 25;
            rpp = result.mail.max_email_per_page;
            var newData = {
              _: _,
              resultsperpage: rpp,
              possibleValues: possibleValues
            };
            var htmlTemplate = _.template(settingsResultsPerPageListTemplate);
            var compiledTemplate = htmlTemplate(newData);
            that.$el.html(compiledTemplate);
            $(that.elementID).empty().html(that.$el);
          }).fail(function(result) {}).execute();
        },
        events: {"click a.detailListItemLink": "selectListItem"},
        selectListItem: function(e) {
          e.preventDefault();
          $('#detailList li').each(function() {
            if ($(this).hasClass('listDivision').toString() == 'false') {
              $(this).removeClass('selected');
            }
          });
          var parent = $(e.target).parent();
          if (parent.hasClass("detailListItemLink")) {
            parent = parent.parent();
          }
          parent.addClass("selected");
          var valueSelected = $(parent).attr("value");
          Shared.settings.resultsPerPage = valueSelected;
          Shared.saveSettingsToLocalStorage();
          Shared.api.resource('Preferences/ChangeUserPreferences').params({
            "module": "mail",
            "preference": "max_email_per_page",
            "value": valueSelected
          }).done(function(result) {
            Shared.showMessage({
              type: "success",
              icon: 'icon-settings',
              title: "Sua preferência foi salva com sucesso!",
              description: "",
              elementID: "#pageMessage"
            });
            if (Shared.isSmartPhoneResolution()) {
              Shared.router.navigate("/Settings", {trigger: true});
            }
          }).fail(function(result) {}).execute();
        }
      });
      $__export('default', SettingsResultsPerPageListView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("39", [], function() {
  return "<div id=\"emailSignature\" class=\"expresso-email animation-fadein\">\n        <div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n          <h2 class=\"mdl-card__title-text\">Assinatura de e-mail</h2>\n        </div>\n\t<input type=\"hidden\" id=\"typeSignature\" name=\"typeSignature\" value=\"<%=typeSignature%>\">\n\t\t<% if (typeSignature == 'html') { %>\n\t\t<div id=\"assinaturaEmailHTML\"  class=\"messageBodyInput\" style=\"width: 100%; min-height: 400px; border: 0px; margin: 20px;\" contenteditable=\"true\">\n\t\t\t<%=mailsignature%>\n\t\t</div>\n\t\t<% } else { %>\n\t\t<textarea name=\"assinaturaEmail\" id=\"assinaturaEmail\" placeholder=\"Mensagem enviada pelo Expresso Mobile.\" style=\"border: 0px;\"><%=mailsignature%></textarea>\n\t\t<% } %>\n\n</div>";
});

_removeDefine();
})();
$__System.register("3a", ["5", "6", "7", "8", "39"], function($__export) {
  "use strict";
  var __moduleName = "3a";
  var $,
      _,
      Backbone,
      Shared,
      settingsMailSignatureListTemplate,
      SettingsMailSignatureListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      settingsMailSignatureListTemplate = $__m.default;
    }],
    execute: function() {
      SettingsMailSignatureListView = Backbone.View.extend({
        el: $("#content"),
        render: function() {
          var mailsign = '';
          var type_signature = '';
          var that = this;
          Shared.api.resource('Preferences/UserPreferences').params({"module": "mail"}).done(function(result) {
            mailsign = result.mail.signature;
            type_signature = result.mail.type_signature;
            var newData = {
              _: _,
              mailsignature: mailsign,
              typeSignature: type_signature
            };
            var htmlTemplate = _.template(settingsMailSignatureListTemplate);
            var compiledTemplate = htmlTemplate(newData);
            that.$el.html(compiledTemplate);
            Shared.menuView.renderContextMenu('mailsignature', {});
          }).fail(function(result) {}).execute();
        },
        SaveMailSignature: function() {
          var value = '';
          if ($("#typeSignature").val() == "html") {
            value = $("#assinaturaEmailHTML").html();
          } else {
            value = $("#assinaturaEmail").val();
          }
          Shared.api.resource('Preferences/ChangeUserPreferences').params({
            "module": "mail",
            "preference": "signature",
            "value": value
          }).done(function(result) {
            Shared.settings.mailSignature = value;
            Shared.settings.typeSignature = $("#typeSignature").val();
            Shared.saveSettingsToLocalStorage();
            Shared.showMessage({
              type: "success",
              icon: 'icon-settings',
              title: "Sua preferência foi salva com sucesso!",
              description: "",
              elementID: "#pageMessage"
            });
            Shared.router.navigate("/Settings", {trigger: true});
          }).fail(function(result) {}).execute();
        }
      });
      $__export('default', SettingsMailSignatureListView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("3b", [], function() {
  return "<div class=\"expresso-email animation-fadein\">\n        <div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n          <h2 class=\"mdl-card__title-text\">Cr&eacute;ditos</h2>\n        </div>\n\t\t<article id=\"wrapperDetail\" class=\"contentScroll\">\n\t\t\t<div id=\"scrollerDetail\">\n\n\t\t\t\t<dl id=\"credits\">\n\t\t\t\t\t\n\t\t\t\t\t<dt>Projeto desenvolvido por:</dt>\n\t\t\t\t\t<dd>CELEPAR - Companhia de Tecnologia da Informa&ccedil;&atilde;o e Comunica&ccedil;&atilde;o do Estado do Paran&aacute;\n\t\t\t\t\t\t<br><br>\n\t\t\t\t\t\t<div class=\"login-company-logo\"></div>\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>Desenvolvedores</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Alexandre Rocha Wendling</li>\n\t\t\t\t\t\t\t<li>Jair Gon&ccedil;alves Pereira Jr</li>\n\t\t\t\t\t\t\t<li>Rafael Katayama Gobara</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>Desenvolvedores API</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Alexandre Luiz Correia</li>\n\t\t\t\t\t\t\t<li>Alexandre Rocha Wendling</li>\n\t\t\t\t\t\t\t<li>Anderson Tadayuki Saikawa</li>\n\t\t\t\t\t\t\t<li>Jair Gon&ccedil;alves Pereira Jr</li>\n\t\t\t\t\t\t\t<li>Nilton Emilio Buhrer Neto</li>\n\t\t\t\t\t\t\t<li>Rafael Katayama Gobara</li>\t\t\t\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>Design e Padrão de Usabilidade</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Carlos Henrique Roland</li>\n\t\t\t\t\t\t\t<li>Jair Gon&ccedil;alves Pereira Jr</li>\n\t\t\t\t\t\t\t<li>Rafael Katayama Gobara</li>\t\t\t\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>Biliotecas utilizadas</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Bacbkone</li>\n\t\t\t\t\t\t\t<li>RequireJS</li>\n\t\t\t\t\t\t\t<li>Underscore</li>\n\t\t\t\t\t\t\t<li>jQuery</li>\n\t\t\t\t\t\t\t<li>Moment.js</li>\n\t\t\t\t\t\t\t<li>PhoneGap</li>\n\t\t\t\t\t\t\t<li>jQuery Dot Dot Dot</li>\n\t\t\t\t\t\t\t<li>jQuery XMPP</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</dd>\n\n\t\t\t\t</dl>\n\n\t\t  \t</div>\n\t\t</article>\n</div>";
});

_removeDefine();
})();
$__System.register("3c", ["5", "6", "7", "8", "3b"], function($__export) {
  "use strict";
  var __moduleName = "3c";
  var $,
      _,
      Backbone,
      Shared,
      settingsCreditsListTemplate,
      SettingsCreditsListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      settingsCreditsListTemplate = $__m.default;
    }],
    execute: function() {
      SettingsCreditsListView = Backbone.View.extend({
        el: $("#content"),
        render: function() {
          var newData = {_: _};
          var htmlTemplate = _.template(settingsCreditsListTemplate);
          var compiledTemplate = htmlTemplate(newData);
          this.$el.html(compiledTemplate);
        }
      });
      $__export('default', SettingsCreditsListView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("3d", [], function() {
  return "\n<form id=\"changePassword\" style=\"\">\n      <div class=\"expresso-email animation-fadein\">\n        <div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n          <h2 class=\"mdl-card__title-text\">Alterar Senha</h2>\n        </div>\n        <div class=\"mdl-color-text--grey-600\" style=\"padding: 20px;\">\n          \t<div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n\t\t      <input id=\"senhaAtual\" type=\"password\" name=\"senhaAtual\" class=\"mdl-textfield__input\" type=\"text\" style=\"width: 90%\"  />\n\t\t      <label class=\"mdl-textfield__label\" for=\"senhaAtual\">Senha Atual</label>\n\t\t  \t</div>\n\t\t  \t<br>\n\t\t  \t<div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n\t\t      <input id=\"novaSenha\" type=\"password\" name=\"novaSenha\" class=\"mdl-textfield__input\" type=\"text\"  style=\"width: 90%\"  />\n\t\t      <label class=\"mdl-textfield__label\" for=\"novaSenha\">Nova Senha</label>\n\t\t  \t</div>\n\t\t  \t<br>\n\t\t  \t<div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n\t\t      <input id=\"repetirNovaSenha\" type=\"password\" name=\"repetirNovaSenha\" class=\"mdl-textfield__input\" type=\"text\" style=\"width: 90%\" />\n\t\t      <label class=\"mdl-textfield__label\" for=\"repetirNovaSenha\">Repetir nova senha</label>\n\t\t  \t</div>\n        </div>\n        <!-- <div class=\"mdl-card__actions mdl-card--border\">\n        \t<button id=\"btn-changepassword\" class=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\" style=\"width: 100%;\">\n              Alterar Senha\n            </button>\n        </div> -->\n      </div>\n</form>";
});

_removeDefine();
})();
$__System.register("3e", ["5", "6", "7", "8", "3d"], function($__export) {
  "use strict";
  var __moduleName = "3e";
  var $,
      _,
      Backbone,
      Shared,
      settingsChangePasswordListTemplate,
      SettingsChangePasswordListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      settingsChangePasswordListTemplate = $__m.default;
    }],
    execute: function() {
      SettingsChangePasswordListView = Backbone.View.extend({
        el: $("#content"),
        render: function() {
          var newData = {_: _};
          var htmlTemplate = _.template(settingsChangePasswordListTemplate);
          var compiledTemplate = htmlTemplate(newData);
          this.$el.html(compiledTemplate);
          Shared.menuView.renderContextMenu('changePassword', {
            saveCallBack: this.SaveChangePassword,
            parentCallBack: this
          });
        },
        events: {"click #btn-changepassword": "changePassword"},
        changePassword: function(ev) {
          this.loginUser(userName, passwd, serverURL);
        },
        SaveChangePassword: function(callBack) {
          var senhaAtual = $("#senhaAtual").val();
          var novaSenha = $("#novaSenha").val();
          var repetirNovaSenha = $("#repetirNovaSenha").val();
          Shared.menuView.renderContextMenu('changePassword', {
            saveCallBack: callBack.SaveChangePassword,
            parentCallBack: callBack
          });
          var errorMessage = "";
          if (novaSenha != repetirNovaSenha) {
            errorMessage = "Nova Senhas são diferentes!";
          }
          if ((senhaAtual == novaSenha) || (senhaAtual == repetirNovaSenha)) {
            errorMessage = "A nova senha deve ser diferente da senha atual!";
          }
          if ((repetirNovaSenha == "") || (repetirNovaSenha == undefined)) {
            errorMessage = "Repetição da nova senha não informada/inválida!";
          }
          if ((novaSenha == "") || (novaSenha == undefined)) {
            errorMessage = "Nova senha não informada/inválida!";
          }
          if ((senhaAtual == "") || (senhaAtual == undefined)) {
            errorMessage = "Senha atual não informada/inválida!";
          }
          if (errorMessage == "") {
            var that = this;
            senhaAtual = encodeURIComponent(senhaAtual);
            novaSenha = encodeURIComponent(novaSenha);
            repetirNovaSenha = encodeURIComponent(repetirNovaSenha);
            Shared.api.resource('Preferences/ChangePassword').params({
              currentPassword: senhaAtual,
              newPassword_1: novaSenha,
              newPassword_2: repetirNovaSenha
            }).done(function(result) {
              Shared.showMessage({
                type: "success",
                icon: 'icon-settings',
                title: "Sua nova senha foi alterada com sucesso!",
                description: "",
                elementID: "#pageMessage"
              });
              Shared.router.navigate("/Settings", {trigger: true});
            }).fail(function(result) {
              var errorMessage = '';
              switch (result.error.code) {
                case "1054":
                  errorMessage = "Senha atual Não Informada/Inválida!";
                  break;
                case "1055":
                  errorMessage = "Nova Senha Não Informada/Inválida!";
                  break;
                case "1056":
                  errorMessage = "Nova Senhas são diferentes!";
                  break;
                case "1057":
                  errorMessage = "Senha atual Não Informada/Inválida!";
                  break;
                case "1058":
                  errorMessage = "Seu usuário não possui permissão de alterar a senha.";
                  break;
                case "1059":
                  errorMessage = "Sua senha deve conter 8 ou mais caracteres.";
                  break;
                case "1060":
                  errorMessage = "Sua senha deve conter no mínimo 2 números ou caracteres especiais.";
                  break;
                case "1061":
                  errorMessage = "Não foi possível alterar a senha, não existe suporte para certificados digitais.";
                  break;
                default:
              }
              Shared.showMessage({
                type: "error",
                icon: 'icon-settings',
                title: errorMessage,
                description: "",
                elementID: "#pageMessage"
              });
            }).execute();
          } else {
            Shared.showMessage({
              type: "error",
              icon: 'icon-settings',
              title: errorMessage,
              description: "",
              elementID: "#pageMessage"
            });
          }
        }
      });
      $__export('default', SettingsChangePasswordListView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("3f", [], function() {
  return "<!-- <h2 class=\"font-big\">Sobre o Expresso</h2> -->\n<div class=\"expresso-email animation-fadein\">\n    <div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n      <h2 class=\"mdl-card__title-text\">Sobre o Expresso</h2>\n    </div>\n\t<article id=\"wrapperDetail\" class=\"contentScroll\">\n\t\t<div id=\"scrollerDetail\">\n\n\t\t\t<dl id=\"aboutExpresso\">\n\n\t\t\t\t<div class=\"login-center\" style=\"width: 245px; margin-top: 50px; margin-bottom: 50px;\">\n\t\t\t\t      <div class=\"login-logo\"></div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<dt>O que &eacute;</dt>\n\t\t\t\t<dd>O Expresso Livre &eacute; uma solu&ccedil;&atilde;o completa de comunica&ccedil;&atilde;o que re&uacute;ne Email, Agenda, Cat&aacute;logo de Endere&ccedil;os, Workflow e Mensagens Instant&acirc;neas em um &uacute;nico ambiente. Por ser uma vers&atilde;o customizada do E-GroupWare, seu desenvolvimento tamb&eacute;m &eacute; totalmente baseado em software livre.</dd>\n\n\t\t\t\t<dt>Caracter&iacute;sticas</dt>\n\t\t\t\t<dd>- Alta Escalabilidade<br>\n\t\t\t\t\t- Baixo custo<br>\n\t\t\t\t\t- Utiliza&ccedil;&atilde;o de protocolos padr&oatilde;es<br>\n\t\t\t\t\t- Integra&ccedil;&atilde;o com outros sistemas Web<br>\n\t\t\t\t\t- Independ&ecirc;ncia de fornecedor<br>\n\t\t\t\t\t- Independ&ecirc;ncia de plataforma cliente<br>\n\t\t\t\t\t- Independ&ecirc;ncia de plataforma servidor<br>\n\t\t\t\t\t- Mobilidade dos usu&aacute;rios<br>\n\t\t\t\t</dd>\n\n\t\t\t\t<dt>Saiba mais</dt>\n\t\t\t\t<dd><a href=\"#\">www.expressolivre.org</a></dd>\n\n\t\t\t\t<dt>Vers&otilde;es</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<li>Vers&atilde;o da Aplica&ccedil;&atilde;o: <b><%=appVersion%></b></li>\n\t\t\t\t\t\t<li>Vers&atilde;o do Expresso: <b><%=expressoVersion%></b></li>\n\t\t\t\t\t\t<li>Vers&atilde;o da API: <b><%=apiVersion%></b><br><br><br><br><br></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</dd>\n\t\t\t\t\t\n\t\t\t</dl>\n\t  \t</div>\n\t</article>\n</div>\n";
});

_removeDefine();
})();
$__System.register("40", ["5", "6", "7", "8", "3f"], function($__export) {
  "use strict";
  var __moduleName = "40";
  var $,
      _,
      Backbone,
      Shared,
      settingsAboutListTemplate,
      SettingsAboutListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      settingsAboutListTemplate = $__m.default;
    }],
    execute: function() {
      SettingsAboutListView = Backbone.View.extend({
        el: $("#content"),
        render: function() {
          var that = this;
          Shared.api.resource('/ExpressoVersion').params({}).done(function(result) {
            var newData = {
              expressoVersion: result.expressoVersion,
              apiVersion: result.apiVersion,
              appVersion: Shared.appVersion,
              _: _
            };
            var htmlTemplate = _.template(settingsAboutListTemplate);
            var compiledTemplate = htmlTemplate(newData);
            that.$el.html(compiledTemplate);
          }).execute();
        }
      });
      $__export('default', SettingsAboutListView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("41", [], function() {
  return "<!-- <h2 id=\"contentTitle\" class=\"font-big icon-settings\" style=\"padding-left: 50px; background-position: 10px;\">Prefer&ecirc;ncias</h2> -->\n<div id=\"wrapper\" class=\"contentScroll\">\n\t<div id=\"scroller\">\n\n\t\t<dl id=\"settingsList\">\n\t\t\t<% if (Shared.apiVersion != \"1.0\") { %>\n\t\t\t<dt>Conta de e-mail</dt>\n\t\t\t<dd>\n\t\t\t\t<ul>\n\t\t\t\t\t\n\t\t\t\t\t<% if (Shared.userHasModule(\"catalog\")) { %>\n\t\t\t\t\t\t<a href=\"/Contacts/General/<%=user.contactUIDNumber%>\" class=\"listItemLink\" rowid=\"row_account\"><% if (!_.isNull(user.contactMails[0])) { %><li id=\"row_account\"><%=user.contactMails[0]%><% } %></li></a>\n\t\t\t\t\t\t<% } else { %>\n\n\t\t\t\t\t\t<% if (!_.isNull(user.contactMails[0])) { %><li id=\"row_account\"><%=user.contactMails[0]%></li><% } %>\n\t\t\t\t\t<% } %>\n\t\t\t\t\t<a href=\"/Settings/ChangePassword\" class=\"listItemLink\" rowid=\"row_changepassword\">\n\t\t\t\t\t\t<li id=\"row_changepassword\">Alterar senha</li>\n\t\t\t\t\t</a>\n\t\t\t\t\t\n\t\t\t\t\t<!-- <li id=\"row_automaticLogin\">\n\t\t\t\t\t\t<label for=\"automaticLogin\" class=\"mdl-switch mdl-js-switch mdl-js-ripple-effect\">\n\t\t\t\t\t\t  <input type=\"checkbox\" id=\"automaticLogin\" class=\"mdl-switch__input\" />\n\t\t\t\t\t\t  <span class=\"mdl-switch__label\">Login Automatico</span>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</li> -->\n\t\t\t\t</ul>\n\t\t\t</dd>\n\t\t\t\t<% if (Shared.userHasModule(\"mail\")) { %>\n\t\t\t\t<dt>Configura&ccedil;&otilde;es do Email</dt>\n\t\t\t\t<dd>\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t<a href=\"/Settings/ResultsPerPage\" class=\"listItemLink\" rowid=\"row_resultsperpage\"><li id=\"row_resultsperpage\">Resultados por p&aacute;gina</li></a>\n\t\t\t\t\t\t<a href=\"/Settings/MailSignature\" class=\"listItemLink\" rowid=\"row_mailsignature\"><li id=\"row_mailsignature\">Assinatura de e-mail</li></a>\n\t\t\t\t\t</ul>\n\t\t\t\t</dd>\n\t\t\t\t<% } %>\n\t\t\t<% } %>\n\t\t\t<dt>Expresso</dt>\n\t\t\t<dd>\n\t\t\t\t<ul>\n\t\t\t\t\t<a href=\"/Settings/Support\" class=\"listItemLink\" rowid=\"row_support\"><li id=\"row_support\">Suporte / Sugest&otilde;es</li></a>\n\t\t\t\t\t<a href=\"/Settings/About\" class=\"listItemLink\" rowid=\"row_about\"><li id=\"row_about\">Sobre o Expresso</li></a>\n\t\t\t\t\t<a href=\"/Settings/FAQ\" class=\"listItemLink\" rowid=\"row_faq\"><li id=\"row_faq\">Perguntas Frequentes</li></a>\n\t\t\t\t\t<a href=\"/Settings/Credits\" class=\"listItemLink\" rowid=\"row_credits\"><li id=\"row_credits\">Cr&eacute;ditos</li></a>\n\t\t\t\t</ul>\n\t\t\t</dd>\n\t\t</dl>\n\t</div>\n</div>";
});

_removeDefine();
})();
$__System.register("42", ["5", "6", "7", "8", "41", "40", "3e", "3c", "3a", "38", "36", "43", "a", "34"], function($__export) {
  "use strict";
  var __moduleName = "42";
  var $,
      _,
      Backbone,
      Shared,
      settingsListTemplate,
      SettingsAboutListView,
      SettingsChangePasswordListView,
      SettingsCreditsListView,
      SettingsMailSignatureListView,
      SettingsResultsPerPageListView,
      SettingsSupportListView,
      SettingsFaqListView,
      LoadingView,
      Material,
      SettingsListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      settingsListTemplate = $__m.default;
    }, function($__m) {
      SettingsAboutListView = $__m.default;
    }, function($__m) {
      SettingsChangePasswordListView = $__m.default;
    }, function($__m) {
      SettingsCreditsListView = $__m.default;
    }, function($__m) {
      SettingsMailSignatureListView = $__m.default;
    }, function($__m) {
      SettingsResultsPerPageListView = $__m.default;
    }, function($__m) {
      SettingsSupportListView = $__m.default;
    }, function($__m) {
      SettingsFaqListView = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }],
    execute: function() {
      SettingsListView = Backbone.View.extend({
        secondViewName: '',
        render: function() {
          var that = this;
          var primaryElementID = "#content";
          var detailElementID = "#contentDetail";
          Shared.menuView.renderContextMenu(0, []);
          if (Shared.isSmartPhoneResolution()) {
            detailElementID = "#content";
          }
          if (this.secondViewName != null) {
            if ((this.secondViewName != "SaveMailSignature") && (this.secondViewName != "SaveChangePassword")) {
              $(detailElementID).html("");
              var loadingView = new LoadingView({el: $(detailElementID)});
              loadingView.render();
            }
            if (this.secondViewName == "Support") {
              var secondView = new SettingsSupportListView({el: $(detailElementID)});
            }
            if (this.secondViewName == "About") {
              var secondView = new SettingsAboutListView({el: $(detailElementID)});
            }
            if (this.secondViewName == "FAQ") {
              var secondView = new SettingsFaqListView({});
              secondView.elementID = detailElementID;
            }
            if (this.secondViewName == "Credits") {
              var secondView = new SettingsCreditsListView({el: $(detailElementID)});
            }
            if (this.secondViewName == "ChangePassword") {
              var secondView = new SettingsChangePasswordListView({el: $(detailElementID)});
            }
            if (this.secondViewName == "ResultsPerPage") {
              var secondView = new SettingsResultsPerPageListView();
              secondView.elementID = detailElementID;
            }
            if (this.secondViewName == "MailSignature") {
              var secondView = new SettingsMailSignatureListView({el: $(detailElementID)});
            }
            if (this.secondViewName == "SaveMailSignature") {
              var secondView = new SettingsMailSignatureListView({el: $(detailElementID)});
              secondView.SaveMailSignature();
            } else if (this.secondViewName == "SaveChangePassword") {
              var secondView = new SettingsChangePasswordListView({el: $(detailElementID)});
              secondView.SaveChangePassword();
            } else {
              setTimeout(function() {
                secondView.render();
              }, Shared.timeoutDelay);
            }
          } else {
            $(detailElementID).html("");
            var loadingView = new LoadingView({el: $(primaryElementID)});
            loadingView.render();
            var that = this;
            setTimeout(function() {
              var newData = {
                _: _,
                user: Shared.profile,
                auth: Shared.api.auth(),
                automaticLogin: Shared.settings.automaticLogin,
                Shared: Shared
              };
              var htmlTemplate = _.template(settingsListTemplate);
              var compiledTemplate = htmlTemplate(newData);
              that.$el.html(compiledTemplate);
              $(primaryElementID).empty().html(that.$el);
              Shared.setCurrentPageTitle("Preferências");
              window.componentHandler.upgradeDom();
            }, Shared.timeoutDelay);
          }
          Shared.setDefaultIMListeners();
        },
        events: {"change #automaticLoginSwitch": "selectAutomaticLogin"},
        selectAutomaticLogin: function(e) {
          if (Shared.settings.automaticLogin == true) {
            $("#automaticLoginSwitch").val("off");
            Shared.settings.automaticLogin = false;
          } else {
            $("#automaticLoginSwitch").val("on");
            Shared.settings.automaticLogin = true;
          }
        },
        initialize: function() {
          this.secondViewName = "";
        }
      });
      $__export('default', SettingsListView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("44", [], function() {
  return "<!-- <div id=\"modalEditFolder\" class=\"modal fade\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Fechar\"><span aria-hidden=\"true\">&times;</span></button>\n        <h4 class=\"modal-title\"><%=title%></h4>\n      </div>\n      <div class=\"modal-body\">\n        <p><form id=\"changePassword\">\n\t\t\t<ol>\n\t\t\t\t<li>\n\t\t\t\t\t<input type=\"text\" name=\"folderName\" id=\"folderName\" placeholder=\"Nome da Pasta\" value=\"<%=folderName%>\" />\n\t\t\t\t\t<input type=\"hidden\" name=\"folderID\" id=\"folderID\" value=\"<%=folderID%>\" />\n\t\t\t\t\t<input type=\"hidden\" name=\"parentFolderID\" id=\"parentFolderID\" value=\"<%=parentFolderID%>\" />\n\t\t\t\t\t<input type=\"hidden\" name=\"folderAction\" id=\"folderAction\" value=\"<%=folderAction%>\" />\n\t\t\t\t</li>\n\t\t\t</ol>\n\t\t</form></p>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Cancelar</button>\n        <button type=\"button\" class=\"btn btn-primary\">Salvar</button>\n      </div>\n    </div>\n  </div>\n</div> -->\n<div class=\"expresso-cards mdl-card mdl-cell mdl-cell--12-col mdl-cell--12-col-tablet mdl-grid\">\n\t<!-- <h2 class=\"font-big\"><%=title%></h2> -->\n\t<article id=\"wrapperDetail\" class=\"contentScroll\">\n\t\t<div id=\"scrollerDetail\">\n\t\t\t<form id=\"changePassword\">\n\t\t\t\t<ol>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<input type=\"text\" name=\"folderName\" id=\"folderName\" placeholder=\"Nome da Pasta\" value=\"<%=folderName%>\" />\n\t\t\t\t\t\t<input type=\"hidden\" name=\"folderID\" id=\"folderID\" value=\"<%=folderID%>\" />\n\t\t\t\t\t\t<input type=\"hidden\" name=\"parentFolderID\" id=\"parentFolderID\" value=\"<%=parentFolderID%>\" />\n\t\t\t\t\t\t<input type=\"hidden\" name=\"folderAction\" id=\"folderAction\" value=\"<%=folderAction%>\" />\n\t\t\t\t\t</li>\n\t\t\t\t</ol>\n\t\t\t</form>\n\t  \t</div>\n\t</article>\n</div>\n";
});

_removeDefine();
})();
$__System.register("45", ["5", "6", "7", "8", "44", "46"], function($__export) {
  "use strict";
  var __moduleName = "45";
  var $,
      _,
      Backbone,
      Shared,
      editFolderTemplate,
      FoldersCollection,
      EditFolderView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      editFolderTemplate = $__m.default;
    }, function($__m) {
      FoldersCollection = $__m.default;
    }],
    execute: function() {
      EditFolderView = Backbone.View.extend({
        action: "addFolder",
        folderID: "",
        folderName: "Nova Pasta",
        parentFolderID: "INBOX",
        render: function() {
          this.elementID = "#content";
          if (this.action == "renameFolder") {
            title = "Renomear Pasta";
            var foldersCol = new FoldersCollection();
            var that = this;
            foldersCol.getFolders(this.folderID, this.search).done(function(foldersData) {
              var currentFolder = foldersData.getFolderByID(that.folderID);
              that.folderName = currentFolder.get("folderName");
              that.renderView();
            }).fail(function(result) {
              Shared.handleErrors(result.error);
              $(that.elementID).empty();
              $(that.detailElementID).empty();
              return false;
            }).execute();
          } else {
            this.renderView();
          }
        },
        renderView: function() {
          var title = "";
          if (this.action == "addFolder") {
            title = "Adicionar Pasta";
          }
          if (this.action == "renameFolder") {
            title = "Renomear Pasta";
          }
          var newData = {
            _: _,
            Shared: Shared,
            title: title,
            folderName: this.folderName,
            folderID: this.folderID,
            parentFolderID: this.parentFolderID,
            folderAction: this.action
          };
          var htmlTemplate = _.template(editFolderTemplate);
          var compiledTemplate = htmlTemplate(newData);
          this.$el.html(compiledTemplate);
          $(this.elementID).empty().append(this.$el);
          var params = {};
          params.saveCallBack = this.saveFolder;
          params.parentCallBack = this;
          Shared.menuView.renderContextMenu('editFolder', params);
          Shared.deviceType(true);
        },
        cleanTrash: function(folderID) {
          var foldersCol = new FoldersCollection();
          foldersCol.cleanTrash().done(function(result) {
            var message = {
              type: "success",
              icon: 'icon-email',
              title: "Lixeira foi esvaziada com sucesso!",
              description: "",
              elementID: "#pageMessage"
            };
            Shared.showMessage(message);
            Shared.menuView.refreshFolders();
            Shared.router.navigate("/Mail/Messages/1/0/" + folderID + "#", {trigger: true});
          }).fail(function(result) {
            var message = {
              type: "error",
              icon: 'icon-email',
              title: "Não foi possível esvaziar a lixeira!",
              description: "",
              elementID: "#pageMessage"
            };
            Shared.showMessage(message);
            Shared.router.navigate("/Mail/Messages/1/0/" + folderID + "#", {trigger: true});
          }).execute();
        },
        saveFolder: function() {
          var folderAction = $("#folderAction").val();
          var folderName = $("#folderName").val();
          var folderID = $("#folderID").val();
          var parentFolderID = $("#parentFolderID").val();
          var foldersCol = new FoldersCollection();
          if (folderAction == "addFolder") {
            foldersCol.addFolder(folderName, parentFolderID).done(function(result) {
              var message = {
                type: "success",
                icon: 'icon-email',
                title: "Nova pasta adicionada com sucesso!",
                description: "",
                elementID: "#pageMessage"
              };
              Shared.showMessage(message);
              Shared.deviceType(Shared.isSmartPhoneResolution());
              Shared.menuView.refreshFolders();
              Shared.router.navigate("/Mail/Messages/1/0/" + result.folderID + "#", {trigger: true});
            }).fail(function(result) {
              var message = {
                type: "error",
                icon: 'icon-email',
                title: "Não foi possível adicionar esta pasta!",
                description: "",
                elementID: "#pageMessage"
              };
              if (result.error.code == "1011") {
                message.title = "Não foi possível adicionar uma pasta com esse nome!";
              }
              if (result.error.code == "1011") {
                message.title = "Não foi possível adicionar uma pasta com esse nome!";
              }
              Shared.showMessage(message);
            }).execute();
          }
          if (folderAction == "renameFolder") {
            foldersCol.renameFolder(folderName, folderID).done(function(result) {
              var message = {
                type: "success",
                icon: 'icon-email',
                title: "Pasta renomeada com sucesso!",
                description: "",
                elementID: "#pageMessage"
              };
              Shared.showMessage(message);
              Shared.deviceType(Shared.isSmartPhoneResolution());
              Shared.menuView.refreshFolders();
              Shared.router.navigate("/Mail/Messages/1/0/" + result.folderID + "#", {trigger: true});
            }).fail(function(result) {
              var message = {
                type: "error",
                icon: 'icon-email',
                title: "Não foi possível renomear esta pasta!",
                description: "",
                elementID: "#pageMessage"
              };
              if (result.error.code == "1011") {
                message.title = "Não foi possível adicionar uma pasta com esse nome!";
              }
              Shared.showMessage(message);
            }).execute();
          }
        },
        deleteFolder: function(folderID) {
          var foldersCol = new FoldersCollection();
          foldersCol.deleteFolder(folderID).done(function(result) {
            var message = {
              type: "success",
              icon: 'icon-email',
              title: "A pasta foi excluída com sucesso!",
              description: "",
              elementID: "#pageMessage"
            };
            Shared.showMessage(message);
            Shared.menuView.refreshFolders();
            Shared.router.navigate("/Mail/Messages/1/0/INBOX#", {trigger: true});
          }).fail(function(result) {
            var message = {
              type: "error",
              icon: 'icon-email',
              title: "Não foi possível excluir esta pasta!",
              description: "",
              elementID: "#pageMessage"
            };
            Shared.showMessage(message);
          }).execute();
        }
      });
      $__export('default', EditFolderView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("47", [], function() {
  return "<!--<h2 id=\"msgSubjectTitle\" class=\"font-big\"><% if (message.get(\"msgSubject\") != \"\") { %><%=message.get(\"msgSubject\")%><% } else { %>Nova Mensagem<% } %></h2>-->\n<div class=\"expresso-cards mdl-card\">\n<article id=\"wrapperDetail\" class=\"contentScroll\" style=\"width: 100%\">\n\t<div id=\"scrollerDetail\">\n\t\t<table id=\"messageDetails\"> \n\t        <tr id=\"msgToRow detailRow\">\n\t\t        <td class=\"item detailCol\">\n\t\t          Para:\n\t\t        </td>\n\t\t        <td class=\"descriptionCompose detailCol\">\n\t\t        \t<% if (Shared.userHasModule(\"catalog\")) { %>\n\t\t        \t\t<% if (Shared.apiVersion != \"1.0\") { %>\n\t\t        \t\t<div id=\"addMsgToField\" class='icon-add'></div>\n\t\t        \t\t<% } %>\n\t\t        \t<% } %>\n\t\t        \t<div id=\"msgToRecipients\">\n\t\t\t\t\t\t<% if (message.get(\"msgTo\")) {  %>\n\t\t                  \t<% _.each(message.get(\"msgTo\"), function(msgRecipient){ %>\n\t\t                  \t\t<div class=\"recipientmsgTo\" data-mail=\"<%=msgRecipient.mailAddress%>\">\n\t\t\t\t                    <span class=\"badge badge-write-message\">\n\t\t\t\t                    <% if ($.trim(msgRecipient.fullName) != '') { %> \n\t\t\t\t                      <%=$.trim(msgRecipient.fullName)%>\n\t\t\t\t                    <% } else { %>\n\t\t\t\t                      <%=msgRecipient.mailAddress%>\n\t\t\t\t                    <% } %>\n\t\t\t\t                    </span>\n\t\t\t\t                    <input type=\"text\" class=\"msgToInput hidden\" value='<%=message.getEmailStringForMessageRecipient(msgRecipient)%>'>\n\t\t\t                \t</div>\n\t\t                  \t<% }); %>\n\t\t                <% } %>\n\t            \t</div>\n\t                <input type=\"text\" id=\"msgToInput\" name=\"msgToInput\" class=\"inputMessage\" value=\"\">\n\t                <div class=\"clear\"></div>\n\t\t        </td>\n\t    \t</tr>\n\t\t    <tr id=\"msgCcRow\" class=\"detailRow <% if (message.get(\"msgCc\").length == 0) {  %>hidden<% } %>\">\n\t\t        <td class=\"item detailCol\">\n\t\t          Cc:\n\t\t        </td>\n\t\t        <td class=\"descriptionCompose detailCol\">\n\t\t        \t<% if (Shared.userHasModule(\"catalog\")) { %>\n\t\t        \t\t<% if (Shared.apiVersion != \"1.0\") { %>\n\t\t        \t\t\t<div id=\"addMsgCcField\" class='icon-add'></div>\n\t\t        \t\t<% } %>\n\t\t        \t<% } %>\n\t\t        \t<div id=\"msgCcRecipients\">\n\t\t\t\t\t\t<% if (message.get(\"msgCc\")) {  %>\n\t\t                  \t<% _.each(message.get(\"msgCc\"), function(msgRecipient){ %>\n\t\t                  \t\t<div class=\"recipientmsgCc\" data-mail=\"<%=msgRecipient.mailAddress%>\">\n\t\t\t\t                    <span class=\"badge badge-write-message\">\n\t\t\t\t                    <% if ($.trim(msgRecipient.fullName) != '') { %> \n\t\t\t\t                      <%=$.trim(msgRecipient.fullName)%>\n\t\t\t\t                    <% } else { %>\n\t\t\t\t                      <%=msgRecipient.mailAddress%>\n\t\t\t\t                    <% } %>\n\t\t\t\t                    </span>\n\t\t\t\t                    <input type=\"text\" class=\"msgCcInput hidden\" value='<%=message.getEmailStringForMessageRecipient(msgRecipient)%>'>\n\t\t\t                \t</div>\n\t\t                  \t<% }); %>\n\n\t\t                <% } %>\n\t            \t</div>\n\t                <input type=\"text\" id=\"msgCcInput\" name=\"msgCcInput\" class=\"inputMessage\">\n\t                <div class=\"clear\"></div>\n\t\t        </td>\n\t    \t</tr>\n\t    \t<tr id=\"msgBccRow\" <% if (message.get(\"msgBcc\").length == 0) {  %>class=\"hidden\"<% } %>>\n\t\t        <td class=\"item detailCol\">\n\t\t          Bcc:\n\t\t        </td>\n\t\t        <td class=\"descriptionCompose detailCol\">\n\t\t        \t<% if (Shared.userHasModule(\"catalog\")) { %>\n\t\t        \t\t<% if (Shared.apiVersion != \"1.0\") { %>\n\t\t        \t\t\t<div id=\"addMsgBccField\" class='icon-add'></div>\n\t\t        \t\t<% } %>\n\t\t        \t<% } %>\n\t\t        \t<div id=\"msgBccRecipients\">\n\t\t\t\t\t\t<% if (message.get(\"msgBcc\")) {  %>\n\t\t                  \t<% _.each(message.get(\"msgBcc\"), function(msgRecipient){ %>\n\t\t                  \t\t<div class=\"recipientmsgBcc\" data-mail=\"<%=msgRecipient.mailAddress%>\">\n\t\t\t\t                    <span class=\"badge badge-write-message\">\n\t\t\t\t                    <% if ($.trim(msgRecipient.fullName) != '') { %> \n\t\t\t\t                      <%=$.trim(msgRecipient.fullName)%>\n\t\t\t\t                    <% } else { %>\n\t\t\t\t                      <%=msgRecipient.mailAddress%>\n\t\t\t\t                    <% } %>\n\t\t\t\t                    </span>\n\t\t\t\t                    <input type=\"text\" class=\"msgBccInput hidden\" value='<%=message.getEmailStringForMessageRecipient(msgRecipient)%>'>\n\t\t\t                \t</div>\n\t\t                  \t<% }); %>\n\t\t                <% } %>\n\t            \t</div>\n\n\t                <input type=\"text\" id=\"msgBccInput\" name=\"msgBccInput\" class=\"inputMessage\">\n\t                <div class=\"clear\"></div>\n\t\t        </td>\n\t    \t</tr>\n\t    \t<tr id=\"msgSubjectRow\">\n\t\t        <td class=\"item detailCol\">\n\t\t          Assunto:\n\t\t        </td>\n\t\t        <td class=\"descriptionCompose detailCol\">\n\t\t        \t<input type=\"text\" id=\"msgSubjectInput\" name=\"msgSubject\" class=\"inputMessage\" value=\"<%=message.get(\"msgSubject\")%>\" autocorrect=\"off\" autocapitalize=\"off\" style=\"width: 70%;\">\n\t\t        </td>\n\t    \t</tr>\n\t    \t<tr id=\"msgAttachmentsRow\" class=\"hidden detailRow\">\n\t\t        <td class=\"item detailCol\">\n\t\t          Anexos:\n\t\t          <input type=\"file\" id=\"attachment_input\" name=\"attachment_input_temp\" class=\"hidden\">\n\t\t        </td>\n\t\t        <td class=\"descriptionCompose detailCol\">\n\t\t        \t\n\t\t        \t<div id=\"msgAttachmentsRecipients\">\n\t\t        \t\t\n\t\t        \t\t<% if (isDesktop) { %>\n\t\t        \t\t<div class=\"clear\"></div>\n\t\t        \t\t<div id=\"add_attachment\" class=\"icon-add-attachment\"></div>\n\t\t\t\t\t\t<div id=\"drop_zone_text\">\n\t\t\t\t\t\t\tArraste e solte os arquivos aqui...\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<% } %>\n\t\t\t\t\t\t\n\t            \t</div>\n\t\t        </td>\n\t    \t</tr>\n\n\t    \t\n\t    \t<tr id=\"msgBodyRow detailRow\">\n\t    \t\t<td class=\"itemBody detailCol\" colspan=\"2\">\n\t    \t\t\t<div id=\"msgBodyInput\" class=\"messageBodyInput\" style=\"width: 100%;\" contenteditable=\"true\"><%=message.getMessageBody(withSignature,msgType,msgOriginal)%></div>\n\t    \t\t</td>\n\t    \t</tr>\n\t    </table>\n\t</div>\n</article>\n</div>";
});

_removeDefine();
})();
$__System.register("33", ["6", "7", "8", "27"], function($__export) {
  "use strict";
  var __moduleName = "33";
  var _,
      Backbone,
      Shared,
      ContactModel,
      ContactsListCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      ContactModel = $__m.default;
    }],
    execute: function() {
      ContactsListCollection = Backbone.Collection.extend({
        model: ContactModel,
        _data: {},
        _functions: {},
        done: function(value) {
          this._functions.done = value;
          return this;
        },
        fail: function(value) {
          this._functions.fail = value;
          return this;
        },
        initialize: function(models, options) {
          this.api = Shared.api;
          this.model = ContactModel;
          this._functions = {};
        },
        getContactByID: function(contactID) {
          var retVal = false;
          for (var i in this.models) {
            if (this.models[i].get('contactID') == contactID) {
              retVal = this.models[i];
            }
          }
          return retVal;
        },
        getContacts: function(pSearch, pContactType, ignoreCache) {
          var that = this;
          that._data = {};
          var thatModel = ContactModel;
          var data = this._data;
          Shared.api.resource('Catalog/Contacts').params({
            search: pSearch,
            contactType: pContactType
          });
          if (ignoreCache) {
            console.log("ignoreCache");
            Shared.api.ignoreCache(ignoreCache);
          }
          Shared.api.done(function(result) {
            for (var i in result.contacts) {
              var thisModel = new thatModel(result.contacts[i]);
              that.add(thisModel);
            }
            if (that._functions.done)
              that._functions.done(that);
          }).fail(function(error) {
            if (that._functions.fail)
              that._functions.fail(error);
          }).execute();
          return that;
        },
        getContactImagePicture: function(pContactID, callback) {
          this.api.resource('Catalog/ContactPicture').params({
            contactID: this.pContactID,
            contactType: '2'
          }).done(function(result) {
            callback(_.first(result.contacts).contactImagePicture);
          }).fail(function(error) {
            callback("");
          }).execute();
        },
        execute: function() {
          return this.api.execute();
        }
      });
      $__export('default', ContactsListCollection);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("48", [], function() {
  return "<% if (typeof(contacts) != 'undefined' && contacts.length > 0) { %>\n\n\t<dl id=\"participantsList\">\n\n\t\t<% var summaryLetter = _.first(contacts).get('contactFirstName').charAt(0).toUpperCase(); %>\n\n\t\t<dt><%=summaryLetter%></dt>\n\t\t<dd>\n\t\t\t<ul>\n\t\t\t\t<% _.each(contacts, function(c) { %>\n\n\t\t\t\t\t<% if (!_.isEqual(summaryLetter, c.get('contactFirstName').charAt(0).toUpperCase())) { %>\n\t\t\t\t\t\n\t\t\t\t\t\t<% summaryLetter = c.get('contactFirstName').charAt(0).toUpperCase(); %>\n\t\t\t\t\t\t\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</dd>\n\t\t\t\t\t\t\t<dt><%=summaryLetter%></dt>\n\t\t\t\t\t\t\t<dd>\n\t\t\t\t\t\t\t\t<ul>\n\n\t\t\t\t\t<% } %>\n\n\t\t\t\t\t<%\n\t\t\t\t\t\tvar checked = _.contains(listParticipants, c.get('contactUIDNumber')) ? \"checked='checked'\" : '';\n\t\t\t\t\t\tvar selected = _.contains(listParticipants, c.get('contactUIDNumber')) ? \" class='selected'\" : '';\n\t\t\t\t\t%>\n\n\t\t\t\t\t<li<%= checked %>>\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<input type=\"checkbox\" class=\"check css-checkbox\" <%= checked %> name=\"<%= c.get('contactUIDNumber') %>\" id=\"<%= c.get('contactUIDNumber') %>\" data-name=\"<%=c.get('contactFullName')%>\" data-mail=\"<%=c.get('contactMails')[0]%>\" value=\"<%= c.get('contactUIDNumber') %>\" />\n\t\t\t\t\t\t<label class=\"css-label\" for=\"<%= c.get('contactUIDNumber') %>\"><%=c.get('contactFullName')%><br><%=c.get('contactMails')[0]%></label>\n\t\t\t\t\t</li>\t\t\t\t\t\n\n\t\t\t\t<% }); %>\n\n\t\t\t</ul>\n\t\t</dd>\n\t</dl>\n\n<% } else { %>\n\n\t<% if (!_.isObject(error)) { %>\n\n\t\t<p class=\"erro\">Nenhum registro encontrado</p>\n\t\t\n\t<% } %>\n\n<% } %>";
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("18", [], function() {
  return "<!--<h2 id=\"contentTitle\" class=\"font-big icon-mainmenu\"  style=\"padding-left: 50px; background-position: 10px;\"></h2>\n\n<div class=\"searchArea\">\n\t<input type=\"text\" class=\"searchField\" value=\"\" placeholder=\"Procurar Por:\" />\n</div>\n-->\n<div id=\"message\"></div>\n\n<div id=\"wrapper\" class=\"contentScroll\">\n\t<div id=\"scroller\"></div>\n</div>";
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("17", [], function() {
  return "<!-- <h2 id=\"contentDetailTitle\"></h2> -->\n\n<!-- <div class=\"searchArea\">\n\t<input type=\"text\" class=\"searchField\" value=\"\" placeholder=\"Procurar Por:\" />\n</div>\n -->\n<div id=\"messageDetail\"></div>\n\n<div id=\"wrapperDetail\" class=\"contentScroll\">\n\t<div id=\"scrollerDetail\"></div>\n</div>";
});

_removeDefine();
})();
$__System.register("28", ["6", "7", "8", "27"], function($__export) {
  "use strict";
  var __moduleName = "28";
  var _,
      Backbone,
      Shared,
      ContactModel,
      DetailsContactCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      ContactModel = $__m.default;
    }],
    execute: function() {
      DetailsContactCollection = Backbone.Collection.extend({
        model: ContactModel,
        _data: {},
        _functions: {},
        done: function(value) {
          this._functions.done = value;
          return this;
        },
        fail: function(value) {
          this._functions.fail = value;
          return this;
        },
        initialize: function(models, options) {
          this.api = Shared.api;
          this.model = ContactModel;
          this._functions = {};
        },
        getPersonalContactDetails: function(pContactID) {
          var that = this;
          that._data = {};
          var thatModel = ContactModel;
          var data = this._data;
          this.api.resource('Catalog/Contacts').params({
            contactID: pContactID,
            contactType: '1'
          }).done(function(result) {
            for (var i in result.contacts) {
              var thisContact = new thatModel(result.contacts[i]);
              that.add(thisContact);
            }
            if (that._functions.done)
              that._functions.done(that);
          }).fail(function(error) {
            if (that._functions.fail)
              that._functions.fail(error);
          }).execute();
          return that;
        },
        getGeneralContactDetails: function(pContactID) {
          var that = this;
          that._data = {};
          var thatModel = ContactModel;
          var data = this._data;
          this.api.resource('Catalog/Contacts').params({
            search: '',
            contactID: pContactID,
            contactType: '2'
          }).done(function(result) {
            for (var i in result.contacts) {
              var thisContact = new thatModel(result.contacts[i]);
              that.add(thisContact);
            }
            if (that._functions.done)
              that._functions.done(that);
          }).fail(function(error) {
            if (that._functions.fail)
              that._functions.fail(error);
          }).execute();
          return that;
        },
        execute: function() {
          return this.api.execute();
        }
      });
      $__export('default', DetailsContactCollection);
    }
  };
});

$__System.register("27", ["6", "7", "8"], function($__export) {
  "use strict";
  var __moduleName = "27";
  var _,
      Backbone,
      Shared,
      ContactModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }],
    execute: function() {
      ContactModel = Backbone.Model.extend({
        defaults: {
          contactID: '',
          contactMails: [],
          contactPhones: [],
          contactAlias: "",
          contactFirstName: "",
          contactLastName: "",
          contactFullName: "",
          contactBirthDate: "",
          contactNotes: "",
          contactHasImagePicture: 0,
          contactImagePicture: ""
        },
        initialize: function() {
          this.api = Shared.api;
          this.readResource = '/Catalog/Contacts';
          this.updateResource = '';
          this.createResource = '';
          this.deleteResource = '';
        },
        getSearchString: function() {
          var retVal = this.get('contactFirstName') + " " + this.get('contactLastName') + " &lt;" + this.getFirstEmailAddress() + "&gt;";
          return retVal;
        },
        getEmailString: function() {
          var retVal = "\"" + this.get('contactFirstName') + " " + this.get('contactLastName') + "\"" + " <" + this.getFirstEmailAddress() + "> ,";
          return retVal;
        },
        route: function() {
          return '/Contacts';
        },
        execute: function() {
          return this.api.execute();
        },
        done: function(value) {
          this.done = value;
          return this;
        },
        fail: function(value) {
          this.fail = value;
          return this;
        },
        getPersonalContact: function(pContactID) {
          var that = this;
          this.api.resource('Catalog/Contacts').params({
            contactID: pContactID,
            contactType: '1'
          }).done(function(result) {
            var thisModel = new ContactModel(result.contacts[0]);
            that.set(thisModel);
            if (that.done)
              that.done(thisModel);
          }).fail(function(error) {
            if (that.fail)
              that.fail(error);
          }).execute();
          return that;
        },
        getFirstEmailAddress: function() {
          return this.get('contactMails')[0];
        },
        addContact: function(params) {
          var that = this;
          this.api.resource('Catalog/ContactAdd').params(params).done(function(result) {
            if (that.done)
              that.done(result);
          }).fail(function(error) {
            if (that.fail)
              that.fail(error);
          }).execute();
          return that;
        },
        deleteContact: function(params) {
          var that = this;
          this.api.resource('Catalog/ContactDelete').params(params).done(function(result) {
            if (that.done)
              that.done(result);
          }).fail(function(error) {
            if (that.fail)
              that.fail(error);
          }).execute();
          return that;
        }
      });
      $__export('default', ContactModel);
    }
  };
});

$__System.register("11", ["6", "7", "8", "27", "28"], function($__export) {
  "use strict";
  var __moduleName = "11";
  var _,
      Backbone,
      Shared,
      ContactModel,
      DetailsContactCollection,
      EventModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      ContactModel = $__m.default;
    }, function($__m) {
      DetailsContactCollection = $__m.default;
    }],
    execute: function() {
      EventModel = Backbone.Model.extend({
        defaults: {
          eventID: '',
          eventDate: '',
          eventName: '',
          eventDescription: '',
          eventLocation: '',
          eventParticipants: [],
          eventParticipantsLdap: [],
          eventStartDate: '',
          eventEndDate: '',
          eventAllDay: "0",
          eventExParticipants: '',
          eventCategoryID: '',
          eventDateEnd: '',
          eventDateStart: '',
          eventDescription: '',
          eventOwner: '',
          eventOwnerIsParticipant: '',
          eventPriority: '',
          eventTimeEnd: '',
          eventTimeStart: '',
          eventType: ''
        },
        initialize: function() {
          this.api = Shared.api;
          this.readResource = '/Calendar/Events';
          this.updateResource = '';
          this.createResource = '';
          this.deleteResource = '';
        },
        route: function() {
          return '/Calendar';
        },
        done: function(value) {
          this.done = value;
          return this;
        },
        fail: function(value) {
          this.fail = value;
          return this;
        },
        getEvent: function(pEventID) {
          var that = this;
          this.api.resource('Calendar/Event').params({eventID: pEventID}).done(function(result) {
            that.set(result.events[0]);
            that.getEventOwner();
          }).fail(function(error) {
            if (that.fail)
              that.fail(error);
          }).execute();
          return that;
        },
        getPriority: function() {
          var priority = ['-', 'Baixa', 'Normal', 'Alta'];
          return priority[this.get('eventPriority')];
        },
        getEventParticipants: function(callback) {
          var listParticipants = this.get('eventParticipants');
          var listUidNumbers = [];
          var that = this;
          for (var i in listParticipants)
            listUidNumbers.push(parseInt(listParticipants[i].contactUIDNumber));
          var pContactID = JSON.stringify(listUidNumbers);
          var detailsContactCollection = new DetailsContactCollection();
          detailsContactCollection.done(function(data) {
            that.set({eventParticipantsLdap: data.models});
            if (that.done)
              that.done(that);
          }).fail(function(error) {
            if (that.fail)
              that.fail(error);
          }).getGeneralContactDetails(pContactID);
        },
        getEventOwner: function(callback) {
          var that = this;
          var detailsContactCollection = new DetailsContactCollection();
          detailsContactCollection.done(function(data) {
            that.set({eventOwner: data.models[0]});
            that.getEventParticipants();
          }).fail(function(error) {
            if (that.fail)
              that.fail(error);
          }).getGeneralContactDetails(this.get('eventOwner'));
        },
        saveEvent: function(params) {
          var that = this;
          this.api.ignoreCache(true);
          this.api.resource('Calendar/AddEvent').params(params).done(function(result) {
            var thisModel = new EventModel(result.events[0]);
            if (that.done)
              that.done(thisModel);
          }).fail(function(error) {
            if (that.fail)
              that.fail(error);
          }).execute();
          return that;
        },
        deleteEvent: function(pEventID) {
          var that = this;
          this.api.ignoreCache(true);
          this.api.resource('Calendar/DelEvent').params({eventID: pEventID}).done(function(result) {
            if (that.done)
              that.done(result);
          }).fail(function(error) {
            if (that.fail)
              that.fail(error);
          }).execute();
          return that;
        },
        execute: function() {
          return this.api.execute();
        }
      });
      $__export('default', EventModel);
    }
  };
});

$__System.register("16", ["5", "6", "7", "8", "11", "a", "17", "18", "48", "33"], function($__export) {
  "use strict";
  var __moduleName = "16";
  var $,
      _,
      Backbone,
      Shared,
      EventModel,
      LoadingView,
      detailContentTemplate,
      primaryContentTemplate,
      calendarEditEventAddParticipantsTemplate,
      ContactsListCollection,
      CalendarEditEventAddParticipantsView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      EventModel = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      detailContentTemplate = $__m.default;
    }, function($__m) {
      primaryContentTemplate = $__m.default;
    }, function($__m) {
      calendarEditEventAddParticipantsTemplate = $__m.default;
    }, function($__m) {
      ContactsListCollection = $__m.default;
    }],
    execute: function() {
      CalendarEditEventAddParticipantsView = Backbone.View.extend({
        model: EventModel,
        listParticipants: [],
        senderName: 'calendar',
        events: {
          "keypress .searchField": "searchGeneralContacts",
          "click .css-checkbox": "addParticipant"
        },
        render: function() {
          this.listGeneralContacts('');
        },
        listGeneralContacts: function(pSearch) {
          var self = this;
          var contentTitle;
          var container;
          var messageContainer;
          if (!Shared.isSmartPhoneResolution()) {
            this.$el.html(_.template(detailContentTemplate));
            $('#contentDetail').empty().append(this.$el);
            contentTitle = $('#contentDetailTitle');
            container = $('#scrollerDetail');
            messageContainer = '#messageDetail';
          } else {
            this.$el.html(_.template(primaryContentTemplate));
            $('#content').empty().append(this.$el);
            contentTitle = $('#contentTitle');
            container = $('#scroller');
            messageContainer = '#message';
          }
          var loadingView = new LoadingView({el: container});
          loadingView.render();
          contentTitle.text('Adicionar participantes');
          var callback = function(data) {
            if (data.error == undefined) {
              var htmlTemplate = _.template(calendarEditEventAddParticipantsTemplate);
              var htmlWithData = htmlTemplate(data);
              container.empty().append(htmlWithData);
            } else {
              if (data.error.code == "1001") {
                Shared.showMessage({
                  type: "chat-message",
                  icon: 'icon-contacts',
                  title: "Sua busca deve ser específica.",
                  route: "",
                  description: "Procure pelo nome e sobrenome.<br>Nenhum resultado será exibido caso a sua busca retorne mais do que 200 contatos.",
                  timeout: 0,
                  animate: false,
                  elementID: messageContainer
                });
              }
              if (data.error.code == "1019") {
                Shared.showMessage({
                  type: "error",
                  icon: 'icon-contacts',
                  title: "Nenhum Resultado Encontrado.",
                  route: "",
                  description: "Procure pelo nome e sobrenome.<br>Nenhum resultado será exibido caso a sua busca retorne mais do que 200 contatos.",
                  timeout: 0,
                  animate: false,
                  elementID: messageContainer
                });
              }
              container.empty();
            }
            self.setElement(self.$el);
            self.loaded();
          };
          this.listContacts(pSearch, '2', callback, callback);
        },
        listContacts: function(pSearch, ptype, callbackSuccess, callbackFail) {
          var self = this;
          var contactsData = new ContactsListCollection();
          contactsData.done(function(data) {
            callbackSuccess({
              contacts: data.models,
              search: pSearch,
              listParticipants: self.model.get('eventParticipants'),
              _: _
            });
          }).fail(function(data) {
            callbackFail({
              error: data.error,
              _: _
            });
          }).getContacts(pSearch, ptype);
        },
        searchGeneralContacts: function(e) {
          if (e.keyCode == 13) {
            var search = $('.searchField').val();
            var pSearch = '';
            if (search.length >= 3)
              pSearch = search;
            else
              pSearch = '';
            if (pSearch.length >= 3 || this.searchLength >= 3) {
              this.listGeneralContacts(pSearch);
            }
            this.searchLength = search.length;
          }
        },
        loaded: function() {
          var top = $('.topHeader').outerHeight(true);
          var search = $('.searchArea').outerHeight(true) == null ? 0 : $('.searchArea').outerHeight(true);
          if (!Shared.isSmartPhoneResolution()) {
            $('#wrapperDetail').css('top', top + search);
          } else {
            $('#wrapper').css('top', top + search);
          }
          Shared.scrollerRefresh();
          var params = {};
          params.saveCallBack = this.backToEditEvent;
          params.parentCallBack = this;
          Shared.menuView.renderContextMenu('calendarAddEventParticipant', params);
        },
        initialize: function(options) {
          this.listParticipants = options.listParticipants;
          this.model = options.model;
          this.view = options.view;
        },
        backToEditEvent: function(obj) {
          if (obj.target) {
            obj.preventDefault();
            obj = this;
          }
          if (obj.senderName == 'compose') {
            obj.view.addContactToField({
              model: obj.model,
              listParticipants: obj.listParticipants
            });
          } else {
            obj.view.render({
              model: obj.model,
              listParticipants: obj.listParticipants
            });
          }
        },
        addParticipant: function(e) {
          var listParticipantsID = this.model.get('eventParticipants');
          var listParticipants = this.listParticipants;
          var id = $(e.target).val();
          var name = $(e.target).attr('data-name');
          var mail = $(e.target).attr('data-mail');
          var index = _.isEmpty(listParticipantsID) ? -1 : _.indexOf(listParticipantsID, id);
          var indexNames = index;
          _.each(listParticipants, function(participant, i) {
            if (participant.participantID == id && participant.participantName == name)
              indexNames = i;
          });
          if ($(e.target).is(':checked')) {
            if (index == -1) {
              listParticipantsID.push(id);
              listParticipants.push({
                participantID: id,
                participantName: name,
                participantMail: mail
              });
            }
          } else {
            if (index != -1) {
              listParticipantsID.splice(index, 1);
              listParticipants.splice(indexNames, 1);
            }
          }
          this.model.set({eventParticipants: listParticipantsID});
          this.listParticipants = listParticipants;
        }
      });
      $__export('default', CalendarEditEventAddParticipantsView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("49", ["5", "7"], function($, Backbone) {
  (function($) {
    var defaults = {
      collection: null,
      attr: null,
      noCase: false,
      scrollable_ancestor_em: null,
      onselect: null,
      ul_class: 'autocomplete',
      ul_css: null,
      li_class: null,
      li_css: null,
      width: null,
      max_results: null,
      attrID: 'contactID'
    };
    var methods = {
      init: function(options) {
        options || (options = {});
        return this.each(function() {
          var $this = $(this);
          if ($this.data('autocomplete'))
            methods.destroy.apply($this);
          var oldAutocomplete = $this.attr('autocomplete');
          $this.attr('autocomplete', 'off');
          var list_em = $('<ul>').addClass(options.ul_class || defaults.ul_class).hide().insertBefore($this);
          $this.bind('focus.autocomplete', function(e) {
            $this.bind('blur.autocomplete', function(e) {
              $this.unbind('blur.autocomplete');
              $this.unbind('keydown.autocomplete');
              $this.unbind('keyup.autocomplete');
              list_em.hide();
              return true;
            });
            $this.bind('keydown.autocomplete', function(e) {
              return methods._inputKeydown.apply($this, [e]);
            });
            $this.bind('keyup.autocomplete', function(e) {
              return methods._inputKeyup.apply($this, [e]);
            });
          });
          $this.data('autocomplete', {
            target: $this,
            oldAutocomplete: oldAutocomplete,
            oldValue: null,
            list_em: list_em,
            options: $.extend({}, defaults, options)
          });
        });
      },
      destroy: function() {
        return this.each(function() {
          var $this = $(this),
              data = $this.data('autocomplete');
          data.list_em.remove();
          $this.attr('autocomplete', data.oldAutocomplete);
          $this.removeData('autocomplete');
        });
      },
      show: function() {
        var $this = this;
        var data = $this.data('autocomplete');
        var options = data.options;
        var collection = options.collection;
        var attr = options.attr;
        var list_em = data.list_em;
        var str = $.trim($this.val());
        var str_lower = str.toLowerCase();
        var result = [];
        collection.each(function(model) {
          var v = model.getSearchString();
          var v2 = model.getFirstEmailAddress();
          if ((v.indexOf(str) == 0 || (options.noCase && v.toLowerCase().indexOf(str_lower) == 0)) || (v2.indexOf(str) == 0 || (options.noCase && v2.toLowerCase().indexOf(str_lower) == 0)))
            result.push(model);
        });
        if (result.length == 0) {
          list_em.hide();
          return this;
        }
        ;
        if (options.max_results && !isNaN(options.max_results)) {
          result = result.slice(0, options.max_results);
        }
        list_em.empty();
        if (!list_em.is(':visible')) {
          var pos = $this.position();
          var delta = 0;
          var scroll_em = $(options.scrollable_ancestor_em);
          if (scroll_em.length)
            delta = scroll_em.scrollTop();
          var x = pos.left;
          var y = pos.top + delta + $this.outerHeight(true);
          list_em.css({
            'left': '10px',
            'top': y
          });
          if (options.ul_css)
            list_em.css(options.ul_css);
          if (options.width) {
            list_em.width(options.width);
          } else {
            list_em.width($this.outerWidth(true) + 5);
          }
          list_em.show();
        }
        for (var i = 0; i < result.length; i++) {
          var model = result[i];
          var found = model.getSearchString();
          var html = '<span class="emailInfo">&lt;' + model.getFirstEmailAddress() + '&gt;</span>' + model.get("contactFirstName") + " " + model.get("contactLastName");
          var li_em = $("<li>" + html + "</li>");
          li_em.mouseover(function() {
            $(this).addClass('selected').siblings('.selected').removeClass('selected');
          });
          li_em.mouseleave(function() {
            $(this).removeClass('selected');
          });
          li_em.mousedown(function() {
            var model_id = $(this).attr('model_id');
            model = collection.getContactByID(model_id);
            if (options.onselect) {
              options.onselect(model);
            } else {
              $this.val(model.getFirstEmailAddress());
            }
            $this.blur();
            return false;
          });
          li_em.addClass(options.li_class).attr('model_id', model.get(defaults.attrID));
          if (options.li_class)
            li_em.addClass(li_class);
          if (options.li_css)
            li_em.css(options.li_css);
          list_em.append(li_em);
        }
        return this;
      },
      _inputKeydown: function(e) {
        var $this = this;
        var data = $this.data('autocomplete');
        var options = data.options;
        var collection = options.collection;
        var list_em = data.list_em;
        if (e.keyCode == 27) {
          e.preventDefault();
          $this.blur();
          return false;
        }
        if (e.keyCode == 13 || e.keyCode == 9) {
          var em = list_em.children('li.selected');
          if (em.length == 0) {
            list_em.children('li:first').addClass('selected');
            em = list_em.children('li.selected');
          }
          if (em.length) {
            var model_id = em.attr('model_id');
            model = collection.getContactByID(model_id);
            if (options.onselect) {
              options.onselect(model);
              list_em.empty();
            } else {
              this.val(model.getFirstEmailAddress());
              list_em.empty();
            }
          }
          list_em.hide();
          return true;
        }
        if (e.keyCode == 40) {
          e.preventDefault();
          var em = list_em.children('li.selected');
          if (em.length == 0) {
            list_em.children('li:first').addClass('selected');
          } else {
            if (em == list_em.children('li:last')) {
              em.removeClass('selected');
            } else {
              em.removeClass('selected').next('li').addClass('selected');
            }
          }
          return false;
        }
        if (e.keyCode == 38) {
          e.preventDefault();
          var em = list_em.children('li.selected');
          if (em.length == 0) {
            list_em.children('li:last').addClass('selected');
          } else {
            if (em == list_em.children('li:first')) {
              em.removeClass('selected');
            } else {
              em.removeClass('selected').prev('li').addClass('selected');
            }
          }
          return false;
        }
        return true;
      },
      _inputKeyup: function(e) {
        if (e.keyCode == 27 || e.keyCode == 13 || e.keyCode == 9)
          return true;
        var $this = this;
        var data = $this.data('autocomplete');
        var list_em = data.list_em;
        if (data.oldValue == $this.val())
          return true;
        data.oldValue = $this.val();
        if ($this.val().length == 0) {
          list_em.hide();
        } else {
          methods.show.apply($this);
        }
        var em = list_em.children('li.selected');
        if (em.length == 0) {
          list_em.children('li:first').addClass('selected');
        }
        return false;
      }
    };
    $.fn.autocomplete = function(method) {
      if (methods[method]) {
        return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
      } else if (typeof method === 'object' || !method) {
        return methods.init.apply(this, arguments);
      } else {
        $.error('Method ' + method + ' does not exist on jQuery.autocomplete');
      }
    };
  })(jQuery);
});

_removeDefine();
})();
$__System.register("4a", ["5", "6", "7", "8", "49", "16", "47", "4b", "4c", "29", "4d", "a", "33"], function($__export) {
  "use strict";
  var __moduleName = "4a";
  var $,
      _,
      Backbone,
      Shared,
      AutoComplete,
      CalendarEditEventAddParticipantsView,
      composeMessageTemplate,
      MessagesModel,
      MessagesCollection,
      ContextMenuCollection,
      PreviewAttachmentMessageView,
      LoadingView,
      ContactsListCollection,
      ComposeMessageView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      AutoComplete = $__m.default;
    }, function($__m) {
      CalendarEditEventAddParticipantsView = $__m.default;
    }, function($__m) {
      composeMessageTemplate = $__m.default;
    }, function($__m) {
      MessagesModel = $__m.default;
    }, function($__m) {
      MessagesCollection = $__m.default;
    }, function($__m) {
      ContextMenuCollection = $__m.default;
    }, function($__m) {
      PreviewAttachmentMessageView = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      ContactsListCollection = $__m.default;
    }],
    execute: function() {
      ComposeMessageView = Backbone.View.extend({
        secondViewName: '',
        emailTo: '',
        msgID: '',
        folderID: '',
        currentMessage: '',
        addContactToField: function(params) {
          for (var i = 0,
              f = void 0; participant = params.listParticipants[i]; i++) {
            params.model.addRecipient(params.model.get("currentField"), participant.participantMail, participant.participantName);
          }
          this.renderComposeMessage(params.model, false);
        },
        renderComposeMessage: function(pMessage, signature, pMsgType, pMsgOriginal) {
          var elementID = "#contentDetail";
          if (Shared.isSmartPhoneResolution()) {
            elementID = "#content";
          }
          var withSignature = true;
          if (signature == false) {
            withSignature = false;
          }
          var newData = {
            _: _,
            message: pMessage,
            isDesktop: Shared.isDesktop(),
            withSignature: withSignature,
            msgType: pMsgType,
            msgOriginal: pMsgOriginal,
            Shared: Shared
          };
          var htmlTemplate = _.template(composeMessageTemplate);
          var compiledTemplate = htmlTemplate(newData);
          this.$el.html("");
          this.$el.html(compiledTemplate);
          var withDialog = false;
          if (withDialog) {} else {
            $(elementID).empty().append(this.$el);
          }
          if (Shared.isDesktop()) {
            var that = this;
            var handleDragOverDropZone = function(evt) {
              evt.stopPropagation();
              evt.preventDefault();
              evt.dataTransfer.dropEffect = 'copy';
            };
            var handleFileSelectInDropZone = function(evt) {
              evt.stopPropagation();
              evt.preventDefault();
              var files = evt.dataTransfer.files;
              var fileID = Shared.currentDraftMessage.getQtdFiles();
              for (var i = 0,
                  f = void 0; f = files[i]; i++) {
                that.prependAttachmentImage(fileID, f.name, f.size, 'binary', files[i]);
                Shared.currentDraftMessage.addBinaryFile(fileID, escape(f.name), files[i]);
                fileID = fileID + 1;
              }
              that.updateBody();
            };
            var dropZone = document.getElementById('msgAttachmentsRecipients');
            $(dropZone).addClass("drop_zone");
            $("#msgAttachmentsRow").removeClass("hidden");
            dropZone.addEventListener('dragover', handleDragOverDropZone, false);
            dropZone.addEventListener('drop', handleFileSelectInDropZone, false);
            this.setupAutoComplete();
          }
          this.renderContextMenu();
          this.loaded();
        },
        renderAttachments: function(message) {
          this.showAttachments();
          Shared.currentDraftMessage.clearFiles();
          if (message != undefined) {
            var attachments = message.get("msgAttachments");
            for (var i in attachments) {
              var attachment = attachments[i];
              var preview = new PreviewAttachmentMessageView();
              preview.fileID = attachment.attachmentID;
              preview.fileName = attachment.attachmentName;
              preview.fileSize = attachment.attachmentSize;
              preview.fileEncoding = attachment.attachmentEncoding;
              preview.fileIndex = attachment.attachmentIndex;
              preview.msgID = message.get("msgID");
              preview.folderID = message.get("folderID");
              preview.fileData = '';
              preview.previewType = 'compose';
              var OnDownloadFile = function(fileID, fileData, fileName, fileType) {
                Shared.currentDraftMessage.addFile(fileID, fileData, fileName, fileType);
              };
              preview.forceDownloadFile = OnDownloadFile;
              preview.render();
            }
          }
        },
        setupAutoComplete: function() {
          if (Shared.userHasModule("catalog")) {
            var that = this;
            var contactsData = new ContactsListCollection();
            contactsData.done(function(data) {
              var ThatClass = that;
              var onSelectMsgToFunction = function(model) {
                var prefix = "msgTo";
                $("#" + prefix + "Input").val("");
                ThatClass.prependEmailRecipientBadgeToDiv(prefix, "#" + prefix + "Recipients", model.getEmailString(), model.get('contactFirstName') + " " + model.get('contactLastName'));
              };
              var onSelectMsgCcFunction = function(model) {
                var prefix = "msgCc";
                $("#" + prefix + "Input").val("");
                ThatClass.prependEmailRecipientBadgeToDiv(prefix, "#" + prefix + "Recipients", model.getEmailString(), model.get('contactFirstName') + " " + model.get('contactLastName'));
              };
              var onSelectMsgBccFunction = function(model) {
                var prefix = "msgBcc";
                $("#" + prefix + "Input").val("");
                ThatClass.prependEmailRecipientBadgeToDiv(prefix, "#" + prefix + "Recipients", model.getEmailString(), model.get('contactFirstName') + " " + model.get('contactLastName'));
              };
              $('#msgToInput').autocomplete({
                collection: data,
                attr: 'contactSearchString',
                attrID: 'contactID',
                noCase: true,
                width: '95%',
                onselect: onSelectMsgToFunction,
                ul_class: 'autocomplete shadow',
                ul_css: {'z-index': 1234},
                max_results: 10
              });
              $('#msgCcInput').autocomplete({
                collection: data,
                attr: 'contactSearchString',
                attrID: 'contactID',
                noCase: true,
                width: '95%',
                onselect: onSelectMsgCcFunction,
                ul_class: 'autocomplete shadow',
                ul_css: {'z-index': 1234},
                max_results: 10
              });
              $('#msgBccInput').autocomplete({
                collection: data,
                attr: 'contactSearchString',
                attrID: 'contactID',
                noCase: true,
                width: '95%',
                onselect: onSelectMsgBccFunction,
                ul_class: 'autocomplete shadow',
                ul_css: {'z-index': 1234},
                max_results: 10
              });
            }).fail(function(data) {}).getContacts('', '1');
          }
        },
        getContextMenuParams: function() {
          var params = {};
          params.sendCallBack = this.sendMessage;
          params.addCcBccCallBack = this.addCcBcc;
          params.removeCcBccCallBack = this.removeCcBcc;
          params.takePictureCallBack = this.takePicture;
          params.selectAttachmentFileCallBack = this.selectAttachmentFile;
          params.selectPictureCallBack = this.selectPicture;
          params.parentCallBack = this;
          return params;
        },
        renderContextMenu: function() {
          var params = this.getContextMenuParams();
          if ($("#msgCcRow").hasClass("hidden")) {
            Shared.menuView.renderContextMenu('newMessage', params);
          } else {
            Shared.menuView.renderContextMenu('newMessageWithCc', params);
          }
        },
        sendMessage: function(thisView) {
          var that = thisView;
          var elementID = "#contentDetail";
          if (Shared.isSmartPhoneResolution()) {
            elementID = "#content";
          }
          var onSendMessage = function(result) {
            var res = JSON.parse(result);
            if (res.error == undefined) {
              var message = {
                type: "success",
                icon: 'icon-email',
                title: "Mensagem enviada com sucesso!",
                description: "",
                elementID: "#pageMessage"
              };
            } else {
              var message = {
                type: "error",
                icon: 'icon-email',
                title: "Sua Mensagem não pode ser enviada!",
                description: "",
                elementID: "#pageMessage"
              };
            }
            Shared.showMessage(message);
            Shared.router.navigate("/Mail/Messages/1/0/INBOX", {trigger: true});
          };
          var onFailSendMessage = function(error) {
            var message = {
              type: "error",
              icon: 'icon-email',
              title: "Ocorreu um erro ao enviar a mensagem!",
              description: error.message,
              elementID: "#pageMessage"
            };
            Shared.showMessage(message);
            Shared.router.navigate("/Mail/Messages/1/0/INBOX", {trigger: true});
          };
          var Message = thisView.getNewMessageModel();
          var msgTo = thisView.getMessageStringForRecipient("msgTo");
          var errors = false;
          if (msgTo == "") {
            var message = {
              type: "error",
              icon: 'icon-email',
              title: "Campo 'Para:' Não informado/Inválido!",
              description: "",
              elementID: "#pageMessage"
            };
            Shared.showMessage(message);
            errors = true;
          }
          var checkAttachments = Message.checkAttachments(false);
          if (checkAttachments != true) {
            var message = {
              type: "error",
              icon: 'icon-email',
              title: checkAttachments,
              description: "",
              elementID: "#pageMessage"
            };
            Shared.showMessage(message);
            errors = true;
          }
          if (!errors) {
            var loadingView = new LoadingView({el: $(elementID)});
            loadingView.render();
            Message.send(onSendMessage, onFailSendMessage);
          }
        },
        onFailUploadPicture: function(message) {
          Shared.showMessage({
            type: "warning",
            icon: 'icon-email',
            title: "Não foi possível adicionar a foto aos anexos!",
            description: "",
            elementID: "#pageMessage"
          });
        },
        uploadPicture: function(imageData) {
          var that = Shared.currentView;
          that.showAttachments();
          var fileID = Shared.currentDraftMessage.getQtdFiles();
          that.prependAttachmentImage(fileID, 'Foto ' + fileID + ".png", '', 'base64', imageData);
          Shared.currentDraftMessage.addFile(fileID, imageData, 'Foto ' + fileID + ".png", "base64");
          that.renderContextMenu();
        },
        selectPicture: function(thisView) {
          if ((Shared.isPhonegap()) && (navigator.camera != undefined)) {
            Shared.currentView = thisView;
            navigator.camera.getPicture(thisView.uploadPicture, thisView.onFailUploadPicture, {
              quality: 60,
              destinationType: Camera.DestinationType.DATA_URL,
              sourceType: Camera.PictureSourceType.PHOTOLIBRARY
            });
          } else {
            Shared.showMessage({
              type: "error",
              icon: 'icon-email',
              title: "Seu dispositivo não possui câmera!",
              description: "",
              elementID: "#pageMessage"
            });
          }
        },
        takePicture: function(thisView) {
          if ((Shared.isPhonegap()) && (navigator.camera != undefined)) {
            Shared.currentView = thisView;
            navigator.camera.getPicture(thisView.uploadPicture, thisView.onFailUploadPicture, {
              quality: 60,
              destinationType: Camera.DestinationType.DATA_URL
            });
          } else {
            Shared.showMessage({
              type: "error",
              icon: 'icon-email',
              title: "Seu dispositivo não possui câmera!",
              description: "",
              elementID: "#pageMessage"
            });
          }
        },
        selectAttachmentFile: function(thisView) {
          Shared.currentView = thisView;
          $("#attachment_input").click();
          thisView.renderContextMenu();
        },
        addAttachmentFile: function(evt) {
          evt.stopPropagation();
          evt.preventDefault();
          $("#msgAttachmentsRow").removeClass("hidden");
          var that = this;
          var files = evt.target.files;
          for (var i = 0,
              f = void 0; f = files[i]; i++) {
            var fileID = Shared.currentDraftMessage.getQtdFiles();
            that.prependAttachmentImage(fileID, f.name, f.size, 'binary', files[i]);
            Shared.currentDraftMessage.addBinaryFile(fileID, escape(f.name), files[i]);
          }
          var control = $("#attachment_input");
          control.replaceWith(control = control.clone(true));
        },
        render: function() {
          var elementID = "#contentDetail";
          var that = this;
          if (Shared.isSmartPhoneResolution()) {
            elementID = "#content";
          }
          if (this.secondViewName == "New") {
            var pMessage = new MessagesModel();
            pMessage.set("msgSubject", "");
            pMessage.set("msgTo", []);
            pMessage.set("msgCc", []);
            pMessage.set("msgBcc", []);
            pMessage.set("msgBody", "");
            pMessage.clearFiles();
            if ($.trim(this.emailTo) != '')
              pMessage.addRecipient("msgTo", this.emailTo, '');
            var that = this;
            that.renderComposeMessage(pMessage, true, 'new');
            $("#msgAttachmentsRow").removeClass("hidden");
            var callbackDone = function(currentMessage) {
              Shared.currentDraftMessage = currentMessage;
              var files = Shared.currentDraftMessage.get("files");
              if (!Shared.isDesktop()) {
                $("#msgAttachmentsRecipients").empty();
              }
              for (var i = 0,
                  f = void 0; f = files[i]; i++) {
                that.prependAttachmentImage(f.fileID, f.filename, f.fileSize, f.dataType, f.src);
              }
            };
            pMessage.addNewMessageFiles(callbackDone);
          }
          if (this.secondViewName == "DelMessage") {
            var loadingView = new LoadingView({el: $(elementID)});
            loadingView.render();
            var that = this;
            var onDeleteMessage = function() {
              Shared.showMessage({
                type: "success",
                icon: 'icon-email',
                title: "Mensagem apagada com sucesso!",
                description: "",
                elementID: "#pageMessage"
              });
              var message = {
                msgID: that.msgID,
                folderID: that.folderID
              };
              var mModel = new MessagesModel(message);
              if (Shared.isTabletResolution()) {
                $("#" + mModel.listItemID()).animate({
                  opacity: 0.25,
                  height: "toggle"
                }, 1000, function() {
                  $("#" + mModel.listItemID()).remove();
                  $("#scrollerList li:first").addClass("selected");
                  $("#" + mModel.listItemID()).animate({opacity: 1}, 1000, function() {});
                  var messageID = 0;
                  var forceReload = 0;
                  if ($("#scrollerList li:first").length !== 0) {
                    var selectedItemID = $("#scrollerList li:first").attr('id').split("_");
                    messageID = selectedItemID[selectedItemID.length - 1];
                  }
                  if (messageID == undefined) {
                    messageID = 0;
                    forceReload = 1;
                  }
                  Shared.router.navigate("/Mail/Messages/" + forceReload + "/" + messageID + "/" + that.folderID, {trigger: true});
                });
              } else {
                Shared.router.navigate("/Mail/Messages/1/0/" + that.folderID, {trigger: true});
              }
            };
            var onFailDeleteMessage = function() {
              Shared.showMessage({
                type: "error",
                icon: 'icon-email',
                title: "Não foi possível apagar a mensagem selecionada!",
                description: "",
                elementID: "#pageMessage"
              });
              Shared.router.navigate("/Mail/Messages/1/0/" + that.folderID + "#", {trigger: true});
            };
            var message = {
              msgID: this.msgID,
              folderID: this.folderID
            };
            var mModel = new MessagesModel(message);
            mModel.delete(onDeleteMessage, onFailDeleteMessage);
          }
          if (this.secondViewName == "ReplyToAll") {
            var ReplyOnGetMessage = function(result) {
              var originalMessage = result.models[0];
              var newMessage = new MessagesModel();
              var from = originalMessage.get("msgFrom");
              var msgTo = originalMessage.get("msgTo");
              var msgCc = originalMessage.get("msgCC");
              var msgBcc = originalMessage.get("msgBcc");
              var myEmail = Shared.profile.contactMails[0];
              newMessage.set("msgTo", []);
              newMessage.set("msgCc", []);
              newMessage.set("msgBcc", []);
              newMessage.addRecipient("msgTo", from.mailAddress, from.fullName);
              for (var i in msgTo) {
                if ((msgTo[i].mailAddress != from.mailAddress) && (msgTo[i].mailAddress != myEmail)) {
                  newMessage.addRecipient("msgCc", msgTo[i].mailAddress, msgTo[i].fullName);
                }
              }
              for (var i in msgCc) {
                newMessage.addRecipient("msgCc", msgCc[i].mailAddress, msgCc[i].fullName);
              }
              newMessage.set("msgSubject", "Re: " + originalMessage.get("msgSubject"));
              Shared.currentDraftMessage = newMessage;
              that.renderComposeMessage(newMessage, true, 'reply', originalMessage);
            };
            var ReplyOnGetMessageFailed = function() {};
            var loadingView = new LoadingView({el: $(elementID)});
            loadingView.render();
            var mCollection = new MessagesCollection();
            mCollection.getMessageByID(this.folderID, this.msgID).done(ReplyOnGetMessage).fail(ReplyOnGetMessageFailed).execute();
          }
          if (this.secondViewName == "ReplyMessage") {
            var ReplyOnGetMessage = function(result) {
              var originalMessage = result.models[0];
              var newMessage = new MessagesModel();
              var from = originalMessage.get("msgFrom");
              newMessage.set("msgTo", []);
              newMessage.addRecipient("msgTo", from.mailAddress, from.fullName);
              newMessage.set("msgSubject", "Re: " + originalMessage.get("msgSubject"));
              Shared.currentDraftMessage = newMessage;
              that.renderComposeMessage(newMessage, true, 'reply', originalMessage);
            };
            var ReplyOnGetMessageFailed = function() {};
            var loadingView = new LoadingView({el: $(elementID)});
            loadingView.render();
            var mCollection = new MessagesCollection();
            mCollection.getMessageByID(this.folderID, this.msgID).done(ReplyOnGetMessage).fail(ReplyOnGetMessageFailed).execute();
          }
          if (this.secondViewName == "Forward") {
            var ForwardOnGetMessage = function(result) {
              var originalMessage = result.models[0];
              var newMessage = new MessagesModel();
              newMessage.set("msgID", originalMessage.get("msgID"));
              newMessage.set("folderID", originalMessage.get("folderID"));
              newMessage.set("msgTo", []);
              newMessage.set("msgCc", []);
              newMessage.set("msgBcc", []);
              newMessage.set("msgSubject", "Fw: " + originalMessage.get("msgSubject"));
              Shared.currentDraftMessage = newMessage;
              if (originalMessage.get("msgHasAttachments") == "1") {
                newMessage.set("msgHasAttachments", "1");
                newMessage.set("msgAttachments", originalMessage.get("msgAttachments"));
                newMessage.set("files", originalMessage.get("files"));
              }
              that.renderComposeMessage(newMessage, true, 'forward', originalMessage);
              if (originalMessage.get("msgHasAttachments") == "1") {
                that.renderAttachments(Shared.currentDraftMessage);
              }
            };
            var ForwardOnGetMessageFailed = function() {};
            var loadingView = new LoadingView({el: $(elementID)});
            loadingView.render();
            var mCollection = new MessagesCollection();
            mCollection.getMessageByID(this.folderID, this.msgID).done(ForwardOnGetMessage).fail(ForwardOnGetMessageFailed).execute();
          }
        },
        addCcBcc: function(thisView) {
          thisView.toggleCCBcc();
          var params = thisView.getContextMenuParams();
          Shared.menuView.renderContextMenu('newMessageWithCc', params);
        },
        removeCcBcc: function(thisView) {
          thisView.toggleCCBcc();
          var params = thisView.getContextMenuParams();
          Shared.menuView.renderContextMenu('newMessage', params);
        },
        events: {
          "keydown #msgToInput": "addRecipientTo",
          "keydown #msgCcInput": "addRecipientTo",
          "keydown #msgBccInput": "addRecipientTo",
          "keydown #msgSubjectInput": "updateSubject",
          "keydown #msgBodyInput": "updateBody",
          "click #msgToRow": "focusRecipientTo",
          "click #msgCcRow": "focusRecipientCc",
          "click #msgBccRow": "focusRecipientBcc",
          "click #msgSubjectRow": "focusSubject",
          "click #addMsgToField": "addMsgToField",
          "click #addMsgCcField": "addMsgCcField",
          "click #addMsgBccField": "addMsgBccField",
          "dblclick .recipientmsgTo": "removeRecipientMsgTo",
          "dblclick .recipientmsgCc": "removeRecipientMsgCc",
          "dblclick .recipientmsgBcc": "removeRecipientMsgBcc",
          "touch .recipientmsgTo": "removeRecipientMsgTo",
          "touch .recipientmsgCc": "removeRecipientMsgCc",
          "touch .recipientmsgBcc": "removeRecipientMsgBcc",
          "change #attachment_input": "addAttachmentFile",
          "click #add_attachment": "selectAttachmentFile"
        },
        removeRecipientMsgTo: function(e) {
          var email = $(e.currentTarget).attr("data-mail");
          $(e.currentTarget).remove();
          Shared.currentDraftMessage.removeRecipient("msgTo", email);
        },
        removeRecipientMsgCc: function(e) {
          var email = $(e.currentTarget).attr("data-mail");
          $(e.currentTarget).remove();
          Shared.currentDraftMessage.removeRecipient("msgCc", email);
        },
        removeRecipientMsgBcc: function(e) {
          var email = $(e.currentTarget).attr("data-mail");
          $(e.currentTarget).remove();
          Shared.currentDraftMessage.removeRecipient("msgBcc", email);
        },
        addMsgToField: function(e) {
          this.updateCurrentDraftMessage();
          var obj = Shared.currentDraftMessage;
          var attrs = {
            currentField: "msgTo",
            eventParticipants: [],
            listParticipants: []
          };
          obj.set(attrs);
          var calendarEditEventAddParticipantsView = new CalendarEditEventAddParticipantsView({
            listParticipants: [],
            model: obj,
            view: new ComposeMessageView(),
            senderName: 'compose'
          });
          calendarEditEventAddParticipantsView.senderName = 'compose';
          calendarEditEventAddParticipantsView.render();
        },
        addMsgCcField: function(e) {
          this.updateCurrentDraftMessage();
          var obj = Shared.currentDraftMessage;
          var attrs = {
            currentField: "msgCc",
            eventParticipants: [],
            listParticipants: []
          };
          obj.set(attrs);
          var calendarEditEventAddParticipantsView = new CalendarEditEventAddParticipantsView({
            listParticipants: [],
            model: obj,
            view: new ComposeMessageView(),
            senderName: 'compose'
          });
          calendarEditEventAddParticipantsView.senderName = 'compose';
          calendarEditEventAddParticipantsView.render();
        },
        addMsgBccField: function(e) {
          this.updateCurrentDraftMessage();
          var obj = Shared.currentDraftMessage;
          var attrs = {
            currentField: "msgBcc",
            eventParticipants: [],
            listParticipants: []
          };
          obj.set(attrs);
          var calendarEditEventAddParticipantsView = new CalendarEditEventAddParticipantsView({
            listParticipants: [],
            model: obj,
            view: new ComposeMessageView(),
            senderName: 'compose'
          });
          calendarEditEventAddParticipantsView.senderName = 'compose';
          calendarEditEventAddParticipantsView.render();
        },
        updateSubject: function(e) {
          var val = $(e.currentTarget).val();
          $('#msgSubjectTitle').html(val);
          if ((e.which == 13 && !e.shiftKey)) {
            $("#msgBodyInput").focus();
          }
        },
        updateBody: function(e) {
          Shared.scrollerRefresh();
        },
        focusRecipientTo: function(e) {
          $("#msgToInput").focus();
        },
        focusRecipientCc: function(e) {
          $("#msgCcInput").focus();
        },
        focusRecipientBcc: function(e) {
          $("#msgBccInput").focus();
        },
        focusSubject: function(e) {
          $("#msgSubjectInput").focus();
        },
        showAttachments: function(e) {
          $("#msgAttachmentsRow").removeClass("hidden");
        },
        addRecipientTo: function(e) {
          var val = $(e.currentTarget).val();
          var prefix = "msgTo";
          var nextOrder = "msgCc";
          if ($(e.currentTarget).attr("id") == "msgToInput") {
            prefix = "msgTo";
            if ($("#msgCCBcc").hasClass("hidden")) {
              nextOrder = "msgSubject";
            } else {
              nextOrder = "msgCc";
            }
          }
          if ($(e.currentTarget).attr("id") == "msgCcInput") {
            prefix = "msgCc";
            nextOrder = "msgBcc";
          }
          if ($(e.currentTarget).attr("id") == "msgBccInput") {
            prefix = "msgBcc";
            nextOrder = "msgSubject";
          }
          if ($(e.currentTarget).attr("id") == "msgSubjectInput") {
            nextOrder = "msgBody";
          }
          if ((e.which == 13 && !e.shiftKey) || (e.which == 32) || (e.which == 188) || (e.which == 59)) {
            if (this.validateEmail($.trim(val))) {
              $(e.currentTarget).val("");
              this.prependEmailRecipientBadgeToDiv(prefix, "#" + prefix + "Recipients", val);
              if ((e.which == 188) || (e.which == 59) || (e.which == 32)) {
                e.preventDefault();
              }
            } else {
              if ((e.which == 13 && !e.shiftKey && val == "") || (e.which == 9)) {
                $("#" + nextOrder + "Input").focus();
              }
            }
          }
          if ((e.which == 8) && ($.trim(val) == "")) {
            Shared.currentDraftMessage.removeRecipient(prefix, $("#" + prefix + "Recipients div:last-child").attr("data-mail"));
            $("#" + prefix + "Recipients div:last-child").remove();
          }
        },
        prependAttachmentImage: function(fileID, fileName, fileSize, fileType, imageData) {
          var preview = new PreviewAttachmentMessageView();
          preview.fileID = fileID;
          preview.fileName = fileName;
          preview.fileSize = fileSize;
          preview.fileType = fileType;
          preview.fileData = imageData;
          preview.render();
          this.updateBody();
        },
        prependEmailRecipientBadgeToDiv: function(prefix, divID, emailRecipient, emailName) {
          var div = $("<div />").addClass("recipient" + prefix).attr("data-mail", emailRecipient);
          var span = $("<span />").addClass("badge").addClass("badge-write-message");
          if (emailName == undefined) {
            span.html(emailRecipient);
          } else {
            span.html(emailName);
          }
          var input = $("<input />").attr("type", "text").addClass("hidden").addClass(prefix + "Input").attr("name", prefix + "Input").attr("value", emailRecipient);
          span.appendTo(div);
          input.appendTo(div);
          Shared.currentDraftMessage.addRecipient(prefix, emailRecipient, "");
          div.appendTo($(divID));
        },
        validateEmail: function(email) {
          var ck_email = /^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i;
          return ck_email.test(email);
        },
        getMessageStringForRecipient: function(prefix) {
          var string = '';
          var qtd = $("." + prefix + "Input").length;
          $("." + prefix + "Input").each(function(i, obj) {
            string = string + $(obj).val();
            if (i < qtd - 1) {
              string = string + ", ";
            }
          });
          if ($("#" + prefix + "Input").val() != "") {
            string = string + ", " + $("#" + prefix + "Input").val();
          }
          return string;
        },
        restoreDraftMessage: function() {
          var draft = Shared.currentDraftMessage;
          var subject = draft.get("msgSubject");
          if (subject != "") {
            $("#msgSubjectTitle").html(draft.get("msgSubject"));
          }
          $("#msgSubjectInput").val(subject);
          $("#msgBodyInput").html(draft.get("msgBody"));
        },
        updateCurrentDraftMessage: function() {
          var model = this.getNewMessageModel();
          Shared.currentDraftMessage = model;
        },
        getNewMessageModel: function() {
          var tempFiles = {};
          if (Shared.currentDraftMessage) {
            tempFiles = Shared.currentDraftMessage.get("files");
          }
          var msgTo = this.getMessageStringForRecipient("msgTo");
          var msgSubject = $("#msgSubjectInput").val();
          var msgCc = this.getMessageStringForRecipient("msgCc");
          var msgBcc = this.getMessageStringForRecipient("msgBcc");
          var msgBody = $("#msgBodyInput").html();
          var message = {
            "msgTo": Shared.currentDraftMessage.get("msgTo"),
            "msgCc": Shared.currentDraftMessage.get("msgCc"),
            "msgBcc": Shared.currentDraftMessage.get("msgBcc"),
            "msgToString": msgTo,
            "msgCcString": msgCc,
            "msgBccString": msgBcc,
            "msgSubject": msgSubject,
            "msgBody": msgBody,
            "msgType": "html"
          };
          var mModel = new MessagesModel(message);
          var bstr = 'base64,';
          mModel.clearFiles();
          mModel.set("files", tempFiles);
          return mModel;
        },
        toggleCCBcc: function() {
          if ($("#msgCcRow").hasClass("hidden")) {
            $("#msgCcRow").removeClass("hidden");
            $("#msgBccRow").removeClass("hidden");
          } else {
            $("#msgCcRow").addClass("hidden");
            $("#msgBccRow").addClass("hidden");
          }
        },
        refreshWindowHeight: function() {
          var top = $('.topHeader').outerHeight(true);
          var search = $('#composeMessageHeader').outerHeight(true) == null ? 0 : $('#composeMessageHeader').outerHeight(true);
          $('#msgBody').height($(window).height() - top - search);
        },
        loaded: function() {
          this.refreshWindowHeight();
          var msgBodyInput = $("#msgBodyInput").width();
          var contentDetailWidth = $("#contentDetail").width();
          if (Shared.isTabletResolution()) {
            if ((msgBodyInput + 13) >= contentDetailWidth) {
              $("#scrollerDetail").width(msgBodyInput + 13);
            }
          } else {
            $("#scrollerDetail").width("100%");
          }
        }
      });
      $__export('default', ComposeMessageView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("4e", [], function() {
  return "  <div class=\"login-center\" style=\"width: 245px; margin-top: 70px;\">\n      <div class=\"product-logo\"></div>\n      <br>\n      <br><br>\n      <span style=\"color: #000; font-size: 14px;\">\n      A versão mobile está temporariamente indisponível.<br><br>\n    </span>\n  </div>";
});

_removeDefine();
})();
$__System.register("4f", ["5", "6", "7", "8", "4e"], function($__export) {
  "use strict";
  var __moduleName = "4f";
  var $,
      _,
      Backbone,
      Shared,
      offlineTemplate,
      OfflineView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      offlineTemplate = $__m.default;
    }],
    execute: function() {
      OfflineView = Backbone.View.extend({
        el: $("#mainAppPageContent"),
        render: function() {
          var compiledTemplate = _.template(offlineTemplate);
          this.$el.html(compiledTemplate);
        }
      });
      $__export('default', OfflineView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("50", [], function() {
  return "<% if (elementID == \"#mainAppPageContent\") { %>\n<div id=\"page\" class=\"left\">\n    <div id=\"pageSwipe\" style=\"\"></div>\n    <header id=\"pageHeader\" class=\"topHeader\">\n      <div id=\"pageMessage\"></div>\n      <ul class=\"left topButtons\" style=\"margin: 10px;\">\n      \t<li><input id=\"btn-back\" type=\"button\" value=\"Voltar\" class=\"btn btn-primary\" style=\"\"></li>\n      </ul> \n      \n      <div id=\"rightMenu\">\n        \n      </div>\n\n    </header>\n\n    <div class=\"main\">\n\n      <div id=\"content\" class=\"left\" style=\"width: 100%;\">\n        \n\n\n<% } %>\n\n<!-- <h2 class=\"font-big\">Perguntas Frequentes</h2> -->\n<div class=\"expresso-email animation-fadein\">\n        <div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n          <h2 class=\"mdl-card__title-text\">Perguntas Frequentes</h2>\n        </div>\n\t\t<article id=\"wrapperDetail\" class=\"contentScroll\">\n\t\t\t<div id=\"scrollerDetail\">\n\n\t\t\t\t<dl id=\"aboutExpresso\">\n\n\t\t<!-- \t\t\t<div class=\"login-center\" style=\"width: 245px; margin-top: 50px; margin-bottom: 50px;\">\n\t\t\t\t\t      <div class=\"product-logo\"></div>\n\t\t\t\t\t</div> -->\n\n\t\t\t\t\t<!-- <br>- Qual servidor devo escolher?\n\t\t\t\t\t<br>- Posso configurar o Aplicativo com meu usuário de outro serviço de Emails (GMAIL, YAHOO, etc)?\n\t\t\t\t\t<br>- Como faço para criar uma conta do Expresso?\n\t\t\t\t\t<br>- Como posso usar na minha Empresa/Instituição?\n\t\t\t\t\t<br>- Já possuo o Expresso Livre instalado em minha empresa, porque meu servidor não aparece na lista de Servidores?\n\t\t\t\t\t<br>- Em qual versão do Expresso Livre meu servidor deverá estar?\n\t\t\t\t\t<br>- Em qual versão do iOS meu dispositivo deverá estar?\n\t\t\t\t\t<br>- Em qual versão do Android meu dispositivo deverá estar?\n\t\t\t\t\t<br>- Quais são os dispositivos suportados?\n\t\t\t\t\t<br><br> -->\n\t\t\t\t\t<br><br>\n\t\t\t\t\t<dt>Qual servidor devo escolher?</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\tVocê deve escolher o servidor de sua organização/instituição. Somente aparecem nesta lista servidores homologados a utilizar o aplicativo. Caso seu servidor não esteja sendo exibido na lista, entre em contato com o administrador do seu ambiente expresso, para que ele possa solicitar a liberação do seu servidor na lista de servidores homologados.\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>Posso configurar o aplicativo com meu usuário de outro serviço de Emails (GMAIL, YAHOO, etc)?</dt>\n\t\t\t\t\t<dd>Não, o aplicativo foi desenvolvido para acessar somente servidores homologados do Expresso.</dd>\n\n\t\t\t\t\t<dt>Como faço para criar uma conta do Expresso?</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\tA criação de contas do expresso é responsabilidade do administrador de cada empresa/instituição que utiliza o Expresso. Caso você pertença a uma empresa que utiliza o Expresso e não tem uma conta, entre em contato com o administrador de sua organização.\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>Como posso usar na minha Empresa/Instituição?</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\tPara que sua empresa/instituição possa utilizar o Expresso Mobile, o Expresso Livre deverá ser instalado em um servidor de emails da sua empresa/instituição. Siga o procedimento de instalação no site da comunidade: http://www.expressolivre.org/\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>Já possuo o Expresso Livre instalado em minha empresa. Porque meu servidor não aparece na lista de Servidores?</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\tPara que você possa usar este aplicativo em sua empresa/instituição, Foi desenvolvido um módulo para o Expresso Livre que deverá ser adicionado à sua instalação do Expresso. Esse módulo deve ser homologado/autorizado pelos administradores da comunidade Expresso. Somente após essa autorização seu servidor será cadastrado para aparecer na lista de servidores. Caso você já possua este módulo instalado em seu ambiente clique aqui e entre em contato solicitando a liberação do seu servidor.\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>Em qual versão do iOS meu dispositivo deverá estar?</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\tO Expresso para iOS é suportado a partir da versão 7.0 do iOS.\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>Em qual versão do Android meu dispositivo deverá estar?</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\tO Expresso para Android é homologado para a versão 4.0 ou superior do Android.\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<dt>O Aplicativo é compatível com o Expresso V3?</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\tNão, o Expresso V3 não possui a API para dispositivos móveis, portanto não é compatível com este aplicativo.\n\t\t\t\t\t</dd>\n\n\t\t\t\t\t<% if (Shared.isIDevice()) { %>\n\t\t\t\t\t<dt>Porque não recebo notificações de novos emails? (NOTIFICAÇÕES POR PUSH)</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\tAs notificações de email ocorrem por um processo chamado de \"Notificações por Push\", e devido a algumas restrições da Apple o Expresso ainda não possui notificações por Push.<br>Obs: Nós entendemos que esta é uma funcionalidade essencial, e assim que estas restrições não existirem mais implementaremos essa funcionalidade.\n\t\t\t\t\t</dd>\n\t\t\t\t\t<% } %>\n\n\t\t\t\t\t<dt>Quais são os dispositivos suportados?</dt>\n\t\t\t\t\t<dd>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>Smartphones com iOS a partir do iPhone 4S.</li>\n\t\t\t\t\t\t\t<li>Smartphones com Android a partir do 4.0</li>\n\t\t\t\t\t\t\t<li>Tablets com iOS a partir do iPad 2.</li>\n\t\t\t\t\t\t\t<li>Tablets com Android a partir do 4.0</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<!-- <br><br>\n\t\t\t\t\t\t<br><br>\n\t\t\t\t\t\t<br><br>\n\t\t\t\t\t\t<br><br>\n\t\t\t\t\t\t<br><br> -->\n\t\t\t\t\t</dd>\n\n\t\t\t\t</dl>\n\t\t  \t</div>\n\t\t</article>\n</div>\n\n<% if (elementID == \"#mainAppPageContent\") { %>\n      </div>\n    </div>\n  </div>\n<% } %>";
});

_removeDefine();
})();
$__System.register("43", ["5", "6", "7", "8", "50"], function($__export) {
  "use strict";
  var __moduleName = "43";
  var $,
      _,
      Backbone,
      Shared,
      settingsFaqListTemplate,
      SettingsFaqListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      settingsFaqListTemplate = $__m.default;
    }],
    execute: function() {
      SettingsFaqListView = Backbone.View.extend({
        elementID: "#content",
        render: function() {
          var that = this;
          var newData = {
            _: _,
            elementID: this.elementID,
            Shared: Shared
          };
          var htmlTemplate = _.template(settingsFaqListTemplate);
          var compiledTemplate = htmlTemplate(newData);
          this.$el.html(compiledTemplate);
          this.$el.css("width", "100%");
          this.$el.css("height", "100%");
          $(this.elementID).empty().append(this.$el);
        },
        events: {'click #btn-back': 'backButton'},
        backButton: function(e) {
          if (e != undefined) {
            e.preventDefault();
          }
          Shared.router.navigate("/", {trigger: true});
        }
      });
      $__export('default', SettingsFaqListView);
    }
  };
});

$__System.register("51", ["6", "7", "8"], function($__export) {
  "use strict";
  var __moduleName = "51";
  var _,
      Backbone,
      Shared,
      ExpressoModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }],
    execute: function() {
      ExpressoModel = Backbone.Model.extend({
        defaults: {
          auth: "",
          profile: {}
        },
        initialize: function() {}
      });
      $__export('default', ExpressoModel);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
(function(root, factory) {
  if (typeof exports === 'object' && typeof require === 'function') {
    module.exports = factory(require("backbone"), require('underscore'));
  } else if (typeof define === "function" && define.amd) {
    define("52", ["7", "6"], function(Backbone, _) {
      return factory(Backbone || root.Backbone, _ || root._);
    });
  } else {
    factory(Backbone, _);
  }
}(this, function(Backbone, _) {
  function S4() {
    return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);
  }
  function guid() {
    return (S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4());
  }
  function contains(array, item) {
    var i = array.length;
    while (i--)
      if (array[i] === item)
        return true;
    return false;
  }
  function extend(obj, props) {
    for (var key in props) {
      obj[key] = props[key];
    }
    return obj;
  }
  function _browserStorage(name, serializer, type) {
    var _store;
    if (type === 'local' && !window.localStorage) {
      throw "Backbone.browserStorage: Environment does not support localStorage.";
    } else if (type === 'session' && !window.sessionStorage) {
      throw "Backbone.browserStorage: Environment does not support sessionStorage.";
    }
    this.name = name;
    this.serializer = serializer || {
      serialize: function(item) {
        return _.isObject(item) ? JSON.stringify(item) : item;
      },
      deserialize: function(data) {
        return data && JSON.parse(data);
      }
    };
    if (type === 'session') {
      this.store = window.sessionStorage;
    } else if (type === 'local') {
      this.store = window.localStorage;
    } else {
      throw "Backbone.browserStorage: No storage type was specified";
    }
    _store = this.store.getItem(this.name);
    this.records = (_store && _store.split(",")) || [];
  }
  Backbone.BrowserStorage = {
    local: function(name, serializer) {
      return _browserStorage.bind(this, name, serializer, 'local')();
    },
    session: function(name, serializer) {
      return _browserStorage.bind(this, name, serializer, 'session')();
    }
  };
  var _extension = {
    save: function() {
      this.store.setItem(this.name, this.records.join(","));
    },
    create: function(model) {
      if (!model.id) {
        model.id = guid();
        model.set(model.idAttribute, model.id);
      }
      this.store.setItem(this._itemName(model.id), this.serializer.serialize(model));
      this.records.push(model.id.toString());
      this.save();
      return this.find(model) !== false;
    },
    update: function(model) {
      this.store.setItem(this._itemName(model.id), this.serializer.serialize(model));
      var modelId = model.id.toString();
      if (!contains(this.records, modelId)) {
        this.records.push(modelId);
        this.save();
      }
      return this.find(model) !== false;
    },
    find: function(model) {
      return this.serializer.deserialize(this.store.getItem(this._itemName(model.id)));
    },
    findAll: function() {
      var result = [];
      for (var i = 0,
          id,
          data; i < this.records.length; i++) {
        id = this.records[i];
        data = this.serializer.deserialize(this.store.getItem(this._itemName(id)));
        if (data !== null)
          result.push(data);
      }
      return result;
    },
    destroy: function(model) {
      this.store.removeItem(this._itemName(model.id));
      var modelId = model.id.toString();
      for (var i = 0,
          id; i < this.records.length; i++) {
        if (this.records[i] === modelId) {
          this.records.splice(i, 1);
        }
      }
      this.save();
      return model;
    },
    browserStorage: function() {
      return {
        session: sessionStorage,
        local: localStorage
      };
    },
    _clear: function() {
      var local = this.store,
          itemRe;
      if (typeof this.name.startsWith === "function" && this.name.startsWith('+')) {
        itemRe = new RegExp("^\\" + this.name + "-");
      } else {
        itemRe = new RegExp("^" + this.name + "-");
      }
      local.removeItem(this.name);
      for (var k in local) {
        if (itemRe.test(k)) {
          local.removeItem(k);
        }
      }
      this.records.length = 0;
    },
    _storageSize: function() {
      return this.store.length;
    },
    _itemName: function(id) {
      return this.name + "-" + id;
    }
  };
  extend(Backbone.BrowserStorage.session.prototype, _extension);
  extend(Backbone.BrowserStorage.local.prototype, _extension);
  Backbone.BrowserStorage.sync = Backbone.localSync = function(method, model, options) {
    var store = model.browserStorage || model.collection.browserStorage;
    var resp,
        errorMessage;
    var syncDfd = Backbone.$ ? (Backbone.$.Deferred && Backbone.$.Deferred()) : (Backbone.Deferred && Backbone.Deferred());
    try {
      switch (method) {
        case "read":
          resp = model.id !== undefined ? store.find(model) : store.findAll();
          break;
        case "create":
          resp = store.create(model);
          break;
        case "update":
          resp = store.update(model);
          break;
        case "delete":
          resp = store.destroy(model);
          break;
      }
    } catch (error) {
      if (error.code === 22 && store._storageSize() === 0)
        errorMessage = "Private browsing is unsupported";
      else
        errorMessage = error.message;
    }
    if (resp) {
      if (options && options.success) {
        if (Backbone.VERSION === "0.9.10") {
          options.success(model, resp, options);
        } else {
          options.success(resp);
        }
      }
      if (syncDfd) {
        syncDfd.resolve(resp);
      }
    } else {
      errorMessage = errorMessage ? errorMessage : "Record Not Found";
      if (options && options.error)
        if (Backbone.VERSION === "0.9.10") {
          options.error(model, errorMessage, options);
        } else {
          options.error(errorMessage);
        }
      if (syncDfd)
        syncDfd.reject(errorMessage);
    }
    if (options && options.complete)
      options.complete(resp);
    return syncDfd && syncDfd.promise();
  };
  Backbone.ajaxSync = Backbone.sync;
  Backbone.getSyncMethod = function(model) {
    if (model.browserStorage || (model.collection && model.collection.browserStorage)) {
      return Backbone.localSync;
    }
    return Backbone.ajaxSync;
  };
  Backbone.sync = function(method, model, options) {
    return Backbone.getSyncMethod(model).apply(this, [method, model, options]);
  };
  return Backbone.BrowserStorage;
}));

_removeDefine();
})();
$__System.register("53", ["6", "7", "52", "51"], function($__export) {
  "use strict";
  var __moduleName = "53";
  var _,
      Backbone,
      Store,
      ExpressoModel,
      ExpressoCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Store = $__m.default;
    }, function($__m) {
      ExpressoModel = $__m.default;
    }],
    execute: function() {
      ExpressoCollection = Backbone.Collection.extend({
        model: ExpressoModel,
        browserStorage: new Backbone.BrowserStorage.session("Expresso")
      });
      $__export('default', new ExpressoCollection);
    }
  };
});

$__System.registerDynamic("54", [], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var _gsScope = "undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window;
  (_gsScope._gsQueue || (_gsScope._gsQueue = [])).push(function() {
    "use strict";
    _gsScope._gsDefine("TweenMax", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, i) {
      var s = function(t) {
        var e,
            i = [],
            s = t.length;
        for (e = 0; e !== s; i.push(t[e++]))
          ;
        return i;
      },
          r = function(t, e, i) {
            var s,
                r,
                n = t.cycle;
            for (s in n)
              r = n[s], t[s] = "function" == typeof r ? r.call(e[i], i) : r[i % r.length];
            delete t.cycle;
          },
          n = function(t, e, s) {
            i.call(this, t, e, s), this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._dirty = !0, this.render = n.prototype.render;
          },
          a = 1e-10,
          o = i._internals,
          l = o.isSelector,
          h = o.isArray,
          _ = n.prototype = i.to({}, .1, {}),
          u = [];
      n.version = "1.18.0", _.constructor = n, _.kill()._gc = !1, n.killTweensOf = n.killDelayedCallsTo = i.killTweensOf, n.getTweensOf = i.getTweensOf, n.lagSmoothing = i.lagSmoothing, n.ticker = i.ticker, n.render = i.render, _.invalidate = function() {
        return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), i.prototype.invalidate.call(this);
      }, _.updateTo = function(t, e) {
        var s,
            r = this.ratio,
            n = this.vars.immediateRender || t.immediateRender;
        e && this._startTime < this._timeline._time && (this._startTime = this._timeline._time, this._uncache(!1), this._gc ? this._enabled(!0, !1) : this._timeline.insert(this, this._startTime - this._delay));
        for (s in t)
          this.vars[s] = t[s];
        if (this._initted || n)
          if (e)
            this._initted = !1, n && this.render(0, !0, !0);
          else if (this._gc && this._enabled(!0, !1), this._notifyPluginsOfEnabled && this._firstPT && i._onPluginEvent("_onDisable", this), this._time / this._duration > .998) {
            var a = this._time;
            this.render(0, !0, !1), this._initted = !1, this.render(a, !0, !1);
          } else if (this._time > 0 || n) {
            this._initted = !1, this._init();
            for (var o,
                l = 1 / (1 - r),
                h = this._firstPT; h; )
              o = h.s + h.c, h.c *= l, h.s = o - h.c, h = h._next;
          }
        return this;
      }, _.render = function(t, e, i) {
        this._initted || 0 === this._duration && this.vars.repeat && this.invalidate();
        var s,
            r,
            n,
            l,
            h,
            _,
            u,
            c,
            f = this._dirty ? this.totalDuration() : this._totalDuration,
            p = this._time,
            m = this._totalTime,
            d = this._cycle,
            g = this._duration,
            v = this._rawPrevTime;
        if (t >= f ? (this._totalTime = f, this._cycle = this._repeat, this._yoyo && 0 !== (1 & this._cycle) ? (this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0) : (this._time = g, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1), this._reversed || (s = !0, r = "onComplete", i = i || this._timeline.autoRemoveChildren), 0 === g && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0), (0 === t || 0 > v || v === a) && v !== t && (i = !0, v > a && (r = "onReverseComplete")), this._rawPrevTime = c = !e || t || v === t ? t : a)) : 1e-7 > t ? (this._totalTime = this._time = this._cycle = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== m || 0 === g && v > 0) && (r = "onReverseComplete", s = this._reversed), 0 > t && (this._active = !1, 0 === g && (this._initted || !this.vars.lazy || i) && (v >= 0 && (i = !0), this._rawPrevTime = c = !e || t || v === t ? t : a)), this._initted || (i = !0)) : (this._totalTime = this._time = t, 0 !== this._repeat && (l = g + this._repeatDelay, this._cycle = this._totalTime / l >> 0, 0 !== this._cycle && this._cycle === this._totalTime / l && this._cycle--, this._time = this._totalTime - this._cycle * l, this._yoyo && 0 !== (1 & this._cycle) && (this._time = g - this._time), this._time > g ? this._time = g : 0 > this._time && (this._time = 0)), this._easeType ? (h = this._time / g, _ = this._easeType, u = this._easePower, (1 === _ || 3 === _ && h >= .5) && (h = 1 - h), 3 === _ && (h *= 2), 1 === u ? h *= h : 2 === u ? h *= h * h : 3 === u ? h *= h * h * h : 4 === u && (h *= h * h * h * h), this.ratio = 1 === _ ? 1 - h : 2 === _ ? h : .5 > this._time / g ? h / 2 : 1 - h / 2) : this.ratio = this._ease.getRatio(this._time / g)), p === this._time && !i && d === this._cycle)
          return m !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")), void 0;
        if (!this._initted) {
          if (this._init(), !this._initted || this._gc)
            return;
          if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
            return this._time = p, this._totalTime = m, this._rawPrevTime = v, this._cycle = d, o.lazyTweens.push(this), this._lazy = [t, e], void 0;
          this._time && !s ? this.ratio = this._ease.getRatio(this._time / g) : s && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
        }
        for (this._lazy !== !1 && (this._lazy = !1), this._active || !this._paused && this._time !== p && t >= 0 && (this._active = !0), 0 === m && (2 === this._initted && t > 0 && this._init(), this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")), this.vars.onStart && (0 !== this._totalTime || 0 === g) && (e || this._callback("onStart"))), n = this._firstPT; n; )
          n.f ? n.t[n.p](n.c * this.ratio + n.s) : n.t[n.p] = n.c * this.ratio + n.s, n = n._next;
        this._onUpdate && (0 > t && this._startAt && this._startTime && this._startAt.render(t, e, i), e || (this._totalTime !== m || s) && this._callback("onUpdate")), this._cycle !== d && (e || this._gc || this.vars.onRepeat && this._callback("onRepeat")), r && (!this._gc || i) && (0 > t && this._startAt && !this._onUpdate && this._startTime && this._startAt.render(t, e, i), s && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[r] && this._callback(r), 0 === g && this._rawPrevTime === a && c !== a && (this._rawPrevTime = 0));
      }, n.to = function(t, e, i) {
        return new n(t, e, i);
      }, n.from = function(t, e, i) {
        return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, new n(t, e, i);
      }, n.fromTo = function(t, e, i, s) {
        return s.startAt = i, s.immediateRender = 0 != s.immediateRender && 0 != i.immediateRender, new n(t, e, s);
      }, n.staggerTo = n.allTo = function(t, e, a, o, _, c, f) {
        o = o || 0;
        var p,
            m,
            d,
            g,
            v = a.delay || 0,
            y = [],
            T = function() {
              a.onComplete && a.onComplete.apply(a.onCompleteScope || this, arguments), _.apply(f || a.callbackScope || this, c || u);
            },
            x = a.cycle,
            w = a.startAt && a.startAt.cycle;
        for (h(t) || ("string" == typeof t && (t = i.selector(t) || t), l(t) && (t = s(t))), t = t || [], 0 > o && (t = s(t), t.reverse(), o *= -1), p = t.length - 1, d = 0; p >= d; d++) {
          m = {};
          for (g in a)
            m[g] = a[g];
          if (x && r(m, t, d), w) {
            w = m.startAt = {};
            for (g in a.startAt)
              w[g] = a.startAt[g];
            r(m.startAt, t, d);
          }
          m.delay = v, d === p && _ && (m.onComplete = T), y[d] = new n(t[d], e, m), v += o;
        }
        return y;
      }, n.staggerFrom = n.allFrom = function(t, e, i, s, r, a, o) {
        return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, n.staggerTo(t, e, i, s, r, a, o);
      }, n.staggerFromTo = n.allFromTo = function(t, e, i, s, r, a, o, l) {
        return s.startAt = i, s.immediateRender = 0 != s.immediateRender && 0 != i.immediateRender, n.staggerTo(t, e, s, r, a, o, l);
      }, n.delayedCall = function(t, e, i, s, r) {
        return new n(e, 0, {
          delay: t,
          onComplete: e,
          onCompleteParams: i,
          callbackScope: s,
          onReverseComplete: e,
          onReverseCompleteParams: i,
          immediateRender: !1,
          useFrames: r,
          overwrite: 0
        });
      }, n.set = function(t, e) {
        return new n(t, 0, e);
      }, n.isTweening = function(t) {
        return i.getTweensOf(t, !0).length > 0;
      };
      var c = function(t, e) {
        for (var s = [],
            r = 0,
            n = t._first; n; )
          n instanceof i ? s[r++] = n : (e && (s[r++] = n), s = s.concat(c(n, e)), r = s.length), n = n._next;
        return s;
      },
          f = n.getAllTweens = function(e) {
            return c(t._rootTimeline, e).concat(c(t._rootFramesTimeline, e));
          };
      n.killAll = function(t, i, s, r) {
        null == i && (i = !0), null == s && (s = !0);
        var n,
            a,
            o,
            l = f(0 != r),
            h = l.length,
            _ = i && s && r;
        for (o = 0; h > o; o++)
          a = l[o], (_ || a instanceof e || (n = a.target === a.vars.onComplete) && s || i && !n) && (t ? a.totalTime(a._reversed ? 0 : a.totalDuration()) : a._enabled(!1, !1));
      }, n.killChildTweensOf = function(t, e) {
        if (null != t) {
          var r,
              a,
              _,
              u,
              c,
              f = o.tweenLookup;
          if ("string" == typeof t && (t = i.selector(t) || t), l(t) && (t = s(t)), h(t))
            for (u = t.length; --u > -1; )
              n.killChildTweensOf(t[u], e);
          else {
            r = [];
            for (_ in f)
              for (a = f[_].target.parentNode; a; )
                a === t && (r = r.concat(f[_].tweens)), a = a.parentNode;
            for (c = r.length, u = 0; c > u; u++)
              e && r[u].totalTime(r[u].totalDuration()), r[u]._enabled(!1, !1);
          }
        }
      };
      var p = function(t, i, s, r) {
        i = i !== !1, s = s !== !1, r = r !== !1;
        for (var n,
            a,
            o = f(r),
            l = i && s && r,
            h = o.length; --h > -1; )
          a = o[h], (l || a instanceof e || (n = a.target === a.vars.onComplete) && s || i && !n) && a.paused(t);
      };
      return n.pauseAll = function(t, e, i) {
        p(!0, t, e, i);
      }, n.resumeAll = function(t, e, i) {
        p(!1, t, e, i);
      }, n.globalTimeScale = function(e) {
        var s = t._rootTimeline,
            r = i.ticker.time;
        return arguments.length ? (e = e || a, s._startTime = r - (r - s._startTime) * s._timeScale / e, s = t._rootFramesTimeline, r = i.ticker.frame, s._startTime = r - (r - s._startTime) * s._timeScale / e, s._timeScale = t._rootTimeline._timeScale = e, e) : s._timeScale;
      }, _.progress = function(t) {
        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), !1) : this._time / this.duration();
      }, _.totalProgress = function(t) {
        return arguments.length ? this.totalTime(this.totalDuration() * t, !1) : this._totalTime / this.totalDuration();
      }, _.time = function(t, e) {
        return arguments.length ? (this._dirty && this.totalDuration(), t > this._duration && (t = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(t, e)) : this._time;
      }, _.duration = function(e) {
        return arguments.length ? t.prototype.duration.call(this, e) : this._duration;
      }, _.totalDuration = function(t) {
        return arguments.length ? -1 === this._repeat ? this : this.duration((t - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat, this._dirty = !1), this._totalDuration);
      }, _.repeat = function(t) {
        return arguments.length ? (this._repeat = t, this._uncache(!0)) : this._repeat;
      }, _.repeatDelay = function(t) {
        return arguments.length ? (this._repeatDelay = t, this._uncache(!0)) : this._repeatDelay;
      }, _.yoyo = function(t) {
        return arguments.length ? (this._yoyo = t, this) : this._yoyo;
      }, n;
    }, !0), _gsScope._gsDefine("TimelineLite", ["core.Animation", "core.SimpleTimeline", "TweenLite"], function(t, e, i) {
      var s = function(t) {
        e.call(this, t), this._labels = {}, this.autoRemoveChildren = this.vars.autoRemoveChildren === !0, this.smoothChildTiming = this.vars.smoothChildTiming === !0, this._sortChildren = !0, this._onUpdate = this.vars.onUpdate;
        var i,
            s,
            r = this.vars;
        for (s in r)
          i = r[s], l(i) && -1 !== i.join("").indexOf("{self}") && (r[s] = this._swapSelfInParams(i));
        l(r.tweens) && this.add(r.tweens, 0, r.align, r.stagger);
      },
          r = 1e-10,
          n = i._internals,
          a = s._internals = {},
          o = n.isSelector,
          l = n.isArray,
          h = n.lazyTweens,
          _ = n.lazyRender,
          u = _gsScope._gsDefine.globals,
          c = function(t) {
            var e,
                i = {};
            for (e in t)
              i[e] = t[e];
            return i;
          },
          f = function(t, e, i) {
            var s,
                r,
                n = t.cycle;
            for (s in n)
              r = n[s], t[s] = "function" == typeof r ? r.call(e[i], i) : r[i % r.length];
            delete t.cycle;
          },
          p = a.pauseCallback = function() {},
          m = function(t) {
            var e,
                i = [],
                s = t.length;
            for (e = 0; e !== s; i.push(t[e++]))
              ;
            return i;
          },
          d = s.prototype = new e;
      return s.version = "1.18.0", d.constructor = s, d.kill()._gc = d._forcingPlayhead = d._hasPause = !1, d.to = function(t, e, s, r) {
        var n = s.repeat && u.TweenMax || i;
        return e ? this.add(new n(t, e, s), r) : this.set(t, s, r);
      }, d.from = function(t, e, s, r) {
        return this.add((s.repeat && u.TweenMax || i).from(t, e, s), r);
      }, d.fromTo = function(t, e, s, r, n) {
        var a = r.repeat && u.TweenMax || i;
        return e ? this.add(a.fromTo(t, e, s, r), n) : this.set(t, r, n);
      }, d.staggerTo = function(t, e, r, n, a, l, h, _) {
        var u,
            p,
            d = new s({
              onComplete: l,
              onCompleteParams: h,
              callbackScope: _,
              smoothChildTiming: this.smoothChildTiming
            }),
            g = r.cycle;
        for ("string" == typeof t && (t = i.selector(t) || t), t = t || [], o(t) && (t = m(t)), n = n || 0, 0 > n && (t = m(t), t.reverse(), n *= -1), p = 0; t.length > p; p++)
          u = c(r), u.startAt && (u.startAt = c(u.startAt), u.startAt.cycle && f(u.startAt, t, p)), g && f(u, t, p), d.to(t[p], e, u, p * n);
        return this.add(d, a);
      }, d.staggerFrom = function(t, e, i, s, r, n, a, o) {
        return i.immediateRender = 0 != i.immediateRender, i.runBackwards = !0, this.staggerTo(t, e, i, s, r, n, a, o);
      }, d.staggerFromTo = function(t, e, i, s, r, n, a, o, l) {
        return s.startAt = i, s.immediateRender = 0 != s.immediateRender && 0 != i.immediateRender, this.staggerTo(t, e, s, r, n, a, o, l);
      }, d.call = function(t, e, s, r) {
        return this.add(i.delayedCall(0, t, e, s), r);
      }, d.set = function(t, e, s) {
        return s = this._parseTimeOrLabel(s, 0, !0), null == e.immediateRender && (e.immediateRender = s === this._time && !this._paused), this.add(new i(t, 0, e), s);
      }, s.exportRoot = function(t, e) {
        t = t || {}, null == t.smoothChildTiming && (t.smoothChildTiming = !0);
        var r,
            n,
            a = new s(t),
            o = a._timeline;
        for (null == e && (e = !0), o._remove(a, !0), a._startTime = 0, a._rawPrevTime = a._time = a._totalTime = o._time, r = o._first; r; )
          n = r._next, e && r instanceof i && r.target === r.vars.onComplete || a.add(r, r._startTime - r._delay), r = n;
        return o.add(a, 0), a;
      }, d.add = function(r, n, a, o) {
        var h,
            _,
            u,
            c,
            f,
            p;
        if ("number" != typeof n && (n = this._parseTimeOrLabel(n, 0, !0, r)), !(r instanceof t)) {
          if (r instanceof Array || r && r.push && l(r)) {
            for (a = a || "normal", o = o || 0, h = n, _ = r.length, u = 0; _ > u; u++)
              l(c = r[u]) && (c = new s({tweens: c})), this.add(c, h), "string" != typeof c && "function" != typeof c && ("sequence" === a ? h = c._startTime + c.totalDuration() / c._timeScale : "start" === a && (c._startTime -= c.delay())), h += o;
            return this._uncache(!0);
          }
          if ("string" == typeof r)
            return this.addLabel(r, n);
          if ("function" != typeof r)
            throw "Cannot add " + r + " into the timeline; it is not a tween, timeline, function, or string.";
          r = i.delayedCall(0, r);
        }
        if (e.prototype.add.call(this, r, n), (this._gc || this._time === this._duration) && !this._paused && this._duration < this.duration())
          for (f = this, p = f.rawTime() > r._startTime; f._timeline; )
            p && f._timeline.smoothChildTiming ? f.totalTime(f._totalTime, !0) : f._gc && f._enabled(!0, !1), f = f._timeline;
        return this;
      }, d.remove = function(e) {
        if (e instanceof t) {
          this._remove(e, !1);
          var i = e._timeline = e.vars.useFrames ? t._rootFramesTimeline : t._rootTimeline;
          return e._startTime = (e._paused ? e._pauseTime : i._time) - (e._reversed ? e.totalDuration() - e._totalTime : e._totalTime) / e._timeScale, this;
        }
        if (e instanceof Array || e && e.push && l(e)) {
          for (var s = e.length; --s > -1; )
            this.remove(e[s]);
          return this;
        }
        return "string" == typeof e ? this.removeLabel(e) : this.kill(null, e);
      }, d._remove = function(t, i) {
        e.prototype._remove.call(this, t, i);
        var s = this._last;
        return s ? this._time > s._startTime + s._totalDuration / s._timeScale && (this._time = this.duration(), this._totalTime = this._totalDuration) : this._time = this._totalTime = this._duration = this._totalDuration = 0, this;
      }, d.append = function(t, e) {
        return this.add(t, this._parseTimeOrLabel(null, e, !0, t));
      }, d.insert = d.insertMultiple = function(t, e, i, s) {
        return this.add(t, e || 0, i, s);
      }, d.appendMultiple = function(t, e, i, s) {
        return this.add(t, this._parseTimeOrLabel(null, e, !0, t), i, s);
      }, d.addLabel = function(t, e) {
        return this._labels[t] = this._parseTimeOrLabel(e), this;
      }, d.addPause = function(t, e, s, r) {
        var n = i.delayedCall(0, p, s, r || this);
        return n.vars.onComplete = n.vars.onReverseComplete = e, n.data = "isPause", this._hasPause = !0, this.add(n, t);
      }, d.removeLabel = function(t) {
        return delete this._labels[t], this;
      }, d.getLabelTime = function(t) {
        return null != this._labels[t] ? this._labels[t] : -1;
      }, d._parseTimeOrLabel = function(e, i, s, r) {
        var n;
        if (r instanceof t && r.timeline === this)
          this.remove(r);
        else if (r && (r instanceof Array || r.push && l(r)))
          for (n = r.length; --n > -1; )
            r[n] instanceof t && r[n].timeline === this && this.remove(r[n]);
        if ("string" == typeof i)
          return this._parseTimeOrLabel(i, s && "number" == typeof e && null == this._labels[i] ? e - this.duration() : 0, s);
        if (i = i || 0, "string" != typeof e || !isNaN(e) && null == this._labels[e])
          null == e && (e = this.duration());
        else {
          if (n = e.indexOf("="), -1 === n)
            return null == this._labels[e] ? s ? this._labels[e] = this.duration() + i : i : this._labels[e] + i;
          i = parseInt(e.charAt(n - 1) + "1", 10) * Number(e.substr(n + 1)), e = n > 1 ? this._parseTimeOrLabel(e.substr(0, n - 1), 0, s) : this.duration();
        }
        return Number(e) + i;
      }, d.seek = function(t, e) {
        return this.totalTime("number" == typeof t ? t : this._parseTimeOrLabel(t), e !== !1);
      }, d.stop = function() {
        return this.paused(!0);
      }, d.gotoAndPlay = function(t, e) {
        return this.play(t, e);
      }, d.gotoAndStop = function(t, e) {
        return this.pause(t, e);
      }, d.render = function(t, e, i) {
        this._gc && this._enabled(!0, !1);
        var s,
            n,
            a,
            o,
            l,
            u,
            c = this._dirty ? this.totalDuration() : this._totalDuration,
            f = this._time,
            p = this._startTime,
            m = this._timeScale,
            d = this._paused;
        if (t >= c)
          this._totalTime = this._time = c, this._reversed || this._hasPausedChild() || (n = !0, o = "onComplete", l = !!this._timeline.autoRemoveChildren, 0 === this._duration && (0 === t || 0 > this._rawPrevTime || this._rawPrevTime === r) && this._rawPrevTime !== t && this._first && (l = !0, this._rawPrevTime > r && (o = "onReverseComplete"))), this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : r, t = c + 1e-4;
        else if (1e-7 > t)
          if (this._totalTime = this._time = 0, (0 !== f || 0 === this._duration && this._rawPrevTime !== r && (this._rawPrevTime > 0 || 0 > t && this._rawPrevTime >= 0)) && (o = "onReverseComplete", n = this._reversed), 0 > t)
            this._active = !1, this._timeline.autoRemoveChildren && this._reversed ? (l = n = !0, o = "onReverseComplete") : this._rawPrevTime >= 0 && this._first && (l = !0), this._rawPrevTime = t;
          else {
            if (this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : r, 0 === t && n)
              for (s = this._first; s && 0 === s._startTime; )
                s._duration || (n = !1), s = s._next;
            t = 0, this._initted || (l = !0);
          }
        else {
          if (this._hasPause && !this._forcingPlayhead && !e) {
            if (t >= f)
              for (s = this._first; s && t >= s._startTime && !u; )
                s._duration || "isPause" !== s.data || s.ratio || 0 === s._startTime && 0 === this._rawPrevTime || (u = s), s = s._next;
            else
              for (s = this._last; s && s._startTime >= t && !u; )
                s._duration || "isPause" === s.data && s._rawPrevTime > 0 && (u = s), s = s._prev;
            u && (this._time = t = u._startTime, this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay));
          }
          this._totalTime = this._time = this._rawPrevTime = t;
        }
        if (this._time !== f && this._first || i || l || u) {
          if (this._initted || (this._initted = !0), this._active || !this._paused && this._time !== f && t > 0 && (this._active = !0), 0 === f && this.vars.onStart && 0 !== this._time && (e || this._callback("onStart")), this._time >= f)
            for (s = this._first; s && (a = s._next, !this._paused || d); )
              (s._active || s._startTime <= this._time && !s._paused && !s._gc) && (u === s && this.pause(), s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (t - s._startTime) * s._timeScale, e, i) : s.render((t - s._startTime) * s._timeScale, e, i)), s = a;
          else
            for (s = this._last; s && (a = s._prev, !this._paused || d); ) {
              if (s._active || f >= s._startTime && !s._paused && !s._gc) {
                if (u === s) {
                  for (u = s._prev; u && u.endTime() > this._time; )
                    u.render(u._reversed ? u.totalDuration() - (t - u._startTime) * u._timeScale : (t - u._startTime) * u._timeScale, e, i), u = u._prev;
                  u = null, this.pause();
                }
                s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (t - s._startTime) * s._timeScale, e, i) : s.render((t - s._startTime) * s._timeScale, e, i);
              }
              s = a;
            }
          this._onUpdate && (e || (h.length && _(), this._callback("onUpdate"))), o && (this._gc || (p === this._startTime || m !== this._timeScale) && (0 === this._time || c >= this.totalDuration()) && (n && (h.length && _(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[o] && this._callback(o)));
        }
      }, d._hasPausedChild = function() {
        for (var t = this._first; t; ) {
          if (t._paused || t instanceof s && t._hasPausedChild())
            return !0;
          t = t._next;
        }
        return !1;
      }, d.getChildren = function(t, e, s, r) {
        r = r || -9999999999;
        for (var n = [],
            a = this._first,
            o = 0; a; )
          r > a._startTime || (a instanceof i ? e !== !1 && (n[o++] = a) : (s !== !1 && (n[o++] = a), t !== !1 && (n = n.concat(a.getChildren(!0, e, s)), o = n.length))), a = a._next;
        return n;
      }, d.getTweensOf = function(t, e) {
        var s,
            r,
            n = this._gc,
            a = [],
            o = 0;
        for (n && this._enabled(!0, !0), s = i.getTweensOf(t), r = s.length; --r > -1; )
          (s[r].timeline === this || e && this._contains(s[r])) && (a[o++] = s[r]);
        return n && this._enabled(!1, !0), a;
      }, d.recent = function() {
        return this._recent;
      }, d._contains = function(t) {
        for (var e = t.timeline; e; ) {
          if (e === this)
            return !0;
          e = e.timeline;
        }
        return !1;
      }, d.shiftChildren = function(t, e, i) {
        i = i || 0;
        for (var s,
            r = this._first,
            n = this._labels; r; )
          r._startTime >= i && (r._startTime += t), r = r._next;
        if (e)
          for (s in n)
            n[s] >= i && (n[s] += t);
        return this._uncache(!0);
      }, d._kill = function(t, e) {
        if (!t && !e)
          return this._enabled(!1, !1);
        for (var i = e ? this.getTweensOf(e) : this.getChildren(!0, !0, !1),
            s = i.length,
            r = !1; --s > -1; )
          i[s]._kill(t, e) && (r = !0);
        return r;
      }, d.clear = function(t) {
        var e = this.getChildren(!1, !0, !0),
            i = e.length;
        for (this._time = this._totalTime = 0; --i > -1; )
          e[i]._enabled(!1, !1);
        return t !== !1 && (this._labels = {}), this._uncache(!0);
      }, d.invalidate = function() {
        for (var e = this._first; e; )
          e.invalidate(), e = e._next;
        return t.prototype.invalidate.call(this);
      }, d._enabled = function(t, i) {
        if (t === this._gc)
          for (var s = this._first; s; )
            s._enabled(t, !0), s = s._next;
        return e.prototype._enabled.call(this, t, i);
      }, d.totalTime = function() {
        this._forcingPlayhead = !0;
        var e = t.prototype.totalTime.apply(this, arguments);
        return this._forcingPlayhead = !1, e;
      }, d.duration = function(t) {
        return arguments.length ? (0 !== this.duration() && 0 !== t && this.timeScale(this._duration / t), this) : (this._dirty && this.totalDuration(), this._duration);
      }, d.totalDuration = function(t) {
        if (!arguments.length) {
          if (this._dirty) {
            for (var e,
                i,
                s = 0,
                r = this._last,
                n = 999999999999; r; )
              e = r._prev, r._dirty && r.totalDuration(), r._startTime > n && this._sortChildren && !r._paused ? this.add(r, r._startTime - r._delay) : n = r._startTime, 0 > r._startTime && !r._paused && (s -= r._startTime, this._timeline.smoothChildTiming && (this._startTime += r._startTime / this._timeScale), this.shiftChildren(-r._startTime, !1, -9999999999), n = 0), i = r._startTime + r._totalDuration / r._timeScale, i > s && (s = i), r = e;
            this._duration = this._totalDuration = s, this._dirty = !1;
          }
          return this._totalDuration;
        }
        return 0 !== this.totalDuration() && 0 !== t && this.timeScale(this._totalDuration / t), this;
      }, d.paused = function(e) {
        if (!e)
          for (var i = this._first,
              s = this._time; i; )
            i._startTime === s && "isPause" === i.data && (i._rawPrevTime = 0), i = i._next;
        return t.prototype.paused.apply(this, arguments);
      }, d.usesFrames = function() {
        for (var e = this._timeline; e._timeline; )
          e = e._timeline;
        return e === t._rootFramesTimeline;
      }, d.rawTime = function() {
        return this._paused ? this._totalTime : (this._timeline.rawTime() - this._startTime) * this._timeScale;
      }, s;
    }, !0), _gsScope._gsDefine("TimelineMax", ["TimelineLite", "TweenLite", "easing.Ease"], function(t, e, i) {
      var s = function(e) {
        t.call(this, e), this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._cycle = 0, this._yoyo = this.vars.yoyo === !0, this._dirty = !0;
      },
          r = 1e-10,
          n = e._internals,
          a = n.lazyTweens,
          o = n.lazyRender,
          l = new i(null, null, 1, 0),
          h = s.prototype = new t;
      return h.constructor = s, h.kill()._gc = !1, s.version = "1.18.0", h.invalidate = function() {
        return this._yoyo = this.vars.yoyo === !0, this._repeat = this.vars.repeat || 0, this._repeatDelay = this.vars.repeatDelay || 0, this._uncache(!0), t.prototype.invalidate.call(this);
      }, h.addCallback = function(t, i, s, r) {
        return this.add(e.delayedCall(0, t, s, r), i);
      }, h.removeCallback = function(t, e) {
        if (t)
          if (null == e)
            this._kill(null, t);
          else
            for (var i = this.getTweensOf(t, !1),
                s = i.length,
                r = this._parseTimeOrLabel(e); --s > -1; )
              i[s]._startTime === r && i[s]._enabled(!1, !1);
        return this;
      }, h.removePause = function(e) {
        return this.removeCallback(t._internals.pauseCallback, e);
      }, h.tweenTo = function(t, i) {
        i = i || {};
        var s,
            r,
            n,
            a = {
              ease: l,
              useFrames: this.usesFrames(),
              immediateRender: !1
            };
        for (r in i)
          a[r] = i[r];
        return a.time = this._parseTimeOrLabel(t), s = Math.abs(Number(a.time) - this._time) / this._timeScale || .001, n = new e(this, s, a), a.onStart = function() {
          n.target.paused(!0), n.vars.time !== n.target.time() && s === n.duration() && n.duration(Math.abs(n.vars.time - n.target.time()) / n.target._timeScale), i.onStart && n._callback("onStart");
        }, n;
      }, h.tweenFromTo = function(t, e, i) {
        i = i || {}, t = this._parseTimeOrLabel(t), i.startAt = {
          onComplete: this.seek,
          onCompleteParams: [t],
          callbackScope: this
        }, i.immediateRender = i.immediateRender !== !1;
        var s = this.tweenTo(e, i);
        return s.duration(Math.abs(s.vars.time - t) / this._timeScale || .001);
      }, h.render = function(t, e, i) {
        this._gc && this._enabled(!0, !1);
        var s,
            n,
            l,
            h,
            _,
            u,
            c,
            f = this._dirty ? this.totalDuration() : this._totalDuration,
            p = this._duration,
            m = this._time,
            d = this._totalTime,
            g = this._startTime,
            v = this._timeScale,
            y = this._rawPrevTime,
            T = this._paused,
            x = this._cycle;
        if (t >= f)
          this._locked || (this._totalTime = f, this._cycle = this._repeat), this._reversed || this._hasPausedChild() || (n = !0, h = "onComplete", _ = !!this._timeline.autoRemoveChildren, 0 === this._duration && (0 === t || 0 > y || y === r) && y !== t && this._first && (_ = !0, y > r && (h = "onReverseComplete"))), this._rawPrevTime = this._duration || !e || t || this._rawPrevTime === t ? t : r, this._yoyo && 0 !== (1 & this._cycle) ? this._time = t = 0 : (this._time = p, t = p + 1e-4);
        else if (1e-7 > t)
          if (this._locked || (this._totalTime = this._cycle = 0), this._time = 0, (0 !== m || 0 === p && y !== r && (y > 0 || 0 > t && y >= 0) && !this._locked) && (h = "onReverseComplete", n = this._reversed), 0 > t)
            this._active = !1, this._timeline.autoRemoveChildren && this._reversed ? (_ = n = !0, h = "onReverseComplete") : y >= 0 && this._first && (_ = !0), this._rawPrevTime = t;
          else {
            if (this._rawPrevTime = p || !e || t || this._rawPrevTime === t ? t : r, 0 === t && n)
              for (s = this._first; s && 0 === s._startTime; )
                s._duration || (n = !1), s = s._next;
            t = 0, this._initted || (_ = !0);
          }
        else if (0 === p && 0 > y && (_ = !0), this._time = this._rawPrevTime = t, this._locked || (this._totalTime = t, 0 !== this._repeat && (u = p + this._repeatDelay, this._cycle = this._totalTime / u >> 0, 0 !== this._cycle && this._cycle === this._totalTime / u && this._cycle--, this._time = this._totalTime - this._cycle * u, this._yoyo && 0 !== (1 & this._cycle) && (this._time = p - this._time), this._time > p ? (this._time = p, t = p + 1e-4) : 0 > this._time ? this._time = t = 0 : t = this._time)), this._hasPause && !this._forcingPlayhead && !e) {
          if (t = this._time, t >= m)
            for (s = this._first; s && t >= s._startTime && !c; )
              s._duration || "isPause" !== s.data || s.ratio || 0 === s._startTime && 0 === this._rawPrevTime || (c = s), s = s._next;
          else
            for (s = this._last; s && s._startTime >= t && !c; )
              s._duration || "isPause" === s.data && s._rawPrevTime > 0 && (c = s), s = s._prev;
          c && (this._time = t = c._startTime, this._totalTime = t + this._cycle * (this._totalDuration + this._repeatDelay));
        }
        if (this._cycle !== x && !this._locked) {
          var w = this._yoyo && 0 !== (1 & x),
              b = w === (this._yoyo && 0 !== (1 & this._cycle)),
              P = this._totalTime,
              k = this._cycle,
              S = this._rawPrevTime,
              R = this._time;
          if (this._totalTime = x * p, x > this._cycle ? w = !w : this._totalTime += p, this._time = m, this._rawPrevTime = 0 === p ? y - 1e-4 : y, this._cycle = x, this._locked = !0, m = w ? 0 : p, this.render(m, e, 0 === p), e || this._gc || this.vars.onRepeat && this._callback("onRepeat"), b && (m = w ? p + 1e-4 : -1e-4, this.render(m, !0, !1)), this._locked = !1, this._paused && !T)
            return;
          this._time = R, this._totalTime = P, this._cycle = k, this._rawPrevTime = S;
        }
        if (!(this._time !== m && this._first || i || _ || c))
          return d !== this._totalTime && this._onUpdate && (e || this._callback("onUpdate")), void 0;
        if (this._initted || (this._initted = !0), this._active || !this._paused && this._totalTime !== d && t > 0 && (this._active = !0), 0 === d && this.vars.onStart && 0 !== this._totalTime && (e || this._callback("onStart")), this._time >= m)
          for (s = this._first; s && (l = s._next, !this._paused || T); )
            (s._active || s._startTime <= this._time && !s._paused && !s._gc) && (c === s && this.pause(), s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (t - s._startTime) * s._timeScale, e, i) : s.render((t - s._startTime) * s._timeScale, e, i)), s = l;
        else
          for (s = this._last; s && (l = s._prev, !this._paused || T); ) {
            if (s._active || m >= s._startTime && !s._paused && !s._gc) {
              if (c === s) {
                for (c = s._prev; c && c.endTime() > this._time; )
                  c.render(c._reversed ? c.totalDuration() - (t - c._startTime) * c._timeScale : (t - c._startTime) * c._timeScale, e, i), c = c._prev;
                c = null, this.pause();
              }
              s._reversed ? s.render((s._dirty ? s.totalDuration() : s._totalDuration) - (t - s._startTime) * s._timeScale, e, i) : s.render((t - s._startTime) * s._timeScale, e, i);
            }
            s = l;
          }
        this._onUpdate && (e || (a.length && o(), this._callback("onUpdate"))), h && (this._locked || this._gc || (g === this._startTime || v !== this._timeScale) && (0 === this._time || f >= this.totalDuration()) && (n && (a.length && o(), this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[h] && this._callback(h)));
      }, h.getActive = function(t, e, i) {
        null == t && (t = !0), null == e && (e = !0), null == i && (i = !1);
        var s,
            r,
            n = [],
            a = this.getChildren(t, e, i),
            o = 0,
            l = a.length;
        for (s = 0; l > s; s++)
          r = a[s], r.isActive() && (n[o++] = r);
        return n;
      }, h.getLabelAfter = function(t) {
        t || 0 !== t && (t = this._time);
        var e,
            i = this.getLabelsArray(),
            s = i.length;
        for (e = 0; s > e; e++)
          if (i[e].time > t)
            return i[e].name;
        return null;
      }, h.getLabelBefore = function(t) {
        null == t && (t = this._time);
        for (var e = this.getLabelsArray(),
            i = e.length; --i > -1; )
          if (t > e[i].time)
            return e[i].name;
        return null;
      }, h.getLabelsArray = function() {
        var t,
            e = [],
            i = 0;
        for (t in this._labels)
          e[i++] = {
            time: this._labels[t],
            name: t
          };
        return e.sort(function(t, e) {
          return t.time - e.time;
        }), e;
      }, h.progress = function(t, e) {
        return arguments.length ? this.totalTime(this.duration() * (this._yoyo && 0 !== (1 & this._cycle) ? 1 - t : t) + this._cycle * (this._duration + this._repeatDelay), e) : this._time / this.duration();
      }, h.totalProgress = function(t, e) {
        return arguments.length ? this.totalTime(this.totalDuration() * t, e) : this._totalTime / this.totalDuration();
      }, h.totalDuration = function(e) {
        return arguments.length ? -1 === this._repeat ? this : this.duration((e - this._repeat * this._repeatDelay) / (this._repeat + 1)) : (this._dirty && (t.prototype.totalDuration.call(this), this._totalDuration = -1 === this._repeat ? 999999999999 : this._duration * (this._repeat + 1) + this._repeatDelay * this._repeat), this._totalDuration);
      }, h.time = function(t, e) {
        return arguments.length ? (this._dirty && this.totalDuration(), t > this._duration && (t = this._duration), this._yoyo && 0 !== (1 & this._cycle) ? t = this._duration - t + this._cycle * (this._duration + this._repeatDelay) : 0 !== this._repeat && (t += this._cycle * (this._duration + this._repeatDelay)), this.totalTime(t, e)) : this._time;
      }, h.repeat = function(t) {
        return arguments.length ? (this._repeat = t, this._uncache(!0)) : this._repeat;
      }, h.repeatDelay = function(t) {
        return arguments.length ? (this._repeatDelay = t, this._uncache(!0)) : this._repeatDelay;
      }, h.yoyo = function(t) {
        return arguments.length ? (this._yoyo = t, this) : this._yoyo;
      }, h.currentLabel = function(t) {
        return arguments.length ? this.seek(t, !0) : this.getLabelBefore(this._time + 1e-8);
      }, s;
    }, !0), function() {
      var t = 180 / Math.PI,
          e = [],
          i = [],
          s = [],
          r = {},
          n = _gsScope._gsDefine.globals,
          a = function(t, e, i, s) {
            this.a = t, this.b = e, this.c = i, this.d = s, this.da = s - t, this.ca = i - t, this.ba = e - t;
          },
          o = ",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,",
          l = function(t, e, i, s) {
            var r = {a: t},
                n = {},
                a = {},
                o = {c: s},
                l = (t + e) / 2,
                h = (e + i) / 2,
                _ = (i + s) / 2,
                u = (l + h) / 2,
                c = (h + _) / 2,
                f = (c - u) / 8;
            return r.b = l + (t - l) / 4, n.b = u + f, r.c = n.a = (r.b + n.b) / 2, n.c = a.a = (u + c) / 2, a.b = c - f, o.b = _ + (s - _) / 4, a.c = o.a = (a.b + o.b) / 2, [r, n, a, o];
          },
          h = function(t, r, n, a, o) {
            var h,
                _,
                u,
                c,
                f,
                p,
                m,
                d,
                g,
                v,
                y,
                T,
                x,
                w = t.length - 1,
                b = 0,
                P = t[0].a;
            for (h = 0; w > h; h++)
              f = t[b], _ = f.a, u = f.d, c = t[b + 1].d, o ? (y = e[h], T = i[h], x = .25 * (T + y) * r / (a ? .5 : s[h] || .5), p = u - (u - _) * (a ? .5 * r : 0 !== y ? x / y : 0), m = u + (c - u) * (a ? .5 * r : 0 !== T ? x / T : 0), d = u - (p + ((m - p) * (3 * y / (y + T) + .5) / 4 || 0))) : (p = u - .5 * (u - _) * r, m = u + .5 * (c - u) * r, d = u - (p + m) / 2), p += d, m += d, f.c = g = p, f.b = 0 !== h ? P : P = f.a + .6 * (f.c - f.a), f.da = u - _, f.ca = g - _, f.ba = P - _, n ? (v = l(_, P, g, u), t.splice(b, 1, v[0], v[1], v[2], v[3]), b += 4) : b++, P = m;
            f = t[b], f.b = P, f.c = P + .4 * (f.d - P), f.da = f.d - f.a, f.ca = f.c - f.a, f.ba = P - f.a, n && (v = l(f.a, P, f.c, f.d), t.splice(b, 1, v[0], v[1], v[2], v[3]));
          },
          _ = function(t, s, r, n) {
            var o,
                l,
                h,
                _,
                u,
                c,
                f = [];
            if (n)
              for (t = [n].concat(t), l = t.length; --l > -1; )
                "string" == typeof(c = t[l][s]) && "=" === c.charAt(1) && (t[l][s] = n[s] + Number(c.charAt(0) + c.substr(2)));
            if (o = t.length - 2, 0 > o)
              return f[0] = new a(t[0][s], 0, 0, t[-1 > o ? 0 : 1][s]), f;
            for (l = 0; o > l; l++)
              h = t[l][s], _ = t[l + 1][s], f[l] = new a(h, 0, 0, _), r && (u = t[l + 2][s], e[l] = (e[l] || 0) + (_ - h) * (_ - h), i[l] = (i[l] || 0) + (u - _) * (u - _));
            return f[l] = new a(t[l][s], 0, 0, t[l + 1][s]), f;
          },
          u = function(t, n, a, l, u, c) {
            var f,
                p,
                m,
                d,
                g,
                v,
                y,
                T,
                x = {},
                w = [],
                b = c || t[0];
            u = "string" == typeof u ? "," + u + "," : o, null == n && (n = 1);
            for (p in t[0])
              w.push(p);
            if (t.length > 1) {
              for (T = t[t.length - 1], y = !0, f = w.length; --f > -1; )
                if (p = w[f], Math.abs(b[p] - T[p]) > .05) {
                  y = !1;
                  break;
                }
              y && (t = t.concat(), c && t.unshift(c), t.push(t[1]), c = t[t.length - 3]);
            }
            for (e.length = i.length = s.length = 0, f = w.length; --f > -1; )
              p = w[f], r[p] = -1 !== u.indexOf("," + p + ","), x[p] = _(t, p, r[p], c);
            for (f = e.length; --f > -1; )
              e[f] = Math.sqrt(e[f]), i[f] = Math.sqrt(i[f]);
            if (!l) {
              for (f = w.length; --f > -1; )
                if (r[p])
                  for (m = x[w[f]], v = m.length - 1, d = 0; v > d; d++)
                    g = m[d + 1].da / i[d] + m[d].da / e[d], s[d] = (s[d] || 0) + g * g;
              for (f = s.length; --f > -1; )
                s[f] = Math.sqrt(s[f]);
            }
            for (f = w.length, d = a ? 4 : 1; --f > -1; )
              p = w[f], m = x[p], h(m, n, a, l, r[p]), y && (m.splice(0, d), m.splice(m.length - d, d));
            return x;
          },
          c = function(t, e, i) {
            e = e || "soft";
            var s,
                r,
                n,
                o,
                l,
                h,
                _,
                u,
                c,
                f,
                p,
                m = {},
                d = "cubic" === e ? 3 : 2,
                g = "soft" === e,
                v = [];
            if (g && i && (t = [i].concat(t)), null == t || d + 1 > t.length)
              throw "invalid Bezier data";
            for (c in t[0])
              v.push(c);
            for (h = v.length; --h > -1; ) {
              for (c = v[h], m[c] = l = [], f = 0, u = t.length, _ = 0; u > _; _++)
                s = null == i ? t[_][c] : "string" == typeof(p = t[_][c]) && "=" === p.charAt(1) ? i[c] + Number(p.charAt(0) + p.substr(2)) : Number(p), g && _ > 1 && u - 1 > _ && (l[f++] = (s + l[f - 2]) / 2), l[f++] = s;
              for (u = f - d + 1, f = 0, _ = 0; u > _; _ += d)
                s = l[_], r = l[_ + 1], n = l[_ + 2], o = 2 === d ? 0 : l[_ + 3], l[f++] = p = 3 === d ? new a(s, r, n, o) : new a(s, (2 * r + s) / 3, (2 * r + n) / 3, n);
              l.length = f;
            }
            return m;
          },
          f = function(t, e, i) {
            for (var s,
                r,
                n,
                a,
                o,
                l,
                h,
                _,
                u,
                c,
                f,
                p = 1 / i,
                m = t.length; --m > -1; )
              for (c = t[m], n = c.a, a = c.d - n, o = c.c - n, l = c.b - n, s = r = 0, _ = 1; i >= _; _++)
                h = p * _, u = 1 - h, s = r - (r = (h * h * a + 3 * u * (h * o + u * l)) * h), f = m * i + _ - 1, e[f] = (e[f] || 0) + s * s;
          },
          p = function(t, e) {
            e = e >> 0 || 6;
            var i,
                s,
                r,
                n,
                a = [],
                o = [],
                l = 0,
                h = 0,
                _ = e - 1,
                u = [],
                c = [];
            for (i in t)
              f(t[i], a, e);
            for (r = a.length, s = 0; r > s; s++)
              l += Math.sqrt(a[s]), n = s % e, c[n] = l, n === _ && (h += l, n = s / e >> 0, u[n] = c, o[n] = h, l = 0, c = []);
            return {
              length: h,
              lengths: o,
              segments: u
            };
          },
          m = _gsScope._gsDefine.plugin({
            propName: "bezier",
            priority: -1,
            version: "1.3.4",
            API: 2,
            global: !0,
            init: function(t, e, i) {
              this._target = t, e instanceof Array && (e = {values: e}), this._func = {}, this._round = {}, this._props = [], this._timeRes = null == e.timeResolution ? 6 : parseInt(e.timeResolution, 10);
              var s,
                  r,
                  n,
                  a,
                  o,
                  l = e.values || [],
                  h = {},
                  _ = l[0],
                  f = e.autoRotate || i.vars.orientToBezier;
              this._autoRotate = f ? f instanceof Array ? f : [["x", "y", "rotation", f === !0 ? 0 : Number(f) || 0]] : null;
              for (s in _)
                this._props.push(s);
              for (n = this._props.length; --n > -1; )
                s = this._props[n], this._overwriteProps.push(s), r = this._func[s] = "function" == typeof t[s], h[s] = r ? t[s.indexOf("set") || "function" != typeof t["get" + s.substr(3)] ? s : "get" + s.substr(3)]() : parseFloat(t[s]), o || h[s] !== l[0][s] && (o = h);
              if (this._beziers = "cubic" !== e.type && "quadratic" !== e.type && "soft" !== e.type ? u(l, isNaN(e.curviness) ? 1 : e.curviness, !1, "thruBasic" === e.type, e.correlate, o) : c(l, e.type, h), this._segCount = this._beziers[s].length, this._timeRes) {
                var m = p(this._beziers, this._timeRes);
                this._length = m.length, this._lengths = m.lengths, this._segments = m.segments, this._l1 = this._li = this._s1 = this._si = 0, this._l2 = this._lengths[0], this._curSeg = this._segments[0], this._s2 = this._curSeg[0], this._prec = 1 / this._curSeg.length;
              }
              if (f = this._autoRotate)
                for (this._initialRotations = [], f[0] instanceof Array || (this._autoRotate = f = [f]), n = f.length; --n > -1; ) {
                  for (a = 0; 3 > a; a++)
                    s = f[n][a], this._func[s] = "function" == typeof t[s] ? t[s.indexOf("set") || "function" != typeof t["get" + s.substr(3)] ? s : "get" + s.substr(3)] : !1;
                  s = f[n][2], this._initialRotations[n] = this._func[s] ? this._func[s].call(this._target) : this._target[s];
                }
              return this._startRatio = i.vars.runBackwards ? 1 : 0, !0;
            },
            set: function(e) {
              var i,
                  s,
                  r,
                  n,
                  a,
                  o,
                  l,
                  h,
                  _,
                  u,
                  c = this._segCount,
                  f = this._func,
                  p = this._target,
                  m = e !== this._startRatio;
              if (this._timeRes) {
                if (_ = this._lengths, u = this._curSeg, e *= this._length, r = this._li, e > this._l2 && c - 1 > r) {
                  for (h = c - 1; h > r && e >= (this._l2 = _[++r]); )
                    ;
                  this._l1 = _[r - 1], this._li = r, this._curSeg = u = this._segments[r], this._s2 = u[this._s1 = this._si = 0];
                } else if (this._l1 > e && r > 0) {
                  for (; r > 0 && (this._l1 = _[--r]) >= e; )
                    ;
                  0 === r && this._l1 > e ? this._l1 = 0 : r++, this._l2 = _[r], this._li = r, this._curSeg = u = this._segments[r], this._s1 = u[(this._si = u.length - 1) - 1] || 0, this._s2 = u[this._si];
                }
                if (i = r, e -= this._l1, r = this._si, e > this._s2 && u.length - 1 > r) {
                  for (h = u.length - 1; h > r && e >= (this._s2 = u[++r]); )
                    ;
                  this._s1 = u[r - 1], this._si = r;
                } else if (this._s1 > e && r > 0) {
                  for (; r > 0 && (this._s1 = u[--r]) >= e; )
                    ;
                  0 === r && this._s1 > e ? this._s1 = 0 : r++, this._s2 = u[r], this._si = r;
                }
                o = (r + (e - this._s1) / (this._s2 - this._s1)) * this._prec;
              } else
                i = 0 > e ? 0 : e >= 1 ? c - 1 : c * e >> 0, o = (e - i * (1 / c)) * c;
              for (s = 1 - o, r = this._props.length; --r > -1; )
                n = this._props[r], a = this._beziers[n][i], l = (o * o * a.da + 3 * s * (o * a.ca + s * a.ba)) * o + a.a, this._round[n] && (l = Math.round(l)), f[n] ? p[n](l) : p[n] = l;
              if (this._autoRotate) {
                var d,
                    g,
                    v,
                    y,
                    T,
                    x,
                    w,
                    b = this._autoRotate;
                for (r = b.length; --r > -1; )
                  n = b[r][2], x = b[r][3] || 0, w = b[r][4] === !0 ? 1 : t, a = this._beziers[b[r][0]], d = this._beziers[b[r][1]], a && d && (a = a[i], d = d[i], g = a.a + (a.b - a.a) * o, y = a.b + (a.c - a.b) * o, g += (y - g) * o, y += (a.c + (a.d - a.c) * o - y) * o, v = d.a + (d.b - d.a) * o, T = d.b + (d.c - d.b) * o, v += (T - v) * o, T += (d.c + (d.d - d.c) * o - T) * o, l = m ? Math.atan2(T - v, y - g) * w + x : this._initialRotations[r], f[n] ? p[n](l) : p[n] = l);
              }
            }
          }),
          d = m.prototype;
      m.bezierThrough = u, m.cubicToQuadratic = l, m._autoCSS = !0, m.quadraticToCubic = function(t, e, i) {
        return new a(t, (2 * e + t) / 3, (2 * e + i) / 3, i);
      }, m._cssRegister = function() {
        var t = n.CSSPlugin;
        if (t) {
          var e = t._internals,
              i = e._parseToProxy,
              s = e._setPluginRatio,
              r = e.CSSPropTween;
          e._registerComplexSpecialProp("bezier", {parser: function(t, e, n, a, o, l) {
              e instanceof Array && (e = {values: e}), l = new m;
              var h,
                  _,
                  u,
                  c = e.values,
                  f = c.length - 1,
                  p = [],
                  d = {};
              if (0 > f)
                return o;
              for (h = 0; f >= h; h++)
                u = i(t, c[h], a, o, l, f !== h), p[h] = u.end;
              for (_ in e)
                d[_] = e[_];
              return d.values = p, o = new r(t, "bezier", 0, 0, u.pt, 2), o.data = u, o.plugin = l, o.setRatio = s, 0 === d.autoRotate && (d.autoRotate = !0), !d.autoRotate || d.autoRotate instanceof Array || (h = d.autoRotate === !0 ? 0 : Number(d.autoRotate), d.autoRotate = null != u.end.left ? [["left", "top", "rotation", h, !1]] : null != u.end.x ? [["x", "y", "rotation", h, !1]] : !1), d.autoRotate && (a._transform || a._enableTransforms(!1), u.autoRotate = a._target._gsTransform), l._onInitTween(u.proxy, d, a._tween), o;
            }});
        }
      }, d._roundProps = function(t, e) {
        for (var i = this._overwriteProps,
            s = i.length; --s > -1; )
          (t[i[s]] || t.bezier || t.bezierThrough) && (this._round[i[s]] = e);
      }, d._kill = function(t) {
        var e,
            i,
            s = this._props;
        for (e in this._beziers)
          if (e in t)
            for (delete this._beziers[e], delete this._func[e], i = s.length; --i > -1; )
              s[i] === e && s.splice(i, 1);
        return this._super._kill.call(this, t);
      };
    }(), _gsScope._gsDefine("plugins.CSSPlugin", ["plugins.TweenPlugin", "TweenLite"], function(t, e) {
      var i,
          s,
          r,
          n,
          a = function() {
            t.call(this, "css"), this._overwriteProps.length = 0, this.setRatio = a.prototype.setRatio;
          },
          o = _gsScope._gsDefine.globals,
          l = {},
          h = a.prototype = new t("css");
      h.constructor = a, a.version = "1.18.0", a.API = 2, a.defaultTransformPerspective = 0, a.defaultSkewType = "compensated", a.defaultSmoothOrigin = !0, h = "px", a.suffixMap = {
        top: h,
        right: h,
        bottom: h,
        left: h,
        width: h,
        height: h,
        fontSize: h,
        padding: h,
        margin: h,
        perspective: h,
        lineHeight: ""
      };
      var _,
          u,
          c,
          f,
          p,
          m,
          d = /(?:\d|\-\d|\.\d|\-\.\d)+/g,
          g = /(?:\d|\-\d|\.\d|\-\.\d|\+=\d|\-=\d|\+=.\d|\-=\.\d)+/g,
          v = /(?:\+=|\-=|\-|\b)[\d\-\.]+[a-zA-Z0-9]*(?:%|\b)/gi,
          y = /(?![+-]?\d*\.?\d+|[+-]|e[+-]\d+)[^0-9]/g,
          T = /(?:\d|\-|\+|=|#|\.)*/g,
          x = /opacity *= *([^)]*)/i,
          w = /opacity:([^;]*)/i,
          b = /alpha\(opacity *=.+?\)/i,
          P = /^(rgb|hsl)/,
          k = /([A-Z])/g,
          S = /-([a-z])/gi,
          R = /(^(?:url\(\"|url\())|(?:(\"\))$|\)$)/gi,
          O = function(t, e) {
            return e.toUpperCase();
          },
          A = /(?:Left|Right|Width)/i,
          C = /(M11|M12|M21|M22)=[\d\-\.e]+/gi,
          D = /progid\:DXImageTransform\.Microsoft\.Matrix\(.+?\)/i,
          M = /,(?=[^\)]*(?:\(|$))/gi,
          z = Math.PI / 180,
          F = 180 / Math.PI,
          I = {},
          E = document,
          N = function(t) {
            return E.createElementNS ? E.createElementNS("http://www.w3.org/1999/xhtml", t) : E.createElement(t);
          },
          L = N("div"),
          X = N("img"),
          B = a._internals = {_specialProps: l},
          j = navigator.userAgent,
          Y = function() {
            var t = j.indexOf("Android"),
                e = N("a");
            return c = -1 !== j.indexOf("Safari") && -1 === j.indexOf("Chrome") && (-1 === t || Number(j.substr(t + 8, 1)) > 3), p = c && 6 > Number(j.substr(j.indexOf("Version/") + 8, 1)), f = -1 !== j.indexOf("Firefox"), (/MSIE ([0-9]{1,}[\.0-9]{0,})/.exec(j) || /Trident\/.*rv:([0-9]{1,}[\.0-9]{0,})/.exec(j)) && (m = parseFloat(RegExp.$1)), e ? (e.style.cssText = "top:1px;opacity:.55;", /^0.55/.test(e.style.opacity)) : !1;
          }(),
          U = function(t) {
            return x.test("string" == typeof t ? t : (t.currentStyle ? t.currentStyle.filter : t.style.filter) || "") ? parseFloat(RegExp.$1) / 100 : 1;
          },
          q = function(t) {
            window.console && console.log(t);
          },
          V = "",
          G = "",
          W = function(t, e) {
            e = e || L;
            var i,
                s,
                r = e.style;
            if (void 0 !== r[t])
              return t;
            for (t = t.charAt(0).toUpperCase() + t.substr(1), i = ["O", "Moz", "ms", "Ms", "Webkit"], s = 5; --s > -1 && void 0 === r[i[s] + t]; )
              ;
            return s >= 0 ? (G = 3 === s ? "ms" : i[s], V = "-" + G.toLowerCase() + "-", G + t) : null;
          },
          Z = E.defaultView ? E.defaultView.getComputedStyle : function() {},
          Q = a.getStyle = function(t, e, i, s, r) {
            var n;
            return Y || "opacity" !== e ? (!s && t.style[e] ? n = t.style[e] : (i = i || Z(t)) ? n = i[e] || i.getPropertyValue(e) || i.getPropertyValue(e.replace(k, "-$1").toLowerCase()) : t.currentStyle && (n = t.currentStyle[e]), null == r || n && "none" !== n && "auto" !== n && "auto auto" !== n ? n : r) : U(t);
          },
          $ = B.convertToPixels = function(t, i, s, r, n) {
            if ("px" === r || !r)
              return s;
            if ("auto" === r || !s)
              return 0;
            var o,
                l,
                h,
                _ = A.test(i),
                u = t,
                c = L.style,
                f = 0 > s;
            if (f && (s = -s), "%" === r && -1 !== i.indexOf("border"))
              o = s / 100 * (_ ? t.clientWidth : t.clientHeight);
            else {
              if (c.cssText = "border:0 solid red;position:" + Q(t, "position") + ";line-height:0;", "%" !== r && u.appendChild && "v" !== r.charAt(0) && "rem" !== r)
                c[_ ? "borderLeftWidth" : "borderTopWidth"] = s + r;
              else {
                if (u = t.parentNode || E.body, l = u._gsCache, h = e.ticker.frame, l && _ && l.time === h)
                  return l.width * s / 100;
                c[_ ? "width" : "height"] = s + r;
              }
              u.appendChild(L), o = parseFloat(L[_ ? "offsetWidth" : "offsetHeight"]), u.removeChild(L), _ && "%" === r && a.cacheWidths !== !1 && (l = u._gsCache = u._gsCache || {}, l.time = h, l.width = 100 * (o / s)), 0 !== o || n || (o = $(t, i, s, r, !0));
            }
            return f ? -o : o;
          },
          H = B.calculateOffset = function(t, e, i) {
            if ("absolute" !== Q(t, "position", i))
              return 0;
            var s = "left" === e ? "Left" : "Top",
                r = Q(t, "margin" + s, i);
            return t["offset" + s] - ($(t, e, parseFloat(r), r.replace(T, "")) || 0);
          },
          K = function(t, e) {
            var i,
                s,
                r,
                n = {};
            if (e = e || Z(t, null))
              if (i = e.length)
                for (; --i > -1; )
                  r = e[i], (-1 === r.indexOf("-transform") || ke === r) && (n[r.replace(S, O)] = e.getPropertyValue(r));
              else
                for (i in e)
                  (-1 === i.indexOf("Transform") || Pe === i) && (n[i] = e[i]);
            else if (e = t.currentStyle || t.style)
              for (i in e)
                "string" == typeof i && void 0 === n[i] && (n[i.replace(S, O)] = e[i]);
            return Y || (n.opacity = U(t)), s = Ne(t, e, !1), n.rotation = s.rotation, n.skewX = s.skewX, n.scaleX = s.scaleX, n.scaleY = s.scaleY, n.x = s.x, n.y = s.y, Re && (n.z = s.z, n.rotationX = s.rotationX, n.rotationY = s.rotationY, n.scaleZ = s.scaleZ), n.filters && delete n.filters, n;
          },
          J = function(t, e, i, s, r) {
            var n,
                a,
                o,
                l = {},
                h = t.style;
            for (a in i)
              "cssText" !== a && "length" !== a && isNaN(a) && (e[a] !== (n = i[a]) || r && r[a]) && -1 === a.indexOf("Origin") && ("number" == typeof n || "string" == typeof n) && (l[a] = "auto" !== n || "left" !== a && "top" !== a ? "" !== n && "auto" !== n && "none" !== n || "string" != typeof e[a] || "" === e[a].replace(y, "") ? n : 0 : H(t, a), void 0 !== h[a] && (o = new pe(h, a, h[a], o)));
            if (s)
              for (a in s)
                "className" !== a && (l[a] = s[a]);
            return {
              difs: l,
              firstMPT: o
            };
          },
          te = {
            width: ["Left", "Right"],
            height: ["Top", "Bottom"]
          },
          ee = ["marginLeft", "marginRight", "marginTop", "marginBottom"],
          ie = function(t, e, i) {
            var s = parseFloat("width" === e ? t.offsetWidth : t.offsetHeight),
                r = te[e],
                n = r.length;
            for (i = i || Z(t, null); --n > -1; )
              s -= parseFloat(Q(t, "padding" + r[n], i, !0)) || 0, s -= parseFloat(Q(t, "border" + r[n] + "Width", i, !0)) || 0;
            return s;
          },
          se = function(t, e) {
            if ("contain" === t || "auto" === t || "auto auto" === t)
              return t + " ";
            (null == t || "" === t) && (t = "0 0");
            var i = t.split(" "),
                s = -1 !== t.indexOf("left") ? "0%" : -1 !== t.indexOf("right") ? "100%" : i[0],
                r = -1 !== t.indexOf("top") ? "0%" : -1 !== t.indexOf("bottom") ? "100%" : i[1];
            return null == r ? r = "center" === s ? "50%" : "0" : "center" === r && (r = "50%"), ("center" === s || isNaN(parseFloat(s)) && -1 === (s + "").indexOf("=")) && (s = "50%"), t = s + " " + r + (i.length > 2 ? " " + i[2] : ""), e && (e.oxp = -1 !== s.indexOf("%"), e.oyp = -1 !== r.indexOf("%"), e.oxr = "=" === s.charAt(1), e.oyr = "=" === r.charAt(1), e.ox = parseFloat(s.replace(y, "")), e.oy = parseFloat(r.replace(y, "")), e.v = t), e || t;
          },
          re = function(t, e) {
            return "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) : parseFloat(t) - parseFloat(e);
          },
          ne = function(t, e) {
            return null == t ? e : "string" == typeof t && "=" === t.charAt(1) ? parseInt(t.charAt(0) + "1", 10) * parseFloat(t.substr(2)) + e : parseFloat(t);
          },
          ae = function(t, e, i, s) {
            var r,
                n,
                a,
                o,
                l,
                h = 1e-6;
            return null == t ? o = e : "number" == typeof t ? o = t : (r = 360, n = t.split("_"), l = "=" === t.charAt(1), a = (l ? parseInt(t.charAt(0) + "1", 10) * parseFloat(n[0].substr(2)) : parseFloat(n[0])) * (-1 === t.indexOf("rad") ? 1 : F) - (l ? 0 : e), n.length && (s && (s[i] = e + a), -1 !== t.indexOf("short") && (a %= r, a !== a % (r / 2) && (a = 0 > a ? a + r : a - r)), -1 !== t.indexOf("_cw") && 0 > a ? a = (a + 9999999999 * r) % r - (0 | a / r) * r : -1 !== t.indexOf("ccw") && a > 0 && (a = (a - 9999999999 * r) % r - (0 | a / r) * r)), o = e + a), h > o && o > -h && (o = 0), o;
          },
          oe = {
            aqua: [0, 255, 255],
            lime: [0, 255, 0],
            silver: [192, 192, 192],
            black: [0, 0, 0],
            maroon: [128, 0, 0],
            teal: [0, 128, 128],
            blue: [0, 0, 255],
            navy: [0, 0, 128],
            white: [255, 255, 255],
            fuchsia: [255, 0, 255],
            olive: [128, 128, 0],
            yellow: [255, 255, 0],
            orange: [255, 165, 0],
            gray: [128, 128, 128],
            purple: [128, 0, 128],
            green: [0, 128, 0],
            red: [255, 0, 0],
            pink: [255, 192, 203],
            cyan: [0, 255, 255],
            transparent: [255, 255, 255, 0]
          },
          le = function(t, e, i) {
            return t = 0 > t ? t + 1 : t > 1 ? t - 1 : t, 0 | 255 * (1 > 6 * t ? e + 6 * (i - e) * t : .5 > t ? i : 2 > 3 * t ? e + 6 * (i - e) * (2 / 3 - t) : e) + .5;
          },
          he = a.parseColor = function(t, e) {
            var i,
                s,
                r,
                n,
                a,
                o,
                l,
                h,
                _,
                u,
                c;
            if (t)
              if ("number" == typeof t)
                i = [t >> 16, 255 & t >> 8, 255 & t];
              else {
                if ("," === t.charAt(t.length - 1) && (t = t.substr(0, t.length - 1)), oe[t])
                  i = oe[t];
                else if ("#" === t.charAt(0))
                  4 === t.length && (s = t.charAt(1), r = t.charAt(2), n = t.charAt(3), t = "#" + s + s + r + r + n + n), t = parseInt(t.substr(1), 16), i = [t >> 16, 255 & t >> 8, 255 & t];
                else if ("hsl" === t.substr(0, 3))
                  if (i = c = t.match(d), e) {
                    if (-1 !== t.indexOf("="))
                      return t.match(g);
                  } else
                    a = Number(i[0]) % 360 / 360, o = Number(i[1]) / 100, l = Number(i[2]) / 100, r = .5 >= l ? l * (o + 1) : l + o - l * o, s = 2 * l - r, i.length > 3 && (i[3] = Number(t[3])), i[0] = le(a + 1 / 3, s, r), i[1] = le(a, s, r), i[2] = le(a - 1 / 3, s, r);
                else
                  i = t.match(d) || oe.transparent;
                i[0] = Number(i[0]), i[1] = Number(i[1]), i[2] = Number(i[2]), i.length > 3 && (i[3] = Number(i[3]));
              }
            else
              i = oe.black;
            return e && !c && (s = i[0] / 255, r = i[1] / 255, n = i[2] / 255, h = Math.max(s, r, n), _ = Math.min(s, r, n), l = (h + _) / 2, h === _ ? a = o = 0 : (u = h - _, o = l > .5 ? u / (2 - h - _) : u / (h + _), a = h === s ? (r - n) / u + (n > r ? 6 : 0) : h === r ? (n - s) / u + 2 : (s - r) / u + 4, a *= 60), i[0] = 0 | a + .5, i[1] = 0 | 100 * o + .5, i[2] = 0 | 100 * l + .5), i;
          },
          _e = function(t, e) {
            var i,
                s,
                r,
                n = t.match(ue) || [],
                a = 0,
                o = n.length ? "" : t;
            for (i = 0; n.length > i; i++)
              s = n[i], r = t.substr(a, t.indexOf(s, a) - a), a += r.length + s.length, s = he(s, e), 3 === s.length && s.push(1), o += r + (e ? "hsla(" + s[0] + "," + s[1] + "%," + s[2] + "%," + s[3] : "rgba(" + s.join(",")) + ")";
            return o;
          },
          ue = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#.+?\\b";
      for (h in oe)
        ue += "|" + h + "\\b";
      ue = RegExp(ue + ")", "gi"), a.colorStringFilter = function(t) {
        var e,
            i = t[0] + t[1];
        ue.lastIndex = 0, ue.test(i) && (e = -1 !== i.indexOf("hsl(") || -1 !== i.indexOf("hsla("), t[0] = _e(t[0], e), t[1] = _e(t[1], e));
      }, e.defaultStringFilter || (e.defaultStringFilter = a.colorStringFilter);
      var ce = function(t, e, i, s) {
        if (null == t)
          return function(t) {
            return t;
          };
        var r,
            n = e ? (t.match(ue) || [""])[0] : "",
            a = t.split(n).join("").match(v) || [],
            o = t.substr(0, t.indexOf(a[0])),
            l = ")" === t.charAt(t.length - 1) ? ")" : "",
            h = -1 !== t.indexOf(" ") ? " " : ",",
            _ = a.length,
            u = _ > 0 ? a[0].replace(d, "") : "";
        return _ ? r = e ? function(t) {
          var e,
              c,
              f,
              p;
          if ("number" == typeof t)
            t += u;
          else if (s && M.test(t)) {
            for (p = t.replace(M, "|").split("|"), f = 0; p.length > f; f++)
              p[f] = r(p[f]);
            return p.join(",");
          }
          if (e = (t.match(ue) || [n])[0], c = t.split(e).join("").match(v) || [], f = c.length, _ > f--)
            for (; _ > ++f; )
              c[f] = i ? c[0 | (f - 1) / 2] : a[f];
          return o + c.join(h) + h + e + l + (-1 !== t.indexOf("inset") ? " inset" : "");
        } : function(t) {
          var e,
              n,
              c;
          if ("number" == typeof t)
            t += u;
          else if (s && M.test(t)) {
            for (n = t.replace(M, "|").split("|"), c = 0; n.length > c; c++)
              n[c] = r(n[c]);
            return n.join(",");
          }
          if (e = t.match(v) || [], c = e.length, _ > c--)
            for (; _ > ++c; )
              e[c] = i ? e[0 | (c - 1) / 2] : a[c];
          return o + e.join(h) + l;
        } : function(t) {
          return t;
        };
      },
          fe = function(t) {
            return t = t.split(","), function(e, i, s, r, n, a, o) {
              var l,
                  h = (i + "").split(" ");
              for (o = {}, l = 0; 4 > l; l++)
                o[t[l]] = h[l] = h[l] || h[(l - 1) / 2 >> 0];
              return r.parse(e, o, n, a);
            };
          },
          pe = (B._setPluginRatio = function(t) {
            this.plugin.setRatio(t);
            for (var e,
                i,
                s,
                r,
                n = this.data,
                a = n.proxy,
                o = n.firstMPT,
                l = 1e-6; o; )
              e = a[o.v], o.r ? e = Math.round(e) : l > e && e > -l && (e = 0), o.t[o.p] = e, o = o._next;
            if (n.autoRotate && (n.autoRotate.rotation = a.rotation), 1 === t)
              for (o = n.firstMPT; o; ) {
                if (i = o.t, i.type) {
                  if (1 === i.type) {
                    for (r = i.xs0 + i.s + i.xs1, s = 1; i.l > s; s++)
                      r += i["xn" + s] + i["xs" + (s + 1)];
                    i.e = r;
                  }
                } else
                  i.e = i.s + i.xs0;
                o = o._next;
              }
          }, function(t, e, i, s, r) {
            this.t = t, this.p = e, this.v = i, this.r = r, s && (s._prev = this, this._next = s);
          }),
          me = (B._parseToProxy = function(t, e, i, s, r, n) {
            var a,
                o,
                l,
                h,
                _,
                u = s,
                c = {},
                f = {},
                p = i._transform,
                m = I;
            for (i._transform = null, I = e, s = _ = i.parse(t, e, s, r), I = m, n && (i._transform = p, u && (u._prev = null, u._prev && (u._prev._next = null))); s && s !== u; ) {
              if (1 >= s.type && (o = s.p, f[o] = s.s + s.c, c[o] = s.s, n || (h = new pe(s, "s", o, h, s.r), s.c = 0), 1 === s.type))
                for (a = s.l; --a > 0; )
                  l = "xn" + a, o = s.p + "_" + l, f[o] = s.data[l], c[o] = s[l], n || (h = new pe(s, l, o, h, s.rxp[l]));
              s = s._next;
            }
            return {
              proxy: c,
              end: f,
              firstMPT: h,
              pt: _
            };
          }, B.CSSPropTween = function(t, e, s, r, a, o, l, h, _, u, c) {
            this.t = t, this.p = e, this.s = s, this.c = r, this.n = l || e, t instanceof me || n.push(this.n), this.r = h, this.type = o || 0, _ && (this.pr = _, i = !0), this.b = void 0 === u ? s : u, this.e = void 0 === c ? s + r : c, a && (this._next = a, a._prev = this);
          }),
          de = function(t, e, i, s, r, n) {
            var a = new me(t, e, i, s - i, r, -1, n);
            return a.b = i, a.e = a.xs0 = s, a;
          },
          ge = a.parseComplex = function(t, e, i, s, r, n, a, o, l, h) {
            i = i || n || "", a = new me(t, e, 0, 0, a, h ? 2 : 1, null, !1, o, i, s), s += "";
            var u,
                c,
                f,
                p,
                m,
                v,
                y,
                T,
                x,
                w,
                b,
                P,
                k,
                S = i.split(", ").join(",").split(" "),
                R = s.split(", ").join(",").split(" "),
                O = S.length,
                A = _ !== !1;
            for ((-1 !== s.indexOf(",") || -1 !== i.indexOf(",")) && (S = S.join(" ").replace(M, ", ").split(" "), R = R.join(" ").replace(M, ", ").split(" "), O = S.length), O !== R.length && (S = (n || "").split(" "), O = S.length), a.plugin = l, a.setRatio = h, ue.lastIndex = 0, u = 0; O > u; u++)
              if (p = S[u], m = R[u], T = parseFloat(p), T || 0 === T)
                a.appendXtra("", T, re(m, T), m.replace(g, ""), A && -1 !== m.indexOf("px"), !0);
              else if (r && ue.test(p))
                P = "," === m.charAt(m.length - 1) ? ")," : ")", k = -1 !== m.indexOf("hsl") && Y, p = he(p, k), m = he(m, k), x = p.length + m.length > 6, x && !Y && 0 === m[3] ? (a["xs" + a.l] += a.l ? " transparent" : "transparent", a.e = a.e.split(R[u]).join("transparent")) : (Y || (x = !1), k ? a.appendXtra(x ? "hsla(" : "hsl(", p[0], re(m[0], p[0]), ",", !1, !0).appendXtra("", p[1], re(m[1], p[1]), "%,", !1).appendXtra("", p[2], re(m[2], p[2]), x ? "%," : "%" + P, !1) : a.appendXtra(x ? "rgba(" : "rgb(", p[0], m[0] - p[0], ",", !0, !0).appendXtra("", p[1], m[1] - p[1], ",", !0).appendXtra("", p[2], m[2] - p[2], x ? "," : P, !0), x && (p = 4 > p.length ? 1 : p[3], a.appendXtra("", p, (4 > m.length ? 1 : m[3]) - p, P, !1))), ue.lastIndex = 0;
              else if (v = p.match(d)) {
                if (y = m.match(g), !y || y.length !== v.length)
                  return a;
                for (f = 0, c = 0; v.length > c; c++)
                  b = v[c], w = p.indexOf(b, f), a.appendXtra(p.substr(f, w - f), Number(b), re(y[c], b), "", A && "px" === p.substr(w + b.length, 2), 0 === c), f = w + b.length;
                a["xs" + a.l] += p.substr(f);
              } else
                a["xs" + a.l] += a.l ? " " + p : p;
            if (-1 !== s.indexOf("=") && a.data) {
              for (P = a.xs0 + a.data.s, u = 1; a.l > u; u++)
                P += a["xs" + u] + a.data["xn" + u];
              a.e = P + a["xs" + u];
            }
            return a.l || (a.type = -1, a.xs0 = a.e), a.xfirst || a;
          },
          ve = 9;
      for (h = me.prototype, h.l = h.pr = 0; --ve > 0; )
        h["xn" + ve] = 0, h["xs" + ve] = "";
      h.xs0 = "", h._next = h._prev = h.xfirst = h.data = h.plugin = h.setRatio = h.rxp = null, h.appendXtra = function(t, e, i, s, r, n) {
        var a = this,
            o = a.l;
        return a["xs" + o] += n && o ? " " + t : t || "", i || 0 === o || a.plugin ? (a.l++, a.type = a.setRatio ? 2 : 1, a["xs" + a.l] = s || "", o > 0 ? (a.data["xn" + o] = e + i, a.rxp["xn" + o] = r, a["xn" + o] = e, a.plugin || (a.xfirst = new me(a, "xn" + o, e, i, a.xfirst || a, 0, a.n, r, a.pr), a.xfirst.xs0 = 0), a) : (a.data = {s: e + i}, a.rxp = {}, a.s = e, a.c = i, a.r = r, a)) : (a["xs" + o] += e + (s || ""), a);
      };
      var ye = function(t, e) {
        e = e || {}, this.p = e.prefix ? W(t) || t : t, l[t] = l[this.p] = this, this.format = e.formatter || ce(e.defaultValue, e.color, e.collapsible, e.multi), e.parser && (this.parse = e.parser), this.clrs = e.color, this.multi = e.multi, this.keyword = e.keyword, this.dflt = e.defaultValue, this.pr = e.priority || 0;
      },
          Te = B._registerComplexSpecialProp = function(t, e, i) {
            "object" != typeof e && (e = {parser: i});
            var s,
                r,
                n = t.split(","),
                a = e.defaultValue;
            for (i = i || [a], s = 0; n.length > s; s++)
              e.prefix = 0 === s && e.prefix, e.defaultValue = i[s] || a, r = new ye(n[s], e);
          },
          xe = function(t) {
            if (!l[t]) {
              var e = t.charAt(0).toUpperCase() + t.substr(1) + "Plugin";
              Te(t, {parser: function(t, i, s, r, n, a, h) {
                  var _ = o.com.greensock.plugins[e];
                  return _ ? (_._cssRegister(), l[s].parse(t, i, s, r, n, a, h)) : (q("Error: " + e + " js file not loaded."), n);
                }});
            }
          };
      h = ye.prototype, h.parseComplex = function(t, e, i, s, r, n) {
        var a,
            o,
            l,
            h,
            _,
            u,
            c = this.keyword;
        if (this.multi && (M.test(i) || M.test(e) ? (o = e.replace(M, "|").split("|"), l = i.replace(M, "|").split("|")) : c && (o = [e], l = [i])), l) {
          for (h = l.length > o.length ? l.length : o.length, a = 0; h > a; a++)
            e = o[a] = o[a] || this.dflt, i = l[a] = l[a] || this.dflt, c && (_ = e.indexOf(c), u = i.indexOf(c), _ !== u && (-1 === u ? o[a] = o[a].split(c).join("") : -1 === _ && (o[a] += " " + c)));
          e = o.join(", "), i = l.join(", ");
        }
        return ge(t, this.p, e, i, this.clrs, this.dflt, s, this.pr, r, n);
      }, h.parse = function(t, e, i, s, n, a) {
        return this.parseComplex(t.style, this.format(Q(t, this.p, r, !1, this.dflt)), this.format(e), n, a);
      }, a.registerSpecialProp = function(t, e, i) {
        Te(t, {
          parser: function(t, s, r, n, a, o) {
            var l = new me(t, r, 0, 0, a, 2, r, !1, i);
            return l.plugin = o, l.setRatio = e(t, s, n._tween, r), l;
          },
          priority: i
        });
      }, a.useSVGTransformAttr = c || f;
      var we,
          be = "scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent".split(","),
          Pe = W("transform"),
          ke = V + "transform",
          Se = W("transformOrigin"),
          Re = null !== W("perspective"),
          Oe = B.Transform = function() {
            this.perspective = parseFloat(a.defaultTransformPerspective) || 0, this.force3D = a.defaultForce3D !== !1 && Re ? a.defaultForce3D || "auto" : !1;
          },
          Ae = window.SVGElement,
          Ce = function(t, e, i) {
            var s,
                r = E.createElementNS("http://www.w3.org/2000/svg", t),
                n = /([a-z])([A-Z])/g;
            for (s in i)
              r.setAttributeNS(null, s.replace(n, "$1-$2").toLowerCase(), i[s]);
            return e.appendChild(r), r;
          },
          De = E.documentElement,
          Me = function() {
            var t,
                e,
                i,
                s = m || /Android/i.test(j) && !window.chrome;
            return E.createElementNS && !s && (t = Ce("svg", De), e = Ce("rect", t, {
              width: 100,
              height: 50,
              x: 100
            }), i = e.getBoundingClientRect().width, e.style[Se] = "50% 50%", e.style[Pe] = "scaleX(0.5)", s = i === e.getBoundingClientRect().width && !(f && Re), De.removeChild(t)), s;
          }(),
          ze = function(t, e, i, s, r) {
            var n,
                o,
                l,
                h,
                _,
                u,
                c,
                f,
                p,
                m,
                d,
                g,
                v,
                y,
                T = t._gsTransform,
                x = Ee(t, !0);
            T && (v = T.xOrigin, y = T.yOrigin), (!s || 2 > (n = s.split(" ")).length) && (c = t.getBBox(), e = se(e).split(" "), n = [(-1 !== e[0].indexOf("%") ? parseFloat(e[0]) / 100 * c.width : parseFloat(e[0])) + c.x, (-1 !== e[1].indexOf("%") ? parseFloat(e[1]) / 100 * c.height : parseFloat(e[1])) + c.y]), i.xOrigin = h = parseFloat(n[0]), i.yOrigin = _ = parseFloat(n[1]), s && x !== Ie && (u = x[0], c = x[1], f = x[2], p = x[3], m = x[4], d = x[5], g = u * p - c * f, o = h * (p / g) + _ * (-f / g) + (f * d - p * m) / g, l = h * (-c / g) + _ * (u / g) - (u * d - c * m) / g, h = i.xOrigin = n[0] = o, _ = i.yOrigin = n[1] = l), T && (r || r !== !1 && a.defaultSmoothOrigin !== !1 ? (o = h - v, l = _ - y, T.xOffset += o * x[0] + l * x[2] - o, T.yOffset += o * x[1] + l * x[3] - l) : T.xOffset = T.yOffset = 0), t.setAttribute("data-svg-origin", n.join(" "));
          },
          Fe = function(t) {
            return !!(Ae && "function" == typeof t.getBBox && t.getCTM && (!t.parentNode || t.parentNode.getBBox && t.parentNode.getCTM));
          },
          Ie = [1, 0, 0, 1, 0, 0],
          Ee = function(t, e) {
            var i,
                s,
                r,
                n,
                a,
                o = t._gsTransform || new Oe,
                l = 1e5;
            if (Pe ? s = Q(t, ke, null, !0) : t.currentStyle && (s = t.currentStyle.filter.match(C), s = s && 4 === s.length ? [s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), o.x || 0, o.y || 0].join(",") : ""), i = !s || "none" === s || "matrix(1, 0, 0, 1, 0, 0)" === s, (o.svg || t.getBBox && Fe(t)) && (i && -1 !== (t.style[Pe] + "").indexOf("matrix") && (s = t.style[Pe], i = 0), r = t.getAttribute("transform"), i && r && (-1 !== r.indexOf("matrix") ? (s = r, i = 0) : -1 !== r.indexOf("translate") && (s = "matrix(1,0,0,1," + r.match(/(?:\-|\b)[\d\-\.e]+\b/gi).join(",") + ")", i = 0))), i)
              return Ie;
            for (r = (s || "").match(/(?:\-|\b)[\d\-\.e]+\b/gi) || [], ve = r.length; --ve > -1; )
              n = Number(r[ve]), r[ve] = (a = n - (n |= 0)) ? (0 | a * l + (0 > a ? -.5 : .5)) / l + n : n;
            return e && r.length > 6 ? [r[0], r[1], r[4], r[5], r[12], r[13]] : r;
          },
          Ne = B.getTransform = function(t, i, s, n) {
            if (t._gsTransform && s && !n)
              return t._gsTransform;
            var o,
                l,
                h,
                _,
                u,
                c,
                f = s ? t._gsTransform || new Oe : new Oe,
                p = 0 > f.scaleX,
                m = 2e-5,
                d = 1e5,
                g = Re ? parseFloat(Q(t, Se, i, !1, "0 0 0").split(" ")[2]) || f.zOrigin || 0 : 0,
                v = parseFloat(a.defaultTransformPerspective) || 0;
            if (f.svg = !(!t.getBBox || !Fe(t)), f.svg && (ze(t, Q(t, Se, r, !1, "50% 50%") + "", f, t.getAttribute("data-svg-origin")), we = a.useSVGTransformAttr || Me), o = Ee(t), o !== Ie) {
              if (16 === o.length) {
                var y,
                    T,
                    x,
                    w,
                    b,
                    P = o[0],
                    k = o[1],
                    S = o[2],
                    R = o[3],
                    O = o[4],
                    A = o[5],
                    C = o[6],
                    D = o[7],
                    M = o[8],
                    z = o[9],
                    I = o[10],
                    E = o[12],
                    N = o[13],
                    L = o[14],
                    X = o[11],
                    B = Math.atan2(C, I);
                f.zOrigin && (L = -f.zOrigin, E = M * L - o[12], N = z * L - o[13], L = I * L + f.zOrigin - o[14]), f.rotationX = B * F, B && (w = Math.cos(-B), b = Math.sin(-B), y = O * w + M * b, T = A * w + z * b, x = C * w + I * b, M = O * -b + M * w, z = A * -b + z * w, I = C * -b + I * w, X = D * -b + X * w, O = y, A = T, C = x), B = Math.atan2(M, I), f.rotationY = B * F, B && (w = Math.cos(-B), b = Math.sin(-B), y = P * w - M * b, T = k * w - z * b, x = S * w - I * b, z = k * b + z * w, I = S * b + I * w, X = R * b + X * w, P = y, k = T, S = x), B = Math.atan2(k, P), f.rotation = B * F, B && (w = Math.cos(-B), b = Math.sin(-B), P = P * w + O * b, T = k * w + A * b, A = k * -b + A * w, C = S * -b + C * w, k = T), f.rotationX && Math.abs(f.rotationX) + Math.abs(f.rotation) > 359.9 && (f.rotationX = f.rotation = 0, f.rotationY += 180), f.scaleX = (0 | Math.sqrt(P * P + k * k) * d + .5) / d, f.scaleY = (0 | Math.sqrt(A * A + z * z) * d + .5) / d, f.scaleZ = (0 | Math.sqrt(C * C + I * I) * d + .5) / d, f.skewX = 0, f.perspective = X ? 1 / (0 > X ? -X : X) : 0, f.x = E, f.y = N, f.z = L, f.svg && (f.x -= f.xOrigin - (f.xOrigin * P - f.yOrigin * O), f.y -= f.yOrigin - (f.yOrigin * k - f.xOrigin * A));
              } else if (!(Re && !n && o.length && f.x === o[4] && f.y === o[5] && (f.rotationX || f.rotationY) || void 0 !== f.x && "none" === Q(t, "display", i))) {
                var j = o.length >= 6,
                    Y = j ? o[0] : 1,
                    U = o[1] || 0,
                    q = o[2] || 0,
                    V = j ? o[3] : 1;
                f.x = o[4] || 0, f.y = o[5] || 0, h = Math.sqrt(Y * Y + U * U), _ = Math.sqrt(V * V + q * q), u = Y || U ? Math.atan2(U, Y) * F : f.rotation || 0, c = q || V ? Math.atan2(q, V) * F + u : f.skewX || 0, Math.abs(c) > 90 && 270 > Math.abs(c) && (p ? (h *= -1, c += 0 >= u ? 180 : -180, u += 0 >= u ? 180 : -180) : (_ *= -1, c += 0 >= c ? 180 : -180)), f.scaleX = h, f.scaleY = _, f.rotation = u, f.skewX = c, Re && (f.rotationX = f.rotationY = f.z = 0, f.perspective = v, f.scaleZ = 1), f.svg && (f.x -= f.xOrigin - (f.xOrigin * Y + f.yOrigin * q), f.y -= f.yOrigin - (f.xOrigin * U + f.yOrigin * V));
              }
              f.zOrigin = g;
              for (l in f)
                m > f[l] && f[l] > -m && (f[l] = 0);
            }
            return s && (t._gsTransform = f, f.svg && (we && t.style[Pe] ? e.delayedCall(.001, function() {
              je(t.style, Pe);
            }) : !we && t.getAttribute("transform") && e.delayedCall(.001, function() {
              t.removeAttribute("transform");
            }))), f;
          },
          Le = function(t) {
            var e,
                i,
                s = this.data,
                r = -s.rotation * z,
                n = r + s.skewX * z,
                a = 1e5,
                o = (0 | Math.cos(r) * s.scaleX * a) / a,
                l = (0 | Math.sin(r) * s.scaleX * a) / a,
                h = (0 | Math.sin(n) * -s.scaleY * a) / a,
                _ = (0 | Math.cos(n) * s.scaleY * a) / a,
                u = this.t.style,
                c = this.t.currentStyle;
            if (c) {
              i = l, l = -h, h = -i, e = c.filter, u.filter = "";
              var f,
                  p,
                  d = this.t.offsetWidth,
                  g = this.t.offsetHeight,
                  v = "absolute" !== c.position,
                  y = "progid:DXImageTransform.Microsoft.Matrix(M11=" + o + ", M12=" + l + ", M21=" + h + ", M22=" + _,
                  w = s.x + d * s.xPercent / 100,
                  b = s.y + g * s.yPercent / 100;
              if (null != s.ox && (f = (s.oxp ? .01 * d * s.ox : s.ox) - d / 2, p = (s.oyp ? .01 * g * s.oy : s.oy) - g / 2, w += f - (f * o + p * l), b += p - (f * h + p * _)), v ? (f = d / 2, p = g / 2, y += ", Dx=" + (f - (f * o + p * l) + w) + ", Dy=" + (p - (f * h + p * _) + b) + ")") : y += ", sizingMethod='auto expand')", u.filter = -1 !== e.indexOf("DXImageTransform.Microsoft.Matrix(") ? e.replace(D, y) : y + " " + e, (0 === t || 1 === t) && 1 === o && 0 === l && 0 === h && 1 === _ && (v && -1 === y.indexOf("Dx=0, Dy=0") || x.test(e) && 100 !== parseFloat(RegExp.$1) || -1 === e.indexOf("gradient(" && e.indexOf("Alpha")) && u.removeAttribute("filter")), !v) {
                var P,
                    k,
                    S,
                    R = 8 > m ? 1 : -1;
                for (f = s.ieOffsetX || 0, p = s.ieOffsetY || 0, s.ieOffsetX = Math.round((d - ((0 > o ? -o : o) * d + (0 > l ? -l : l) * g)) / 2 + w), s.ieOffsetY = Math.round((g - ((0 > _ ? -_ : _) * g + (0 > h ? -h : h) * d)) / 2 + b), ve = 0; 4 > ve; ve++)
                  k = ee[ve], P = c[k], i = -1 !== P.indexOf("px") ? parseFloat(P) : $(this.t, k, parseFloat(P), P.replace(T, "")) || 0, S = i !== s[k] ? 2 > ve ? -s.ieOffsetX : -s.ieOffsetY : 2 > ve ? f - s.ieOffsetX : p - s.ieOffsetY, u[k] = (s[k] = Math.round(i - S * (0 === ve || 2 === ve ? 1 : R))) + "px";
              }
            }
          },
          Xe = B.set3DTransformRatio = B.setTransformRatio = function(t) {
            var e,
                i,
                s,
                r,
                n,
                a,
                o,
                l,
                h,
                _,
                u,
                c,
                p,
                m,
                d,
                g,
                v,
                y,
                T,
                x,
                w,
                b,
                P,
                k = this.data,
                S = this.t.style,
                R = k.rotation,
                O = k.rotationX,
                A = k.rotationY,
                C = k.scaleX,
                D = k.scaleY,
                M = k.scaleZ,
                F = k.x,
                I = k.y,
                E = k.z,
                N = k.svg,
                L = k.perspective,
                X = k.force3D;
            if (!(((1 !== t && 0 !== t || "auto" !== X || this.tween._totalTime !== this.tween._totalDuration && this.tween._totalTime) && X || E || L || A || O) && (!we || !N) && Re))
              return R || k.skewX || N ? (R *= z, b = k.skewX * z, P = 1e5, e = Math.cos(R) * C, r = Math.sin(R) * C, i = Math.sin(R - b) * -D, n = Math.cos(R - b) * D, b && "simple" === k.skewType && (v = Math.tan(b), v = Math.sqrt(1 + v * v), i *= v, n *= v, k.skewY && (e *= v, r *= v)), N && (F += k.xOrigin - (k.xOrigin * e + k.yOrigin * i) + k.xOffset, I += k.yOrigin - (k.xOrigin * r + k.yOrigin * n) + k.yOffset, we && (k.xPercent || k.yPercent) && (m = this.t.getBBox(), F += .01 * k.xPercent * m.width, I += .01 * k.yPercent * m.height), m = 1e-6, m > F && F > -m && (F = 0), m > I && I > -m && (I = 0)), T = (0 | e * P) / P + "," + (0 | r * P) / P + "," + (0 | i * P) / P + "," + (0 | n * P) / P + "," + F + "," + I + ")", N && we ? this.t.setAttribute("transform", "matrix(" + T) : S[Pe] = (k.xPercent || k.yPercent ? "translate(" + k.xPercent + "%," + k.yPercent + "%) matrix(" : "matrix(") + T) : S[Pe] = (k.xPercent || k.yPercent ? "translate(" + k.xPercent + "%," + k.yPercent + "%) matrix(" : "matrix(") + C + ",0,0," + D + "," + F + "," + I + ")", void 0;
            if (f && (m = 1e-4, m > C && C > -m && (C = M = 2e-5), m > D && D > -m && (D = M = 2e-5), !L || k.z || k.rotationX || k.rotationY || (L = 0)), R || k.skewX)
              R *= z, d = e = Math.cos(R), g = r = Math.sin(R), k.skewX && (R -= k.skewX * z, d = Math.cos(R), g = Math.sin(R), "simple" === k.skewType && (v = Math.tan(k.skewX * z), v = Math.sqrt(1 + v * v), d *= v, g *= v, k.skewY && (e *= v, r *= v))), i = -g, n = d;
            else {
              if (!(A || O || 1 !== M || L || N))
                return S[Pe] = (k.xPercent || k.yPercent ? "translate(" + k.xPercent + "%," + k.yPercent + "%) translate3d(" : "translate3d(") + F + "px," + I + "px," + E + "px)" + (1 !== C || 1 !== D ? " scale(" + C + "," + D + ")" : ""), void 0;
              e = n = 1, i = r = 0;
            }
            h = 1, s = a = o = l = _ = u = 0, c = L ? -1 / L : 0, p = k.zOrigin, m = 1e-6, x = ",", w = "0", R = A * z, R && (d = Math.cos(R), g = Math.sin(R), o = -g, _ = c * -g, s = e * g, a = r * g, h = d, c *= d, e *= d, r *= d), R = O * z, R && (d = Math.cos(R), g = Math.sin(R), v = i * d + s * g, y = n * d + a * g, l = h * g, u = c * g, s = i * -g + s * d, a = n * -g + a * d, h *= d, c *= d, i = v, n = y), 1 !== M && (s *= M, a *= M, h *= M, c *= M), 1 !== D && (i *= D, n *= D, l *= D, u *= D), 1 !== C && (e *= C, r *= C, o *= C, _ *= C), (p || N) && (p && (F += s * -p, I += a * -p, E += h * -p + p), N && (F += k.xOrigin - (k.xOrigin * e + k.yOrigin * i) + k.xOffset, I += k.yOrigin - (k.xOrigin * r + k.yOrigin * n) + k.yOffset), m > F && F > -m && (F = w), m > I && I > -m && (I = w), m > E && E > -m && (E = 0)), T = k.xPercent || k.yPercent ? "translate(" + k.xPercent + "%," + k.yPercent + "%) matrix3d(" : "matrix3d(", T += (m > e && e > -m ? w : e) + x + (m > r && r > -m ? w : r) + x + (m > o && o > -m ? w : o), T += x + (m > _ && _ > -m ? w : _) + x + (m > i && i > -m ? w : i) + x + (m > n && n > -m ? w : n), O || A ? (T += x + (m > l && l > -m ? w : l) + x + (m > u && u > -m ? w : u) + x + (m > s && s > -m ? w : s), T += x + (m > a && a > -m ? w : a) + x + (m > h && h > -m ? w : h) + x + (m > c && c > -m ? w : c) + x) : T += ",0,0,0,0,1,0,", T += F + x + I + x + E + x + (L ? 1 + -E / L : 1) + ")", S[Pe] = T;
          };
      h = Oe.prototype, h.x = h.y = h.z = h.skewX = h.skewY = h.rotation = h.rotationX = h.rotationY = h.zOrigin = h.xPercent = h.yPercent = h.xOffset = h.yOffset = 0, h.scaleX = h.scaleY = h.scaleZ = 1, Te("transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin", {
        parser: function(t, e, i, s, n, o, l) {
          if (s._lastParsedTransform === l)
            return n;
          s._lastParsedTransform = l;
          var h,
              _,
              u,
              c,
              f,
              p,
              m,
              d,
              g,
              v,
              y = t._gsTransform,
              T = t.style,
              x = 1e-6,
              w = be.length,
              b = l,
              P = {},
              k = "transformOrigin";
          if (l.display ? (c = Q(t, "display"), T.display = "block", h = Ne(t, r, !0, l.parseTransform), T.display = c) : h = Ne(t, r, !0, l.parseTransform), s._transform = h, "string" == typeof b.transform && Pe)
            c = L.style, c[Pe] = b.transform, c.display = "block", c.position = "absolute", E.body.appendChild(L), _ = Ne(L, null, !1), E.body.removeChild(L), _.perspective || (_.perspective = h.perspective), null != b.xPercent && (_.xPercent = ne(b.xPercent, h.xPercent)), null != b.yPercent && (_.yPercent = ne(b.yPercent, h.yPercent));
          else if ("object" == typeof b) {
            if (_ = {
              scaleX: ne(null != b.scaleX ? b.scaleX : b.scale, h.scaleX),
              scaleY: ne(null != b.scaleY ? b.scaleY : b.scale, h.scaleY),
              scaleZ: ne(b.scaleZ, h.scaleZ),
              x: ne(b.x, h.x),
              y: ne(b.y, h.y),
              z: ne(b.z, h.z),
              xPercent: ne(b.xPercent, h.xPercent),
              yPercent: ne(b.yPercent, h.yPercent),
              perspective: ne(b.transformPerspective, h.perspective)
            }, d = b.directionalRotation, null != d)
              if ("object" == typeof d)
                for (c in d)
                  b[c] = d[c];
              else
                b.rotation = d;
            "string" == typeof b.x && -1 !== b.x.indexOf("%") && (_.x = 0, _.xPercent = ne(b.x, h.xPercent)), "string" == typeof b.y && -1 !== b.y.indexOf("%") && (_.y = 0, _.yPercent = ne(b.y, h.yPercent)), _.rotation = ae("rotation" in b ? b.rotation : "shortRotation" in b ? b.shortRotation + "_short" : "rotationZ" in b ? b.rotationZ : h.rotation, h.rotation, "rotation", P), Re && (_.rotationX = ae("rotationX" in b ? b.rotationX : "shortRotationX" in b ? b.shortRotationX + "_short" : h.rotationX || 0, h.rotationX, "rotationX", P), _.rotationY = ae("rotationY" in b ? b.rotationY : "shortRotationY" in b ? b.shortRotationY + "_short" : h.rotationY || 0, h.rotationY, "rotationY", P)), _.skewX = null == b.skewX ? h.skewX : ae(b.skewX, h.skewX), _.skewY = null == b.skewY ? h.skewY : ae(b.skewY, h.skewY), (u = _.skewY - h.skewY) && (_.skewX += u, _.rotation += u);
          }
          for (Re && null != b.force3D && (h.force3D = b.force3D, m = !0), h.skewType = b.skewType || h.skewType || a.defaultSkewType, p = h.force3D || h.z || h.rotationX || h.rotationY || _.z || _.rotationX || _.rotationY || _.perspective, p || null == b.scale || (_.scaleZ = 1); --w > -1; )
            i = be[w], f = _[i] - h[i], (f > x || -x > f || null != b[i] || null != I[i]) && (m = !0, n = new me(h, i, h[i], f, n), i in P && (n.e = P[i]), n.xs0 = 0, n.plugin = o, s._overwriteProps.push(n.n));
          return f = b.transformOrigin, h.svg && (f || b.svgOrigin) && (g = h.xOffset, v = h.yOffset, ze(t, se(f), _, b.svgOrigin, b.smoothOrigin), n = de(h, "xOrigin", (y ? h : _).xOrigin, _.xOrigin, n, k), n = de(h, "yOrigin", (y ? h : _).yOrigin, _.yOrigin, n, k), (g !== h.xOffset || v !== h.yOffset) && (n = de(h, "xOffset", y ? g : h.xOffset, h.xOffset, n, k), n = de(h, "yOffset", y ? v : h.yOffset, h.yOffset, n, k)), f = we ? null : "0px 0px"), (f || Re && p && h.zOrigin) && (Pe ? (m = !0, i = Se, f = (f || Q(t, i, r, !1, "50% 50%")) + "", n = new me(T, i, 0, 0, n, -1, k), n.b = T[i], n.plugin = o, Re ? (c = h.zOrigin, f = f.split(" "), h.zOrigin = (f.length > 2 && (0 === c || "0px" !== f[2]) ? parseFloat(f[2]) : c) || 0, n.xs0 = n.e = f[0] + " " + (f[1] || "50%") + " 0px", n = new me(h, "zOrigin", 0, 0, n, -1, n.n), n.b = c, n.xs0 = n.e = h.zOrigin) : n.xs0 = n.e = f) : se(f + "", h)), m && (s._transformType = h.svg && we || !p && 3 !== this._transformType ? 2 : 3), n;
        },
        prefix: !0
      }), Te("boxShadow", {
        defaultValue: "0px 0px 0px 0px #999",
        prefix: !0,
        color: !0,
        multi: !0,
        keyword: "inset"
      }), Te("borderRadius", {
        defaultValue: "0px",
        parser: function(t, e, i, n, a) {
          e = this.format(e);
          var o,
              l,
              h,
              _,
              u,
              c,
              f,
              p,
              m,
              d,
              g,
              v,
              y,
              T,
              x,
              w,
              b = ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"],
              P = t.style;
          for (m = parseFloat(t.offsetWidth), d = parseFloat(t.offsetHeight), o = e.split(" "), l = 0; b.length > l; l++)
            this.p.indexOf("border") && (b[l] = W(b[l])), u = _ = Q(t, b[l], r, !1, "0px"), -1 !== u.indexOf(" ") && (_ = u.split(" "), u = _[0], _ = _[1]), c = h = o[l], f = parseFloat(u), v = u.substr((f + "").length), y = "=" === c.charAt(1), y ? (p = parseInt(c.charAt(0) + "1", 10), c = c.substr(2), p *= parseFloat(c), g = c.substr((p + "").length - (0 > p ? 1 : 0)) || "") : (p = parseFloat(c), g = c.substr((p + "").length)), "" === g && (g = s[i] || v), g !== v && (T = $(t, "borderLeft", f, v), x = $(t, "borderTop", f, v), "%" === g ? (u = 100 * (T / m) + "%", _ = 100 * (x / d) + "%") : "em" === g ? (w = $(t, "borderLeft", 1, "em"), u = T / w + "em", _ = x / w + "em") : (u = T + "px", _ = x + "px"), y && (c = parseFloat(u) + p + g, h = parseFloat(_) + p + g)), a = ge(P, b[l], u + " " + _, c + " " + h, !1, "0px", a);
          return a;
        },
        prefix: !0,
        formatter: ce("0px 0px 0px 0px", !1, !0)
      }), Te("backgroundPosition", {
        defaultValue: "0 0",
        parser: function(t, e, i, s, n, a) {
          var o,
              l,
              h,
              _,
              u,
              c,
              f = "background-position",
              p = r || Z(t, null),
              d = this.format((p ? m ? p.getPropertyValue(f + "-x") + " " + p.getPropertyValue(f + "-y") : p.getPropertyValue(f) : t.currentStyle.backgroundPositionX + " " + t.currentStyle.backgroundPositionY) || "0 0"),
              g = this.format(e);
          if (-1 !== d.indexOf("%") != (-1 !== g.indexOf("%")) && (c = Q(t, "backgroundImage").replace(R, ""), c && "none" !== c)) {
            for (o = d.split(" "), l = g.split(" "), X.setAttribute("src", c), h = 2; --h > -1; )
              d = o[h], _ = -1 !== d.indexOf("%"), _ !== (-1 !== l[h].indexOf("%")) && (u = 0 === h ? t.offsetWidth - X.width : t.offsetHeight - X.height, o[h] = _ ? parseFloat(d) / 100 * u + "px" : 100 * (parseFloat(d) / u) + "%");
            d = o.join(" ");
          }
          return this.parseComplex(t.style, d, g, n, a);
        },
        formatter: se
      }), Te("backgroundSize", {
        defaultValue: "0 0",
        formatter: se
      }), Te("perspective", {
        defaultValue: "0px",
        prefix: !0
      }), Te("perspectiveOrigin", {
        defaultValue: "50% 50%",
        prefix: !0
      }), Te("transformStyle", {prefix: !0}), Te("backfaceVisibility", {prefix: !0}), Te("userSelect", {prefix: !0}), Te("margin", {parser: fe("marginTop,marginRight,marginBottom,marginLeft")}), Te("padding", {parser: fe("paddingTop,paddingRight,paddingBottom,paddingLeft")}), Te("clip", {
        defaultValue: "rect(0px,0px,0px,0px)",
        parser: function(t, e, i, s, n, a) {
          var o,
              l,
              h;
          return 9 > m ? (l = t.currentStyle, h = 8 > m ? " " : ",", o = "rect(" + l.clipTop + h + l.clipRight + h + l.clipBottom + h + l.clipLeft + ")", e = this.format(e).split(",").join(h)) : (o = this.format(Q(t, this.p, r, !1, this.dflt)), e = this.format(e)), this.parseComplex(t.style, o, e, n, a);
        }
      }), Te("textShadow", {
        defaultValue: "0px 0px 0px #999",
        color: !0,
        multi: !0
      }), Te("autoRound,strictUnits", {parser: function(t, e, i, s, r) {
          return r;
        }}), Te("border", {
        defaultValue: "0px solid #000",
        parser: function(t, e, i, s, n, a) {
          return this.parseComplex(t.style, this.format(Q(t, "borderTopWidth", r, !1, "0px") + " " + Q(t, "borderTopStyle", r, !1, "solid") + " " + Q(t, "borderTopColor", r, !1, "#000")), this.format(e), n, a);
        },
        color: !0,
        formatter: function(t) {
          var e = t.split(" ");
          return e[0] + " " + (e[1] || "solid") + " " + (t.match(ue) || ["#000"])[0];
        }
      }), Te("borderWidth", {parser: fe("borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth")}), Te("float,cssFloat,styleFloat", {parser: function(t, e, i, s, r) {
          var n = t.style,
              a = "cssFloat" in n ? "cssFloat" : "styleFloat";
          return new me(n, a, 0, 0, r, -1, i, !1, 0, n[a], e);
        }});
      var Be = function(t) {
        var e,
            i = this.t,
            s = i.filter || Q(this.data, "filter") || "",
            r = 0 | this.s + this.c * t;
        100 === r && (-1 === s.indexOf("atrix(") && -1 === s.indexOf("radient(") && -1 === s.indexOf("oader(") ? (i.removeAttribute("filter"), e = !Q(this.data, "filter")) : (i.filter = s.replace(b, ""), e = !0)), e || (this.xn1 && (i.filter = s = s || "alpha(opacity=" + r + ")"), -1 === s.indexOf("pacity") ? 0 === r && this.xn1 || (i.filter = s + " alpha(opacity=" + r + ")") : i.filter = s.replace(x, "opacity=" + r));
      };
      Te("opacity,alpha,autoAlpha", {
        defaultValue: "1",
        parser: function(t, e, i, s, n, a) {
          var o = parseFloat(Q(t, "opacity", r, !1, "1")),
              l = t.style,
              h = "autoAlpha" === i;
          return "string" == typeof e && "=" === e.charAt(1) && (e = ("-" === e.charAt(0) ? -1 : 1) * parseFloat(e.substr(2)) + o), h && 1 === o && "hidden" === Q(t, "visibility", r) && 0 !== e && (o = 0), Y ? n = new me(l, "opacity", o, e - o, n) : (n = new me(l, "opacity", 100 * o, 100 * (e - o), n), n.xn1 = h ? 1 : 0, l.zoom = 1, n.type = 2, n.b = "alpha(opacity=" + n.s + ")", n.e = "alpha(opacity=" + (n.s + n.c) + ")", n.data = t, n.plugin = a, n.setRatio = Be), h && (n = new me(l, "visibility", 0, 0, n, -1, null, !1, 0, 0 !== o ? "inherit" : "hidden", 0 === e ? "hidden" : "inherit"), n.xs0 = "inherit", s._overwriteProps.push(n.n), s._overwriteProps.push(i)), n;
        }
      });
      var je = function(t, e) {
        e && (t.removeProperty ? (("ms" === e.substr(0, 2) || "webkit" === e.substr(0, 6)) && (e = "-" + e), t.removeProperty(e.replace(k, "-$1").toLowerCase())) : t.removeAttribute(e));
      },
          Ye = function(t) {
            if (this.t._gsClassPT = this, 1 === t || 0 === t) {
              this.t.setAttribute("class", 0 === t ? this.b : this.e);
              for (var e = this.data,
                  i = this.t.style; e; )
                e.v ? i[e.p] = e.v : je(i, e.p), e = e._next;
              1 === t && this.t._gsClassPT === this && (this.t._gsClassPT = null);
            } else
              this.t.getAttribute("class") !== this.e && this.t.setAttribute("class", this.e);
          };
      Te("className", {parser: function(t, e, s, n, a, o, l) {
          var h,
              _,
              u,
              c,
              f,
              p = t.getAttribute("class") || "",
              m = t.style.cssText;
          if (a = n._classNamePT = new me(t, s, 0, 0, a, 2), a.setRatio = Ye, a.pr = -11, i = !0, a.b = p, _ = K(t, r), u = t._gsClassPT) {
            for (c = {}, f = u.data; f; )
              c[f.p] = 1, f = f._next;
            u.setRatio(1);
          }
          return t._gsClassPT = a, a.e = "=" !== e.charAt(1) ? e : p.replace(RegExp("\\s*\\b" + e.substr(2) + "\\b"), "") + ("+" === e.charAt(0) ? " " + e.substr(2) : ""), t.setAttribute("class", a.e), h = J(t, _, K(t), l, c), t.setAttribute("class", p), a.data = h.firstMPT, t.style.cssText = m, a = a.xfirst = n.parse(t, h.difs, a, o);
        }});
      var Ue = function(t) {
        if ((1 === t || 0 === t) && this.data._totalTime === this.data._totalDuration && "isFromStart" !== this.data.data) {
          var e,
              i,
              s,
              r,
              n,
              a = this.t.style,
              o = l.transform.parse;
          if ("all" === this.e)
            a.cssText = "", r = !0;
          else
            for (e = this.e.split(" ").join("").split(","), s = e.length; --s > -1; )
              i = e[s], l[i] && (l[i].parse === o ? r = !0 : i = "transformOrigin" === i ? Se : l[i].p), je(a, i);
          r && (je(a, Pe), n = this.t._gsTransform, n && (n.svg && this.t.removeAttribute("data-svg-origin"), delete this.t._gsTransform));
        }
      };
      for (Te("clearProps", {parser: function(t, e, s, r, n) {
          return n = new me(t, s, 0, 0, n, 2), n.setRatio = Ue, n.e = e, n.pr = -10, n.data = r._tween, i = !0, n;
        }}), h = "bezier,throwProps,physicsProps,physics2D".split(","), ve = h.length; ve--; )
        xe(h[ve]);
      h = a.prototype, h._firstPT = h._lastParsedTransform = h._transform = null, h._onInitTween = function(t, e, o) {
        if (!t.nodeType)
          return !1;
        this._target = t, this._tween = o, this._vars = e, _ = e.autoRound, i = !1, s = e.suffixMap || a.suffixMap, r = Z(t, ""), n = this._overwriteProps;
        var h,
            f,
            m,
            d,
            g,
            v,
            y,
            T,
            x,
            b = t.style;
        if (u && "" === b.zIndex && (h = Q(t, "zIndex", r), ("auto" === h || "" === h) && this._addLazySet(b, "zIndex", 0)), "string" == typeof e && (d = b.cssText, h = K(t, r), b.cssText = d + ";" + e, h = J(t, h, K(t)).difs, !Y && w.test(e) && (h.opacity = parseFloat(RegExp.$1)), e = h, b.cssText = d), this._firstPT = f = e.className ? l.className.parse(t, e.className, "className", this, null, null, e) : this.parse(t, e, null), this._transformType) {
          for (x = 3 === this._transformType, Pe ? c && (u = !0, "" === b.zIndex && (y = Q(t, "zIndex", r), ("auto" === y || "" === y) && this._addLazySet(b, "zIndex", 0)), p && this._addLazySet(b, "WebkitBackfaceVisibility", this._vars.WebkitBackfaceVisibility || (x ? "visible" : "hidden"))) : b.zoom = 1, m = f; m && m._next; )
            m = m._next;
          T = new me(t, "transform", 0, 0, null, 2), this._linkCSSP(T, null, m), T.setRatio = Pe ? Xe : Le, T.data = this._transform || Ne(t, r, !0), T.tween = o, T.pr = -1, n.pop();
        }
        if (i) {
          for (; f; ) {
            for (v = f._next, m = d; m && m.pr > f.pr; )
              m = m._next;
            (f._prev = m ? m._prev : g) ? f._prev._next = f : d = f, (f._next = m) ? m._prev = f : g = f, f = v;
          }
          this._firstPT = d;
        }
        return !0;
      }, h.parse = function(t, e, i, n) {
        var a,
            o,
            h,
            u,
            c,
            f,
            p,
            m,
            d,
            g,
            v = t.style;
        for (a in e)
          f = e[a], o = l[a], o ? i = o.parse(t, f, a, this, i, n, e) : (c = Q(t, a, r) + "", d = "string" == typeof f, "color" === a || "fill" === a || "stroke" === a || -1 !== a.indexOf("Color") || d && P.test(f) ? (d || (f = he(f), f = (f.length > 3 ? "rgba(" : "rgb(") + f.join(",") + ")"), i = ge(v, a, c, f, !0, "transparent", i, 0, n)) : !d || -1 === f.indexOf(" ") && -1 === f.indexOf(",") ? (h = parseFloat(c), p = h || 0 === h ? c.substr((h + "").length) : "", ("" === c || "auto" === c) && ("width" === a || "height" === a ? (h = ie(t, a, r), p = "px") : "left" === a || "top" === a ? (h = H(t, a, r), p = "px") : (h = "opacity" !== a ? 0 : 1, p = "")), g = d && "=" === f.charAt(1), g ? (u = parseInt(f.charAt(0) + "1", 10), f = f.substr(2), u *= parseFloat(f), m = f.replace(T, "")) : (u = parseFloat(f), m = d ? f.replace(T, "") : ""), "" === m && (m = a in s ? s[a] : p), f = u || 0 === u ? (g ? u + h : u) + m : e[a], p !== m && "" !== m && (u || 0 === u) && h && (h = $(t, a, h, p), "%" === m ? (h /= $(t, a, 100, "%") / 100, e.strictUnits !== !0 && (c = h + "%")) : "em" === m || "rem" === m ? h /= $(t, a, 1, m) : "px" !== m && (u = $(t, a, u, m), m = "px"), g && (u || 0 === u) && (f = u + h + m)), g && (u += h), !h && 0 !== h || !u && 0 !== u ? void 0 !== v[a] && (f || "NaN" != f + "" && null != f) ? (i = new me(v, a, u || h || 0, 0, i, -1, a, !1, 0, c, f), i.xs0 = "none" !== f || "display" !== a && -1 === a.indexOf("Style") ? f : c) : q("invalid " + a + " tween value: " + e[a]) : (i = new me(v, a, h, u - h, i, 0, a, _ !== !1 && ("px" === m || "zIndex" === a), 0, c, f), i.xs0 = m)) : i = ge(v, a, c, f, !0, null, i, 0, n)), n && i && !i.plugin && (i.plugin = n);
        return i;
      }, h.setRatio = function(t) {
        var e,
            i,
            s,
            r = this._firstPT,
            n = 1e-6;
        if (1 !== t || this._tween._time !== this._tween._duration && 0 !== this._tween._time)
          if (t || this._tween._time !== this._tween._duration && 0 !== this._tween._time || this._tween._rawPrevTime === -1e-6)
            for (; r; ) {
              if (e = r.c * t + r.s, r.r ? e = Math.round(e) : n > e && e > -n && (e = 0), r.type)
                if (1 === r.type)
                  if (s = r.l, 2 === s)
                    r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2;
                  else if (3 === s)
                    r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3;
                  else if (4 === s)
                    r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4;
                  else if (5 === s)
                    r.t[r.p] = r.xs0 + e + r.xs1 + r.xn1 + r.xs2 + r.xn2 + r.xs3 + r.xn3 + r.xs4 + r.xn4 + r.xs5;
                  else {
                    for (i = r.xs0 + e + r.xs1, s = 1; r.l > s; s++)
                      i += r["xn" + s] + r["xs" + (s + 1)];
                    r.t[r.p] = i;
                  }
                else
                  -1 === r.type ? r.t[r.p] = r.xs0 : r.setRatio && r.setRatio(t);
              else
                r.t[r.p] = e + r.xs0;
              r = r._next;
            }
          else
            for (; r; )
              2 !== r.type ? r.t[r.p] = r.b : r.setRatio(t), r = r._next;
        else
          for (; r; ) {
            if (2 !== r.type)
              if (r.r && -1 !== r.type)
                if (e = Math.round(r.s + r.c), r.type) {
                  if (1 === r.type) {
                    for (s = r.l, i = r.xs0 + e + r.xs1, s = 1; r.l > s; s++)
                      i += r["xn" + s] + r["xs" + (s + 1)];
                    r.t[r.p] = i;
                  }
                } else
                  r.t[r.p] = e + r.xs0;
              else
                r.t[r.p] = r.e;
            else
              r.setRatio(t);
            r = r._next;
          }
      }, h._enableTransforms = function(t) {
        this._transform = this._transform || Ne(this._target, r, !0), this._transformType = this._transform.svg && we || !t && 3 !== this._transformType ? 2 : 3;
      };
      var qe = function() {
        this.t[this.p] = this.e, this.data._linkCSSP(this, this._next, null, !0);
      };
      h._addLazySet = function(t, e, i) {
        var s = this._firstPT = new me(t, e, 0, 0, this._firstPT, 2);
        s.e = i, s.setRatio = qe, s.data = this;
      }, h._linkCSSP = function(t, e, i, s) {
        return t && (e && (e._prev = t), t._next && (t._next._prev = t._prev), t._prev ? t._prev._next = t._next : this._firstPT === t && (this._firstPT = t._next, s = !0), i ? i._next = t : s || null !== this._firstPT || (this._firstPT = t), t._next = e, t._prev = i), t;
      }, h._kill = function(e) {
        var i,
            s,
            r,
            n = e;
        if (e.autoAlpha || e.alpha) {
          n = {};
          for (s in e)
            n[s] = e[s];
          n.opacity = 1, n.autoAlpha && (n.visibility = 1);
        }
        return e.className && (i = this._classNamePT) && (r = i.xfirst, r && r._prev ? this._linkCSSP(r._prev, i._next, r._prev._prev) : r === this._firstPT && (this._firstPT = i._next), i._next && this._linkCSSP(i._next, i._next._next, r._prev), this._classNamePT = null), t.prototype._kill.call(this, n);
      };
      var Ve = function(t, e, i) {
        var s,
            r,
            n,
            a;
        if (t.slice)
          for (r = t.length; --r > -1; )
            Ve(t[r], e, i);
        else
          for (s = t.childNodes, r = s.length; --r > -1; )
            n = s[r], a = n.type, n.style && (e.push(K(n)), i && i.push(n)), 1 !== a && 9 !== a && 11 !== a || !n.childNodes.length || Ve(n, e, i);
      };
      return a.cascadeTo = function(t, i, s) {
        var r,
            n,
            a,
            o,
            l = e.to(t, i, s),
            h = [l],
            _ = [],
            u = [],
            c = [],
            f = e._internals.reservedProps;
        for (t = l._targets || l.target, Ve(t, _, c), l.render(i, !0, !0), Ve(t, u), l.render(0, !0, !0), l._enabled(!0), r = c.length; --r > -1; )
          if (n = J(c[r], _[r], u[r]), n.firstMPT) {
            n = n.difs;
            for (a in s)
              f[a] && (n[a] = s[a]);
            o = {};
            for (a in n)
              o[a] = _[r][a];
            h.push(e.fromTo(c[r], i, o, n));
          }
        return h;
      }, t.activate([a]), a;
    }, !0), function() {
      var t = _gsScope._gsDefine.plugin({
        propName: "roundProps",
        version: "1.5",
        priority: -1,
        API: 2,
        init: function(t, e, i) {
          return this._tween = i, !0;
        }
      }),
          e = function(t) {
            for (; t; )
              t.f || t.blob || (t.r = 1), t = t._next;
          },
          i = t.prototype;
      i._onInitAllProps = function() {
        for (var t,
            i,
            s,
            r = this._tween,
            n = r.vars.roundProps.join ? r.vars.roundProps : r.vars.roundProps.split(","),
            a = n.length,
            o = {},
            l = r._propLookup.roundProps; --a > -1; )
          o[n[a]] = 1;
        for (a = n.length; --a > -1; )
          for (t = n[a], i = r._firstPT; i; )
            s = i._next, i.pg ? i.t._roundProps(o, !0) : i.n === t && (2 === i.f && i.t ? e(i.t._firstPT) : (this._add(i.t, t, i.s, i.c), s && (s._prev = i._prev), i._prev ? i._prev._next = s : r._firstPT === i && (r._firstPT = s), i._next = i._prev = null, r._propLookup[t] = l)), i = s;
        return !1;
      }, i._add = function(t, e, i, s) {
        this._addTween(t, e, i, i + s, e, !0), this._overwriteProps.push(e);
      };
    }(), function() {
      _gsScope._gsDefine.plugin({
        propName: "attr",
        API: 2,
        version: "0.5.0",
        init: function(t, e) {
          var i;
          if ("function" != typeof t.setAttribute)
            return !1;
          for (i in e)
            this._addTween(t, "setAttribute", t.getAttribute(i) + "", e[i] + "", i, !1, i), this._overwriteProps.push(i);
          return !0;
        }
      });
    }(), _gsScope._gsDefine.plugin({
      propName: "directionalRotation",
      version: "0.2.1",
      API: 2,
      init: function(t, e) {
        "object" != typeof e && (e = {rotation: e}), this.finals = {};
        var i,
            s,
            r,
            n,
            a,
            o,
            l = e.useRadians === !0 ? 2 * Math.PI : 360,
            h = 1e-6;
        for (i in e)
          "useRadians" !== i && (o = (e[i] + "").split("_"), s = o[0], r = parseFloat("function" != typeof t[i] ? t[i] : t[i.indexOf("set") || "function" != typeof t["get" + i.substr(3)] ? i : "get" + i.substr(3)]()), n = this.finals[i] = "string" == typeof s && "=" === s.charAt(1) ? r + parseInt(s.charAt(0) + "1", 10) * Number(s.substr(2)) : Number(s) || 0, a = n - r, o.length && (s = o.join("_"), -1 !== s.indexOf("short") && (a %= l, a !== a % (l / 2) && (a = 0 > a ? a + l : a - l)), -1 !== s.indexOf("_cw") && 0 > a ? a = (a + 9999999999 * l) % l - (0 | a / l) * l : -1 !== s.indexOf("ccw") && a > 0 && (a = (a - 9999999999 * l) % l - (0 | a / l) * l)), (a > h || -h > a) && (this._addTween(t, i, r, r + a, i), this._overwriteProps.push(i)));
        return !0;
      },
      set: function(t) {
        var e;
        if (1 !== t)
          this._super.setRatio.call(this, t);
        else
          for (e = this._firstPT; e; )
            e.f ? e.t[e.p](this.finals[e.p]) : e.t[e.p] = this.finals[e.p], e = e._next;
      }
    })._autoCSS = !0, _gsScope._gsDefine("easing.Back", ["easing.Ease"], function(t) {
      var e,
          i,
          s,
          r = _gsScope.GreenSockGlobals || _gsScope,
          n = r.com.greensock,
          a = 2 * Math.PI,
          o = Math.PI / 2,
          l = n._class,
          h = function(e, i) {
            var s = l("easing." + e, function() {}, !0),
                r = s.prototype = new t;
            return r.constructor = s, r.getRatio = i, s;
          },
          _ = t.register || function() {},
          u = function(t, e, i, s) {
            var r = l("easing." + t, {
              easeOut: new e,
              easeIn: new i,
              easeInOut: new s
            }, !0);
            return _(r, t), r;
          },
          c = function(t, e, i) {
            this.t = t, this.v = e, i && (this.next = i, i.prev = this, this.c = i.v - e, this.gap = i.t - t);
          },
          f = function(e, i) {
            var s = l("easing." + e, function(t) {
              this._p1 = t || 0 === t ? t : 1.70158, this._p2 = 1.525 * this._p1;
            }, !0),
                r = s.prototype = new t;
            return r.constructor = s, r.getRatio = i, r.config = function(t) {
              return new s(t);
            }, s;
          },
          p = u("Back", f("BackOut", function(t) {
            return (t -= 1) * t * ((this._p1 + 1) * t + this._p1) + 1;
          }), f("BackIn", function(t) {
            return t * t * ((this._p1 + 1) * t - this._p1);
          }), f("BackInOut", function(t) {
            return 1 > (t *= 2) ? .5 * t * t * ((this._p2 + 1) * t - this._p2) : .5 * ((t -= 2) * t * ((this._p2 + 1) * t + this._p2) + 2);
          })),
          m = l("easing.SlowMo", function(t, e, i) {
            e = e || 0 === e ? e : .7, null == t ? t = .7 : t > 1 && (t = 1), this._p = 1 !== t ? e : 0, this._p1 = (1 - t) / 2, this._p2 = t, this._p3 = this._p1 + this._p2, this._calcEnd = i === !0;
          }, !0),
          d = m.prototype = new t;
      return d.constructor = m, d.getRatio = function(t) {
        var e = t + (.5 - t) * this._p;
        return this._p1 > t ? this._calcEnd ? 1 - (t = 1 - t / this._p1) * t : e - (t = 1 - t / this._p1) * t * t * t * e : t > this._p3 ? this._calcEnd ? 1 - (t = (t - this._p3) / this._p1) * t : e + (t - e) * (t = (t - this._p3) / this._p1) * t * t * t : this._calcEnd ? 1 : e;
      }, m.ease = new m(.7, .7), d.config = m.config = function(t, e, i) {
        return new m(t, e, i);
      }, e = l("easing.SteppedEase", function(t) {
        t = t || 1, this._p1 = 1 / t, this._p2 = t + 1;
      }, !0), d = e.prototype = new t, d.constructor = e, d.getRatio = function(t) {
        return 0 > t ? t = 0 : t >= 1 && (t = .999999999), (this._p2 * t >> 0) * this._p1;
      }, d.config = e.config = function(t) {
        return new e(t);
      }, i = l("easing.RoughEase", function(e) {
        e = e || {};
        for (var i,
            s,
            r,
            n,
            a,
            o,
            l = e.taper || "none",
            h = [],
            _ = 0,
            u = 0 | (e.points || 20),
            f = u,
            p = e.randomize !== !1,
            m = e.clamp === !0,
            d = e.template instanceof t ? e.template : null,
            g = "number" == typeof e.strength ? .4 * e.strength : .4; --f > -1; )
          i = p ? Math.random() : 1 / u * f, s = d ? d.getRatio(i) : i, "none" === l ? r = g : "out" === l ? (n = 1 - i, r = n * n * g) : "in" === l ? r = i * i * g : .5 > i ? (n = 2 * i, r = .5 * n * n * g) : (n = 2 * (1 - i), r = .5 * n * n * g), p ? s += Math.random() * r - .5 * r : f % 2 ? s += .5 * r : s -= .5 * r, m && (s > 1 ? s = 1 : 0 > s && (s = 0)), h[_++] = {
            x: i,
            y: s
          };
        for (h.sort(function(t, e) {
          return t.x - e.x;
        }), o = new c(1, 1, null), f = u; --f > -1; )
          a = h[f], o = new c(a.x, a.y, o);
        this._prev = new c(0, 0, 0 !== o.t ? o : o.next);
      }, !0), d = i.prototype = new t, d.constructor = i, d.getRatio = function(t) {
        var e = this._prev;
        if (t > e.t) {
          for (; e.next && t >= e.t; )
            e = e.next;
          e = e.prev;
        } else
          for (; e.prev && e.t >= t; )
            e = e.prev;
        return this._prev = e, e.v + (t - e.t) / e.gap * e.c;
      }, d.config = function(t) {
        return new i(t);
      }, i.ease = new i, u("Bounce", h("BounceOut", function(t) {
        return 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
      }), h("BounceIn", function(t) {
        return 1 / 2.75 > (t = 1 - t) ? 1 - 7.5625 * t * t : 2 / 2.75 > t ? 1 - (7.5625 * (t -= 1.5 / 2.75) * t + .75) : 2.5 / 2.75 > t ? 1 - (7.5625 * (t -= 2.25 / 2.75) * t + .9375) : 1 - (7.5625 * (t -= 2.625 / 2.75) * t + .984375);
      }), h("BounceInOut", function(t) {
        var e = .5 > t;
        return t = e ? 1 - 2 * t : 2 * t - 1, t = 1 / 2.75 > t ? 7.5625 * t * t : 2 / 2.75 > t ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : 2.5 / 2.75 > t ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375, e ? .5 * (1 - t) : .5 * t + .5;
      })), u("Circ", h("CircOut", function(t) {
        return Math.sqrt(1 - (t -= 1) * t);
      }), h("CircIn", function(t) {
        return -(Math.sqrt(1 - t * t) - 1);
      }), h("CircInOut", function(t) {
        return 1 > (t *= 2) ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
      })), s = function(e, i, s) {
        var r = l("easing." + e, function(t, e) {
          this._p1 = t >= 1 ? t : 1, this._p2 = (e || s) / (1 > t ? t : 1), this._p3 = this._p2 / a * (Math.asin(1 / this._p1) || 0), this._p2 = a / this._p2;
        }, !0),
            n = r.prototype = new t;
        return n.constructor = r, n.getRatio = i, n.config = function(t, e) {
          return new r(t, e);
        }, r;
      }, u("Elastic", s("ElasticOut", function(t) {
        return this._p1 * Math.pow(2, -10 * t) * Math.sin((t - this._p3) * this._p2) + 1;
      }, .3), s("ElasticIn", function(t) {
        return -(this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2));
      }, .3), s("ElasticInOut", function(t) {
        return 1 > (t *= 2) ? -.5 * this._p1 * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) : .5 * this._p1 * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - this._p3) * this._p2) + 1;
      }, .45)), u("Expo", h("ExpoOut", function(t) {
        return 1 - Math.pow(2, -10 * t);
      }), h("ExpoIn", function(t) {
        return Math.pow(2, 10 * (t - 1)) - .001;
      }), h("ExpoInOut", function(t) {
        return 1 > (t *= 2) ? .5 * Math.pow(2, 10 * (t - 1)) : .5 * (2 - Math.pow(2, -10 * (t - 1)));
      })), u("Sine", h("SineOut", function(t) {
        return Math.sin(t * o);
      }), h("SineIn", function(t) {
        return -Math.cos(t * o) + 1;
      }), h("SineInOut", function(t) {
        return -.5 * (Math.cos(Math.PI * t) - 1);
      })), l("easing.EaseLookup", {find: function(e) {
          return t.map[e];
        }}, !0), _(r.SlowMo, "SlowMo", "ease,"), _(i, "RoughEase", "ease,"), _(e, "SteppedEase", "ease,"), p;
    }, !0);
  }), _gsScope._gsDefine && _gsScope._gsQueue.pop()(), function(t, e) {
    "use strict";
    var i = t.GreenSockGlobals = t.GreenSockGlobals || t;
    if (!i.TweenLite) {
      var s,
          r,
          n,
          a,
          o,
          l = function(t) {
            var e,
                s = t.split("."),
                r = i;
            for (e = 0; s.length > e; e++)
              r[s[e]] = r = r[s[e]] || {};
            return r;
          },
          h = l("com.greensock"),
          _ = 1e-10,
          u = function(t) {
            var e,
                i = [],
                s = t.length;
            for (e = 0; e !== s; i.push(t[e++]))
              ;
            return i;
          },
          c = function() {},
          f = function() {
            var t = Object.prototype.toString,
                e = t.call([]);
            return function(i) {
              return null != i && (i instanceof Array || "object" == typeof i && !!i.push && t.call(i) === e);
            };
          }(),
          p = {},
          m = function(s, r, n, a) {
            this.sc = p[s] ? p[s].sc : [], p[s] = this, this.gsClass = null, this.func = n;
            var o = [];
            this.check = function(h) {
              for (var _,
                  u,
                  c,
                  f,
                  d,
                  g = r.length,
                  v = g; --g > -1; )
                (_ = p[r[g]] || new m(r[g], [])).gsClass ? (o[g] = _.gsClass, v--) : h && _.sc.push(this);
              if (0 === v && n)
                for (u = ("com.greensock." + s).split("."), c = u.pop(), f = l(u.join("."))[c] = this.gsClass = n.apply(n, o), a && (i[c] = f, d = "undefined" != typeof module && module.exports, !d && "function" == typeof define && define.amd ? define((t.GreenSockAMDPath ? t.GreenSockAMDPath + "/" : "") + s.split(".").pop(), [], function() {
                  return f;
                }) : s === e && d && (module.exports = f)), g = 0; this.sc.length > g; g++)
                  this.sc[g].check();
            }, this.check(!0);
          },
          d = t._gsDefine = function(t, e, i, s) {
            return new m(t, e, i, s);
          },
          g = h._class = function(t, e, i) {
            return e = e || function() {}, d(t, [], function() {
              return e;
            }, i), e;
          };
      d.globals = i;
      var v = [0, 0, 1, 1],
          y = [],
          T = g("easing.Ease", function(t, e, i, s) {
            this._func = t, this._type = i || 0, this._power = s || 0, this._params = e ? v.concat(e) : v;
          }, !0),
          x = T.map = {},
          w = T.register = function(t, e, i, s) {
            for (var r,
                n,
                a,
                o,
                l = e.split(","),
                _ = l.length,
                u = (i || "easeIn,easeOut,easeInOut").split(","); --_ > -1; )
              for (n = l[_], r = s ? g("easing." + n, null, !0) : h.easing[n] || {}, a = u.length; --a > -1; )
                o = u[a], x[n + "." + o] = x[o + n] = r[o] = t.getRatio ? t : t[o] || new t;
          };
      for (n = T.prototype, n._calcEnd = !1, n.getRatio = function(t) {
        if (this._func)
          return this._params[0] = t, this._func.apply(null, this._params);
        var e = this._type,
            i = this._power,
            s = 1 === e ? 1 - t : 2 === e ? t : .5 > t ? 2 * t : 2 * (1 - t);
        return 1 === i ? s *= s : 2 === i ? s *= s * s : 3 === i ? s *= s * s * s : 4 === i && (s *= s * s * s * s), 1 === e ? 1 - s : 2 === e ? s : .5 > t ? s / 2 : 1 - s / 2;
      }, s = ["Linear", "Quad", "Cubic", "Quart", "Quint,Strong"], r = s.length; --r > -1; )
        n = s[r] + ",Power" + r, w(new T(null, null, 1, r), n, "easeOut", !0), w(new T(null, null, 2, r), n, "easeIn" + (0 === r ? ",easeNone" : "")), w(new T(null, null, 3, r), n, "easeInOut");
      x.linear = h.easing.Linear.easeIn, x.swing = h.easing.Quad.easeInOut;
      var b = g("events.EventDispatcher", function(t) {
        this._listeners = {}, this._eventTarget = t || this;
      });
      n = b.prototype, n.addEventListener = function(t, e, i, s, r) {
        r = r || 0;
        var n,
            l,
            h = this._listeners[t],
            _ = 0;
        for (null == h && (this._listeners[t] = h = []), l = h.length; --l > -1; )
          n = h[l], n.c === e && n.s === i ? h.splice(l, 1) : 0 === _ && r > n.pr && (_ = l + 1);
        h.splice(_, 0, {
          c: e,
          s: i,
          up: s,
          pr: r
        }), this !== a || o || a.wake();
      }, n.removeEventListener = function(t, e) {
        var i,
            s = this._listeners[t];
        if (s)
          for (i = s.length; --i > -1; )
            if (s[i].c === e)
              return s.splice(i, 1), void 0;
      }, n.dispatchEvent = function(t) {
        var e,
            i,
            s,
            r = this._listeners[t];
        if (r)
          for (e = r.length, i = this._eventTarget; --e > -1; )
            s = r[e], s && (s.up ? s.c.call(s.s || i, {
              type: t,
              target: i
            }) : s.c.call(s.s || i));
      };
      var P = t.requestAnimationFrame,
          k = t.cancelAnimationFrame,
          S = Date.now || function() {
            return (new Date).getTime();
          },
          R = S();
      for (s = ["ms", "moz", "webkit", "o"], r = s.length; --r > -1 && !P; )
        P = t[s[r] + "RequestAnimationFrame"], k = t[s[r] + "CancelAnimationFrame"] || t[s[r] + "CancelRequestAnimationFrame"];
      g("Ticker", function(t, e) {
        var i,
            s,
            r,
            n,
            l,
            h = this,
            u = S(),
            f = e !== !1 && P,
            p = 500,
            m = 33,
            d = "tick",
            g = function(t) {
              var e,
                  a,
                  o = S() - R;
              o > p && (u += o - m), R += o, h.time = (R - u) / 1e3, e = h.time - l, (!i || e > 0 || t === !0) && (h.frame++, l += e + (e >= n ? .004 : n - e), a = !0), t !== !0 && (r = s(g)), a && h.dispatchEvent(d);
            };
        b.call(h), h.time = h.frame = 0, h.tick = function() {
          g(!0);
        }, h.lagSmoothing = function(t, e) {
          p = t || 1 / _, m = Math.min(e, p, 0);
        }, h.sleep = function() {
          null != r && (f && k ? k(r) : clearTimeout(r), s = c, r = null, h === a && (o = !1));
        }, h.wake = function() {
          null !== r ? h.sleep() : h.frame > 10 && (R = S() - p + 5), s = 0 === i ? c : f && P ? P : function(t) {
            return setTimeout(t, 0 | 1e3 * (l - h.time) + 1);
          }, h === a && (o = !0), g(2);
        }, h.fps = function(t) {
          return arguments.length ? (i = t, n = 1 / (i || 60), l = this.time + n, h.wake(), void 0) : i;
        }, h.useRAF = function(t) {
          return arguments.length ? (h.sleep(), f = t, h.fps(i), void 0) : f;
        }, h.fps(t), setTimeout(function() {
          f && 5 > h.frame && h.useRAF(!1);
        }, 1500);
      }), n = h.Ticker.prototype = new h.events.EventDispatcher, n.constructor = h.Ticker;
      var O = g("core.Animation", function(t, e) {
        if (this.vars = e = e || {}, this._duration = this._totalDuration = t || 0, this._delay = Number(e.delay) || 0, this._timeScale = 1, this._active = e.immediateRender === !0, this.data = e.data, this._reversed = e.reversed === !0, W) {
          o || a.wake();
          var i = this.vars.useFrames ? G : W;
          i.add(this, i._time), this.vars.paused && this.paused(!0);
        }
      });
      a = O.ticker = new h.Ticker, n = O.prototype, n._dirty = n._gc = n._initted = n._paused = !1, n._totalTime = n._time = 0, n._rawPrevTime = -1, n._next = n._last = n._onUpdate = n._timeline = n.timeline = null, n._paused = !1;
      var A = function() {
        o && S() - R > 2e3 && a.wake(), setTimeout(A, 2e3);
      };
      A(), n.play = function(t, e) {
        return null != t && this.seek(t, e), this.reversed(!1).paused(!1);
      }, n.pause = function(t, e) {
        return null != t && this.seek(t, e), this.paused(!0);
      }, n.resume = function(t, e) {
        return null != t && this.seek(t, e), this.paused(!1);
      }, n.seek = function(t, e) {
        return this.totalTime(Number(t), e !== !1);
      }, n.restart = function(t, e) {
        return this.reversed(!1).paused(!1).totalTime(t ? -this._delay : 0, e !== !1, !0);
      }, n.reverse = function(t, e) {
        return null != t && this.seek(t || this.totalDuration(), e), this.reversed(!0).paused(!1);
      }, n.render = function() {}, n.invalidate = function() {
        return this._time = this._totalTime = 0, this._initted = this._gc = !1, this._rawPrevTime = -1, (this._gc || !this.timeline) && this._enabled(!0), this;
      }, n.isActive = function() {
        var t,
            e = this._timeline,
            i = this._startTime;
        return !e || !this._gc && !this._paused && e.isActive() && (t = e.rawTime()) >= i && i + this.totalDuration() / this._timeScale > t;
      }, n._enabled = function(t, e) {
        return o || a.wake(), this._gc = !t, this._active = this.isActive(), e !== !0 && (t && !this.timeline ? this._timeline.add(this, this._startTime - this._delay) : !t && this.timeline && this._timeline._remove(this, !0)), !1;
      }, n._kill = function() {
        return this._enabled(!1, !1);
      }, n.kill = function(t, e) {
        return this._kill(t, e), this;
      }, n._uncache = function(t) {
        for (var e = t ? this : this.timeline; e; )
          e._dirty = !0, e = e.timeline;
        return this;
      }, n._swapSelfInParams = function(t) {
        for (var e = t.length,
            i = t.concat(); --e > -1; )
          "{self}" === t[e] && (i[e] = this);
        return i;
      }, n._callback = function(t) {
        var e = this.vars;
        e[t].apply(e[t + "Scope"] || e.callbackScope || this, e[t + "Params"] || y);
      }, n.eventCallback = function(t, e, i, s) {
        if ("on" === (t || "").substr(0, 2)) {
          var r = this.vars;
          if (1 === arguments.length)
            return r[t];
          null == e ? delete r[t] : (r[t] = e, r[t + "Params"] = f(i) && -1 !== i.join("").indexOf("{self}") ? this._swapSelfInParams(i) : i, r[t + "Scope"] = s), "onUpdate" === t && (this._onUpdate = e);
        }
        return this;
      }, n.delay = function(t) {
        return arguments.length ? (this._timeline.smoothChildTiming && this.startTime(this._startTime + t - this._delay), this._delay = t, this) : this._delay;
      }, n.duration = function(t) {
        return arguments.length ? (this._duration = this._totalDuration = t, this._uncache(!0), this._timeline.smoothChildTiming && this._time > 0 && this._time < this._duration && 0 !== t && this.totalTime(this._totalTime * (t / this._duration), !0), this) : (this._dirty = !1, this._duration);
      }, n.totalDuration = function(t) {
        return this._dirty = !1, arguments.length ? this.duration(t) : this._totalDuration;
      }, n.time = function(t, e) {
        return arguments.length ? (this._dirty && this.totalDuration(), this.totalTime(t > this._duration ? this._duration : t, e)) : this._time;
      }, n.totalTime = function(t, e, i) {
        if (o || a.wake(), !arguments.length)
          return this._totalTime;
        if (this._timeline) {
          if (0 > t && !i && (t += this.totalDuration()), this._timeline.smoothChildTiming) {
            this._dirty && this.totalDuration();
            var s = this._totalDuration,
                r = this._timeline;
            if (t > s && !i && (t = s), this._startTime = (this._paused ? this._pauseTime : r._time) - (this._reversed ? s - t : t) / this._timeScale, r._dirty || this._uncache(!1), r._timeline)
              for (; r._timeline; )
                r._timeline._time !== (r._startTime + r._totalTime) / r._timeScale && r.totalTime(r._totalTime, !0), r = r._timeline;
          }
          this._gc && this._enabled(!0, !1), (this._totalTime !== t || 0 === this._duration) && (F.length && Q(), this.render(t, e, !1), F.length && Q());
        }
        return this;
      }, n.progress = n.totalProgress = function(t, e) {
        var i = this.duration();
        return arguments.length ? this.totalTime(i * t, e) : i ? this._time / i : this.ratio;
      }, n.startTime = function(t) {
        return arguments.length ? (t !== this._startTime && (this._startTime = t, this.timeline && this.timeline._sortChildren && this.timeline.add(this, t - this._delay)), this) : this._startTime;
      }, n.endTime = function(t) {
        return this._startTime + (0 != t ? this.totalDuration() : this.duration()) / this._timeScale;
      }, n.timeScale = function(t) {
        if (!arguments.length)
          return this._timeScale;
        if (t = t || _, this._timeline && this._timeline.smoothChildTiming) {
          var e = this._pauseTime,
              i = e || 0 === e ? e : this._timeline.totalTime();
          this._startTime = i - (i - this._startTime) * this._timeScale / t;
        }
        return this._timeScale = t, this._uncache(!1);
      }, n.reversed = function(t) {
        return arguments.length ? (t != this._reversed && (this._reversed = t, this.totalTime(this._timeline && !this._timeline.smoothChildTiming ? this.totalDuration() - this._totalTime : this._totalTime, !0)), this) : this._reversed;
      }, n.paused = function(t) {
        if (!arguments.length)
          return this._paused;
        var e,
            i,
            s = this._timeline;
        return t != this._paused && s && (o || t || a.wake(), e = s.rawTime(), i = e - this._pauseTime, !t && s.smoothChildTiming && (this._startTime += i, this._uncache(!1)), this._pauseTime = t ? e : null, this._paused = t, this._active = this.isActive(), !t && 0 !== i && this._initted && this.duration() && (e = s.smoothChildTiming ? this._totalTime : (e - this._startTime) / this._timeScale, this.render(e, e === this._totalTime, !0))), this._gc && !t && this._enabled(!0, !1), this;
      };
      var C = g("core.SimpleTimeline", function(t) {
        O.call(this, 0, t), this.autoRemoveChildren = this.smoothChildTiming = !0;
      });
      n = C.prototype = new O, n.constructor = C, n.kill()._gc = !1, n._first = n._last = n._recent = null, n._sortChildren = !1, n.add = n.insert = function(t, e) {
        var i,
            s;
        if (t._startTime = Number(e || 0) + t._delay, t._paused && this !== t._timeline && (t._pauseTime = t._startTime + (this.rawTime() - t._startTime) / t._timeScale), t.timeline && t.timeline._remove(t, !0), t.timeline = t._timeline = this, t._gc && t._enabled(!0, !0), i = this._last, this._sortChildren)
          for (s = t._startTime; i && i._startTime > s; )
            i = i._prev;
        return i ? (t._next = i._next, i._next = t) : (t._next = this._first, this._first = t), t._next ? t._next._prev = t : this._last = t, t._prev = i, this._recent = t, this._timeline && this._uncache(!0), this;
      }, n._remove = function(t, e) {
        return t.timeline === this && (e || t._enabled(!1, !0), t._prev ? t._prev._next = t._next : this._first === t && (this._first = t._next), t._next ? t._next._prev = t._prev : this._last === t && (this._last = t._prev), t._next = t._prev = t.timeline = null, t === this._recent && (this._recent = this._last), this._timeline && this._uncache(!0)), this;
      }, n.render = function(t, e, i) {
        var s,
            r = this._first;
        for (this._totalTime = this._time = this._rawPrevTime = t; r; )
          s = r._next, (r._active || t >= r._startTime && !r._paused) && (r._reversed ? r.render((r._dirty ? r.totalDuration() : r._totalDuration) - (t - r._startTime) * r._timeScale, e, i) : r.render((t - r._startTime) * r._timeScale, e, i)), r = s;
      }, n.rawTime = function() {
        return o || a.wake(), this._totalTime;
      };
      var D = g("TweenLite", function(e, i, s) {
        if (O.call(this, i, s), this.render = D.prototype.render, null == e)
          throw "Cannot tween a null target.";
        this.target = e = "string" != typeof e ? e : D.selector(e) || e;
        var r,
            n,
            a,
            o = e.jquery || e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType),
            l = this.vars.overwrite;
        if (this._overwrite = l = null == l ? V[D.defaultOverwrite] : "number" == typeof l ? l >> 0 : V[l], (o || e instanceof Array || e.push && f(e)) && "number" != typeof e[0])
          for (this._targets = a = u(e), this._propLookup = [], this._siblings = [], r = 0; a.length > r; r++)
            n = a[r], n ? "string" != typeof n ? n.length && n !== t && n[0] && (n[0] === t || n[0].nodeType && n[0].style && !n.nodeType) ? (a.splice(r--, 1), this._targets = a = a.concat(u(n))) : (this._siblings[r] = $(n, this, !1), 1 === l && this._siblings[r].length > 1 && K(n, this, null, 1, this._siblings[r])) : (n = a[r--] = D.selector(n), "string" == typeof n && a.splice(r + 1, 1)) : a.splice(r--, 1);
        else
          this._propLookup = {}, this._siblings = $(e, this, !1), 1 === l && this._siblings.length > 1 && K(e, this, null, 1, this._siblings);
        (this.vars.immediateRender || 0 === i && 0 === this._delay && this.vars.immediateRender !== !1) && (this._time = -_, this.render(-this._delay));
      }, !0),
          M = function(e) {
            return e && e.length && e !== t && e[0] && (e[0] === t || e[0].nodeType && e[0].style && !e.nodeType);
          },
          z = function(t, e) {
            var i,
                s = {};
            for (i in t)
              q[i] || i in e && "transform" !== i && "x" !== i && "y" !== i && "width" !== i && "height" !== i && "className" !== i && "border" !== i || !(!j[i] || j[i] && j[i]._autoCSS) || (s[i] = t[i], delete t[i]);
            t.css = s;
          };
      n = D.prototype = new O, n.constructor = D, n.kill()._gc = !1, n.ratio = 0, n._firstPT = n._targets = n._overwrittenProps = n._startAt = null, n._notifyPluginsOfEnabled = n._lazy = !1, D.version = "1.18.0", D.defaultEase = n._ease = new T(null, null, 1, 1), D.defaultOverwrite = "auto", D.ticker = a, D.autoSleep = 120, D.lagSmoothing = function(t, e) {
        a.lagSmoothing(t, e);
      }, D.selector = t.$ || t.jQuery || function(e) {
        var i = t.$ || t.jQuery;
        return i ? (D.selector = i, i(e)) : "undefined" == typeof document ? e : document.querySelectorAll ? document.querySelectorAll(e) : document.getElementById("#" === e.charAt(0) ? e.substr(1) : e);
      };
      var F = [],
          I = {},
          E = /(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,
          N = function(t) {
            for (var e,
                i = this._firstPT,
                s = 1e-6; i; )
              e = i.blob ? t ? this.join("") : this.start : i.c * t + i.s, i.r ? e = Math.round(e) : s > e && e > -s && (e = 0), i.f ? i.fp ? i.t[i.p](i.fp, e) : i.t[i.p](e) : i.t[i.p] = e, i = i._next;
          },
          L = function(t, e, i, s) {
            var r,
                n,
                a,
                o,
                l,
                h,
                _,
                u = [t, e],
                c = 0,
                f = "",
                p = 0;
            for (u.start = t, i && (i(u), t = u[0], e = u[1]), u.length = 0, r = t.match(E) || [], n = e.match(E) || [], s && (s._next = null, s.blob = 1, u._firstPT = s), l = n.length, o = 0; l > o; o++)
              _ = n[o], h = e.substr(c, e.indexOf(_, c) - c), f += h || !o ? h : ",", c += h.length, p ? p = (p + 1) % 5 : "rgba(" === h.substr(-5) && (p = 1), _ === r[o] || o >= r.length ? f += _ : (f && (u.push(f), f = ""), a = parseFloat(r[o]), u.push(a), u._firstPT = {
                _next: u._firstPT,
                t: u,
                p: u.length - 1,
                s: a,
                c: ("=" === _.charAt(1) ? parseInt(_.charAt(0) + "1", 10) * parseFloat(_.substr(2)) : parseFloat(_) - a) || 0,
                f: 0,
                r: p && 4 > p
              }), c += _.length;
            return f += e.substr(c), f && u.push(f), u.setRatio = N, u;
          },
          X = function(t, e, i, s, r, n, a, o) {
            var l,
                h,
                _ = "get" === i ? t[e] : i,
                u = typeof t[e],
                c = "string" == typeof s && "=" === s.charAt(1),
                f = {
                  t: t,
                  p: e,
                  s: _,
                  f: "function" === u,
                  pg: 0,
                  n: r || e,
                  r: n,
                  pr: 0,
                  c: c ? parseInt(s.charAt(0) + "1", 10) * parseFloat(s.substr(2)) : parseFloat(s) - _ || 0
                };
            return "number" !== u && ("function" === u && "get" === i && (h = e.indexOf("set") || "function" != typeof t["get" + e.substr(3)] ? e : "get" + e.substr(3), f.s = _ = a ? t[h](a) : t[h]()), "string" == typeof _ && (a || isNaN(_)) ? (f.fp = a, l = L(_, s, o || D.defaultStringFilter, f), f = {
              t: l,
              p: "setRatio",
              s: 0,
              c: 1,
              f: 2,
              pg: 0,
              n: r || e,
              pr: 0
            }) : c || (f.c = parseFloat(s) - parseFloat(_) || 0)), f.c ? ((f._next = this._firstPT) && (f._next._prev = f), this._firstPT = f, f) : void 0;
          },
          B = D._internals = {
            isArray: f,
            isSelector: M,
            lazyTweens: F,
            blobDif: L
          },
          j = D._plugins = {},
          Y = B.tweenLookup = {},
          U = 0,
          q = B.reservedProps = {
            ease: 1,
            delay: 1,
            overwrite: 1,
            onComplete: 1,
            onCompleteParams: 1,
            onCompleteScope: 1,
            useFrames: 1,
            runBackwards: 1,
            startAt: 1,
            onUpdate: 1,
            onUpdateParams: 1,
            onUpdateScope: 1,
            onStart: 1,
            onStartParams: 1,
            onStartScope: 1,
            onReverseComplete: 1,
            onReverseCompleteParams: 1,
            onReverseCompleteScope: 1,
            onRepeat: 1,
            onRepeatParams: 1,
            onRepeatScope: 1,
            easeParams: 1,
            yoyo: 1,
            immediateRender: 1,
            repeat: 1,
            repeatDelay: 1,
            data: 1,
            paused: 1,
            reversed: 1,
            autoCSS: 1,
            lazy: 1,
            onOverwrite: 1,
            callbackScope: 1,
            stringFilter: 1
          },
          V = {
            none: 0,
            all: 1,
            auto: 2,
            concurrent: 3,
            allOnStart: 4,
            preexisting: 5,
            "true": 1,
            "false": 0
          },
          G = O._rootFramesTimeline = new C,
          W = O._rootTimeline = new C,
          Z = 30,
          Q = B.lazyRender = function() {
            var t,
                e = F.length;
            for (I = {}; --e > -1; )
              t = F[e], t && t._lazy !== !1 && (t.render(t._lazy[0], t._lazy[1], !0), t._lazy = !1);
            F.length = 0;
          };
      W._startTime = a.time, G._startTime = a.frame, W._active = G._active = !0, setTimeout(Q, 1), O._updateRoot = D.render = function() {
        var t,
            e,
            i;
        if (F.length && Q(), W.render((a.time - W._startTime) * W._timeScale, !1, !1), G.render((a.frame - G._startTime) * G._timeScale, !1, !1), F.length && Q(), a.frame >= Z) {
          Z = a.frame + (parseInt(D.autoSleep, 10) || 120);
          for (i in Y) {
            for (e = Y[i].tweens, t = e.length; --t > -1; )
              e[t]._gc && e.splice(t, 1);
            0 === e.length && delete Y[i];
          }
          if (i = W._first, (!i || i._paused) && D.autoSleep && !G._first && 1 === a._listeners.tick.length) {
            for (; i && i._paused; )
              i = i._next;
            i || a.sleep();
          }
        }
      }, a.addEventListener("tick", O._updateRoot);
      var $ = function(t, e, i) {
        var s,
            r,
            n = t._gsTweenID;
        if (Y[n || (t._gsTweenID = n = "t" + U++)] || (Y[n] = {
          target: t,
          tweens: []
        }), e && (s = Y[n].tweens, s[r = s.length] = e, i))
          for (; --r > -1; )
            s[r] === e && s.splice(r, 1);
        return Y[n].tweens;
      },
          H = function(t, e, i, s) {
            var r,
                n,
                a = t.vars.onOverwrite;
            return a && (r = a(t, e, i, s)), a = D.onOverwrite, a && (n = a(t, e, i, s)), r !== !1 && n !== !1;
          },
          K = function(t, e, i, s, r) {
            var n,
                a,
                o,
                l;
            if (1 === s || s >= 4) {
              for (l = r.length, n = 0; l > n; n++)
                if ((o = r[n]) !== e)
                  o._gc || o._kill(null, t, e) && (a = !0);
                else if (5 === s)
                  break;
              return a;
            }
            var h,
                u = e._startTime + _,
                c = [],
                f = 0,
                p = 0 === e._duration;
            for (n = r.length; --n > -1; )
              (o = r[n]) === e || o._gc || o._paused || (o._timeline !== e._timeline ? (h = h || J(e, 0, p), 0 === J(o, h, p) && (c[f++] = o)) : u >= o._startTime && o._startTime + o.totalDuration() / o._timeScale > u && ((p || !o._initted) && 2e-10 >= u - o._startTime || (c[f++] = o)));
            for (n = f; --n > -1; )
              if (o = c[n], 2 === s && o._kill(i, t, e) && (a = !0), 2 !== s || !o._firstPT && o._initted) {
                if (2 !== s && !H(o, e))
                  continue;
                o._enabled(!1, !1) && (a = !0);
              }
            return a;
          },
          J = function(t, e, i) {
            for (var s = t._timeline,
                r = s._timeScale,
                n = t._startTime; s._timeline; ) {
              if (n += s._startTime, r *= s._timeScale, s._paused)
                return -100;
              s = s._timeline;
            }
            return n /= r, n > e ? n - e : i && n === e || !t._initted && 2 * _ > n - e ? _ : (n += t.totalDuration() / t._timeScale / r) > e + _ ? 0 : n - e - _;
          };
      n._init = function() {
        var t,
            e,
            i,
            s,
            r,
            n = this.vars,
            a = this._overwrittenProps,
            o = this._duration,
            l = !!n.immediateRender,
            h = n.ease;
        if (n.startAt) {
          this._startAt && (this._startAt.render(-1, !0), this._startAt.kill()), r = {};
          for (s in n.startAt)
            r[s] = n.startAt[s];
          if (r.overwrite = !1, r.immediateRender = !0, r.lazy = l && n.lazy !== !1, r.startAt = r.delay = null, this._startAt = D.to(this.target, 0, r), l)
            if (this._time > 0)
              this._startAt = null;
            else if (0 !== o)
              return;
        } else if (n.runBackwards && 0 !== o)
          if (this._startAt)
            this._startAt.render(-1, !0), this._startAt.kill(), this._startAt = null;
          else {
            0 !== this._time && (l = !1), i = {};
            for (s in n)
              q[s] && "autoCSS" !== s || (i[s] = n[s]);
            if (i.overwrite = 0, i.data = "isFromStart", i.lazy = l && n.lazy !== !1, i.immediateRender = l, this._startAt = D.to(this.target, 0, i), l) {
              if (0 === this._time)
                return;
            } else
              this._startAt._init(), this._startAt._enabled(!1), this.vars.immediateRender && (this._startAt = null);
          }
        if (this._ease = h = h ? h instanceof T ? h : "function" == typeof h ? new T(h, n.easeParams) : x[h] || D.defaultEase : D.defaultEase, n.easeParams instanceof Array && h.config && (this._ease = h.config.apply(h, n.easeParams)), this._easeType = this._ease._type, this._easePower = this._ease._power, this._firstPT = null, this._targets)
          for (t = this._targets.length; --t > -1; )
            this._initProps(this._targets[t], this._propLookup[t] = {}, this._siblings[t], a ? a[t] : null) && (e = !0);
        else
          e = this._initProps(this.target, this._propLookup, this._siblings, a);
        if (e && D._onPluginEvent("_onInitAllProps", this), a && (this._firstPT || "function" != typeof this.target && this._enabled(!1, !1)), n.runBackwards)
          for (i = this._firstPT; i; )
            i.s += i.c, i.c = -i.c, i = i._next;
        this._onUpdate = n.onUpdate, this._initted = !0;
      }, n._initProps = function(e, i, s, r) {
        var n,
            a,
            o,
            l,
            h,
            _;
        if (null == e)
          return !1;
        I[e._gsTweenID] && Q(), this.vars.css || e.style && e !== t && e.nodeType && j.css && this.vars.autoCSS !== !1 && z(this.vars, e);
        for (n in this.vars)
          if (_ = this.vars[n], q[n])
            _ && (_ instanceof Array || _.push && f(_)) && -1 !== _.join("").indexOf("{self}") && (this.vars[n] = _ = this._swapSelfInParams(_, this));
          else if (j[n] && (l = new j[n])._onInitTween(e, this.vars[n], this)) {
            for (this._firstPT = h = {
              _next: this._firstPT,
              t: l,
              p: "setRatio",
              s: 0,
              c: 1,
              f: 1,
              n: n,
              pg: 1,
              pr: l._priority
            }, a = l._overwriteProps.length; --a > -1; )
              i[l._overwriteProps[a]] = this._firstPT;
            (l._priority || l._onInitAllProps) && (o = !0), (l._onDisable || l._onEnable) && (this._notifyPluginsOfEnabled = !0), h._next && (h._next._prev = h);
          } else
            i[n] = X.call(this, e, n, "get", _, n, 0, null, this.vars.stringFilter);
        return r && this._kill(r, e) ? this._initProps(e, i, s, r) : this._overwrite > 1 && this._firstPT && s.length > 1 && K(e, this, i, this._overwrite, s) ? (this._kill(i, e), this._initProps(e, i, s, r)) : (this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration) && (I[e._gsTweenID] = !0), o);
      }, n.render = function(t, e, i) {
        var s,
            r,
            n,
            a,
            o = this._time,
            l = this._duration,
            h = this._rawPrevTime;
        if (t >= l)
          this._totalTime = this._time = l, this.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1, this._reversed || (s = !0, r = "onComplete", i = i || this._timeline.autoRemoveChildren), 0 === l && (this._initted || !this.vars.lazy || i) && (this._startTime === this._timeline._duration && (t = 0), (0 === t || 0 > h || h === _ && "isPause" !== this.data) && h !== t && (i = !0, h > _ && (r = "onReverseComplete")), this._rawPrevTime = a = !e || t || h === t ? t : _);
        else if (1e-7 > t)
          this._totalTime = this._time = 0, this.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0, (0 !== o || 0 === l && h > 0) && (r = "onReverseComplete", s = this._reversed), 0 > t && (this._active = !1, 0 === l && (this._initted || !this.vars.lazy || i) && (h >= 0 && (h !== _ || "isPause" !== this.data) && (i = !0), this._rawPrevTime = a = !e || t || h === t ? t : _)), this._initted || (i = !0);
        else if (this._totalTime = this._time = t, this._easeType) {
          var u = t / l,
              c = this._easeType,
              f = this._easePower;
          (1 === c || 3 === c && u >= .5) && (u = 1 - u), 3 === c && (u *= 2), 1 === f ? u *= u : 2 === f ? u *= u * u : 3 === f ? u *= u * u * u : 4 === f && (u *= u * u * u * u), this.ratio = 1 === c ? 1 - u : 2 === c ? u : .5 > t / l ? u / 2 : 1 - u / 2;
        } else
          this.ratio = this._ease.getRatio(t / l);
        if (this._time !== o || i) {
          if (!this._initted) {
            if (this._init(), !this._initted || this._gc)
              return;
            if (!i && this._firstPT && (this.vars.lazy !== !1 && this._duration || this.vars.lazy && !this._duration))
              return this._time = this._totalTime = o, this._rawPrevTime = h, F.push(this), this._lazy = [t, e], void 0;
            this._time && !s ? this.ratio = this._ease.getRatio(this._time / l) : s && this._ease._calcEnd && (this.ratio = this._ease.getRatio(0 === this._time ? 0 : 1));
          }
          for (this._lazy !== !1 && (this._lazy = !1), this._active || !this._paused && this._time !== o && t >= 0 && (this._active = !0), 0 === o && (this._startAt && (t >= 0 ? this._startAt.render(t, e, i) : r || (r = "_dummyGS")), this.vars.onStart && (0 !== this._time || 0 === l) && (e || this._callback("onStart"))), n = this._firstPT; n; )
            n.f ? n.t[n.p](n.c * this.ratio + n.s) : n.t[n.p] = n.c * this.ratio + n.s, n = n._next;
          this._onUpdate && (0 > t && this._startAt && t !== -1e-4 && this._startAt.render(t, e, i), e || (this._time !== o || s) && this._callback("onUpdate")), r && (!this._gc || i) && (0 > t && this._startAt && !this._onUpdate && t !== -1e-4 && this._startAt.render(t, e, i), s && (this._timeline.autoRemoveChildren && this._enabled(!1, !1), this._active = !1), !e && this.vars[r] && this._callback(r), 0 === l && this._rawPrevTime === _ && a !== _ && (this._rawPrevTime = 0));
        }
      }, n._kill = function(t, e, i) {
        if ("all" === t && (t = null), null == t && (null == e || e === this.target))
          return this._lazy = !1, this._enabled(!1, !1);
        e = "string" != typeof e ? e || this._targets || this.target : D.selector(e) || e;
        var s,
            r,
            n,
            a,
            o,
            l,
            h,
            _,
            u,
            c = i && this._time && i._startTime === this._startTime && this._timeline === i._timeline;
        if ((f(e) || M(e)) && "number" != typeof e[0])
          for (s = e.length; --s > -1; )
            this._kill(t, e[s], i) && (l = !0);
        else {
          if (this._targets) {
            for (s = this._targets.length; --s > -1; )
              if (e === this._targets[s]) {
                o = this._propLookup[s] || {}, this._overwrittenProps = this._overwrittenProps || [], r = this._overwrittenProps[s] = t ? this._overwrittenProps[s] || {} : "all";
                break;
              }
          } else {
            if (e !== this.target)
              return !1;
            o = this._propLookup, r = this._overwrittenProps = t ? this._overwrittenProps || {} : "all";
          }
          if (o) {
            if (h = t || o, _ = t !== r && "all" !== r && t !== o && ("object" != typeof t || !t._tempKill), i && (D.onOverwrite || this.vars.onOverwrite)) {
              for (n in h)
                o[n] && (u || (u = []), u.push(n));
              if ((u || !t) && !H(this, i, e, u))
                return !1;
            }
            for (n in h)
              (a = o[n]) && (c && (a.f ? a.t[a.p](a.s) : a.t[a.p] = a.s, l = !0), a.pg && a.t._kill(h) && (l = !0), a.pg && 0 !== a.t._overwriteProps.length || (a._prev ? a._prev._next = a._next : a === this._firstPT && (this._firstPT = a._next), a._next && (a._next._prev = a._prev), a._next = a._prev = null), delete o[n]), _ && (r[n] = 1);
            !this._firstPT && this._initted && this._enabled(!1, !1);
          }
        }
        return l;
      }, n.invalidate = function() {
        return this._notifyPluginsOfEnabled && D._onPluginEvent("_onDisable", this), this._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null, this._notifyPluginsOfEnabled = this._active = this._lazy = !1, this._propLookup = this._targets ? {} : [], O.prototype.invalidate.call(this), this.vars.immediateRender && (this._time = -_, this.render(-this._delay)), this;
      }, n._enabled = function(t, e) {
        if (o || a.wake(), t && this._gc) {
          var i,
              s = this._targets;
          if (s)
            for (i = s.length; --i > -1; )
              this._siblings[i] = $(s[i], this, !0);
          else
            this._siblings = $(this.target, this, !0);
        }
        return O.prototype._enabled.call(this, t, e), this._notifyPluginsOfEnabled && this._firstPT ? D._onPluginEvent(t ? "_onEnable" : "_onDisable", this) : !1;
      }, D.to = function(t, e, i) {
        return new D(t, e, i);
      }, D.from = function(t, e, i) {
        return i.runBackwards = !0, i.immediateRender = 0 != i.immediateRender, new D(t, e, i);
      }, D.fromTo = function(t, e, i, s) {
        return s.startAt = i, s.immediateRender = 0 != s.immediateRender && 0 != i.immediateRender, new D(t, e, s);
      }, D.delayedCall = function(t, e, i, s, r) {
        return new D(e, 0, {
          delay: t,
          onComplete: e,
          onCompleteParams: i,
          callbackScope: s,
          onReverseComplete: e,
          onReverseCompleteParams: i,
          immediateRender: !1,
          lazy: !1,
          useFrames: r,
          overwrite: 0
        });
      }, D.set = function(t, e) {
        return new D(t, 0, e);
      }, D.getTweensOf = function(t, e) {
        if (null == t)
          return [];
        t = "string" != typeof t ? t : D.selector(t) || t;
        var i,
            s,
            r,
            n;
        if ((f(t) || M(t)) && "number" != typeof t[0]) {
          for (i = t.length, s = []; --i > -1; )
            s = s.concat(D.getTweensOf(t[i], e));
          for (i = s.length; --i > -1; )
            for (n = s[i], r = i; --r > -1; )
              n === s[r] && s.splice(i, 1);
        } else
          for (s = $(t).concat(), i = s.length; --i > -1; )
            (s[i]._gc || e && !s[i].isActive()) && s.splice(i, 1);
        return s;
      }, D.killTweensOf = D.killDelayedCallsTo = function(t, e, i) {
        "object" == typeof e && (i = e, e = !1);
        for (var s = D.getTweensOf(t, e),
            r = s.length; --r > -1; )
          s[r]._kill(i, t);
      };
      var te = g("plugins.TweenPlugin", function(t, e) {
        this._overwriteProps = (t || "").split(","), this._propName = this._overwriteProps[0], this._priority = e || 0, this._super = te.prototype;
      }, !0);
      if (n = te.prototype, te.version = "1.18.0", te.API = 2, n._firstPT = null, n._addTween = X, n.setRatio = N, n._kill = function(t) {
        var e,
            i = this._overwriteProps,
            s = this._firstPT;
        if (null != t[this._propName])
          this._overwriteProps = [];
        else
          for (e = i.length; --e > -1; )
            null != t[i[e]] && i.splice(e, 1);
        for (; s; )
          null != t[s.n] && (s._next && (s._next._prev = s._prev), s._prev ? (s._prev._next = s._next, s._prev = null) : this._firstPT === s && (this._firstPT = s._next)), s = s._next;
        return !1;
      }, n._roundProps = function(t, e) {
        for (var i = this._firstPT; i; )
          (t[this._propName] || null != i.n && t[i.n.split(this._propName + "_").join("")]) && (i.r = e), i = i._next;
      }, D._onPluginEvent = function(t, e) {
        var i,
            s,
            r,
            n,
            a,
            o = e._firstPT;
        if ("_onInitAllProps" === t) {
          for (; o; ) {
            for (a = o._next, s = r; s && s.pr > o.pr; )
              s = s._next;
            (o._prev = s ? s._prev : n) ? o._prev._next = o : r = o, (o._next = s) ? s._prev = o : n = o, o = a;
          }
          o = e._firstPT = r;
        }
        for (; o; )
          o.pg && "function" == typeof o.t[t] && o.t[t]() && (i = !0), o = o._next;
        return i;
      }, te.activate = function(t) {
        for (var e = t.length; --e > -1; )
          t[e].API === te.API && (j[(new t[e])._propName] = t[e]);
        return !0;
      }, d.plugin = function(t) {
        if (!(t && t.propName && t.init && t.API))
          throw "illegal plugin definition.";
        var e,
            i = t.propName,
            s = t.priority || 0,
            r = t.overwriteProps,
            n = {
              init: "_onInitTween",
              set: "setRatio",
              kill: "_kill",
              round: "_roundProps",
              initAll: "_onInitAllProps"
            },
            a = g("plugins." + i.charAt(0).toUpperCase() + i.substr(1) + "Plugin", function() {
              te.call(this, i, s), this._overwriteProps = r || [];
            }, t.global === !0),
            o = a.prototype = new te(i);
        o.constructor = a, a.API = t.API;
        for (e in n)
          "function" == typeof t[e] && (o[n[e]] = t[e]);
        return a.version = t.version, te.activate([a]), a;
      }, s = t._gsQueue) {
        for (r = 0; s.length > r; r++)
          s[r]();
        for (n in p)
          p[n].func || t.console.log("GSAP encountered missing dependency: com.greensock." + n);
      }
      o = !1;
    }
  }("undefined" != typeof module && module.exports && "undefined" != typeof global ? global : this || window, "TweenMax");
  global.define = __define;
  return module.exports;
});

$__System.registerDynamic("55", [], false, function(__require, __exports, __module) {
  var _retrieveGlobal = $__System.get("@@global-helpers").prepareGlobal(__module.id, null, null);
  (function() {
    ;
    jQuery.fn.autoGrow = function(a) {
      return this.each(function() {
        var d = jQuery.extend({extraLine: true}, a);
        var e = function(g) {
          jQuery(g).after('<div class="autogrow-textarea-mirror"></div>');
          return jQuery(g).next(".autogrow-textarea-mirror")[0];
        };
        var b = function(g) {
          f.innerHTML = String(g.value).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/ /g, "&nbsp;").replace(/\n/g, "<br />") + (d.extraLine ? ".<br/>." : "");
          if (jQuery(g).height() != jQuery(f).height()) {
            jQuery(g).height(jQuery(f).height());
          }
        };
        var c = function() {
          b(this);
        };
        var f = e(this);
        f.style.display = "none";
        f.style.wordWrap = "break-word";
        f.style.whiteSpace = "normal";
        f.style.padding = jQuery(this).css("padding");
        f.style.width = jQuery(this).css("width");
        f.style.fontFamily = jQuery(this).css("font-family");
        f.style.fontSize = jQuery(this).css("font-size");
        f.style.lineHeight = jQuery(this).css("line-height");
        this.style.overflow = "hidden";
        this.style.minHeight = this.rows + "em";
        this.onkeyup = c;
        b(this);
      });
    };
  })();
  return _retrieveGlobal();
});

$__System.registerDynamic("56", [], false, function(__require, __exports, __module) {
  var _retrieveGlobal = $__System.get("@@global-helpers").prepareGlobal(__module.id, null, null);
  (function() {
    $.fn.linkify = function(options) {
      return this.each(function() {
        var linkified;
        if (linkified = $.data(this, 'plugin-linkify')) {
          linkified.setOptions(options);
          linkified.init();
        } else {
          $.data(this, 'plugin-linkify', new Linkified(this, options));
        }
      });
    };
    $.fn.linkify.Constructor = Linkified;
    $(window).on('load', function() {
      $('[data-linkify]').each(function() {
        var $this = $(this),
            $target,
            target = $this.attr('data-linkify'),
            options = {
              tagName: $this.attr('data-linkify-tagname'),
              newLine: $this.attr('data-linkify-newline'),
              target: $this.attr('data-linkify-target'),
              linkClass: $this.attr('data-linkify-linkclass')
            };
        for (var option in options) {
          if (typeof options[option] === 'undefined') {
            delete options[option];
          }
        }
        $target = target === 'this' ? $this : $this.find(target);
        $target.linkify(options);
      });
    });
    $('body').on('click', '.linkified', function() {
      var $link = $(this),
          url = $link.attr('href'),
          isEmail = /^mailto:/i.test(url),
          target = $link.attr('target');
      if (isEmail) {
        window.location.href = url;
      } else {
        window.open(url, target);
      }
      return false;
    });
  })();
  return _retrieveGlobal();
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
!function(a) {
  "use strict";
  "function" == typeof define && define.amd ? define("57", ["5", "58"], a) : jQuery && !jQuery.fn.tsort && a(jQuery, tinysort);
}(function(a, b) {
  "use strict";
  a.tinysort = {defaults: b.defaults}, a.fn.extend({tinysort: function() {
      var a,
          c,
          d = Array.prototype.slice.call(arguments);
      d.unshift(this), a = b.apply(null, d), c = a.length;
      for (var e = 0,
          f = this.length; f > e; e++)
        c > e ? this[e] = a[e] : delete this[e];
      return this.length = c, this;
    }}), a.fn.tsort = a.fn.tinysort;
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
!function(a, b) {
  "use strict";
  "function" == typeof define && define.amd ? define("59", ["58"], b) : b(a.tinysort);
}(this, function(a) {
  "use strict";
  function b(a) {
    if (a.charOrder !== d && (d = a.charOrder, m = 9472, n = {}, e = h, d)) {
      e = l.slice(0);
      for (var b,
          c,
          g = [],
          j = function(b, c) {
            g.push(c), n[a.cases ? b : b.toLowerCase()] = c;
          },
          o = "z",
          p = d.length,
          q = 0; p > q; q++) {
        var r = d[q],
            s = r.charCodeAt(),
            t = s > 96 && 123 > s;
        if (!t)
          if ("[" === r) {
            var u = g.length,
                v = u ? g[u - 1] : o,
                w = d.substr(q + 1).match(/[^\]]*/)[0],
                x = w.match(/{[^}]*}/g);
            if (x)
              for (b = 0, c = x.length; c > b; b++) {
                var y = x[b];
                q += y.length, w = w.replace(y, ""), j(y.replace(/[{}]/g, ""), v);
              }
            for (b = 0, c = w.length; c > b; b++)
              j(w[b], v);
            q += w.length + 1;
          } else if ("{" === r) {
            var z = d.substr(q + 1).match(/[^}]*/)[0];
            j(z, f(m++)), q += z.length + 1;
          } else
            g.push(r);
        if (g.length && (t || q === p - 1)) {
          k(g, function(a) {
            e.splice(i.call(e, a), 1);
          });
          var A = g.slice(0);
          A.splice(0, 0, i.call(e, o) + 1, 0), Array.prototype.splice.apply(e, A), g.length = 0;
        }
        t && (o = r);
      }
    }
  }
  function c(a, b, c, d, f) {
    if (c === d)
      f = 0;
    else if (!b && a.charOrder) {
      for (var j in n) {
        var k = n[j];
        c = c.replace(j, k), d = d.replace(j, k);
      }
      if (c.match(o) !== h || d.match(o) !== h)
        for (var l = 0,
            m = g(c.length, d.length); m > l; l++) {
          var p = i.call(e, c[l]),
              q = i.call(e, d[l]);
          if (f = a.sortReturnNumber * (q > p ? -1 : p > q ? 1 : 0))
            break;
        }
      else
        f = c === d ? 0 : c > d ? 1 : -1;
    }
    return f;
  }
  var d,
      e,
      f = String.fromCharCode,
      g = Math.min,
      h = null,
      i = Array.prototype.indexOf,
      j = a.plugin,
      k = j.loop,
      l = function(a) {
        for (var b = 32,
            c = f(b),
            d = 255; d > b; b++, c = f(b).toLowerCase())
          -1 === i.call(a, c) && a.push(c);
        return a.sort();
      }([]),
      m = 9472,
      n = {},
      o = /[^a-zA-Z]/g;
  a.defaults.charOrder = d, j(b, c);
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("5a", ["5", "6", "7", "5b", "5c", "21", "5d", "59", "58", "57", "5e", "5f", "56", "60", "55", "34", "54"], function($, _, Backbone, jquery_xmpp, jquery_migrate, jqueryui, wijmo, tinysort_charorder, tinysort, tinysort_open, contextmenu, linkify, jquery_linkify, wijdialog, jquery_autogrow, Material, TweenMax) {
  var MD5 = (function() {
    var hexcase = 0;
    var b64pad = "";
    var chrsz = 8;
    var safe_add = function(x, y) {
      var lsw = (x & 0xFFFF) + (y & 0xFFFF);
      var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
      return (msw << 16) | (lsw & 0xFFFF);
    };
    var bit_rol = function(num, cnt) {
      return (num << cnt) | (num >>> (32 - cnt));
    };
    var str2binl = function(str) {
      var bin = [];
      var mask = (1 << chrsz) - 1;
      for (var i = 0; i < str.length * chrsz; i += chrsz) {
        bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << (i % 32);
      }
      return bin;
    };
    var binl2str = function(bin) {
      var str = "";
      var mask = (1 << chrsz) - 1;
      for (var i = 0; i < bin.length * 32; i += chrsz) {
        str += String.fromCharCode((bin[i >> 5] >>> (i % 32)) & mask);
      }
      return str;
    };
    var binl2hex = function(binarray) {
      var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
      var str = "";
      for (var i = 0; i < binarray.length * 4; i++) {
        str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) + hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8)) & 0xF);
      }
      return str;
    };
    var binl2b64 = function(binarray) {
      var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      var str = "";
      var triplet,
          j;
      for (var i = 0; i < binarray.length * 4; i += 3) {
        triplet = (((binarray[i >> 2] >> 8 * (i % 4)) & 0xFF) << 16) | (((binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4)) & 0xFF) << 8) | ((binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4)) & 0xFF);
        for (j = 0; j < 4; j++) {
          if (i * 8 + j * 6 > binarray.length * 32) {
            str += b64pad;
          } else {
            str += tab.charAt((triplet >> 6 * (3 - j)) & 0x3F);
          }
        }
      }
      return str;
    };
    var md5_cmn = function(q, a, b, x, s, t) {
      return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
    };
    var md5_ff = function(a, b, c, d, x, s, t) {
      return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
    };
    var md5_gg = function(a, b, c, d, x, s, t) {
      return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
    };
    var md5_hh = function(a, b, c, d, x, s, t) {
      return md5_cmn(b ^ c ^ d, a, b, x, s, t);
    };
    var md5_ii = function(a, b, c, d, x, s, t) {
      return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
    };
    var core_md5 = function(x, len) {
      x[len >> 5] |= 0x80 << ((len) % 32);
      x[(((len + 64) >>> 9) << 4) + 14] = len;
      var a = 1732584193;
      var b = -271733879;
      var c = -1732584194;
      var d = 271733878;
      var olda,
          oldb,
          oldc,
          oldd;
      for (var i = 0; i < x.length; i += 16) {
        olda = a;
        oldb = b;
        oldc = c;
        oldd = d;
        a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
        d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
        c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
        b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
        a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
        d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
        c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
        b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
        a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
        d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
        c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
        b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
        a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
        d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
        c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
        b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
        a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
        d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
        c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
        b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
        a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
        d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
        c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
        b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
        a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
        d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
        c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
        b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
        a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
        d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
        c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
        b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
        a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
        d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
        c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
        b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
        a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
        d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
        c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
        b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
        a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
        d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
        c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
        b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
        a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
        d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
        c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
        b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
        a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
        d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
        c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
        b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
        a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
        d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
        c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
        b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
        a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
        d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
        c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
        b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
        a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
        d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
        c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
        b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
        a = safe_add(a, olda);
        b = safe_add(b, oldb);
        c = safe_add(c, oldc);
        d = safe_add(d, oldd);
      }
      return [a, b, c, d];
    };
    var core_hmac_md5 = function(key, data) {
      var bkey = str2binl(key);
      if (bkey.length > 16) {
        bkey = core_md5(bkey, key.length * chrsz);
      }
      var ipad = new Array(16),
          opad = new Array(16);
      for (var i = 0; i < 16; i++) {
        ipad[i] = bkey[i] ^ 0x36363636;
        opad[i] = bkey[i] ^ 0x5C5C5C5C;
      }
      var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
      return core_md5(opad.concat(hash), 512 + 128);
    };
    var obj = {
      hexdigest: function(s) {
        return binl2hex(core_md5(str2binl(s), s.length * chrsz));
      },
      b64digest: function(s) {
        return binl2b64(core_md5(str2binl(s), s.length * chrsz));
      },
      hash: function(s) {
        return binl2str(core_md5(str2binl(s), s.length * chrsz));
      },
      hmac_hexdigest: function(key, data) {
        return binl2hex(core_hmac_md5(key, data));
      },
      hmac_b64digest: function(key, data) {
        return binl2b64(core_hmac_md5(key, data));
      },
      hmac_hash: function(key, data) {
        return binl2str(core_hmac_md5(key, data));
      },
      test: function() {
        return MD5.hexdigest("abc") === "900150983cd24fb0d6963f7d28e17f72";
      }
    };
    return obj;
  })();
  var messages = {'pt_br': {
      'ADD': "Adicionar",
      'ADD_CONTACT': "Adicionar contato",
      'AN_ERROR_HAS_OCURRED': "Ocorreu um erro",
      'AUTHORIZE': "Autorizar",
      'AWAY': "Ausente",
      'BLOCK': "Bloquear",
      'BUSY': "Ocupado",
      'CANCEL': "Cancelar",
      'CLICK_TO_START_A_CONVERSATION_WITH': "Clique para iniciar uma conversa com",
      'CHANGE_YOUR_STATUS': "Mude seu status",
      'CONTACT_LIST': "Lista de contatos",
      'DELETE': "Excluir",
      'DOUBLE_CLICK_TO_EDIT': "Duplo clique para editar",
      'EDIT_CONTACT': "Editar Contato",
      'EDIT': "Editar",
      'ENTER_A_JID': "Digite um JID (Jabber ID)",
      'ENTER_A_NAME': "Digite um nome",
      'GONE': "saiu",
      'IS_TYPING': "est&aacute digitando",
      'JID': "JID",
      'ME': "Eu",
      'NAME': "Nome",
      'NEW_MESSAGE': "Nova Mensagem",
      'QUIT': "Sair",
      'ONLINE': "Dispon&iacute;vel",
      'OFFLINE': "Indispon&iacute;vel",
      'SEEN': "Ativo",
      'STOPPED_TYPING': "parou a digita&ccedil;&atilde;o",
      'UPDATE': "Atualizar",
      'WRITE_YOUR_MESSAGE_HERE': "Escreva sua mensagem aqui",
      'YOUR_MESSAGE_TODAY': "Sua mensagem de hoje"
    }};
  $.fn.im = function(options) {
    var defaults = {
      contactClass: "chat-contact",
      onlineClass: "online",
      awayClass: "away",
      offlineClass: "offline",
      busyClass: "busy",
      overColor: "#DEE8F0",
      jid: "",
      password: "",
      url: "localhost",
      resource: "Chat",
      beforeConnect: undefined,
      afterConnect: undefined,
      errorFunction: undefined,
      chatClass: "chat-container",
      chatListClass: "chat-list",
      loadClass: "loading-chatss",
      loadArea: "<div id='chat-loading-area' class='expresso-loading-spacer'><div class='mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active'></div></div>",
      defaultStatus: null,
      debug: false,
      contactList: [],
      contactNameIndex: "from",
      title: "## NOVA MENSAGEM ##",
      defaultTitle: document.title,
      afterMessage: undefined,
      afterIq: undefined,
      soundPath: "/js/libs/messenger/",
      soundName: "pop",
      minimizeZone: undefined,
      autoStatusTime: (60000 * 2),
      autoStatusMessenger: null,
      emotions: [{
        emotion: /:\)/g,
        emotionClass: "smile"
      }, {
        emotion: /:D/ig,
        emotionClass: "happy"
      }, {
        emotion: /:p/ig,
        emotionClass: "tongue"
      }, {
        emotion: /:\(/g,
        emotionClass: "sad"
      }, {
        emotion: /:o/ig,
        emotionClass: "surprised"
      }, {
        emotion: /\(l\)/ig,
        emotionClass: "heart"
      }, {
        emotion: /\(y\)/ig,
        emotionClass: "thumb_up"
      }, {
        emotion: /;\)/g,
        emotionClass: "wink"
      }, {
        emotion: /\(n\)/ig,
        emotionClass: "thumb_down"
      }],
      addContact: true
    };
    var settings = {},
        connection_options = {};
    settings = $.extend({}, defaults, options);
    var $container = this,
        $parent = $(this).parent(),
        $container_body = $("<div/>"),
        statusClasses = settings.onlineClass + " " + settings.awayClass + " " + settings.busyClass + " " + settings.offlineClass,
        t = null,
        user = settings.username;
    contacts = [];
    prepare($container, user);
    var $container_list = $container.find("ul:first").addClass(settings.chatListClass);
    var alfabetic = function() {};
    if (settings.height && settings.height > 0) {
      $container_list.css("height", settings.height).css("overflow-x", "hidden").css("overflow-y", "scroll");
    }
    generateContacts($container_list);
    $.contextMenu({
      selector: '.chat-title.chat-me .chat-status.' + settings.onlineClass + ",.chat-title.chat-me .chat-status." + settings.busyClass + ",.chat-title.chat-me .chat-status." + settings.awayClass + ",.chat-title.chat-me .chat-status." + settings.offlineClass,
      className: 'chat-status-context-menu',
      trigger: 'left',
      autoHide: true,
      events: {show: function(opt) {
          $('.chat-status-context-menu').css({
            'list-style': 'none',
            'list-style-image': 'none'
          });
        }},
      items: {
        "online": {
          name: messages.pt_br.ONLINE,
          icon: settings.onlineClass,
          callback: function(key, opt) {
            $.xmpp.setPresence({show: null});
            $(opt.selector).removeClass(statusClasses).addClass(settings.onlineClass);
          }
        },
        "busy": {
          name: messages.pt_br.BUSY,
          icon: settings.busyClass,
          callback: function(key, opt) {
            $.xmpp.setPresence({show: "dnd"});
            $(opt.selector).removeClass(statusClasses).addClass(settings.busyClass);
          }
        },
        "away": {
          name: messages.pt_br.AWAY,
          icon: settings.awayClass,
          callback: function(key, opt) {
            $.xmpp.setPresence({show: "away"});
            $(opt.selector).removeClass(statusClasses).addClass(settings.awayClass);
          }
        },
        "sep1": "---------",
        "quit": {
          name: messages.pt_br.QUIT,
          icon: "quit",
          callback: function(key, opt) {
            $.xmpp.disconnect();
          }
        }
      }
    });
    $.contextMenu({
      selector: '.' + settings.chatListClass + ' .' + settings.contactClass,
      className: 'chat-contact-context-menu',
      autoHide: true,
      events: {show: function(opt) {
          $('.chat-contact-context-menu').css({
            'list-style': 'none',
            'list-style-image': 'none'
          });
        }},
      items: {
        "authorize": {
          name: messages.pt_br.AUTHORIZE,
          icon: "question",
          callback: function(key, opt) {
            authorize(contacts[$(this).attr('id')], null);
          }
        },
        "block": {
          name: messages.pt_br.BLOCK,
          icon: "block",
          callback: function(key, opt) {
            authorize(contacts[$(this).attr('id')], "unavailable");
          }
        },
        "update": {
          name: messages.pt_br.UPDATE,
          icon: "edit",
          callback: function(key, opt) {
            addContact(null, contacts[$(this).attr('id')], $(this));
          }
        },
        "delete": {
          name: messages.pt_br.DELETE,
          icon: "delete",
          callback: function(key, opt) {
            $.xmpp.deleteContact({to: contacts[$(this).attr('id')]['jid']});
            $(this).remove();
          }
        }
      }
    });
    if (settings.debug)
      debug("Executing beforeConnect()");
    if (typeof(settings.beforeConnect) === "function")
      settings.beforeConnect();
    if (settings.debug)
      debug("Executed beforeConnect()");
    if ($.xmpp) {
      if (settings.debug)
        debug("Connecting to xmpp");
      connection_options = {
        "resource": settings.resource,
        "username": settings.username,
        "password": settings.password,
        "url": settings.url,
        "domain": settings.domain,
        onDisconnect: function() {
          destroy($container_list, $container);
        },
        onConnect: function(eas) {
          if (settings.debug)
            debug("Connected to xmpp");
          $.xmpp.getRoster();
          $.xmpp.setPresence(settings.defaultStatus);
          $("#chat-loading-area").remove();
          var statusClass = settings.defaultStatus ? (settings.defaultStatus === "offline" ? settings.offlineClass : (settings.defaultStatus === "dnd" ? settings.busyClass : settings.awayClass)) : settings.onlineClass;
          $(".chat-conversation-dialog textarea").removeAttr("disabled");
          $container.find(".chat-status").addClass(statusClass);
          if (settings.debug)
            debug("Executing afterConnect()");
          if (typeof(settings.afterConnect) === "function")
            settings.afterConnect();
          if (settings.debug)
            debug("Executed afterConnect()");
          settings.autoStatusMessenger = setTimeout(function() {
            autoStatus();
          }, settings.autoStatusTime);
          $(document).on('mousemove', function() {
            if ($.xmpp.getMyPresence() == "away") {
              $.xmpp.setPresence({show: "null"});
              $("span.chat-status").removeClass(statusClasses).addClass(settings.onlineClass);
            }
          });
          $(document).on('keypress', function() {
            if ($.xmpp.getMyPresence() == "away") {
              $.xmpp.setPresence({show: "null"});
              $("span.chat-status").removeClass(statusClasses).addClass(settings.onlineClass);
            }
          });
        },
        onIq: function(iq) {
          if (settings.debug)
            debug("onIQ : " + iq);
          var from = $(iq).find("own-message").attr("to");
          from = from.match(/^[\w\W][^\/]+[^\/]/g)[0];
          var id = MD5.hexdigest(from);
          var conversation = $("#" + id + "_chat");
          if (conversation.length == 0) {
            conversation = openChat({
              title: contacts[id]['from'],
              from: from,
              id: id + "_chat",
              md5_id: id
            });
            conversation.parent().find(".ui-dialog-titlebar").prepend($("#" + id).find(".chat-status").clone().removeClass("chatting"));
          } else {
            conversation.wijdialog("open");
          }
          var conversation_box = conversation.find(".chat-conversation-box");
          var date = "<span style='font-size:9px;'>(" + (new Date().toString("HH:mm")) + ")</span>";
          $("<div/>").addClass("chat-conversation-box-me").html(date + "<strong> Me: </strong>" + formatters($(iq).find("div").html())).appendTo(conversation_box);
          conversation_box.scrollTo("div:last");
          conversation_box.next().html("");
        },
        onMessage: function(message) {
          if (settings.debug)
            debug("onMessage : " + message);
          message.from = message.from.match(/^[\w\W][^\/]+[^\/]/g)[0];
          var jid = message.from.split("/");
          debug(jid);
          var id = MD5.hexdigest(message.from);
          debug(id);
          var conversation = $("#" + id + "_chat");
          debug(conversation);
          debug(message.body);
          if (message.body) {
            console.log("hasBody");
            if (conversation.length == 0) {
              console.log("openChat:" + message.from);
              conversation = openChat({
                title: (contacts[id] ? contacts[id]['from'] : message.from),
                from: message.from,
                id: id + "_chat",
                md5_id: id,
                message: message.body
              });
            } else {
              console.log("openWijDialog");
              conversation.wijdialog("open");
            }
          }
          var conversation_box = conversation.find(".chat-conversation-box");
          var date = "<span style='font-size:9px;'>(" + (new Date().toString("HH:mm")) + ")</span>";
          date = "";
          if (message.body) {
            receiveMessage(id, formatters(message.body));
            conversation_box.scrollTo("div:last").next().html("");
            conversation.parent().find(".ui-dialog-titlebar").css({
              "background": "rgb(68, 138, 255) none repeat scroll 0 0",
              "border-color": "rgb(68, 138, 255) none repeat scroll 0 0"
            });
            document.title = settings.title;
            document.getElementById("new_message_sound").play();
            noty({
              text: '<strong>' + contacts[id]['from'] + ' say:</strong><br/>' + (message.body.length > 20 ? message.body.substr(0, 17) + "..." : message.body),
              type: 'warning',
              timeout: 3000,
              layout: 'bottomRight',
              callback: {onCloseClick: function(e) {
                  $("#" + id).click();
                }}
            });
          }
          if (settings.afterMessage)
            afterMessage(message);
        },
        onPresence: function(presence) {
          if (settings.debug)
            debug("onPresence : " + presence);
          presence.from = presence.from.match(/^[\w\W][^\/]+[^\/]/g)[0];
          var md5_contact = MD5.hexdigest(presence.from);
          var select = $("#" + md5_contact);
          var statusClass = presence['show'] !== "available" ? (presence['show'] === "unavailable" ? settings.offlineClass : (presence['show'] === "dnd" ? settings.busyClass : (presence['show'] === "away" ? settings.awayClass : settings.onlineClass))) : settings.onlineClass;
          var from = presence.from.split("@")[0];
          var dialogs = $("#" + md5_contact + "_chat");
          if (select.length) {
            select.find('.chat-contact-description').html(presence['status'] ? " (...) " : "").attr("title", presence['status']).attr("alt", presence['status']);
            select.find("div.chat-status").removeClass(statusClasses).addClass(statusClass);
            if (dialogs.length) {
              $("#" + md5_contact).addClass("chatting");
              dialogs.parent().find("div.chat-status").removeClass(statusClasses).addClass(statusClass);
            }
          }
          if (statusClass == settings.onlineClass) {
            noty({
              text: '<strong>' + contacts[md5_contact]['from'] + '</strong><br/>is online now',
              type: 'success',
              timeout: 3000,
              layout: 'bottomRight',
              callback: {onCloseClick: function(e) {
                  console.log(e);
                  $(select).click();
                }}
            });
          }
          clearTimeout(alfabetic);
          alfabetic = setTimeout(function() {
            var resultA1 = $container_list.find("li").tsort("." + settings.onlineClass);
            var resultA2 = $container_list.find("li").tsort("." + settings.busyClass);
            var resultA3 = $container_list.find("li").tsort("." + settings.awayClass);
            var resultA4 = $container_list.find("li").tsort("." + settings.offlineClass);
            if (resultA1.length != 0) {
              resultA1.tsort("span.chat-contact-name", {charOrder: "abcdefghijklmnopqrstuvxyz1234567890"});
            }
            if (resultA2.length != 0) {
              resultA2.tsort("span.chat-contact-name", {charOrder: "abcdefghijklmnopqrstuvxyz1234567890"});
            }
            if (resultA3.length != 0) {
              resultA3.tsort("span.chat-contact-name", {charOrder: "abcdefghijklmnopqrstuvxyz1234567890"});
            }
            if (resultA4.length != 0) {
              resultA4.tsort("span.chat-contact-name", {charOrder: "abcdefghijklmnopqrstuvxyz1234567890"});
            }
          }, 1000);
        },
        onError: function(error) {
          if (settings.debug)
            debug("onError :" + error);
          if (settings.errorFunction)
            settings.errorFunction(error);
          destroy($container_list, $container);
        },
        onComposing: function(message) {
          var isFriendTyping = false;
          var friendIsTyping = function(chat_id) {
            console.log("friendIsTyping");
            if (isFriendTyping)
              return;
            isFriendTyping = true;
            var infoContainer = $("#chat-info-container-" + chat_id);
            var effectContainer = $("#chat-effect-container-" + chat_id);
            var bleeding = 100;
            var $dots = $("<div/>").addClass('chat-effect-dots').css({
              top: -30 + bleeding,
              left: 10
            }).appendTo(effectContainer);
            ;
            for (var i = 0; i < 3; i++) {
              var $dot = $("<div/>").addClass("chat-effect-dot").css({left: i * 20}).appendTo($dots);
              ;
              window.TweenMax.to($dot, 0.3, {
                delay: -i * 0.1,
                y: 30,
                yoyo: true,
                repeat: -1,
                ease: Quad.easeInOut
              });
            }
            ;
            var $info = $("<div/>").addClass("chat-info-typing").text("Seu amigo está digitando...").css({transform: "translate3d(0,30px,0)"}).appendTo(infoContainer);
            window.TweenMax.to($info, 0.3, {
              y: 0,
              force3D: true
            });
            gooOn(chat_id);
          };
          var gooOn = function(chat_id) {
            setFilter('url(#goo)', chat_id);
          };
          var gooOff = function(chat_id) {
            setFilter('none', chat_id);
          };
          var setFilter = function(value, chat_id) {
            $("#chat-effect-container-" + chat_id).css({
              webkitFilter: value,
              mozFilter: value,
              filter: value
            });
          };
          var friendStoppedTyping = function(chat_id) {
            var infoContainer = $("#chat-info-container-" + chat_id);
            var effectContainer = $("#chat-effect-container-" + chat_id);
            isFriendTyping = false;
            var bleeding = 100;
            var dots = effectContainer.find(".chat-effect-dots");
            window.TweenMax.to(dots, 0.3, {
              y: 40,
              force3D: true,
              ease: Quad.easeIn
            });
            var info = infoContainer.find(".chat-info-typing");
            window.TweenMax.to(info, 0.3, {
              y: 30,
              force3D: true,
              ease: Quad.easeIn,
              onComplete: function() {
                dots.remove();
                info.remove();
                gooOff(chat_id);
              }
            });
          };
          message.from = message.from.match(/^[\w\W][^\/]+[^\/]/g)[0];
          var id = MD5.hexdigest(message.from);
          var date = (new Date().toString("HH:mm"));
          switch (message.state) {
            case 'active':
              friendStoppedTyping(id);
              break;
            case 'composing':
              friendIsTyping(id);
              break;
            case 'gone':
              friendStoppedTyping(id);
              break;
            case 'paused':
              friendStoppedTyping(id);
              break;
            default:
              friendStoppedTyping(id);
          }
          if (settings.debug)
            debug("onComposing : " + message);
        },
        onRoster: function(roster) {
          if (settings.debug)
            debug("onRoster : " + roster);
          var _rosterJid = roster.jid;
          _rosterJid = _rosterJid.match(/^[\w\W][^\/]+[^\/]/g)[0];
          var md5_contact = MD5.hexdigest(_rosterJid);
          var select = $("#" + md5_contact);
          var from = roster['name'] ? roster['name'] : _rosterJid;
          contacts[md5_contact] = roster;
          contacts[md5_contact]['from'] = from;
          if (!select.length) {
            var contact = $("<li/>").attr("title", messages.pt_br.CLICK_TO_START_A_CONVERSATION_WITH + " " + from).attr("id", md5_contact).addClass(settings.contactClass);
            var status = $("<div/>").addClass("chat-status").addClass(settings.offlineClass).appendTo(contact);
            $("<span/>").addClass("chat-contact-name").html(from).appendTo(contact);
            $("<span/>").addClass("chat-contact-description").appendTo(contact);
            contact.click(function() {
              var id = md5_contact + "_chat";
              var conversation = $("#" + id);
              if (conversation.length == 0) {
                conversationDialog = openChat({
                  "title": from,
                  "from": _rosterJid,
                  "id": id,
                  "md5_id": md5_contact
                });
                conversationDialog.parent().find(".ui-dialog-titlebar").prepend(status.clone().removeClass("chatting"));
              } else {
                conversation.wijdialog("restore");
                conversation.wijdialog("open");
              }
            });
            $container_list.append(contact);
            if ($.trim(roster.subscription) == "from") {
              authorize(contacts[md5_contact], null);
            }
          } else {
            select.find(".chat-contact-name").html(from);
          }
        }
      };
      $.xmpp.connect(connection_options);
    } else {
      if (settings.debug)
        debug("xmpp plugin not found");
    }
    function autoStatus() {
      if (settings.autoStatusMessenger) {
        clearTimeout(settings.autoStatusMessenger);
      }
      if ($.xmpp.getMyPresence() == "available" || $.xmpp.getMyPresence() == "null") {
        $.xmpp.setPresence({show: "away"});
        $("span.chat-status").removeClass(statusClasses).addClass(settings.awayClass);
      }
      settings.autoStatusMessenger = setTimeout(function() {
        autoStatus();
      }, settings.autoStatusTime);
    }
    function prepare(container, user) {
      if (settings.debug)
        debug("Preparing");
      var div = $("<div/>").addClass("chat-title chat-me").appendTo(container);
      var _divFirst = $("<div/>").css({
        "margin-top": "4px",
        "position": "absolute",
        "margin-left": "200px"
      }).appendTo(div);
      $("<span/>").addClass("chat-status").attr("title", messages.pt_br.CHANGE_YOUR_STATUS).attr("alt", messages.pt_br.CHANGE_YOUR_STATUS).addClass(settings.loadClass).appendTo(_divFirst);
      if (settings.addContact) {}
      var text = "";
      $("<input/>").addClass('chat-description-input').attr({
        type: 'text',
        value: messages.pt_br.YOUR_MESSAGE_TODAY,
        readonly: "readonly",
        title: messages.pt_br.DOUBLE_CLICK_TO_EDIT,
        alt: messages.pt_br.DOUBLE_CLICK_TO_EDIT
      }).dblclick(function() {
        if ($.xmpp.isConnected()) {
          text = $(this).val();
          $(this).removeAttr("readonly");
        }
      }).keydown(function(e) {
        if (e.which == $.ui.keyCode.ENTER && !e.shiftKey) {
          if ($.trim($(this).val()) != "") {
            $.xmpp.setPresence({status: $(this).val()});
            text = $(this).val();
          }
          $(this).attr("readonly", "readonly");
        } else if (e.which == $.ui.keyCode.ESCAPE) {
          $(this).val(text);
          $(this).attr("readonly", "readonly");
        }
      }).focusout(function() {
        $(this).focus();
        $(this).val(text);
        $(this).attr("readonly", "readonly");
      });
      $("<div/>").addClass("chat-list-title").html(messages.pt_br.CONTACT_LIST).appendTo(container);
      var search_box = $("<input/>").addClass("chat-search-input").attr("placeholder", "Type your search").keydown(function(e) {
        if (e.which == $.ui.keyCode.ENTER && !e.shiftKey) {
          $(this).parent().find("ul").toggle();
        }
      });
      $("<div/>").addClass("chat-list").addClass(settings.chatClass).append(settings.loadArea).append().append("<ul/>").append("<ul class='chat-search-result' style='display:none;'/>").appendTo(container);
      var svgGoo = "<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='800' style='display: none;'><defs><filter id='goo'><feGaussianBlur in='SourceGraphic' stdDeviation='10' result='blur' /><feColorMatrix in='blur' mode='matrix' values='1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 19 -9' result='goo' /><feComposite in='SourceGraphic' in2='goo' /></filter></defs></svg>";
      container.prepend(svgGoo);
      window.componentHandler.upgradeDom();
      if (!settings.minimizeZone) {
        $("<div/>").addClass("footer-conversation-bar").attr("id", "conversation-bar-container").appendTo("#messenger-conversation-bar-container");
      }
      if (settings.debug)
        debug("Prepared");
    }
    function addContact(e, data, select) {
      if (!$.xmpp.isConnected())
        return false;
      var offset;
      if (!select) {
        offset = $(this).offset();
      } else {
        offset = $(select).offset();
      }
      var div = $("<div/>").addClass("chat-add-contact");
      $("<span>").html(messages.pt_br.NAME + ": ").appendTo(div);
      $("<input type='text'>").attr({
        name: 'name',
        placeholder: messages.pt_br.ENTER_A_NAME
      }).appendTo(div).val(data ? data.name : "");
      $("<br/>").appendTo(div);
      $("<span>").html(messages.pt_br.JID + ": ").appendTo(div);
      var emailAttrs = {
        name: 'to',
        placeholder: messages.pt_br.ENTER_A_JID
      };
      if (data) {
        emailAttrs['disabled'] = "disabled";
      }
      $("<input type='text'>").attr(emailAttrs).appendTo(div).val(data ? data.jid : "");
      var _data = data;
      div.wijdialog({
        autoOpen: true,
        title: data ? messages.pt_br.EDIT_CONTACT : messages.pt_br.ADD_CONTACT,
        draggable: true,
        dialogClass: "add-contact-dialog",
        captionButtons: {
          pin: {visible: false},
          refresh: {visible: false},
          toggle: {visible: false},
          minimize: {visible: false},
          maximize: {visible: false}
        },
        resizable: false,
        position: [offset.left, offset.top],
        buttons: [{
          text: data ? messages.pt_br.EDIT : messages.pt_br.ADD,
          click: function() {
            if (!_data) {
              var data = {};
              $.each($(this).find("input"), function(e, q) {
                data[$(q).attr("name")] = $(q).val();
              });
              data['type'] = "subscribe";
              $.xmpp.addContact(data);
              $.xmpp.subscription(data);
            } else {
              _data = $.extend({}, _data, {name: $(this).find("input:first").val()});
              $.xmpp.updateContact(_data);
            }
            $(this).wijdialog("destroy");
          }
        }, {
          text: messages.pt_br.CANCEL,
          click: function() {
            $(this).wijdialog("destroy");
          }
        }],
        close: function() {
          $(this).wijdialog("destroy");
        }
      });
    }
    function authorize(data, subscription) {
      var _subscription = "";
      if (subscription == "unavailable") {
        _subscription = subscription;
      } else {
        if (data.subscription = "none") {
          _subscription = "subscribe";
        }
        if (data.subscription == "from") {
          _subscription = "subscribe";
        }
      }
      $.xmpp.subscription({
        "to": data.jid,
        "type": _subscription
      });
    }
    function generateContacts(container_list) {
      if (settings.contactList.length) {
        for (var contact in settings.contactList)
          contactListChanges(contact, container_list);
      }
    }
    function contactListChanges(presence, selector) {
      if (settings.debug)
        debug("Generating contact in the list");
      var md5_contact = MD5.hexdigest(presence[settings.contactNameIndex]);
      var select = $("#" + md5_contact);
      var statusClass = settings.offlineClass;
      var from = presence[settings.contactNameIndex].split("@")[0];
      if (!select.length) {
        var contact = $("<li/>").attr("title", messages.pt_br.CLICK_TO_START_A_CONVERSATION_WITH + " " + from).attr("id", md5_contact).addClass(settings.contactClass);
        $("<div/>").addClass("chat-status").addClass(statusClass).appendTo(contact);
        $("<span/>").addClass("chat-contact-name").html(from).appendTo(contact);
        contact.click(function() {
          var id = md5_contact + "_chat";
          var conversation = $("#" + id);
          if (conversation.length == 0) {
            conversationDialog = openChat({
              title: from,
              from: presence[settings.contactNameIndex],
              id: id,
              md5_id: md5_contact
            });
            conversationDialog.parent().find(".ui-dialog-titlebar").prepend(status.clone().removeClass("chatting"));
          } else {
            conversation.wijdialog("restore");
            conversation.wijdialog("show");
          }
        });
        selector.append(contact);
      }
      if (settings.debug)
        debug("Generated contact in the list");
    }
    function getFriendMessageTemplate(message) {
      var friendMessageTemplate = "<li class='chat-message chat-message-friend'><div class='chat-message-bubble'>" + message + "</div></li>";
      return friendMessageTemplate;
    }
    function getInputBarTemplate(chat_id) {
      var chatInputBarTemplate = "<div id='chat-input-bar-" + chat_id + "' class='chat-input-bar'><div id='chat-info-container-" + chat_id + "' class='chat-info-container'></div><div id='chat-effect-container-" + chat_id + "' class='chat-effect-container'><div id='chat-effect-bar-" + chat_id + "' class='chat-effect-bar'></div></div><div id='chat-input-wrapper-" + chat_id + "' class='chat-input-wrapper'><div id='chat-input-" + chat_id + "' class='chat-input' contenteditable></div><button id='chat-send-" + chat_id + "' class='chat-send'><i class='material-icons'>send</i></button></div></div>";
      return chatInputBarTemplate;
    }
    function getChatWindow(chat_id, withMessage) {
      var friendMessage = "";
      if (withMessage != undefined) {
        friendMessage = getFriendMessageTemplate(withMessage);
      }
      var chatWindowTemplate = "<div id='chat-messages-" + chat_id + "' class='chat-messages'><div class='chat-messages-list-margin'><ol id='chat-messages-list-" + chat_id + "' class='chat-messages-list'>" + friendMessage + "</ol></div></div>" + getInputBarTemplate(chat_id);
      var div = document.getElementById("chat-window-" + chat_id);
      if ((div == undefined) || (div == null)) {
        div = $("<div/>", {id: "chat-window-" + chat_id}).addClass("chat-window").append(chatWindowTemplate);
      } else {
        div = $("#chat-window-" + chat_id);
      }
      return div;
    }
    function addMessage(chat_id, message, self) {
      var $messagesList = $("#chat-messages-list-" + chat_id);
      var $messagesContainer = $("#chat-messages-" + chat_id);
      var $messageContainer = $("<li/>").addClass('chat-message ' + (self ? 'chat-message-self' : 'chat-message-friend')).appendTo($messagesList);
      ;
      var $messageBubble = $("<div/>").addClass('chat-message-bubble').appendTo($messageContainer);
      ;
      $messageBubble.text(message);
      $messageBubble.linkify();
      var oldScroll = $messagesContainer.scrollTop();
      $messagesContainer.scrollTop(9999999);
      var newScroll = $messagesContainer.scrollTop();
      var scrollDiff = newScroll - oldScroll;
      window.TweenMax.fromTo($messagesList, 0.4, {y: scrollDiff}, {
        y: 0,
        ease: Quint.easeOut
      });
      return {
        $container: $messageContainer,
        $bubble: $messageBubble
      };
    }
    function receiveMessage(chat_id, message) {
      var $messagesContainer = $("#chat-messages-" + chat_id);
      var messageElements = addMessage(chat_id, message, false),
          $messageContainer = messageElements.$container,
          $messageBubble = messageElements.$bubble;
      ;
      window.TweenMax.set($messageBubble, {transformOrigin: "60px 50%"});
      window.TweenMax.from($messageBubble, 0.4, {
        scale: 0,
        force3D: true,
        ease: Back.easeOut
      });
      window.TweenMax.from($messageBubble, 0.4, {
        x: -100,
        force3D: true,
        ease: Quint.easeOut
      });
    }
    function gooOn(chat_id) {
      setFilter('url(#goo)', chat_id);
    }
    function gooOff(chat_id) {
      setFilter('none', chat_id);
    }
    function setFilter(value, chat_id) {
      $("#chat-effect-container-" + chat_id).css({
        webkitFilter: value,
        mozFilter: value,
        filter: value
      });
    }
    function sendMessage(chat_id, options) {
      var $input = $("#chat-input-" + chat_id);
      var message = $input.text();
      message = formatters(message);
      $.xmpp.sendMessage({
        body: message,
        to: options.from,
        resource: "Chat",
        otherAttr: "value"
      }, "<error>Ocorreu um erro</error>");
      var $messagesList = $("#chat-messages-list-" + chat_id);
      var $messagesContainer = $("#chat-messages-" + chat_id);
      var $effectContainer = $("#chat-effect-container-" + chat_id);
      var $sendButton = $("#chat-send-" + chat_id);
      var bleeding = 100;
      if (message == "")
        return;
      lastMessage = message;
      var messageElements = addMessage(chat_id, message, true),
          $messageContainer = messageElements.$container,
          $messageBubble = messageElements.$bubble;
      ;
      var oldInputHeight = $(".chat-input-bar").height();
      $input.text('');
      updateChatHeight(chat_id);
      var newInputHeight = $(".chat-input-bar").height();
      var inputHeightDiff = newInputHeight - oldInputHeight;
      var $messageEffect = $("<div/>").addClass('chat-message-effect').append($messageBubble.clone()).appendTo($effectContainer).css({
        left: $input.position().left - 12,
        top: $input.position().top + bleeding + inputHeightDiff
      });
      ;
      var messagePos = $messageBubble.offset();
      var effectPos = $messageEffect.offset();
      var pos = {
        x: messagePos.left - effectPos.left,
        y: messagePos.top - effectPos.top
      };
      var $sendIcon = $sendButton.children("i");
      window.TweenMax.to($sendIcon, 0.15, {
        x: 30,
        y: -30,
        force3D: true,
        ease: Quad.easeOut,
        onComplete: function() {
          window.TweenMax.fromTo($sendIcon, 0.15, {
            x: -30,
            y: 30
          }, {
            x: 0,
            y: 0,
            force3D: true,
            ease: Quad.easeOut
          });
        }
      });
      gooOn();
      window.TweenMax.from($messageBubble, 0.8, {
        y: -pos.y,
        ease: Sine.easeInOut,
        force3D: true
      });
      var startingScroll = $messagesContainer.scrollTop();
      var curScrollDiff = 0;
      var effectYTransition;
      var setEffectYTransition = function(dest, dur, ease) {
        return window.TweenMax.to($messageEffect, dur, {
          y: dest,
          ease: ease,
          force3D: true,
          onUpdate: function() {
            var curScroll = $messagesContainer.scrollTop();
            var scrollDiff = curScroll - startingScroll;
            if (scrollDiff > 0) {
              curScrollDiff += scrollDiff;
              startingScroll = curScroll;
              var time = effectYTransition.time();
              effectYTransition.kill();
              effectYTransition = setEffectYTransition(pos.y - curScrollDiff, 0.8 - time, Sine.easeOut);
            }
          }
        });
      };
      effectYTransition = setEffectYTransition(pos.y, 0.8, Sine.easeInOut);
      window.TweenMax.from($messageBubble, 0.6, {
        delay: 0.2,
        x: -pos.x,
        ease: Quad.easeInOut,
        force3D: true
      });
      window.TweenMax.to($messageEffect, 0.6, {
        delay: 0.2,
        x: pos.x,
        ease: Quad.easeInOut,
        force3D: true
      });
      window.TweenMax.from($messageBubble, 0.2, {
        delay: 0.65,
        opacity: 0,
        ease: Quad.easeInOut,
        onComplete: function() {
          window.TweenMax.killTweensOf($messageEffect);
          $messageEffect.remove();
        }
      });
      messages++;
    }
    function updateChatHeight(chat_id) {
      $("#chat-messages-" + chat_id).css({height: 280 - $(".chat-input-bar").height()});
    }
    function openChat(options) {
      if ($.fn.wijdialog) {
        if (settings.debug)
          debug("Generating Dialog to " + options.title);
        var chat_id = options.md5_id;
        var div = getChatWindow(chat_id, options.message);
        div.attr({title: options.title});
        div.append('<audio controls id="new_message_sound" style="display:none;"><source src="/js/libs/messenger/' + settings.soundName + '.mp3" type="audio/mpeg"/><source src="/js/libs/messenger/' + settings.soundName + '.ogg" type="audio/ogg"/></audio>');
        var status = $(div).find(".chat-status");
        var pauseTimeOut;
        var composingTimeOut = true;
        if (settings.debug)
          debug("Generated Dialog to " + options.title);
        var retVal = div.wijdialog({
          autoOpen: true,
          captionButtons: {
            pin: {visible: false},
            refresh: {visible: false},
            toggle: {visible: false},
            minimize: {visible: true},
            maximize: {visible: false}
          },
          dialogClass: "chat-conversation-dialog",
          resizable: false,
          minimizeZoneElementId: (!settings.minimizeZone ? "conversation-bar-container" : settings.minimizeZone),
          open: function(e) {
            status.addClass("chatting");
            $(this).parent().find(".ui-dialog-titlebar").off("click").on("click", function() {
              $(this).parent().find(".ui-dialog-titlebar").css({
                "background": "rgb(68, 138, 255) none repeat scroll 0 0",
                "border": "0px",
                "box-shadow": "0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)"
              });
              document.title = settings.defaultTitle;
            });
          },
          close: function(e) {
            status.removeClass("chatting");
            $.xmpp.isWriting({
              isWriting: 'gone',
              to: options.from
            });
          },
          focus: function(e) {
            document.title = settings.defaultTitle;
            $(this).parent().find(".ui-dialog-titlebar").css({
              "background": "rgb(68, 138, 255) none repeat scroll 0 0",
              "border": "0px",
              "box-shadow": "0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)"
            });
            document.title = settings.defaultTitle;
            clearTimeout(pauseTimeOut);
            $.xmpp.isWriting({
              isWriting: 'active',
              to: options.from
            });
          },
          blur: function(e) {
            pauseTimeOut = setTimeout(function() {
              $.xmpp.isWriting({
                isWriting: 'inactive',
                to: options.from
              });
            }, 3000);
          }
        });
        var KEY_ENTER = 13;
        $("#chat-input-" + chat_id).keydown(function(event) {
          if (event.keyCode == KEY_ENTER) {
            event.preventDefault();
            if (composingTimeOut) {
              $.xmpp.isWriting({
                isWriting: 'composing',
                to: options.from
              });
              composingTimeOut = false;
            }
            sendMessage(chat_id, options);
            composingTimeOut = true;
            clearTimeout(pauseTimeOut);
            return;
          }
          clearTimeout(pauseTimeOut);
          pauseTimeOut = setTimeout(function() {
            if ($("#chat-input-" + chat_id).text() != "")
              $.xmpp.isWriting({
                isWriting: 'paused',
                to: options.from
              });
            else
              $.xmpp.isWriting({
                isWriting: 'inactive',
                to: options.from
              });
            composingTimeOut = true;
          }, 5000);
        });
        var $sendButton = $("#chat-send-" + chat_id);
        $sendButton.click(function(event) {
          event.preventDefault();
          sendMessage(chat_id, options);
        });
        $sendButton.on("touchstart", function(event) {
          event.preventDefault();
          sendMessage(chat_id, options);
        });
        $("#chat-input-" + chat_id).on("input", function() {
          updateChatHeight(chat_id);
        });
        return retVal;
      } else {
        if (settings.debug)
          debug("wijmo not found");
      }
    }
    function destroy(containerList, container) {
      var reconnectButton = container.find(".chat-status");
      statusClasses = settings.onlineClass + " " + settings.awayClass + " " + settings.busyClass + " " + settings.offlineClass;
      containerList.empty();
      var reconnect = function(e) {
        reconnectButton.unbind('click', reconnect).addClass("chat-status loading-chat");
        e.preventDefault();
        $.xmpp.connect(connection_options);
      };
      reconnectButton.removeClass(statusClasses).removeClass("chat-status loading-chat").addClass("retry").click(reconnect);
      $(".chat-conversation-dialog textarea").attr("disabled", "disabled");
      $("#messenger").html("");
    }
    function debug($obj) {
      if (window.console && window.console.log) {
        window.console.log($obj);
      }
    }
    ;
    function formatters(text) {
      var copy = text;
      if (settings.emotions) {
        for (var i in settings.emotions) {
          copy = copy.replace(settings.emotions[i].emotion, "<span class='emotion " + settings.emotions[i].emotionClass + "'/>");
        }
      }
      return copy;
    }
    return this.each(function() {
      if (settings.debug)
        debug(this);
    });
  };
});

_removeDefine();
})();
$__System.registerDynamic("5f", [], false, function(__require, __exports, __module) {
  var _retrieveGlobal = $__System.get("@@global-helpers").prepareGlobal(__module.id, null, null);
  (function() {
    this["Linkified"] = Linkified;
    var defaults = this["defaults"];
    var defaults = {
      tagName: 'a',
      newLine: '\n',
      target: '_blank',
      linkClass: null,
      linkClasses: [],
      linkAttributes: null
    };
    function Linkified(element, options) {
      this._defaults = defaults;
      this.element = element;
      this.setOptions(options);
      this.init();
    }
    Linkified.prototype = {
      constructor: Linkified,
      init: function() {
        if (this.element.nodeType === 1) {
          Linkified.linkifyNode.call(this, this.element);
        } else {
          this.element = Linkified.linkify.call(this, this.element.toString());
        }
      },
      setOptions: function(options) {
        this.settings = Linkified.extendSettings(options, this.settings);
      },
      toString: function() {
        return this.element.toString();
      }
    };
    Linkified.extendSettings = function(options, settings) {
      var prop;
      settings = settings || {};
      for (prop in defaults) {
        if (!settings[prop]) {
          settings[prop] = defaults[prop];
        }
      }
      for (prop in options) {
        settings[prop] = options[prop];
      }
      return settings;
    };
    Linkified.linkMatch = new RegExp(['(', '\\s|[^a-zA-Z0-9.\\+_\\/"\\>\\-]|^', ')(?:', '(', '[a-zA-Z0-9\\+_\\-]+', '(?:', '\\.[a-zA-Z0-9\\+_\\-]+', ')*@', ')?(', 'http:\\/\\/|https:\\/\\/|ftp:\\/\\/', ')?(', '(?:(?:[a-z0-9][a-z0-9_%\\-_+]*\\.)+)', ')(', '(?:com|ca|co|edu|gov|net|org|dev|biz|cat|int|pro|tel|mil|aero|asia|coop|info|jobs|mobi|museum|name|post|travel|local|[a-z]{2})', ')(', '(?::\\d{1,5})', ')?(', '(?:', '[\\/|\\?]', '(?:', '[\\-a-zA-Z0-9_%#*&+=~!?,;:.\\/]*', ')*', ')', '[\\-\\/a-zA-Z0-9_%#*&+=~]', '|', '\\/?', ')?', ')(', '[^a-zA-Z0-9\\+_\\/"\\<\\-]|$', ')'].join(''), 'g');
    Linkified.emailLinkMatch = /(<[a-z]+ href=\")(http:\/\/)([a-zA-Z0-9\+_\-]+(?:\.[a-zA-Z0-9\+_\-]+)*@)/g;
    Linkified.linkify = function(text, options) {
      var attr,
          settings,
          linkClasses,
          linkReplace = [];
      if (this.constructor === Linkified && this.settings) {
        settings = this.settings;
        if (options) {
          settings = Linkified.extendSettings(options, settings);
        }
      } else {
        settings = Linkified.extendSettings(options);
      }
      if (settings.linkClass) {
        linkClasses = settings.linkClass.split(/\s+/);
      } else {
        linkClasses = [];
      }
      linkClasses.push.apply(linkClasses, settings.linkClasses);
      text = text.replace(/</g, '&lt;').replace(/(\s)/g, '$1$1');
      linkReplace.push('$1<' + settings.tagName, 'href="http://$2$4$5$6$7"');
      linkReplace.push('class="linkified' + (linkClasses.length > 0 ? ' ' + linkClasses.join(' ') : '') + '"');
      if (settings.target) {
        linkReplace.push('target="' + settings.target + '"');
      }
      for (attr in settings.linkAttributes) {
        linkReplace.push([attr, '="', settings.linkAttributes[attr].replace(/\"/g, '&quot;').replace(/\$/g, '&#36;'), '"'].join(''));
      }
      linkReplace.push('>$2$3$4$5$6$7</' + settings.tagName + '>$8');
      text = text.replace(Linkified.linkMatch, linkReplace.join(' '));
      text = text.replace(Linkified.emailLinkMatch, '$1mailto:$3');
      text = text.replace(/(\s){2}/g, '$1');
      text = text.replace(/\n/g, settings.newLine);
      return text;
    };
    Linkified.linkifyNode = function(node) {
      var children,
          childNode,
          childCount,
          dummyElement,
          i;
      if (node && typeof node === 'object' && node.nodeType === 1 && node.tagName.toLowerCase() !== 'a' && !/[^\s]linkified[\s$]/.test(node.className)) {
        children = [];
        dummyElement = Linkified._dummyElement || document.createElement('div');
        childNode = node.firstChild;
        childCount = node.childElementCount;
        while (childNode) {
          if (childNode.nodeType === 3) {
            while (dummyElement.firstChild) {
              dummyElement.removeChild(dummyElement.firstChild);
            }
            dummyElement.innerHTML = Linkified.linkify.call(this, childNode.textContent || childNode.innerText || childNode.nodeValue);
            children.push.apply(children, dummyElement.childNodes);
            while (dummyElement.firstChild) {
              dummyElement.removeChild(dummyElement.firstChild);
            }
          } else if (childNode.nodeType === 1) {
            children.push(Linkified.linkifyNode.call(this, childNode));
          } else {
            children.push(childNode);
          }
          childNode = childNode.nextSibling;
        }
        while (node.firstChild) {
          node.removeChild(node.firstChild);
        }
        for (i = 0; i < children.length; i++) {
          node.appendChild(children[i]);
        }
      }
      return node;
    }, Linkified._dummyElement = document.createElement('div');
    this["defaults"] = defaults;
  })();
  return _retrieveGlobal();
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("5e", ["5"], function($) {
  (function($, undefined) {
    $.support.htmlMenuitem = ('HTMLMenuItemElement' in window);
    $.support.htmlCommand = ('HTMLCommandElement' in window);
    var $currentTrigger = null,
        initialized = false,
        ignoreThisClick = false,
        $win = $(window),
        counter = 0,
        namespaces = {},
        menus = {},
        types = {},
        defaults = {
          selector: null,
          appendTo: null,
          trigger: "right",
          autoHide: false,
          ignoreRightClick: false,
          delay: 200,
          determinePosition: function($menu) {
            if ($.ui && $.ui.position) {
              $menu.css('display', 'block').position({
                my: "center top",
                at: "center bottom",
                of: this,
                offset: "0 5",
                collision: "fit"
              }).css('display', 'none');
            } else {
              var offset = this.offset();
              offset.top += this.outerHeight();
              offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;
              $menu.css(offset);
            }
          },
          position: function(opt, x, y) {
            var $this = this,
                offset;
            if (!x && !y) {
              opt.determinePosition.call(this, opt.$menu);
              return;
            } else if (x === "maintain" && y === "maintain") {
              offset = opt.$menu.position();
            } else {
              var triggerIsFixed = opt.$trigger.parents().andSelf().filter(function() {
                return $(this).css('position') == "fixed";
              }).length;
              if (triggerIsFixed) {
                y -= $win.scrollTop();
                x -= $win.scrollLeft();
              }
              offset = {
                top: y,
                left: x
              };
            }
            var bottom = $win.scrollTop() + $win.height(),
                right = $win.scrollLeft() + $win.width(),
                height = opt.$menu.height(),
                width = opt.$menu.width();
            if (offset.top + height > bottom) {
              offset.top -= height;
            }
            if (offset.left + width > right) {
              offset.left -= width;
            }
            opt.$menu.css(offset);
          },
          positionSubmenu: function($menu) {
            if ($.ui && $.ui.position) {
              $menu.css('display', 'block').position({
                my: "left top",
                at: "right top",
                of: this,
                collision: "fit"
              }).css('display', '');
            } else {
              var offset = this.offset();
              offset.top += 0;
              offset.left += this.outerWidth();
              $menu.css(offset);
            }
          },
          zIndex: 1,
          animation: {
            duration: 50,
            show: 'slideDown',
            hide: 'slideUp'
          },
          events: {
            show: $.noop,
            hide: $.noop
          },
          callback: null,
          items: {}
        },
        hoveract = {
          timer: null,
          pageX: null,
          pageY: null
        },
        zindex = function($t) {
          var zin = 0,
              $tt = $t;
          while (true) {
            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);
            $tt = $tt.parent();
            if (!$tt || !$tt.length || $tt.prop('nodeName').toLowerCase() == 'body') {
              break;
            }
          }
          return zin;
        },
        handle = {
          abortevent: function(e) {
            e.preventDefault();
            e.stopImmediatePropagation();
          },
          contextmenu: function(e) {
            var $this = $(this);
            e.preventDefault();
            e.stopImmediatePropagation();
            if (ignoreThisClick) {
              ignoreThisClick = false;
              return;
            }
            if (!$this.hasClass('context-menu-disabled')) {
              $currentTrigger = $this;
              if (e.data.build) {
                $.extend(true, e.data, defaults, e.data.build($currentTrigger, e) || {});
                op.create(e.data);
              }
              op.show.call($this, e.data, e.pageX, e.pageY);
            }
          },
          click: function(e) {
            e.preventDefault();
            e.stopImmediatePropagation();
            $(this).trigger(jQuery.Event("contextmenu", {
              data: e.data,
              pageX: e.pageX,
              pageY: e.pageY
            }));
          },
          mousedown: function(e) {
            var $this = $(this);
            if ($currentTrigger && $currentTrigger.length && !$currentTrigger.is($this)) {
              $currentTrigger.data('contextMenu').$menu.trigger('contextmenu:hide');
            }
            if (e.button == 2) {
              $currentTrigger = $this.data('contextMenuActive', true);
            }
          },
          mouseup: function(e) {
            var $this = $(this);
            if ($this.data('contextMenuActive') && $currentTrigger && $currentTrigger.length && $currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {
              e.preventDefault();
              e.stopImmediatePropagation();
              $currentTrigger = $this;
              $this.trigger(jQuery.Event("contextmenu", {
                data: e.data,
                pageX: e.pageX,
                pageY: e.pageY
              }));
            }
            $this.removeData('contextMenuActive');
          },
          mouseenter: function(e) {
            var $this = $(this),
                $related = $(e.relatedTarget),
                $document = $(document);
            if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {
              return;
            }
            if ($currentTrigger && $currentTrigger.length) {
              return;
            }
            hoveract.pageX = e.pageX;
            hoveract.pageY = e.pageY;
            hoveract.data = e.data;
            $document.on('mousemove.contextMenuShow', handle.mousemove);
            hoveract.timer = setTimeout(function() {
              hoveract.timer = null;
              $document.off('mousemove.contextMenuShow');
              $currentTrigger = $this;
              $this.trigger(jQuery.Event("contextmenu", {
                data: hoveract.data,
                pageX: hoveract.pageX,
                pageY: hoveract.pageY
              }));
            }, e.data.delay);
          },
          mousemove: function(e) {
            hoveract.pageX = e.pageX;
            hoveract.pageY = e.pageY;
          },
          mouseleave: function(e) {
            var $related = $(e.relatedTarget);
            if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {
              return;
            }
            try {
              clearTimeout(hoveract.timer);
            } catch (e) {}
            hoveract.timer = null;
          },
          ignoreRightClick: function(e) {
            if (e.button == 2) {
              ignoreThisClick = true;
            }
          },
          layerClick: function(e) {
            var $this = $(this),
                root = $this.data('contextMenuRoot');
            e.preventDefault();
            e.stopImmediatePropagation();
            $this.remove();
            root.$menu.trigger('contextmenu:hide');
          },
          keyStop: function(e, opt) {
            if (!opt.isInput) {
              e.preventDefault();
            }
            e.stopPropagation();
          },
          key: function(e) {
            var opt = $currentTrigger.data('contextMenu') || {},
                $children = opt.$menu.children(),
                $round;
            switch (e.keyCode) {
              case 9:
              case 38:
                handle.keyStop(e, opt);
                if (opt.isInput) {
                  if (e.keyCode == 9 && e.shiftKey) {
                    e.preventDefault();
                    opt.$selected && opt.$selected.find('input, textarea, select').blur();
                    opt.$menu.trigger('prevcommand');
                    return;
                  } else if (e.keyCode == 38 && opt.$selected.find('input, textarea, select').prop('type') == 'checkbox') {
                    e.preventDefault();
                    return;
                  }
                } else if (e.keyCode != 9 || e.shiftKey) {
                  opt.$menu.trigger('prevcommand');
                  return;
                }
              case 9:
              case 40:
                handle.keyStop(e, opt);
                if (opt.isInput) {
                  if (e.keyCode == 9) {
                    e.preventDefault();
                    opt.$selected && opt.$selected.find('input, textarea, select').blur();
                    opt.$menu.trigger('nextcommand');
                    return;
                  } else if (e.keyCode == 40 && opt.$selected.find('input, textarea, select').prop('type') == 'checkbox') {
                    e.preventDefault();
                    return;
                  }
                } else {
                  opt.$menu.trigger('nextcommand');
                  return;
                }
                break;
              case 37:
                handle.keyStop(e, opt);
                if (opt.isInput || !opt.$selected || !opt.$selected.length) {
                  break;
                }
                if (!opt.$selected.parent().hasClass('context-menu-root')) {
                  var $parent = opt.$selected.parent().parent();
                  opt.$selected.trigger('contextmenu:blur');
                  opt.$selected = $parent;
                  return;
                }
                break;
              case 39:
                handle.keyStop(e, opt);
                if (opt.isInput || !opt.$selected || !opt.$selected.length) {
                  break;
                }
                var itemdata = opt.$selected.data('contextMenu') || {};
                if (itemdata.$menu && opt.$selected.hasClass('context-menu-submenu')) {
                  opt.$selected = null;
                  itemdata.$selected = null;
                  itemdata.$menu.trigger('nextcommand');
                  return;
                }
                break;
              case 35:
              case 36:
                if (opt.$selected && opt.$selected.find('input, textarea, select').length) {
                  return;
                } else {
                  (opt.$selected && opt.$selected.parent() || opt.$menu).children(':not(.disabled, .not-selectable)')[e.keyCode == 36 ? 'first' : 'last']().trigger('contextmenu:focus');
                  e.preventDefault();
                  return;
                }
                break;
              case 13:
                handle.keyStop(e, opt);
                if (opt.isInput) {
                  if (opt.$selected && !opt.$selected.is('textarea, select')) {
                    e.preventDefault();
                    return;
                  }
                  break;
                }
                opt.$selected && opt.$selected.trigger('mouseup');
                return;
              case 32:
              case 33:
              case 34:
                handle.keyStop(e, opt);
                return;
              case 27:
                handle.keyStop(e, opt);
                opt.$menu.trigger('contextmenu:hide');
                return;
              default:
                var k = (String.fromCharCode(e.keyCode)).toUpperCase();
                if (opt.accesskeys[k]) {
                  opt.accesskeys[k].$node.trigger(opt.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup');
                  return;
                }
                break;
            }
            e.stopPropagation();
            opt.$selected && opt.$selected.trigger(e);
          },
          prevItem: function(e) {
            e.stopPropagation();
            var opt = $(this).data('contextMenu') || {};
            if (opt.$selected) {
              var $s = opt.$selected;
              opt = opt.$selected.parent().data('contextMenu') || {};
              opt.$selected = $s;
            }
            var $children = opt.$menu.children(),
                $prev = !opt.$selected || !opt.$selected.prev().length ? $children.last() : opt.$selected.prev(),
                $round = $prev;
            while ($prev.hasClass('disabled') || $prev.hasClass('not-selectable')) {
              if ($prev.prev().length) {
                $prev = $prev.prev();
              } else {
                $prev = $children.last();
              }
              if ($prev.is($round)) {
                return;
              }
            }
            if (opt.$selected) {
              handle.itemMouseleave.call(opt.$selected.get(0), e);
            }
            handle.itemMouseenter.call($prev.get(0), e);
            var $input = $prev.find('input, textarea, select');
            if ($input.length) {
              $input.focus();
            }
          },
          nextItem: function(e) {
            e.stopPropagation();
            var opt = $(this).data('contextMenu') || {};
            if (opt.$selected) {
              var $s = opt.$selected;
              opt = opt.$selected.parent().data('contextMenu') || {};
              opt.$selected = $s;
            }
            var $children = opt.$menu.children(),
                $next = !opt.$selected || !opt.$selected.next().length ? $children.first() : opt.$selected.next(),
                $round = $next;
            while ($next.hasClass('disabled') || $next.hasClass('not-selectable')) {
              if ($next.next().length) {
                $next = $next.next();
              } else {
                $next = $children.first();
              }
              if ($next.is($round)) {
                return;
              }
            }
            if (opt.$selected) {
              handle.itemMouseleave.call(opt.$selected.get(0), e);
            }
            handle.itemMouseenter.call($next.get(0), e);
            var $input = $next.find('input, textarea, select');
            if ($input.length) {
              $input.focus();
            }
          },
          focusInput: function(e) {
            var $this = $(this).closest('.context-menu-item'),
                data = $this.data(),
                opt = data.contextMenu,
                root = data.contextMenuRoot;
            root.$selected = opt.$selected = $this;
            root.isInput = opt.isInput = true;
          },
          blurInput: function(e) {
            var $this = $(this).closest('.context-menu-item'),
                data = $this.data(),
                opt = data.contextMenu,
                root = data.contextMenuRoot;
            root.isInput = opt.isInput = false;
          },
          menuMouseenter: function(e) {
            var root = $(this).data().contextMenuRoot;
            root.hovering = true;
          },
          menuMouseleave: function(e) {
            var root = $(this).data().contextMenuRoot;
            if (root.$layer && root.$layer.is(e.relatedTarget)) {
              root.hovering = false;
            }
          },
          itemMouseenter: function(e) {
            var $this = $(this),
                data = $this.data(),
                opt = data.contextMenu,
                root = data.contextMenuRoot;
            root.hovering = true;
            if (e && root.$layer && root.$layer.is(e.relatedTarget)) {
              e.preventDefault();
              e.stopImmediatePropagation();
            }
            (opt.$menu ? opt : root).$menu.children('.hover').trigger('contextmenu:blur');
            if ($this.hasClass('disabled') || $this.hasClass('not-selectable')) {
              opt.$selected = null;
              return;
            }
            $this.trigger('contextmenu:focus');
          },
          itemMouseleave: function(e) {
            var $this = $(this),
                data = $this.data(),
                opt = data.contextMenu,
                root = data.contextMenuRoot;
            if (root !== opt && root.$layer && root.$layer.is(e.relatedTarget)) {
              root.$selected && root.$selected.trigger('contextmenu:blur');
              e.preventDefault();
              e.stopImmediatePropagation();
              root.$selected = opt.$selected = opt.$node;
              return;
            }
            $this.trigger('contextmenu:blur');
          },
          itemClick: function(e) {
            var $this = $(this),
                data = $this.data(),
                opt = data.contextMenu,
                root = data.contextMenuRoot,
                key = data.contextMenuKey,
                callback;
            if (!opt.items[key] || $this.hasClass('disabled')) {
              return;
            }
            e.preventDefault();
            e.stopImmediatePropagation();
            if ($.isFunction(root.callbacks[key])) {
              callback = root.callbacks[key];
            } else if ($.isFunction(root.callback)) {
              callback = root.callback;
            } else {
              return;
            }
            if (callback.call(root.$trigger, key, root) !== false) {
              root.$menu.trigger('contextmenu:hide');
            } else {
              op.update.call(root.$trigger, root);
            }
          },
          inputClick: function(e) {
            e.stopImmediatePropagation();
          },
          hideMenu: function(e) {
            var root = $(this).data('contextMenuRoot');
            op.hide.call(root.$trigger, root);
          },
          focusItem: function(e) {
            e.stopPropagation();
            var $this = $(this),
                data = $this.data(),
                opt = data.contextMenu,
                root = data.contextMenuRoot;
            $this.addClass('hover').siblings('.hover').trigger('contextmenu:blur');
            opt.$selected = root.$selected = $this;
            if (opt.$node) {
              root.positionSubmenu.call(opt.$node, opt.$menu);
            }
          },
          blurItem: function(e) {
            e.stopPropagation();
            var $this = $(this),
                data = $this.data(),
                opt = data.contextMenu,
                root = data.contextMenuRoot;
            $this.removeClass('hover');
            opt.$selected = null;
          }
        },
        op = {
          show: function(opt, x, y) {
            var $this = $(this),
                offset,
                css = {};
            $('#context-menu-layer').trigger('mousedown');
            if (opt.events.show.call($this, opt) === false) {
              $currentTrigger = null;
              return;
            }
            opt.$trigger = $this;
            op.update.call($this, opt);
            opt.position.call($this, opt, x, y);
            if (opt.zIndex) {
              css.zIndex = zindex($this) + opt.zIndex;
            }
            op.layer.call(opt.$menu, opt, css.zIndex);
            opt.$menu.find('ul').css('zIndex', css.zIndex + 1);
            opt.$menu.css(css)[opt.animation.show](opt.animation.duration);
            $this.data('contextMenu', opt);
            $(document).off('keydown.contextMenu').on('keydown.contextMenu', handle.key);
            if (opt.autoHide) {
              var pos = $this.position();
              pos.right = pos.left + $this.outerWidth();
              pos.bottom = pos.top + this.outerHeight();
              $(document).on('mousemove.contextMenuAutoHide', function(e) {
                if (opt.$layer && !opt.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {
                  opt.$layer.trigger('mousedown');
                }
              });
            }
          },
          hide: function(opt) {
            var $this = $(this);
            if (!opt) {
              opt = $this.data('contextMenu') || {};
            }
            if (opt.events && opt.events.hide.call($this, opt) === false) {
              return;
            }
            if (opt.$layer) {
              try {
                opt.$layer.remove();
                delete opt.$layer;
              } catch (e) {
                opt.$layer = null;
              }
            }
            $currentTrigger = null;
            opt.$menu.find('.hover').trigger('contextmenu:blur');
            opt.$selected = null;
            $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');
            opt.$menu && opt.$menu[opt.animation.hide](opt.animation.duration);
            if (opt.build) {
              opt.$menu.remove();
              $.each(opt, function(key, value) {
                switch (key) {
                  case 'ns':
                  case 'selector':
                  case 'build':
                  case 'trigger':
                  case 'ignoreRightClick':
                    return true;
                  default:
                    opt[key] = undefined;
                    try {
                      delete opt[key];
                    } catch (e) {}
                    return true;
                }
              });
            }
          },
          create: function(opt, root) {
            if (root === undefined) {
              root = opt;
            }
            opt.$menu = $('<ul class="context-menu-list ' + (opt.className || "") + '"></ul>').data({
              'contextMenu': opt,
              'contextMenuRoot': root
            });
            $.each(['callbacks', 'commands', 'inputs'], function(i, k) {
              opt[k] = {};
              if (!root[k]) {
                root[k] = {};
              }
            });
            root.accesskeys || (root.accesskeys = {});
            $.each(opt.items, function(key, item) {
              var $t = $('<li class="context-menu-item ' + (item.className || "") + '"></li>'),
                  $label = null,
                  $input = null;
              item.$node = $t.data({
                'contextMenu': opt,
                'contextMenuRoot': root,
                'contextMenuKey': key
              });
              if (item.accesskey) {
                var aks = splitAccesskey(item.accesskey);
                for (var i = 0,
                    ak; ak = aks[i]; i++) {
                  if (!root.accesskeys[ak]) {
                    root.accesskeys[ak] = item;
                    item._name = item.name.replace(new RegExp('(' + ak + ')', 'i'), '<span class="context-menu-accesskey">$1</span>');
                    break;
                  }
                }
              }
              if (typeof item == "string") {
                $t.addClass('context-menu-separator not-selectable');
              } else if (item.type && types[item.type]) {
                types[item.type].call($t, item, opt, root);
                $.each([opt, root], function(i, k) {
                  k.commands[key] = item;
                  if ($.isFunction(item.callback)) {
                    k.callbacks[key] = item.callback;
                  }
                });
              } else {
                if (item.type == 'html') {
                  $t.addClass('context-menu-html not-selectable');
                } else if (item.type) {
                  $label = $('<label></label>').appendTo($t);
                  $('<span></span>').html(item._name || item.name).appendTo($label);
                  $t.addClass('context-menu-input');
                  opt.hasTypes = true;
                  $.each([opt, root], function(i, k) {
                    k.commands[key] = item;
                    k.inputs[key] = item;
                  });
                } else if (item.items) {
                  item.type = 'sub';
                }
                switch (item.type) {
                  case 'text':
                    $input = $('<input type="text" value="1" name="context-menu-input-' + key + '" value="">').val(item.value || "").appendTo($label);
                    break;
                  case 'textarea':
                    $input = $('<textarea name="context-menu-input-' + key + '"></textarea>').val(item.value || "").appendTo($label);
                    if (item.height) {
                      $input.height(item.height);
                    }
                    break;
                  case 'checkbox':
                    $input = $('<input type="checkbox" value="1" name="context-menu-input-' + key + '" value="">').val(item.value || "").prop("checked", !!item.selected).prependTo($label);
                    break;
                  case 'radio':
                    $input = $('<input type="radio" value="1" name="context-menu-input-' + item.radio + '" value="">').val(item.value || "").prop("checked", !!item.selected).prependTo($label);
                    break;
                  case 'select':
                    $input = $('<select name="context-menu-input-' + key + '">').appendTo($label);
                    if (item.options) {
                      $.each(item.options, function(value, text) {
                        $('<option></option>').val(value).text(text).appendTo($input);
                      });
                      $input.val(item.selected);
                    }
                    break;
                  case 'sub':
                    $('<span></span>').html(item._name || item.name).appendTo($t);
                    item.appendTo = item.$node;
                    op.create(item, root);
                    $t.data('contextMenu', item).addClass('context-menu-submenu');
                    item.callback = null;
                    break;
                  case 'html':
                    $(item.html).appendTo($t);
                    break;
                  default:
                    $.each([opt, root], function(i, k) {
                      k.commands[key] = item;
                      if ($.isFunction(item.callback)) {
                        k.callbacks[key] = item.callback;
                      }
                    });
                    $('<span></span>').html(item._name || item.name || "").appendTo($t);
                    break;
                }
                if (item.type && item.type != 'sub' && item.type != 'html') {
                  $input.on('focus', handle.focusInput).on('blur', handle.blurInput);
                  if (item.events) {
                    $input.on(item.events);
                  }
                }
                if (item.icon) {
                  $t.addClass("icon icon-" + item.icon);
                }
              }
              item.$input = $input;
              item.$label = $label;
              $t.appendTo(opt.$menu);
              if (!opt.hasTypes) {
                if ($.browser.msie) {
                  $t.on('selectstart.disableTextSelect', handle.abortevent);
                } else if (!$.browser.mozilla) {
                  $t.on('mousedown.disableTextSelect', handle.abortevent);
                }
              }
            });
            if (!opt.$node) {
              opt.$menu.css('display', 'none').addClass('context-menu-root');
            }
            opt.$menu.appendTo(opt.appendTo || document.body);
          },
          update: function(opt, root) {
            var $this = this;
            if (root === undefined) {
              root = opt;
              opt.$menu.find('ul').andSelf().css({
                position: 'static',
                display: 'block'
              }).each(function() {
                var $this = $(this);
                $this.width($this.css('position', 'absolute').width()).css('position', 'static');
              }).css({
                position: '',
                display: ''
              });
            }
            opt.$menu.children().each(function() {
              var $item = $(this),
                  key = $item.data('contextMenuKey'),
                  item = opt.items[key],
                  disabled = ($.isFunction(item.disabled) && item.disabled.call($this, key, root)) || item.disabled === true;
              $item[disabled ? 'addClass' : 'removeClass']('disabled');
              if (item.type) {
                $item.find('input, select, textarea').prop('disabled', disabled);
                switch (item.type) {
                  case 'text':
                  case 'textarea':
                    item.$input.val(item.value || "");
                    break;
                  case 'checkbox':
                  case 'radio':
                    item.$input.val(item.value || "").prop('checked', !!item.selected);
                    break;
                  case 'select':
                    item.$input.val(item.selected || "");
                    break;
                }
              }
              if (item.$menu) {
                op.update.call($this, item, root);
              }
            });
          },
          layer: function(opt, zIndex) {
            return opt.$layer = $('<div id="context-menu-layer" style="position:fixed; z-index:' + zIndex + '; top:0; left:0; opacity: 0; filter: alpha(opacity=0); background-color: #000;"></div>').css({
              height: $win.height(),
              width: $win.width(),
              display: 'block'
            }).data('contextMenuRoot', opt).insertBefore(this).on('mousedown', handle.layerClick);
          }
        };
    function splitAccesskey(val) {
      var t = val.split(/\s+/),
          keys = [];
      for (var i = 0,
          k; k = t[i]; i++) {
        k = k[0].toUpperCase();
        keys.push(k);
      }
      return keys;
    }
    $.fn.contextMenu = function(operation) {
      if (operation === undefined) {
        this.first().trigger('contextmenu');
      } else if (operation.x && operation.y) {
        this.first().trigger(jQuery.Event("contextmenu", {
          pageX: operation.x,
          pageY: operation.y
        }));
      } else if (operation === "hide") {
        var $menu = this.data('contextMenu').$menu;
        $menu && $menu.trigger('contextmenu:hide');
      } else if (operation) {
        this.removeClass('context-menu-disabled');
      } else if (!operation) {
        this.addClass('context-menu-disabled');
      }
      return this;
    };
    $.contextMenu = function(operation, options) {
      if (typeof operation != 'string') {
        options = operation;
        operation = 'create';
      }
      if (typeof options == 'string') {
        options = {selector: options};
      } else if (options === undefined) {
        options = {};
      }
      var o = $.extend(true, {}, defaults, options || {}),
          $body = $body = $(document);
      switch (operation) {
        case 'create':
          if (!o.selector) {
            throw new Error('No selector specified');
          }
          if (o.selector.match(/.context-menu-(list|item|input)($|\s)/)) {
            throw new Error('Cannot bind to selector "' + o.selector + '" as it contains a reserved className');
          }
          if (!o.build && (!o.items || $.isEmptyObject(o.items))) {
            throw new Error('No Items sepcified');
          }
          counter++;
          o.ns = '.contextMenu' + counter;
          namespaces[o.selector] = o.ns;
          menus[o.ns] = o;
          if (!initialized) {
            $body.on({
              'contextmenu:hide.contextMenu': handle.hideMenu,
              'prevcommand.contextMenu': handle.prevItem,
              'nextcommand.contextMenu': handle.nextItem,
              'contextmenu.contextMenu': handle.abortevent,
              'mouseenter.contextMenu': handle.menuMouseenter,
              'mouseleave.contextMenu': handle.menuMouseleave
            }, '.context-menu-list').on('mouseup.contextMenu', '.context-menu-input', handle.inputClick).on({
              'mouseup.contextMenu': handle.itemClick,
              'contextmenu:focus.contextMenu': handle.focusItem,
              'contextmenu:blur.contextMenu': handle.blurItem,
              'contextmenu.contextMenu': handle.abortevent,
              'mouseenter.contextMenu': handle.itemMouseenter,
              'mouseleave.contextMenu': handle.itemMouseleave
            }, '.context-menu-item');
            initialized = true;
          }
          $body.on('contextmenu' + o.ns, o.selector, o, handle.contextmenu);
          switch (o.trigger) {
            case 'hover':
              $body.on('mouseenter' + o.ns, o.selector, o, handle.mouseenter).on('mouseleave' + o.ns, o.selector, o, handle.mouseleave);
              break;
            case 'left':
              $body.on('click' + o.ns, o.selector, o, handle.click);
              break;
          }
          if (o.trigger != 'hover' && o.ignoreRightClick) {
            $body.on('mousedown' + o.ns, o.selector, handle.ignoreRightClick);
          }
          if (!o.build) {
            op.create(o);
          }
          break;
        case 'destroy':
          if (!o.selector) {
            $body.off('.contextMenu .contextMenuAutoHide');
            $.each(namespaces, function(key, value) {
              $body.off(value);
            });
            namespaces = {};
            menus = {};
            counter = 0;
            initialized = false;
            $('.context-menu-list').remove();
          } else if (namespaces[o.selector]) {
            try {
              if (menus[namespaces[o.selector]].$menu) {
                menus[namespaces[o.selector]].$menu.remove();
              }
              delete menus[namespaces[o.selector]];
            } catch (e) {
              menus[namespaces[o.selector]] = null;
            }
            $body.off(namespaces[o.selector]);
          }
          break;
        case 'html5':
          if ((!$.support.htmlCommand && !$.support.htmlMenuitem) || (typeof options == "boolean" && options)) {
            $('menu[type="context"]').each(function() {
              if (this.id) {
                $.contextMenu({
                  selector: '[contextmenu=' + this.id + ']',
                  items: $.contextMenu.fromMenu(this)
                });
              }
            }).css('display', 'none');
          }
          break;
        default:
          throw new Error('Unknown operation "' + operation + '"');
      }
      return this;
    };
    $.contextMenu.setInputValues = function(opt, data) {
      if (data === undefined) {
        data = {};
      }
      $.each(opt.inputs, function(key, item) {
        switch (item.type) {
          case 'text':
          case 'textarea':
            item.value = data[key] || "";
            break;
          case 'checkbox':
            item.selected = data[key] ? true : false;
            break;
          case 'radio':
            item.selected = (data[item.radio] || "") == item.value ? true : false;
            break;
          case 'select':
            item.selected = data[key] || "";
            break;
        }
      });
    };
    $.contextMenu.getInputValues = function(opt, data) {
      if (data === undefined) {
        data = {};
      }
      $.each(opt.inputs, function(key, item) {
        switch (item.type) {
          case 'text':
          case 'textarea':
          case 'select':
            data[key] = item.$input.val();
            break;
          case 'checkbox':
            data[key] = item.$input.prop('checked');
            break;
          case 'radio':
            if (item.$input.prop('checked')) {
              data[item.radio] = item.value;
            }
            break;
        }
      });
      return data;
    };
    function inputLabel(node) {
      return (node.id && $('label[for="' + node.id + '"]').val()) || node.name;
    }
    function menuChildren(items, $children, counter) {
      if (!counter) {
        counter = 0;
      }
      $children.each(function() {
        var $node = $(this),
            node = this,
            nodeName = this.nodeName.toLowerCase(),
            label,
            item;
        if (nodeName == 'label' && $node.find('input, textarea, select').length) {
          label = $node.text();
          $node = $node.children().first();
          node = $node.get(0);
          nodeName = node.nodeName.toLowerCase();
        }
        switch (nodeName) {
          case 'menu':
            item = {
              name: $node.attr('label'),
              items: {}
            };
            menuChildren(item.items, $node.children(), counter);
            break;
          case 'a':
          case 'button':
            item = {
              name: $node.text(),
              disabled: !!$node.attr('disabled'),
              callback: (function() {
                return function() {
                  $node.click();
                };
              })()
            };
            break;
          case 'menuitem':
          case 'command':
            switch ($node.attr('type')) {
              case undefined:
              case 'command':
              case 'menuitem':
                item = {
                  name: $node.attr('label'),
                  disabled: !!$node.attr('disabled'),
                  callback: (function() {
                    return function() {
                      $node.click();
                    };
                  })()
                };
                break;
              case 'checkbox':
                item = {
                  type: 'checkbox',
                  disabled: !!$node.attr('disabled'),
                  name: $node.attr('label'),
                  selected: !!$node.attr('checked')
                };
                break;
              case 'radio':
                item = {
                  type: 'radio',
                  disabled: !!$node.attr('disabled'),
                  name: $node.attr('label'),
                  radio: $node.attr('radiogroup'),
                  value: $node.attr('id'),
                  selected: !!$node.attr('checked')
                };
                break;
              default:
                item = undefined;
            }
            break;
          case 'hr':
            item = '-------';
            break;
          case 'input':
            switch ($node.attr('type')) {
              case 'text':
                item = {
                  type: 'text',
                  name: label || inputLabel(node),
                  disabled: !!$node.attr('disabled'),
                  value: $node.val()
                };
                break;
              case 'checkbox':
                item = {
                  type: 'checkbox',
                  name: label || inputLabel(node),
                  disabled: !!$node.attr('disabled'),
                  selected: !!$node.attr('checked')
                };
                break;
              case 'radio':
                item = {
                  type: 'radio',
                  name: label || inputLabel(node),
                  disabled: !!$node.attr('disabled'),
                  radio: !!$node.attr('name'),
                  value: $node.val(),
                  selected: !!$node.attr('checked')
                };
                break;
              default:
                item = undefined;
                break;
            }
            break;
          case 'select':
            item = {
              type: 'select',
              name: label || inputLabel(node),
              disabled: !!$node.attr('disabled'),
              selected: $node.val(),
              options: {}
            };
            $node.children().each(function() {
              item.options[this.value] = $(this).text();
            });
            break;
          case 'textarea':
            item = {
              type: 'textarea',
              name: label || inputLabel(node),
              disabled: !!$node.attr('disabled'),
              value: $node.val()
            };
            break;
          case 'label':
            break;
          default:
            item = {
              type: 'html',
              html: $node.clone(true)
            };
            break;
        }
        if (item) {
          counter++;
          items['key' + counter] = item;
        }
      });
    }
    $.contextMenu.fromMenu = function(element) {
      var $this = $(element),
          items = {};
      menuChildren(items, $this.children());
      return items;
    };
    $.contextMenu.defaults = defaults;
    $.contextMenu.types = types;
  })(jQuery);
  return $.contextMenu;
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
!function(a, b) {
  "use strict";
  function c() {
    return b;
  }
  "function" == typeof define && define.amd ? define("58", [], c) : a.tinysort = b;
}(this, function() {
  "use strict";
  function a(a, d) {
    function h() {
      0 === arguments.length ? q({}) : b(arguments, function(a) {
        q(z(a) ? {selector: a} : a);
      }), n = G.length;
    }
    function q(a) {
      var b = !!a.selector,
          d = b && ":" === a.selector[0],
          e = c(a || {}, p);
      G.push(c({
        hasSelector: b,
        hasAttr: !(e.attr === g || "" === e.attr),
        hasData: e.data !== g,
        hasFilter: d,
        sortReturnNumber: "asc" === e.order ? 1 : -1
      }, e));
    }
    function r() {
      b(a, function(a, b) {
        B ? B !== a.parentNode && (H = !1) : B = a.parentNode;
        var c = G[0],
            d = c.hasFilter,
            e = c.selector,
            f = !e || d && a.matchesSelector(e) || e && a.querySelector(e),
            g = f ? E : F,
            h = {
              elm: a,
              pos: b,
              posn: g.length
            };
        D.push(h), g.push(h);
      }), A = E.slice(0);
    }
    function s() {
      E.sort(t);
    }
    function t(a, c) {
      var d = 0;
      for (0 !== o && (o = 0); 0 === d && n > o; ) {
        var g = G[o],
            h = g.ignoreDashes ? l : k;
        if (b(m, function(a) {
          var b = a.prepare;
          b && b(g);
        }), g.sortFunction)
          d = g.sortFunction(a, c);
        else if ("rand" == g.order)
          d = Math.random() < .5 ? 1 : -1;
        else {
          var i = f,
              p = y(a, g),
              q = y(c, g),
              r = "" === p || p === e,
              s = "" === q || q === e;
          if (p === q)
            d = 0;
          else if (g.emptyEnd && (r || s))
            d = r && s ? 0 : r ? 1 : -1;
          else {
            if (!g.forceStrings) {
              var t = z(p) ? p && p.match(h) : f,
                  u = z(q) ? q && q.match(h) : f;
              if (t && u) {
                var v = p.substr(0, p.length - t[0].length),
                    w = q.substr(0, q.length - u[0].length);
                v == w && (i = !f, p = j(t[0]), q = j(u[0]));
              }
            }
            d = p === e || q === e ? 0 : q > p ? -1 : p > q ? 1 : 0;
          }
        }
        b(m, function(a) {
          var b = a.sort;
          b && (d = b(g, i, p, q, d));
        }), d *= g.sortReturnNumber, 0 === d && o++;
      }
      return 0 === d && (d = a.pos > c.pos ? 1 : -1), d;
    }
    function u() {
      var a = E.length === D.length;
      if (H && a)
        I ? E.forEach(function(a, b) {
          a.elm.style.order = b;
        }) : B.appendChild(v());
      else {
        var b = G[0],
            c = b.place,
            d = "org" === c,
            e = "start" === c,
            f = "end" === c,
            g = "first" === c,
            h = "last" === c;
        if (d)
          E.forEach(w), E.forEach(function(a, b) {
            x(A[b], a.elm);
          });
        else if (e || f) {
          var i = A[e ? 0 : A.length - 1],
              j = i.elm.parentNode,
              k = e ? j.firstChild : j.lastChild;
          k !== i.elm && (i = {elm: k}), w(i), f && j.appendChild(i.ghost), x(i, v());
        } else if (g || h) {
          var l = A[g ? 0 : A.length - 1];
          x(w(l), v());
        }
      }
    }
    function v() {
      return E.forEach(function(a) {
        C.appendChild(a.elm);
      }), C;
    }
    function w(a) {
      var b = a.elm,
          c = i.createElement("div");
      return a.ghost = c, b.parentNode.insertBefore(c, b), a;
    }
    function x(a, b) {
      var c = a.ghost,
          d = c.parentNode;
      d.insertBefore(b, c), d.removeChild(c), delete a.ghost;
    }
    function y(a, b) {
      var c,
          d = a.elm;
      return b.selector && (b.hasFilter ? d.matchesSelector(b.selector) || (d = g) : d = d.querySelector(b.selector)), b.hasAttr ? c = d.getAttribute(b.attr) : b.useVal ? c = d.value || d.getAttribute("value") : b.hasData ? c = d.getAttribute("data-" + b.data) : d && (c = d.textContent), z(c) && (b.cases || (c = c.toLowerCase()), c = c.replace(/\s+/g, " ")), c;
    }
    function z(a) {
      return "string" == typeof a;
    }
    z(a) && (a = i.querySelectorAll(a)), 0 === a.length && console.warn("No elements to sort");
    var A,
        B,
        C = i.createDocumentFragment(),
        D = [],
        E = [],
        F = [],
        G = [],
        H = !0,
        I = a.length && (d === e || d.useFlex !== !1) && -1 !== getComputedStyle(a[0].parentNode, null).display.indexOf("flex");
    return h.apply(g, Array.prototype.slice.call(arguments, 1)), r(), s(), u(), E.map(function(a) {
      return a.elm;
    });
  }
  function b(a, b) {
    for (var c,
        d = a.length,
        e = d; e--; )
      c = d - e - 1, b(a[c], c);
  }
  function c(a, b, c) {
    for (var d in b)
      (c || a[d] === e) && (a[d] = b[d]);
    return a;
  }
  function d(a, b, c) {
    m.push({
      prepare: a,
      sort: b,
      sortBy: c
    });
  }
  var e,
      f = !1,
      g = null,
      h = window,
      i = h.document,
      j = parseFloat,
      k = /(-?\d+\.?\d*)\s*$/g,
      l = /(\d+\.?\d*)\s*$/g,
      m = [],
      n = 0,
      o = 0,
      p = {
        selector: g,
        order: "asc",
        attr: g,
        data: g,
        useVal: f,
        place: "org",
        returns: f,
        cases: f,
        forceStrings: f,
        ignoreDashes: f,
        sortFunction: g,
        useFlex: f,
        emptyEnd: f
      };
  return h.Element && function(a) {
    a.matchesSelector = a.matchesSelector || a.mozMatchesSelector || a.msMatchesSelector || a.oMatchesSelector || a.webkitMatchesSelector || function(a) {
      for (var b = this,
          c = (b.parentNode || b.document).querySelectorAll(a),
          d = -1; c[++d] && c[d] != b; )
        ;
      return !!c[d];
    };
  }(Element.prototype), c(d, {loop: b}), c(a, {
    plugin: d,
    defaults: p
  });
}());

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("60", ["5", "21"], function(jQuery, $) {
  "use strict";
  (function($) {
    var uiStateHover = "ui-state-hover",
        zonCSS = "wijmo-wijdialog-defaultdockingzone";
    $.widget("wijmo.wijdialog", $.ui.dialog, {
      options: {
        captionButtons: {},
        collapsingAnimation: null,
        expandingAnimation: null,
        contentUrl: "",
        minimizeZoneElementId: ""
      },
      _create: function() {
        var self = this;
        $.ui.dialog.prototype._create.apply(self, arguments);
        self.uiDialog.addClass("wjimo-wijdialog");
        self._initWijWindow();
        self._bindWindowResize();
      },
      _initWijWindow: function() {
        var self = this;
        self._createCaptionButtons();
        self._checkUrl();
        self.uiDialogButtonPane = $(".ui-dialog-buttonpane", self.uiDialog);
      },
      _checkUrl: function() {
        var self = this,
            o = self.options,
            url = o.contentUrl,
            innerFrame = $('<iframe style="width:100%;height:99%;" frameborder="0"></iframe>');
        if (typeof url === "string" && url.length > 0) {
          self.element.addClass("wijmo-wijdialog-hasframe");
          innerFrame.attr("src", url);
          self.element.append(innerFrame);
          self.innerFrame = innerFrame;
        }
        self.contentWrapper = self.element;
      },
      _createCaptionButtons: function() {
        var captionButtons = [],
            self = this,
            o = self.options,
            i,
            buttons = {
              pin: {
                visible: true,
                click: self.pin,
                iconClassOn: "ui-icon-pin-w",
                iconClassOff: "ui-icon-pin-s"
              },
              refresh: {
                visible: true,
                click: self.refresh,
                iconClassOn: "ui-icon-refresh"
              },
              toggle: {
                visible: true,
                click: self.toggle,
                iconClassOn: "ui-icon-carat-1-n",
                iconClassOff: "ui-icon-carat-1-s"
              },
              minimize: {
                visible: true,
                click: self.minimize,
                iconClassOn: "ui-icon-minus"
              },
              maximize: {
                visible: true,
                click: self.maximize,
                iconClassOn: "ui-icon-extlink"
              },
              close: {
                visible: true,
                click: self.close,
                iconClassOn: "ui-icon-close"
              }
            },
            oCaptionButtons = o.captionButtons,
            uiDialogTitlebar = self.uiDialogTitlebar;
        $.extend(buttons, oCaptionButtons);
        uiDialogTitlebar.children(".ui-dialog-titlebar-close, .wijmo-wijdialog-captionbutton").remove();
        $.each(buttons, function(name, value) {
          captionButtons.push({
            button: name,
            info: value
          });
        });
        self._trigger("buttoncreating", null, captionButtons);
        for (i = 0; i < captionButtons.length; i++) {
          self._createCaptionButton(captionButtons[i], uiDialogTitlebar);
        }
      },
      _createCaptionButton: function(buttonHash, uiDialogTitlebar, notAppendToHeader) {
        var self = this,
            buttonObject,
            buttonCSS = "wijmo-wijdialog-titlebar-" + buttonHash.button,
            button = uiDialogTitlebar.children("." + buttonCSS),
            info = buttonHash.info,
            buttonIcon = $("<span></span>");
        if (info.visible) {
          if (button.size() === 0) {
            buttonIcon.addClass("ui-icon " + info.iconClassOn).text(buttonHash.button);
            buttonObject = $('<a href="#"></a>').append(buttonIcon).addClass(buttonCSS + " ui-corner-all wijmo-wijdialog-captionbutton").attr("role", "button").hover(function() {
              buttonObject.addClass(uiStateHover);
            }, function() {
              buttonObject.removeClass(uiStateHover);
            }).click(function(event) {
              if (buttonIcon.hasClass(info.iconClassOff)) {
                buttonIcon.removeClass(info.iconClassOff);
              } else {
                buttonIcon.addClass(info.iconClassOff);
              }
              if ($.isFunction(info.click)) {
                info.click.apply(self, arguments);
              }
              event.preventDefault();
              return false;
            });
            if (notAppendToHeader) {
              return buttonObject;
            } else {
              buttonObject.appendTo(uiDialogTitlebar);
            }
          }
          self[buttonHash.button + "Button"] = buttonObject;
        } else {
          button.remove();
        }
      },
      pin: function() {
        var uiDialog = this.uiDialog,
            drag = uiDialog.draggable("option", "disabled");
        uiDialog.draggable({disabled: !drag});
        if (!drag) {
          uiDialog.removeClass("ui-state-disabled");
        }
      },
      refresh: function() {
        var fr = this.innerFrame;
        if (fr !== undefined) {
          fr.attr("src", fr.attr("src"));
        }
      },
      toggle: function() {
        var self = this;
        if (self.collapsed === undefined || !self.collapsed) {
          self.collapsed = true;
          self._collapseDialogContent(true);
        } else {
          self.collapsed = false;
          self._expandDialogContent(true);
        }
      },
      _expandDialogContent: function(fireEvent) {
        var self = this,
            o = self.options,
            animationSetting = o.expandingAnimation;
        self.uiDialog.height("auto");
        if (fireEvent && animationSetting !== null) {
          self.contentWrapper.show(animationSetting.effect, animationSetting.options, animationSetting.speed, function(e) {
            self.uiDialog.css("height", self._toggleHeight);
            if ($.isFunction(animationSetting.callback)) {
              animationSetting.callback(e);
            }
            self._enableDisableResizer(false);
          });
        } else {
          self.contentWrapper.show();
          self._enableDisableResizer(false);
          self.uiDialog.css("height", self.toggleHeight);
        }
      },
      _collapseDialogContent: function(fireEvent) {
        var self = this,
            o = self.options,
            animationSetting = o.collapsingAnimation;
        self._enableDisableResizer(true);
        self._toggleHeight = self.uiDialog[0].style.height;
        self.uiDialog.height("auto");
        if (fireEvent && animationSetting !== null) {
          self.contentWrapper.hide(animationSetting.effect, animationSetting.options, animationSetting.speed);
        } else {
          self.contentWrapper.hide();
        }
      },
      _enableDisableResizer: function(disabled) {
        var dlg = this.uiDialog;
        dlg.resizable({disabled: disabled});
        if (disabled) {
          dlg.removeClass("ui-state-disabled");
        }
      },
      _enableDisableDragger: function(disabled) {
        var dlg = this.uiDialog;
        dlg.draggable({disabled: disabled});
        if (disabled) {
          dlg.removeClass("ui-state-disabled");
        }
      },
      minimize: function() {
        var self = this,
            dlg = self.uiDialog,
            o = self.options,
            miniZone = null,
            $from = $("<div></div>"),
            $to = $("<div></div>"),
            defaultZone,
            scrollTop,
            top;
        if (!self.minimized) {
          if (self.maximized) {
            self.maximized = false;
            self.restoreButton.remove();
            $(window).unbind(".onWinResize");
          } else {
            if (self.collapsed) {
              self._expandDialogContent(false);
            }
            self._saveNormalState();
          }
          self._enableDisableResizer(true);
          if (self.collapsed) {
            self._collapseDialogContent(false);
          }
          $from.appendTo(document.body).css({
            top: self.uiDialog.offset().top,
            left: self.uiDialog.offset().left,
            height: self.uiDialog.innerHeight(),
            width: self.uiDialog.innerWidth(),
            position: "absolute"
          });
          self.contentWrapper.hide();
          if (self.uiDialogButtonPane.length) {
            self.uiDialogButtonPane.hide();
          }
          dlg.height("auto");
          dlg.width("auto");
          self._doButtonAction(self.minimizeButton, "hide");
          self._restoreButton(true, self.minimizeButton, "After");
          self._doButtonAction(self.pinButton, "hide");
          self._doButtonAction(self.refreshButton, "hide");
          self._doButtonAction(self.toggleButton, "hide");
          self._doButtonAction(self.maximizeButton, "show");
          if ($.browser.webkit) {
            $(".wijmo-wijdialog-captionbutton").css("float", "left");
          }
          if (o.minimizeZoneElementId.length > 0) {
            miniZone = $("#" + o.minimizeZoneElementId);
          }
          if (miniZone !== null && miniZone.size() > 0) {
            miniZone.append(self.uiDialog);
          } else {
            defaultZone = $("." + zonCSS);
            if (defaultZone.size() === 0) {
              defaultZone = $('<div class="' + zonCSS + '"></div>');
              $(document.body).append(defaultZone);
            }
            defaultZone.append(self.uiDialog).css("z-index", dlg.css("z-index"));
          }
          self.uiDialog.css("position", "static");
          self.uiDialog.css("float", "left");
          if ($.browser.msie && $.browser.version === '6.0') {
            scrollTop = $(document).scrollTop();
            top = document.documentElement.clientHeight - defaultZone.height() + scrollTop;
            defaultZone.css({
              position: 'absolute',
              left: "0px",
              top: top
            });
          }
          $to.appendTo(document.body).css({
            top: self.uiDialog.offset().top,
            left: self.uiDialog.offset().left,
            height: self.uiDialog.innerHeight(),
            width: self.uiDialog.innerWidth(),
            position: "absolute"
          });
          self.uiDialog.hide();
          $from.effect("transfer", {
            to: $to,
            className: "ui-widget-content"
          }, 100, function() {
            $from.remove();
            $to.remove();
            self.uiDialog.show();
          });
          self.minimized = true;
        }
      },
      _doButtonAction: function(button, action) {
        if (button !== undefined) {
          button.removeClass(uiStateHover);
          button[action]();
        }
      },
      maximize: function() {
        var self = this,
            w = $(window);
        if (!self.maximized) {
          self.maximized = true;
          if (self.minimized) {
            self.restore();
          } else {
            if (self.collapsed) {
              self._expandDialogContent(false);
            }
            self._saveNormalState();
          }
          if (self.maximizeButton !== undefined) {
            self.maximizeButton.hide();
            self._restoreButton(true, self.maximizeButton, "Before");
          }
          if ($.browser.webkit) {
            $(".wijmo-wijdialog-captionbutton").css("float", "");
          }
          self._onWinResize(self, w);
          if (self.collapsed) {
            self._collapseDialogContent(false);
          }
          self._enableDisableDragger(true);
          self.uiDialog.resizable({disabled: true});
          self.uiDialog.removeClass("ui-state-disabled");
        }
      },
      _bindWindowResize: function() {
        var self = this,
            w = $(window),
            top,
            scrollTop,
            defaultZone;
        w.resize(function() {
          if (self.maximized) {
            self._onWinResize(self, w);
          }
        });
        if ($.browser.msie && $.browser.version === '6.0') {
          w.bind("scroll.wijdialog resize.wijdialog", function() {
            if (self.minimized) {
              scrollTop = $(document).scrollTop();
              defaultZone = self.uiDialog.parent();
              top = document.documentElement.clientHeight - defaultZone.height() + scrollTop;
              defaultZone.css({top: top});
            }
          });
        }
      },
      _saveNormalState: function() {
        var self = this,
            dialog = self.uiDialog,
            ele = self.element;
        self.normalWidth = dialog.css("width");
        self.normalLeft = dialog.css("left");
        self.normalTop = dialog.css("top");
        self.normalHeight = dialog.css("height");
        self.normalInnerHeight = ele.css("height");
        self.normalInnerWidth = ele.css("width");
        self.normalInnerMinWidth = ele.css("min-width");
        self.normalInnerMinHeight = ele.css("min-height");
      },
      _onWinResize: function(self, w) {
        self.uiDialog.css("top", w.scrollTop());
        self.uiDialog.css("left", w.scrollLeft());
        self.uiDialog.setOutWidth(w.width());
        self.uiDialog.setOutHeight(w.height());
        self._resizeDialog(self);
      },
      _restoreButton: function(show, button, position) {
        var self = this,
            buttonHash = {
              button: "restore",
              info: {
                visible: show,
                click: self.restore,
                iconClassOn: "ui-icon-newwin"
              }
            },
            restore = self._createCaptionButton(buttonHash, self.uiDialogTitlebar, true);
        if (show) {
          restore["insert" + position](button);
          self.restoreButton = restore;
        }
      },
      restore: function() {
        var self = this,
            dlg = self.uiDialog,
            $from = $("<div></div>"),
            $to = $("<div></div>");
        if (self.minimized) {
          self.minimized = false;
          $from.appendTo(document.body).css({
            top: self.uiDialog.offset().top,
            left: self.uiDialog.offset().left,
            height: self.uiDialog.innerHeight(),
            width: self.uiDialog.innerWidth(),
            position: "absolute"
          });
          dlg.css("position", "absolute");
          dlg.css("float", "");
          dlg.appendTo(document.body);
          self._enableDisableResizer(false);
          self._enableDisableDragger(false);
          self._restoreToNormal();
          self.contentWrapper.show();
          if (self.uiDialogButtonPane.length) {
            self.uiDialogButtonPane.show();
          }
          $to.appendTo(document.body).css({
            top: self.uiDialog.offset().top,
            left: self.uiDialog.offset().left,
            height: self.uiDialog.innerHeight(),
            width: self.uiDialog.innerWidth(),
            position: "absolute"
          });
          self.uiDialog.hide();
          $from.effect("transfer", {
            to: $to,
            className: "ui-widget-content"
          }, 150, function() {
            self.uiDialog.show();
            $from.remove();
            $to.remove();
          });
          if (self.collapsed) {
            self._collapseDialogContent();
          }
          self._doButtonAction(self.minimizeButton, "show");
          self._doButtonAction(self.restoreButton, "remove");
          self._doButtonAction(self.pinButton, "show");
          self._doButtonAction(self.refreshButton, "show");
          self._doButtonAction(self.toggleButton, "show");
          if ($.browser.webkit) {
            $(".wijmo-wijdialog-captionbutton").css("float", "");
          }
        } else if (self.maximized) {
          self.maximized = false;
          $(window).unbind(".onWinResize");
          if (self.collapsed) {
            self._expandDialogContent();
          }
          self._enableDisableResizer(false);
          self._enableDisableDragger(false);
          self._restoreToNormal();
          self.contentWrapper.show();
          if (self.collapsed) {
            self._collapseDialogContent();
          }
          if (self.maximizeButton !== undefined) {
            self.maximizeButton.show();
            self._restoreButton(false, self.maximizeButton, "before");
          }
        }
      },
      open: function() {
        var self = this;
        if (!self.minimized) {
          $.ui.dialog.prototype.open.apply(self, arguments);
          if (!self.maximized) {
            self._restoreToNormal();
          }
        } else {
          self.uiDialog.show();
        }
        if (self.collapsed) {
          self._collapseDialogContent();
        }
      },
      _resizeDialog: function(self) {
        self.options.width = self.uiDialog.width();
        self.options.height = self.uiDialog.height();
        self._size();
      },
      _restoreToNormal: function() {
        var self = this,
            dialog = self.uiDialog,
            ele = self.element;
        dialog.css("width", self.normalWidth);
        dialog.css("left", self.normalLeft);
        dialog.css("top", self.normalTop);
        dialog.css("height", self.normalHeight);
        ele.css("height", self.normalInnerHeight);
        ele.css("width", self.normalInnerWidth);
        ele.css("min-width", self.normalInnerMinWidth);
        ele.css("min-height", self.normalInnerMinHeight);
        self.options.width = self.uiDialog.width();
        self.options.height = self.uiDialog.height();
      }
    });
  }(jQuery));
});

_removeDefine();
})();
$__System.registerDynamic("5d", [], false, function(__require, __exports, __module) {
  var _retrieveGlobal = $__System.get("@@global-helpers").prepareGlobal(__module.id, null, null);
  (function() {
    (function($) {
      $.fn.extend({wijContent: function(url) {
          return this.each(function() {
            this.innerHTML = '<iframe frameborder="0" style="width: 100%; height: 100%;" src="' + url + '">"';
          });
        }});
      var naNTest = function(num) {
        return isNaN(num) ? 0 : num;
      };
      $.fn.leftBorderWidth = function() {
        var blw = parseFloat($(this).css("borderLeftWidth"));
        var pl = parseFloat($(this).css("padding-left"));
        var ml = 0;
        if ($(this).css("margin-left") != "auto") {
          ml = parseFloat($(this).css("margin-left"));
        }
        return naNTest(blw) + naNTest(pl) + naNTest(ml);
      };
      $.fn.rightBorderWidth = function() {
        var brw = parseFloat($(this).css("borderRightWidth"));
        var pr = parseFloat($(this).css("padding-right"));
        var mr = 0;
        if ($(this).css("margin-right") != "auto") {
          mr = parseFloat($(this).css("margin-right"));
        }
        return naNTest(brw) + naNTest(pr) + naNTest(mr);
      };
      $.fn.topBorderWidth = function() {
        var blw = parseFloat($(this).css("borderTopWidth"));
        var pl = parseFloat($(this).css("padding-top"));
        var ml = 0;
        if ($(this).css("margin-top") != "auto") {
          ml = parseFloat($(this).css("margin-top"));
        }
        return naNTest(blw) + naNTest(pl) + naNTest(ml);
      };
      $.fn.bottomBorderWidth = function() {
        var brw = parseFloat($(this).css("borderBottomWidth"));
        var pr = parseFloat($(this).css("padding-bottom"));
        var mr = 0;
        if ($(this).css("margin-bottom") != "auto") {
          mr = parseFloat($(this).css("margin-bottom"));
        }
        return naNTest(brw) + naNTest(pr) + naNTest(mr);
      };
      $.fn.borderSize = function() {
        var bw = $(this).leftBorderWidth() + $(this).rightBorderWidth();
        var bh = $(this).topBorderWidth() + $(this).bottomBorderWidth();
        var b = {
          width: bw,
          height: bh
        };
        return b;
      };
      $.fn.setOutWidth = function(width) {
        var bw = $(this).leftBorderWidth() + $(this).rightBorderWidth();
        $(this).width(width - bw);
        return this;
      };
      $.fn.setOutHeight = function(height) {
        var bh = $(this).topBorderWidth() + $(this).bottomBorderWidth();
        $(this).height(height - bh);
        return this;
      };
      $.fn.getWidget = function() {
        var widgetName = this.data("widgetName");
        if (widgetName && widgetName != "") {
          return this.data(widgetName);
        }
        return null;
      };
      var wijCharValidator = function() {};
      $.extend(wijCharValidator.prototype, {
        _UTFPunctuationsString: ' ! \" # % & \' ( ) * , - . / : ; ? @ [ \\ ] { } \u00a1 \u00ab \u00ad \u00b7 \u00bb \u00bf \u037e \u0387 \u055a \u055b \u055c \u055d \u055e \u055f \u0589 \u058a \u05be \u05c0 \u05c3 \u05f3 \u05f4 \u060c \u061b \u061f \u066a \u066b \u066c \u066d \u06d4 \u0700 \u0701 \u0702 \u0703 \u0704 \u0705 \u0706 \u0707 \u0708 \u0709 \u070a \u070b \u070c \u070d \u0964 \u0965 \u0970 \u0df4 \u0e4f \u0e5a \u0e5b \u0f04 \u0f05 \u0f06 \u0f07 \u0f08 \u0f09 \u0f0a \u0f0b \u0f0c \u0f0d \u0f0e \u0f0f \u0f10 \u0f11 \u0f12 \u0f3a \u0f3b \u0f3c \u0f3d \u0f85 \u104a \u104b \u104c \u104d \u104e \u104f \u10fb \u1361 \u1362 \u1363 \u1364 \u1365 \u1366 \u1367 \u1368 \u166d \u166e \u169b \u169c \u16eb \u16ec \u16ed \u17d4 \u17d5 \u17d6 \u17d7 \u17d8 \u17d9 \u17da \u17dc \u1800 \u1801 \u1802 \u1803 \u1804 \u1805 \u1806 \u1807 \u1808 \u1809 \u180a \u2010 \u2011 \u2012 \u2013 \u2014 \u2015 \u2016 \u2017 \u2018 \u2019 \u201a \u201b \u201c \u201d \u201e \u201f \u2020 \u2021 \u2022 \u2023 \u2024 \u2025 \u2026 \u2027 \u2030 \u2031 \u2032 \u2033 \u2034 \u2035 \u2036 \u2037 \u2038 \u2039 \u203a \u203b \u203c \u203d \u203e \u2041 \u2042 \u2043 \u2045 \u2046 \u2048 \u2049 \u204a \u204b \u204c \u204d \u207d \u207e \u208d \u208e \u2329 \u232a \u3001 \u3002 \u3003 \u3008 \u3009 \u300a \u300b \u300c \u300d \u300e \u300f \u3010 \u3011 \u3014 \u3015 \u3016 \u3017 \u3018 \u3019 \u301a \u301b \u301c \u301d \u301e \u301f \u3030 \ufd3e \ufd3f \ufe30 \ufe31 \ufe32 \ufe35 \ufe36 \ufe37 \ufe38 \ufe39 \ufe3a \ufe3b \ufe3c \ufe3d \ufe3e \ufe3f \ufe40 \ufe41 \ufe42 \ufe43 \ufe44 \ufe49 \ufe4a \ufe4b \ufe4c \ufe50 \ufe51 \ufe52 \ufe54 \ufe55 \ufe56 \ufe57 \ufe58 \ufe59 \ufe5a \ufe5b \ufe5c \ufe5d \ufe5e \ufe5f \ufe60 \ufe61 \ufe63 \ufe68 \ufe6a \ufe6b \uff01 \uff02 \uff03 \uff05 \uff06 \uff07 \uff08 \uff09 \uff0a \uff0c \uff0d \uff0e \uff0f \uff1a \uff1b \uff1f \uff20 \uff3b \uff3c \uff3d \uff5b \uff5d \uff61 \uff62 \uff63 \uff64\';this.UTFWhitespacesString_=\'\t \u000b \u000c \u001f   \u00a0 \u1680 \u2000 \u2001 \u2002 \u2003 \u2004 \u2005 \u2006 \u2007 \u2008 \u2009 \u200a \u200b \u2028 \u202f \u3000',
        isDigit: function(c) {
          return (c >= '0' && c <= '9');
        },
        isLetter: function(c) {
          return !!((c + '').match(new RegExp('[A-Za-z\u00aa\u00b5\u00ba\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u021f\u0222-\u0233\u0250-\u02ad\u02b0-\u02b8\u02bb-\u02c1\u02d0\u02d1\u02e0-\u02e4\u02ee\u037a\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03ce\u03d0-\u03d7\u03da-\u03f3\u0400-\u0481\u048c-\u04c4\u04c7\u04c8\u04cb\u04cc\u04d0-\u04f5\u04f8\u04f9\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0621-\u063a\u0640-\u064a\u0671-\u06d3\u06d5\u06e5\u06e6\u06fa-\u06fc\u0710\u0712-\u072c\u0780-\u07a5\u0905-\u0939\u093d\u0950\u0958-\u0961\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8b\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b36-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb5\u0bb7-\u0bb9\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cde\u0ce0\u0ce1\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d28\u0d2a-\u0d39\u0d60\u0d61\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc\u0edd\u0f00\u0f40-\u0f47\u0f49-\u0f6a\u0f88-\u0f8b\u1000-\u1021\u1023-\u1027\u1029\u102a\u1050-\u1055\u10a0-\u10c5\u10d0-\u10f6\u1100-\u1159\u115f-\u11a2\u11a8-\u11f9\u1200-\u1206\u1208-\u1246\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1286\u1288\u128a-\u128d\u1290-\u12ae\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12ce\u12d0-\u12d6\u12d8-\u12ee\u12f0-\u130e\u1310\u1312-\u1315\u1318-\u131e\u1320-\u1346\u1348-\u135a\u13a0-\u13f4\u1401-\u166c\u166f-\u1676\u1681-\u169a\u16a0-\u16ea\u1780-\u17b3\u1820-\u1877\u1880-\u18a8\u1e00-\u1e9b\u1ea0-\u1ef9\u1f00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u207f\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2131\u2133-\u2139\u3005\u3006\u3031-\u3035\u3041-\u3094\u309d\u309e\u30a1-\u30fa\u30fc-\u30fe\u3105-\u312c\u3131-\u318e\u31a0-\u31b7\u3400-\u4db5\u4e00-\u9fa5\ua000-\ua48c\uac00-\ud7a3\uf900-\ufa2d\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe72\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc]')));
        },
        isLetterOrDigit: function(c) {
          return this.isLetter(c) || this.isDigit(c);
        },
        isSymbol: function(c) {
          var re = new RegExp('[$+<->^`|~\u00a2-\u00a9\u00ac\u00ae-\u00b1\u00b4\u00b6\u00b8\u00d7\u00f7\u02b9\u02ba\u02c2-\u02cf\u02d2-\u02df\u02e5-\u02ed\u0374\u0375\u0384\u0385\u0482\u06e9\u06fd\u06fe\u09f2\u09f3\u09fa\u0b70\u0e3f\u0f01-\u0f03\u0f13-\u0f17\u0f1a-\u0f1f\u0f34\u0f36\u0f38\u0fbe-\u0fc5\u0fc7-\u0fcc\u0fcf\u17db\u1fbd\u1fbf-\u1fc1\u1fcd-\u1fcf\u1fdd-\u1fdf\u1fed-\u1fef\u1ffd\u1ffe\u2044\u207a-\u207c\u208a-\u208c\u20a0-\u20af\u2100\u2101\u2103-\u2106\u2108\u2109\u2114\u2116-\u2118\u211e-\u2123\u2125\u2127\u2129\u212e\u2132\u213a\u2190-\u21f3\u2200-\u22f1\u2300-\u2328\u232b-\u237b\u237d-\u239a\u2400-\u2426\u2440-\u244a\u249c-\u24e9\u2500-\u2595\u25a0-\u25f7\u2600-\u2613\u2619-\u2671\u2701-\u2704\u2706-\u2709\u270c-\u2727\u2729-\u274b\u274d\u274f-\u2752\u2756\u2758-\u275e\u2761-\u2767\u2794\u2798-\u27af\u27b1-\u27be\u2800-\u28ff\u2e80-\u2e99\u2e9b-\u2ef3\u2f00-\u2fd5\u2ff0-\u2ffb\u3004\u3012\u3013\u3020\u3036\u3037\u303e\u303f\u309b\u309c\u3190\u3191\u3196-\u319f\u3200-\u321c\u322a-\u3243\u3260-\u327b\u327f\u328a-\u32b0\u32c0-\u32cb\u32d0-\u32fe\u3300-\u3376\u337b-\u33dd\u33e0-\u33fe\ua490-\ua4a1\ua4a4-\ua4b3\ua4b5-\ua4c0\ua4c2-\ua4c4\ua4c6\ufb29\ufe62\ufe64-\ufe66\ufe69\uff04\uff0b\uff1c-\uff1e\uff3e\uff40\uff5c\uff5e\uffe0-\uffe6\uffe8-\uffee\ufffc\ufffd]');
          return re.test(c + '');
        },
        isPunctuation: function(c) {
          return this._UTFPunctuationsString.indexOf(c) >= 0;
        },
        isPrintableChar: function(c) {
          if ((!this.isLetterOrDigit(c) && !this.isPunctuation(c)) && !this.isSymbol(c)) {
            return (c === ' ');
          }
          return true;
        },
        isAscii: function(c) {
          return (c >= '!') && (c <= '~');
        },
        isAsciiLetter: function(c) {
          return ((c >= 'A') && (c <= 'Z')) || ((c >= 'a') && (c <= 'z'));
        },
        isUpper: function(c) {
          return c.toUpperCase() === c;
        },
        isLower: function(c) {
          return c.toLowerCase() === c;
        },
        isAlphanumeric: function(c) {
          return !this.isLetter(c) ? this.isDigit(c) : true;
        },
        isAciiAlphanumeric: function(c) {
          if (((c < '0') || (c > '9')) && ((c < 'A') || (c > 'Z'))) {
            if (c >= 'a') {
              return (c <= 'z');
            }
            return false;
          }
          return true;
        },
        setChar: function(input, ch, pos) {
          if (pos >= input.length || pos < 0) {
            return input;
          }
          return '' || input.substr(0, pos) + ch + input.substr(pos + 1);
        }
      });
      if (!$.wij) {
        $.extend({wij: {charValidator: new wijCharValidator()}});
      }
      ;
    })(jQuery);
    __wijReadOptionEvents = function(eventsArr, widgetInstance) {
      for (var k = 0; k < eventsArr.length; k++) {
        if (widgetInstance.options[eventsArr[k]] != null)
          widgetInstance.element.bind(eventsArr[k], widgetInstance.options[eventsArr[k]]);
      }
      for (k in widgetInstance.options) {
        if (k.indexOf(" ") != -1) {
          var arr = k.split(" ");
          for (var j = 0; j < arr.length; j++) {
            if (arr[j].length > 0)
              widgetInstance.element.bind(arr[j], widgetInstance.options[k]);
          }
        }
      }
    };
  })();
  return _retrieveGlobal();
});

$__System.registerDynamic("5c", [], false, function(__require, __exports, __module) {
  var _retrieveGlobal = $__System.get("@@global-helpers").prepareGlobal(__module.id, null, null);
  (function() {
    jQuery.migrateMute === void 0 && (jQuery.migrateMute = !0), function(e, t, n) {
      function r(n) {
        var r = t.console;
        i[n] || (i[n] = !0, e.migrateWarnings.push(n), r && r.warn && !e.migrateMute && (r.warn("JQMIGRATE: " + n), e.migrateTrace && r.trace && r.trace()));
      }
      function a(t, a, i, o) {
        if (Object.defineProperty)
          try {
            return Object.defineProperty(t, a, {
              configurable: !0,
              enumerable: !0,
              get: function() {
                return r(o), i;
              },
              set: function(e) {
                r(o), i = e;
              }
            }), n;
          } catch (s) {}
        e._definePropertyBroken = !0, t[a] = i;
      }
      var i = {};
      e.migrateWarnings = [], !e.migrateMute && t.console && t.console.log && t.console.log("JQMIGRATE: Logging is active"), e.migrateTrace === n && (e.migrateTrace = !0), e.migrateReset = function() {
        i = {}, e.migrateWarnings.length = 0;
      }, "BackCompat" === document.compatMode && r("jQuery is not compatible with Quirks Mode");
      var o = e("<input/>", {size: 1}).attr("size") && e.attrFn,
          s = e.attr,
          u = e.attrHooks.value && e.attrHooks.value.get || function() {
            return null;
          },
          c = e.attrHooks.value && e.attrHooks.value.set || function() {
            return n;
          },
          l = /^(?:input|button)$/i,
          d = /^[238]$/,
          p = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
          f = /^(?:checked|selected)$/i;
      a(e, "attrFn", o || {}, "jQuery.attrFn is deprecated"), e.attr = function(t, a, i, u) {
        var c = a.toLowerCase(),
            g = t && t.nodeType;
        return u && (4 > s.length && r("jQuery.fn.attr( props, pass ) is deprecated"), t && !d.test(g) && (o ? a in o : e.isFunction(e.fn[a]))) ? e(t)[a](i) : ("type" === a && i !== n && l.test(t.nodeName) && t.parentNode && r("Can't change the 'type' of an input or button in IE 6/7/8"), !e.attrHooks[c] && p.test(c) && (e.attrHooks[c] = {
          get: function(t, r) {
            var a,
                i = e.prop(t, r);
            return i === !0 || "boolean" != typeof i && (a = t.getAttributeNode(r)) && a.nodeValue !== !1 ? r.toLowerCase() : n;
          },
          set: function(t, n, r) {
            var a;
            return n === !1 ? e.removeAttr(t, r) : (a = e.propFix[r] || r, a in t && (t[a] = !0), t.setAttribute(r, r.toLowerCase())), r;
          }
        }, f.test(c) && r("jQuery.fn.attr('" + c + "') may use property instead of attribute")), s.call(e, t, a, i));
      }, e.attrHooks.value = {
        get: function(e, t) {
          var n = (e.nodeName || "").toLowerCase();
          return "button" === n ? u.apply(this, arguments) : ("input" !== n && "option" !== n && r("jQuery.fn.attr('value') no longer gets properties"), t in e ? e.value : null);
        },
        set: function(e, t) {
          var a = (e.nodeName || "").toLowerCase();
          return "button" === a ? c.apply(this, arguments) : ("input" !== a && "option" !== a && r("jQuery.fn.attr('value', val) no longer sets properties"), e.value = t, n);
        }
      };
      var g,
          h,
          v = e.fn.init,
          m = e.parseJSON,
          y = /^([^<]*)(<[\w\W]+>)([^>]*)$/;
      e.fn.init = function(t, n, a) {
        var i;
        return t && "string" == typeof t && !e.isPlainObject(n) && (i = y.exec(e.trim(t))) && i[0] && ("<" !== t.charAt(0) && r("$(html) HTML strings must start with '<' character"), i[3] && r("$(html) HTML text after last tag is ignored"), "#" === i[0].charAt(0) && (r("HTML string cannot start with a '#' character"), e.error("JQMIGRATE: Invalid selector string (XSS)")), n && n.context && (n = n.context), e.parseHTML) ? v.call(this, e.parseHTML(i[2], n, !0), n, a) : v.apply(this, arguments);
      }, e.fn.init.prototype = e.fn, e.parseJSON = function(e) {
        return e || null === e ? m.apply(this, arguments) : (r("jQuery.parseJSON requires a valid JSON string"), null);
      }, e.uaMatch = function(e) {
        e = e.toLowerCase();
        var t = /(chrome)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || 0 > e.indexOf("compatible") && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || [];
        return {
          browser: t[1] || "",
          version: t[2] || "0"
        };
      }, e.browser || (g = e.uaMatch(navigator.userAgent), h = {}, g.browser && (h[g.browser] = !0, h.version = g.version), h.chrome ? h.webkit = !0 : h.webkit && (h.safari = !0), e.browser = h), a(e, "browser", e.browser, "jQuery.browser is deprecated"), e.sub = function() {
        function t(e, n) {
          return new t.fn.init(e, n);
        }
        e.extend(!0, t, this), t.superclass = this, t.fn = t.prototype = this(), t.fn.constructor = t, t.sub = this.sub, t.fn.init = function(r, a) {
          return a && a instanceof e && !(a instanceof t) && (a = t(a)), e.fn.init.call(this, r, a, n);
        }, t.fn.init.prototype = t.fn;
        var n = t(document);
        return r("jQuery.sub() is deprecated"), t;
      }, e.ajaxSetup({converters: {"text json": e.parseJSON}});
      var b = e.fn.data;
      e.fn.data = function(t) {
        var a,
            i,
            o = this[0];
        return !o || "events" !== t || 1 !== arguments.length || (a = e.data(o, t), i = e._data(o, t), a !== n && a !== i || i === n) ? b.apply(this, arguments) : (r("Use of jQuery.fn.data('events') is deprecated"), i);
      };
      var j = /\/(java|ecma)script/i,
          w = e.fn.andSelf || e.fn.addBack;
      e.fn.andSelf = function() {
        return r("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()"), w.apply(this, arguments);
      }, e.clean || (e.clean = function(t, a, i, o) {
        a = a || document, a = !a.nodeType && a[0] || a, a = a.ownerDocument || a, r("jQuery.clean() is deprecated");
        var s,
            u,
            c,
            l,
            d = [];
        if (e.merge(d, e.buildFragment(t, a).childNodes), i)
          for (c = function(e) {
            return !e.type || j.test(e.type) ? o ? o.push(e.parentNode ? e.parentNode.removeChild(e) : e) : i.appendChild(e) : n;
          }, s = 0; null != (u = d[s]); s++)
            e.nodeName(u, "script") && c(u) || (i.appendChild(u), u.getElementsByTagName !== n && (l = e.grep(e.merge([], u.getElementsByTagName("script")), c), d.splice.apply(d, [s + 1, 0].concat(l)), s += l.length));
        return d;
      });
      var Q = e.event.add,
          x = e.event.remove,
          k = e.event.trigger,
          N = e.fn.toggle,
          T = e.fn.live,
          M = e.fn.die,
          S = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess",
          C = RegExp("\\b(?:" + S + ")\\b"),
          H = /(?:^|\s)hover(\.\S+|)\b/,
          A = function(t) {
            return "string" != typeof t || e.event.special.hover ? t : (H.test(t) && r("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'"), t && t.replace(H, "mouseenter$1 mouseleave$1"));
          };
      e.event.props && "attrChange" !== e.event.props[0] && e.event.props.unshift("attrChange", "attrName", "relatedNode", "srcElement"), e.event.dispatch && a(e.event, "handle", e.event.dispatch, "jQuery.event.handle is undocumented and deprecated"), e.event.add = function(e, t, n, a, i) {
        e !== document && C.test(t) && r("AJAX events should be attached to document: " + t), Q.call(this, e, A(t || ""), n, a, i);
      }, e.event.remove = function(e, t, n, r, a) {
        x.call(this, e, A(t) || "", n, r, a);
      }, e.fn.error = function() {
        var e = Array.prototype.slice.call(arguments, 0);
        return r("jQuery.fn.error() is deprecated"), e.splice(0, 0, "error"), arguments.length ? this.bind.apply(this, e) : (this.triggerHandler.apply(this, e), this);
      }, e.fn.toggle = function(t, n) {
        if (!e.isFunction(t) || !e.isFunction(n))
          return N.apply(this, arguments);
        r("jQuery.fn.toggle(handler, handler...) is deprecated");
        var a = arguments,
            i = t.guid || e.guid++,
            o = 0,
            s = function(n) {
              var r = (e._data(this, "lastToggle" + t.guid) || 0) % o;
              return e._data(this, "lastToggle" + t.guid, r + 1), n.preventDefault(), a[r].apply(this, arguments) || !1;
            };
        for (s.guid = i; a.length > o; )
          a[o++].guid = i;
        return this.click(s);
      }, e.fn.live = function(t, n, a) {
        return r("jQuery.fn.live() is deprecated"), T ? T.apply(this, arguments) : (e(this.context).on(t, this.selector, n, a), this);
      }, e.fn.die = function(t, n) {
        return r("jQuery.fn.die() is deprecated"), M ? M.apply(this, arguments) : (e(this.context).off(t, this.selector || "**", n), this);
      }, e.event.trigger = function(e, t, n, a) {
        return n || C.test(e) || r("Global events are undocumented and deprecated"), k.call(this, e, t, n || document, a);
      }, e.each(S.split("|"), function(t, n) {
        e.event.special[n] = {
          setup: function() {
            var t = this;
            return t !== document && (e.event.add(document, n + "." + e.guid, function() {
              e.event.trigger(n, null, t, !0);
            }), e._data(this, n, e.guid++)), !1;
          },
          teardown: function() {
            return this !== document && e.event.remove(document, n + "." + e._data(this, n)), !1;
          }
        };
      });
    }(jQuery, window);
  })();
  return _retrieveGlobal();
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("61", [], function() {
  return " <template is=\"dom-bind\" id=\"app\">\n  <paper-drawer-panel id=\"paperDrawerPanel\">\n      <!-- Drawer Scroll Header Panel -->\n      <paper-scroll-header-panel drawer fixed>\n\n        <!-- Drawer Toolbar -->\n        <paper-toolbar id=\"drawerToolbar\">\n          <span class=\"paper-font-title\"><div class=\"menu-logo animation-scale-fadein\"></div></span>\n        </paper-toolbar>\n\n        <menu-tabs></menu-tabs>\n\n        <!-- Drawer Content -->\n        <!-- <div id=\"scrollerMenu\" style=\"position: relative; margin-top: 50px; height: 100%;\"></div> -->\n   \n      </paper-scroll-header-panel>\n\n      <!-- Main Area -->\n      <paper-scroll-header-panel id=\"scrollheader\" main keep-condensed-header condenses>\n\n        <!-- Main Toolbar -->\n        <paper-toolbar id=\"mainToolbar\" class=\"tall\">\n          <paper-icon-button id=\"paperToggle\" icon=\"menu\" paper-drawer-toggle></paper-icon-button>\n          <span class=\"flex\"></span>\n\n          <!-- Toolbar icons -->\n          \n         <!--  <paper-icon-button icon=\"refresh\"></paper-icon-button>\n          <paper-icon-button icon=\"search\"></paper-icon-button> -->\n\n          <!-- Application name -->\n          <div class=\"middle middle-container center horizontal layout\">\n            <div id=\"currentPageTitle\" class=\"app-name\"></div>\n          </div>\n\n          <!-- Application sub title -->\n          <div class=\"bottom bottom-container center horizontal layout\">\n            <div class=\"bottom-title paper-font-subhead\">\n                <!-- <mat-tabs target=\"demoPages\">\n                  <mat-tab label=\"all\"></mat-tab>\n                  <mat-tab label=\"favorites\"></mat-tab>\n                  <mat-tab label=\"teste\"></mat-tab>\n                </mat-tabs> -->\n            </div>\n          </div>\n\n        </paper-toolbar>\n\n        \n\n\n        <!-- Main Content -->\n        <div id=\"content\" class=\"content\">\n\n\n          \n        </div> \n      \n        <div id=\"rightMenu\"> </div>\n\n        \n      </paper-scroll-header-panel>\n    </paper-drawer-panel>\n    \n    <paper-toast id=\"toastMessage\" text=\".\" style=\"z-index: 100000;\">\n      <span class=\"toast-hide-button\" role=\"button\" tabindex=\"0\" onclick=\"app.$.toast.hide()\">Ok</span>\n    </paper-toast>\n  </template>\n\n<!--\n<div id=\"mainPage\" class=\"expresso-layout mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header\">\n\n      <header class=\"expresso-header mdl-layout__header\">\n\n        <div id=\"mainHeader_menuButton\" class=\"mdl-layout__drawer-button\">\n          <i class=\"material-icons\">menu</i>\n        </div>\n         <div id=\"mainHeader_backButton\" class=\"menu_backButton\">\n          <button id=\"mainHeader_back_button\" class=\"mdl-button mdl-js-button mdl-button--icon\">\n           <i class=\"material-icons\">arrow_back</i>\n          </button>\n        </div> \n\n        <div id=\"pageMessage\"></div>\n        <div style=\"margin-left: -3px; margin-top: 50px; z-index: 5000;\" id=\"beta\" class=\"hidden\"></div>\n\n        <div id=\"mainHeader\" class=\"mdl-layout__header-row\">\n          <span id=\"currentPageTitle\" class=\"mdl-layout-title\"></span>\n          <div class=\"mdl-layout-spacer\"></div>\n          <div id=\"rightMenu\">\n\n          </div>\n        </div>\n        \n      </header>\n\n  \n  <div id=\"menu\" class=\"mdl-layout__drawer left expanded\">\n    <div id=\"scrollerMenu\">\n    </div>\n  </div>\n\n \n\n<!--   <main id=\"mainPageContent\" class=\"mdl-layout__content\">\n\n        <% if (Shared.userHasModule(\"chat\")) { %>\n        <div id=\"chatContactsWindow\" class=\"mdl-cell mdl-cell--hide-phone mdl-cell--hide-tablet\"><div id=\"chat_toggleRoster\" class=\"toggleRightDiv\"></div><div id=\"chatDesktop\"></div></div>\n        <% } %>\n\n        \n        <mat-pages id=\"demoPages\">\n          <mat-page background=\"light-blue\">Content</mat-page>\n          <mat-page background=\"orange\">First Page</mat-page>\n          <mat-page background=\"green\">Third page</mat-page>\n        </mat-pages>  -->\n\n\n\n    <!-- <div id=\"pageContent\" class=\"page-content mdl-cell mdl-grid\">\n\n<mat-header-panel background=\"white\" mode=\"fixed\">\n        <mat-header inset>\n            <div extended>Caixa de entrada</div>\n        </mat-header>\n          <mat-content id=\"content\" inset>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus dignissim vestibulum purus vel pulvinar. Donec cursus malesuada sem eget placerat. Maecenas et lobortis ex. Proin tincidunt, nunc at euismod condimentum, justo est ultrices arcu, non interdum mi sem eget velit. Morbi laoreet, nibh at luctus ornare, enim risus tincidunt sapien, ac hendrerit purus ipsum sed justo. Etiam sagittis dolor neque, vitae congue purus ornare eget. Aenean non enim ex. Sed porta dignissim efficitur. Nullam sagittis justo turpis, dapibus volutpat nulla luctus non. Suspendisse nec sagittis mauris. Suspendisse ut velit quis elit dapibus viverra. Duis eget orci eros. Vivamus scelerisque blandit magna at auctor.</mat-content>\n      </mat-header-panel>\n\n        <div id=\"content\" class=\" mdl-cell mdl-cell--12-col <% if (!Shared.forceSmartPhoneResolution) { %>mdl-cell--5-col-tablet mdl-cell--5-col-desktop<% } else { %>mdl-cell--12-col-tablet mdl-cell--12-col-desktop<% } %> mdl-card mdl-shadow--2dp\">\n        \n        </div>\n        <div id=\"contentDetail\" class=\" mdl-cell mdl-cell--12-col  mdl-card mdl-shadow--2dp mdl-cell--hide-phone <% if (Shared.forceSmartPhoneResolution) { %>mdl-cell--hide-tablet mdl-cell--hide-desktop<% } else { %>mdl-cell--7-col-tablet mdl-cell--7-col-desktop<% } %>\">\n          \n        </div>\n    </div> -->\n<!--     \n  </main> \n  <paper-toast id=\"toastMessage\" text=\".\" style=\"z-index: 100000;\"></paper-toast>\n</div>\n-->";
});

_removeDefine();
})();
$__System.register("62", ["6", "7", "8"], function($__export) {
  "use strict";
  var __moduleName = "62";
  var _,
      Backbone,
      Shared,
      MenuItemModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }],
    execute: function() {
      MenuItemModel = Backbone.Model.extend({
        defaults: {
          menuTitle: "",
          menuRoute: "",
          menuClass: "",
          menuIconClass: "",
          menuHasBadge: false
        },
        initialize: function() {}
      });
      $__export('default', MenuItemModel);
    }
  };
});

$__System.register("63", ["6", "7", "8", "62"], function($__export) {
  "use strict";
  var __moduleName = "63";
  var _,
      Backbone,
      Shared,
      MenuItemModel,
      MenuItemsCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      MenuItemModel = $__m.default;
    }],
    execute: function() {
      MenuItemsCollection = Backbone.Collection.extend({
        model: MenuItemModel,
        _data: {},
        initialize: function(models, options) {},
        getInboxMenuItem: function() {
          var menuItem = {
            menuTitle: "Caixa de Entrada",
            menuRoute: "/Mail/Messages/1/0/INBOX#",
            menuClass: "inbox",
            menuIconClass: "icon-email",
            menuHasBadge: true
          };
          var model = new MenuItemModel(menuItem);
          return model;
        },
        getCalendarMenuItem: function() {
          var menuItem = {
            menuTitle: "Agenda",
            menuRoute: "/Calendar",
            menuClass: "calendar",
            menuIconClass: "icon-agenda"
          };
          var model = new MenuItemModel(menuItem);
          return model;
        },
        getContactsMenuItem: function() {
          var menuItem = {
            menuTitle: "Contatos",
            menuRoute: "/Contacts/Personal",
            menuClass: "contacts",
            menuIconClass: "icon-contacts"
          };
          var model = new MenuItemModel(menuItem);
          return model;
        },
        getChatMenuItem: function() {
          var menuItem = {
            menuTitle: "Chat",
            menuRoute: "/Chat",
            menuClass: "chat",
            menuIconClass: "icon-jabber",
            menuHasBadge: true
          };
          var model = new MenuItemModel(menuItem);
          return model;
        },
        getSettingsMenuItem: function() {
          var menuItem = {
            menuTitle: "Prefer&ecirc;ncias",
            menuRoute: "/Settings",
            menuClass: "settings",
            menuIconClass: "icon-settings"
          };
          var model = new MenuItemModel(menuItem);
          return model;
        },
        getLogoutMenuItem: function() {
          var menuItem = {
            menuTitle: "Sair",
            menuRoute: "/Logout",
            menuClass: "logout",
            menuIconClass: "icon-logout"
          };
          var model = new MenuItemModel(menuItem);
          return model;
        },
        getMenuItems: function(modules) {
          if (Shared.userHasModule("mail")) {
            this.add(this.getInboxMenuItem());
          }
          if (Shared.userHasModule("calendar")) {
            this.add(this.getCalendarMenuItem());
          }
          if (Shared.userHasModule("catalog")) {
            this.add(this.getContactsMenuItem());
          }
          if (Shared.userHasModule("chat")) {
            if (!Shared.isDesktop()) {
              this.add(this.getChatMenuItem());
            }
          }
          if (Shared.userHasModule("settings")) {
            this.add(this.getSettingsMenuItem());
          }
          this.add(this.getLogoutMenuItem());
          return this.models;
        }
      });
      $__export('default', MenuItemsCollection);
    }
  };
});

$__System.register("64", ["5", "6", "7", "8", "34"], function($__export) {
  "use strict";
  var __moduleName = "64";
  var $,
      _,
      Backbone,
      Shared,
      Material,
      SearchView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }],
    execute: function() {
      SearchView = Backbone.View.extend({
        tagName: 'material-search',
        initialize: function() {
          if ((Shared.previousSearches == undefined) || (Shared.previousSearches == null)) {
            Shared.previousSearches = [];
          }
        },
        attributes: {
          "active": true,
          "narrow": true,
          "loading": false,
          "search-value": ""
        },
        events: {'search-change': "_doSearch"},
        resize: function() {
          this.el.resize();
        },
        _doSearch: function(event) {
          var searchView = event.currentTarget;
          var searchValue = searchView.get("searchValue");
          console.log("search-changed:" + searchValue);
          Shared.previousSearches.push(searchValue);
          var searches = Shared.previousSearches;
          console.log(searches);
          searchView.set("previousSearches", searches);
          console.log(event.currentTarget);
        },
        render: function() {
          $("#mainPage").prepend(this.$el);
        }
      });
      $__export('default', SearchView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("65", [], function() {
  return "<!-- <div class=\"mdl-layout-spacer\"></div>\n<label id=\"searchButton\" class=\"mdl-button mdl-js-button mdl-button--icon\">\n  <i class=\"material-icons\">search</i>\n</label>\n\n\t<% var menuItemsSecondary = _.filter(menuItems, function (item) { return item.get('primary') == false; }); %>\n\t<% if (typeof(menuItems) != 'undefined' && menuItemsSecondary.length > 0) { %>\n\t<button id=\"expressoContextMenu\"\n\t        class=\"mdl-button mdl-js-button mdl-button--icon\">\n\t  \t\t<i class=\"material-icons\">more_vert</i>\n\t\t</button>\n   <% } %>\n\n<ul id=\"contextMenuItems\" class=\"mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect\" for=\"expressoContextMenu\">\n    <% _.each(menuItems, function(menuItem){ %>\n\t\t<% if (!menuItem.get(\"primary\")) { %>\n\t\t\t<li class=\"mdl-menu__item\"><a id=\"<%=menuItem.get(\"id\")%>\" href=\"<%=menuItem.get(\"route\")%>\" <% if (menuItem.get('action') != undefined) { %>data-action=\"<%= menuItem.get('action') %>\"<% } %> title=\"<%=menuItem.get(\"title\")%>\"><%=menuItem.get(\"title\")%></a></li>\n\t\t<% } %>\n\t<% }); %>\n</ul> \n-->\n<% if (menuItems.length > 1) { %>\n<paper-fab-speed-dial id=\"contextMenuItems\" class=\"animation-scale-fadein\">\n  <% _.each(menuItems, function(menuItem){ %>\n  \t<paper-fab-speed-dial-action icon=\"icons:create\" href=\"<%=menuItem.get(\"route\")%>\" <% if (menuItem.get('action') != undefined) { %>data-action=\"<%= menuItem.get('action') %>\"<% } %>><%=menuItem.get(\"title\")%></paper-fab-speed-dial-action>\n  <% }); %>\n</paper-fab-speed-dial>\n<% } else { %>\n<div class=\"expresso-fab-button animation-scale-fadein\">\n\t<button id=\"btn-primary-action\" class=\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\">\n\t  <i class=\"material-icons\">create</i>\n\t</button>\n</div>\n<% } %>\n\n<!-- \n -->\n<!-- <div id=\"primaryButtonAction\">\n\t<button id=\"btn-primary-action\" class=\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\">\n\t  <i class=\"material-icons\">send</i>\n\t</button>\n</div> -->\n\n\n<!--\n<ul id=\"menuBarItems\" class=\"right topButtons\">\n<% if (Shared.isDesktop()) { %>\n\t<% _.each(menuItems, function(menuItem){ %>\n\t\t<% if (!menuItem.get(\"primary\")) { %>\n\t\t\t<li class=\"secondary\" style=\"\">\n\t\t\t\t<a id=\"<%=menuItem.get(\"id\")%>\" href=\"<%=menuItem.get(\"route\")%>\" <% if (menuItem.get('action') != undefined) { %>data-action=\"<%= menuItem.get('action') %>\"<% } %> title=\"<%=menuItem.get(\"title\")%>\"><div class=\"context-icon <%=menuItem.get(\"iconClass\")%>\"></div></a>\n\t\t\t</li>\n\t\t<% } %>\n\t<% }); %>\n<% } %>\n  <li>\n    <input id=\"btn-primary-action\" type=\"button\" value=\"\" class=\"hidden\" style=\"\"> \n  </li>\n  <% var menuItemsSecondary = _.filter(menuItems, function (item) { return item.get('primary') == false; }); %>\n  <% if (!Shared.isDesktop()) { %>\n\t  <% if (typeof(menuItems) != 'undefined' && menuItemsSecondary.length > 0) { %>\n\t\t  <li><a id=\"contextMenuButton\" href=\"#\" class=\"contextMenu\">Menu de contexto</a></li>\n\t  <% } %>\n  <% } %>\n\n  \n  \n</ul>\n<% if (!Shared.isDesktop()) { %>\n\n<div id=\"contextMenu\">\n\t\n\t<ul>\n\t\t<% _.each(menuItems, function(menuItem){ %>\n\t\t\t<% if (!menuItem.get(\"primary\")) { %>\n\t\t\t\t<li><a id=\"<%=menuItem.get(\"id\")%>\" href=\"<%=menuItem.get(\"route\")%>\" <% if (menuItem.get('action') != undefined) { %>data-action=\"<%= menuItem.get('action') %>\"<% } %> title=\"<%=menuItem.get(\"title\")%>\"><div class=\"context-icon <%=menuItem.get(\"iconClass\")%>\"></div><%=menuItem.get(\"title\")%></a></li>\n\t\t\t<% } %>\n\t\t<% }); %>\n\t</ul> \n</div>\n<% } %>\n-->\n";
});

_removeDefine();
})();
$__System.register("66", ["5", "6", "7", "8", "65", "29", "34", "64"], function($__export) {
  "use strict";
  var __moduleName = "66";
  var $,
      _,
      Backbone,
      Shared,
      contextMenuTemplate,
      ContextMenuCollection,
      Material,
      SearchView,
      ContextMenuView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      contextMenuTemplate = $__m.default;
    }, function($__m) {
      ContextMenuCollection = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }, function($__m) {
      SearchView = $__m.default;
    }],
    execute: function() {
      ContextMenuView = Backbone.View.extend({
        menuOpen: false,
        profile: null,
        collection: null,
        primaryAction: '',
        callBack: '',
        parentCallBack: '',
        render: function() {
          if (this.collection == null) {
            this.collection = new ContextMenuCollection();
          }
          var data = {
            menuItems: this.collection.models,
            _: _,
            Shared: Shared
          };
          var htmlTemplate = _.template(contextMenuTemplate);
          var htmlWithData = htmlTemplate(data);
          $('#contextMenuButton').addClass('contextMenu');
          this.$el.html(htmlWithData);
          $("#rightMenu").empty().append(this.$el);
          this.setPrimaryAction();
          if (this.collection.models.length == 0) {
            this.hideMenu();
          }
          if (($("#chatContactsWindow").width() == 0) || ($("#chatContactsWindow").width() == undefined)) {
            $(".expresso-fab-button").animate({right: "16px"}, 200);
          } else {
            $(".expresso-fab-button").animate({right: "266px"}, 200);
          }
          window.componentHandler.upgradeDom();
        },
        clickMainAppPageContent: function(e) {
          if (!$('#contextMenu').hasClass("hidden")) {
            if (!Shared.contextMenulastHasHiddenClass) {
              $('#contextMenu').addClass("hidden");
            }
          }
          Shared.contextMenulastHasHiddenClass = $('#contextMenu').hasClass("hidden");
        },
        initialize: function(options) {
          $(window).off("click");
          $(window).on("click", this.clickMainAppPageContent);
          Shared.lastHasClass = true;
        },
        events: {
          "click #contextMenuButton": "toggleMenu",
          "click #btn-primary-action": "routeToPrimaryAction",
          "click #contextMenu ul li a": "selectContextMenuItem",
          "click #contextMenuItems li a": "selectContextMenuItem",
          "click #searchButton": "showSearchView"
        },
        showSearchView: function() {
          var searchView = new SearchView();
          searchView.render();
        },
        selectContextMenuItem: function(e) {
          e.preventDefault();
          var href = e.currentTarget.getAttribute("href");
          var id = e.currentTarget.getAttribute("id");
          if (href != '#') {
            Shared.router.navigate(href, {trigger: true});
          } else {
            var context = this.collection.getActionById(id);
            this.callBack = context.get("callBack");
            this.parentCallBack = context.get("parentCallBack");
            this.callBack(this.parentCallBack);
          }
          this.toggleMenu();
        },
        routeToPrimaryAction: function(e) {
          e.preventDefault();
          this.closeMenu();
          if (this.primaryAction != '#') {
            Shared.router.navigate(this.primaryAction, {trigger: true});
          } else {
            var primary = this.collection.getPrimaryAction();
            this.callBack(this.parentCallBack);
          }
        },
        setPrimaryAction: function() {
          var primary = this.collection.getPrimaryAction();
          if (primary) {
            this.primaryAction = primary.get("route");
            this.callBack = primary.get("callBack");
            this.parentCallBack = primary.get("parentCallBack");
            $("#btn-primary-action").removeClass("hidden");
            if (primary.get("iconClass") != '') {} else {}
          } else {
            $("#btn-primary-action").addClass("hidden");
          }
        },
        hideMenu: function() {
          $("#contextMenuButton").removeClass("contextMenu");
          $("#contextMenu").html("");
        },
        toggleMenu: function(e) {
          if (e != undefined) {
            e.preventDefault();
          }
          if (!$('#contextMenu').hasClass("hidden")) {
            this.closeMenu();
          } else {
            this.openMenu();
          }
        },
        openMenu: function() {
          this.menuOpen = true;
          $('#contextMenu').removeClass('hidden');
        },
        closeMenu: function() {
          this.menuOpen = false;
          $('#contextMenu').addClass('hidden');
        }
      });
      $__export('default', ContextMenuView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("67", [], function() {
  return "\n\n\n  <div class=\"expresso-drawer mdl-layout__drawer mdl-color--blue-grey-900 mdl-color-text--blue-grey-50 is-visible\">\n    <header class=\"expresso-drawer-header\">\n      <a class=\"menuLink\" href=\"/Settings\">\n        <button class=\"mdl-button mdl-js-button expresso-settings-button\">\n          <i class=\"material-icons\">settings</i>\n        </button>\n      </a>\n      <!-- <div class=\"menu-settings\" style=\"float: right;\"><i class=\"material-icons\">settings</i></div> -->\n      <img id=\"userPicture\" class=\"userPicture expresso-avatar\">\n      \n      <div class=\"expresso-avatar-dropdown\">\n        <span><% if (!_.isNull(user.contactFullName)) { %><%=user.contactFullName%><% } %><br><% if (!_.isNull(user.contactMails[0])) { %><%=user.contactMails[0]%><% } %></span>\n        \n        <div class=\"mdl-layout-spacer\"></div>\n        <button id=\"accbtn\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\">\n          <i class=\"material-icons\" role=\"presentation\">arrow_drop_down</i>\n          <span class=\"visuallyhidden\">Contas</span>\n        </button>\n        <ul class=\"mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect\" for=\"accbtn\">\n          <% if (Shared.automaticLoginAccounts.accounts.length >= 2) { %>\n            <% _.each(Shared.automaticLoginAccounts.accounts, function(account){ %>\n            <% if (Shared.forceAutomaticLoginInAccountName != account.accountName) { %>\n              <li class=\"mdl-menu__item\"><a class=\"menuLink\" href=\"/Switch/<%=account.accountName%>\"><%=account.accountName%></a></li>\n            <% } %>\n            <% }); %>\n          <% } %>\n          <% if (Shared.isBuiltInExpresso()) { %>\n          <!-- <li class=\"mdl-menu__item\"><a class=\"menuLink\" href=\"/Settings\"><i class=\"material-icons\">settings</i>Prefer&ecirc;ncias</a></li> -->\n          <% } %>\n          <li class=\"mdl-menu__item\"><a class=\"menuLink\" href=\"/Logout\"><i class=\"material-icons\">exit_to_app</i>Sair</a></li>\n        </ul>\n      </div>\n      <div class=\"expresso-progressbar\">\n        <span>\n          <br>\n          <div id=\"progress_bar_quota\" class=\"mdl-progress mdl-js-progress\" style=\"width: 150px;\"></div>\n          <div id=\"progress_bar_quota_text\" class=\"mdl-tooltip mdl-tooltip--large\" for=\"progress_bar_quota\">\n            \n          </div>\n         </span>\n      </div>\n    </header>\n    <nav class=\"expresso-navigation mdl-navigation mdl-color--white mdl-color-text--blue-grey-400\">\n      <button href=\"/Mail/Message/New\" id=\"btn-new-message\" class=\"mdl-button menuLink mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\" style=\"margin: 10px; margin-top: 0px;\">\n             <i class=\"material-icons\" role=\"presentation\">create</i>ESCREVER\n      </button>\n      <% if (!Shared.isBuiltInExpresso()) { %>\n        <a class=\"mdl-navigation__link menuLink\" href=\"/Mail/Messages/1/0/INBOX#\"><i class=\"mdl-color-text--blue-grey-400 material-icons\" role=\"presentation\">inbox</i>Caixa de Entrada</a>\n        <a class=\"mdl-navigation__link menuLink\" href=\"/Calendar\"><i class=\"mdl-color-text--blue-grey-400 material-icons\" role=\"presentation\">event</i>Agenda</a>\n        <a class=\"mdl-navigation__link menuLink\" href=\"/Contacts/Personal\"><i class=\"mdl-color-text--blue-grey-400 material-icons\" role=\"presentation\">people</i>Contatos</a>\n        \n          <a class=\"mdl-navigation__link menuLink mdl-cell--hide-desktop <% if (Shared.isDesktop()) { %> mdl-cell--hide-tablet  mdl-cell--hide-phone  <% } %>\" href=\"/Chat\"><i class=\"mdl-color-text--blue-grey-400 material-icons\" role=\"presentation\">forum</i>Chat</a>\n        <!-- <a class=\"mdl-navigation__link menuLink\" href=\"/Settings\"><i class=\"mdl-color-text--blue-grey-400 material-icons \" role=\"presentation\">settings</i>Prefer&ecirc;ncias</a> -->\n      <% } %>\n      <dl>\n\n        <% if (Shared.userHasModule(\"mail\")) { %>\n        <div class=\"expresso-myfolders-dropdown\">\n            <span>Minhas Pastas</span>\n            <div class=\"mdl-layout-spacer\"></div>\n            <div style=\"float: right; margin-right: 10px; \">\n              <button id=\"accbtn_folders\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\" style=\"\">\n                <i class=\"material-icons\" role=\"presentation\">arrow_drop_down</i>\n                <span class=\"visuallyhidden\">Contas</span>\n              </button>\n            </div>\n            <ul class=\"mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect\" for=\"accbtn_folders\">\n              <li class=\"mdl-menu__item\"><a class=\"menuLink\" href=\"/Mail/AddFolder/INBOX#\"><i class=\"material-icons\">add</i>Adicionar Pasta</a></li>\n            </ul>\n        </div>\n        <!-- <dd> -->\n          <nav id=\"myFolders\" class=\"expresso-navigation mdl-navigation mdl-color--white mdl-color-text--blue-grey-400\">\n            \n          </nav>\n        <!-- </dd> -->\n        \n        <% } %>\n        \n      </dl>\n      <% if (Shared.isBuiltInExpresso()) { %>\n        <div class=\"mdl-layout-spacer\"></div>\n        <a class=\"mdl-navigation__link menuLink\" href=\"/Settings\"><i class=\"mdl-color-text--blue-grey-400 material-icons\" role=\"presentation\">settings</i><span class=\"visuallyhidden\">Prefer&ecirc;ncias</span>Prefer&ecirc;ncias</a>\n      <% } %>\n    </nav>\n<!-- \n    <div class=\"menu-footer\">\n      <% if (!Shared.isDesktop()) { %>\n      Desenvolvido por:<br><br>\n      <div class=\"company-logo\"></div>\n      <% } %>\n    </div> -->\n\n</div>\n\n\n     \n    \n    \n";
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("68", [], function() {
  return "<% _.each(folders, function(folder){ %>\n\t<% \n\n\tfolderIcon = \"folder\";\n\tif (folder.get(\"folderType\") == 0) { folderIcon = \"inbox\"; }\n\tif (folder.get(\"folderType\") == 4) { folderIcon = \"drafts\"; }\n\tif (folder.get(\"folderType\") == 1) { folderIcon = \"send\"; }\n\tif (folder.get(\"folderType\") == 2) { folderIcon = \"archive\"; }\n\tif (folder.get(\"folderType\") == 3) { folderIcon = \"delete\"; }\n\tif (folder.get(\"folderType\") == 5) { folderIcon = \"folder\"; }\n\tif (folder.get(\"folderType\") == 6) { folderIcon = \"folder_shared\"; }\n\n\t%>\n\t<% if (((folder.get(\"folderParentID\") == \"\") || (folder.get(\"folderParentID\") == \"user\")) ) { %>\n\t<a class=\"mdl-navigation__link listFolderMenuItemLink\" href=\"<%=folder.route()%>\"><i class=\"mdl-color-text--blue-grey-400 material-icons\" role=\"presentation\"><%=folderIcon%></i>\n\t\t<% if (folder.get(\"folderHasChildren\") == 1) { %><i class=\"mdl-color-text--blue-grey-400 material-icons folder-with-subfolders\" role=\"presentation\">navigate_next</i><% } %>\n\t\t<span class=\"material-label <% if (folder.get(\"qtdUnreadMessages\") != 0) { %>mdl-badge<% } %>\" data-badge=\"<%=folder.get(\"qtdUnreadMessages\")%>\"><%=folder.get(\"folderName\")%>\t\t\t\n\t\t</span>\n\t</a>\n\n\t<% } %> \n<% }); %>\n<!-- \n<% _.each(folders, function(folder){ %>\n\t<% if ((folder.get(\"folderParentID\") == \"\") || (folder.get(\"folderParentID\") == \"user\")) { %>\n\t<li>\n\t\t<a href=\"<%=folder.route()%>\" name=\"<%=folder.route()%>\" class=\"listFolderMenuItemLink\">\n\t\t\t<span class=\"material-label <% if (folder.get(\"qtdUnreadMessages\") != 0) { %>mdl-badge<% } %>\" data-badge=\"<%=folder.get(\"qtdUnreadMessages\")%>\"><%=folder.get(\"folderName\")%><% if (folder.get(\"folderHasChildren\") == 1) { %><strong class=\"badge badge-subfolders\"> > </strong><% } %></span>\n\n\t\t<% if (folder.get(\"folderType\") == 0) { %>\n\t\t\t<div class=\"icon folder-inbox\"></div>\n\t\t<% } %>\n\t\t<% if (folder.get(\"folderType\") == 4) { %>\n\t\t\t<div class=\"icon folder-drafts\"></div>\n\t\t<% } %>\n\t\t<% if (folder.get(\"folderType\") == 1) { %>\n\t\t\t<div class=\"icon folder-sent\"></div>\n\t\t<% } %>\n\t\t<% if (folder.get(\"folderType\") == 2) { %>\n\t\t\t<div class=\"icon folder-spam\"></div>\n\t\t<% } %>\n\t\t<% if (folder.get(\"folderType\") == 3) { %>\n\t\t\t<% if (folder.get(\"qtdMessages\") == \"0\") { %>\n\t\t\t\t<div class=\"icon folder-trash\"></div>\n\t\t\t<% } else { %>\n\t\t\t\t<div class=\"icon folder-trash-full\"></div>\n\t\t\t<% } %>\n\t\t<% } %>\n\t\t<% if (folder.get(\"folderType\") == 5) { %>\n\t\t\t<div class=\"icon folder-blue\"></div>\n\t\t<% } %>\n\t\t<% if (folder.get(\"folderType\") == 6) { %>\n\t\t\t<div class=\"icon folder-shared\"></div>\n\t\t<% } %>\n\t\t\n\t\t</a>\n\t</li>\n\t<% } %> \n<% }); %> -->";
});

_removeDefine();
})();
$__System.register("69", ["5", "6", "7", "8", "46", "68", "a"], function($__export) {
  "use strict";
  var __moduleName = "69";
  var $,
      _,
      Backbone,
      Shared,
      FoldersCollection,
      foldersMenuListTemplate,
      LoadingView,
      FoldersMenuListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      FoldersCollection = $__m.default;
    }, function($__m) {
      foldersMenuListTemplate = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }],
    execute: function() {
      FoldersMenuListView = Backbone.View.extend({
        folderID: "INBOX",
        search: "",
        render: function() {
          this.getFolders(this.folderID, this.search);
        },
        events: {"click .listFolderMenuItemLink": "selectFolderMenuItem"},
        selectFolderMenuItem: function(e) {
          e.preventDefault();
          $('#myFolders li').each(function() {
            if ($(this).hasClass('selected')) {
              $(this).removeClass('selected');
            }
          });
          var parent = $(e.target).parent();
          if (parent.hasClass("listFolderMenuItemLink")) {
            parent = parent.parent();
          }
          parent.addClass("selected");
          Shared.router.navigate(e.currentTarget.getAttribute("href"), {trigger: true});
        },
        getFolders: function(folderIDValue, searchValue) {
          var that = this;
          var collection = new FoldersCollection();
          collection.getFolders(folderIDValue, searchValue).done(function(data) {
            that.collection = data.models;
            var data = {
              folders: data.models,
              _: _
            };
            var htmlTemplate = _.template(foldersMenuListTemplate);
            var htmlWithData = htmlTemplate(data);
            that.$el.html(htmlWithData);
            $("#myFolders").empty().append(that.$el);
            Shared.menuView.setQuota(data.diskSizeUsed, data.diskSizeLimit);
            Shared.scrollerRefresh();
          }).fail(function(error) {
            Shared.handleErrors(error);
          }).execute();
        }
      });
      $__export('default', FoldersMenuListView);
    }
  };
});

$__System.register("6a", ["5", "6", "7", "8", "69", "67", "66", "29", "63", "34"], function($__export) {
  "use strict";
  var __moduleName = "6a";
  var $,
      _,
      Backbone,
      Shared,
      FoldersMenuListView,
      menuTemplate,
      ContextMenuView,
      ContextMenuCollection,
      MenuItemsCollection,
      Material,
      MenuView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      FoldersMenuListView = $__m.default;
    }, function($__m) {
      menuTemplate = $__m.default;
    }, function($__m) {
      ContextMenuView = $__m.default;
    }, function($__m) {
      ContextMenuCollection = $__m.default;
    }, function($__m) {
      MenuItemsCollection = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }],
    execute: function() {
      MenuView = Backbone.View.extend({
        el: $("#scrollerMenu"),
        profile: null,
        context: null,
        folderMenuLV: null,
        initialize: function() {
          this.context = new ContextMenuView();
          this.enableBackButton(false);
        },
        render: function() {
          $(window).resize(this.refreshWindow);
          var that = this;
          Shared.api.getLocalStorageValue("expresso", function(expressoValue) {
            if (expressoValue != null) {
              var authValue = expressoValue.auth;
              if (authValue != null) {
                Shared.api.auth(authValue);
              }
              Shared.profile = expressoValue.profile;
              that.profile = Shared.profile;
            }
            var menuItemsCollection = new MenuItemsCollection();
            var itemsMenu = menuItemsCollection.getMenuItems(Shared.profile.contactApps);
            var data = {
              user: that.profile,
              menuItems: itemsMenu,
              _: _,
              Shared: Shared
            };
            var compiledTemplate = _.template(menuTemplate);
            var htmlWithData = compiledTemplate(data);
            that.$el.html(htmlWithData);
            Shared.api.resource('Catalog/ContactPicture').params({
              contactID: that.profile.contactID,
              contactType: '2'
            }).done(function(result) {
              if (result.contacts[0].contactImagePicture != "") {
                $("#userPicture").css("background-image", "url('data:image/gif;base64," + result.contacts[0].contactImagePicture + "')");
                $("#userPicture").css("background-size", "46px 61px");
              }
            }).fail(function(error) {
              Shared.handleErrors(error);
            }).execute();
            that.context = new ContextMenuView();
            if (Shared.userHasModule("mail")) {
              that.folderMenuLV = new FoldersMenuListView();
              that.folderMenuLV.render();
            }
          });
        },
        refreshFolders: function() {
          this.folderMenuLV = new FoldersMenuListView();
          this.folderMenuLV.render();
        },
        setQuota: function(used, total) {
          var percent = (used * 100 / total).toFixed(0);
          document.querySelector('#progress_bar_quota').addEventListener('mdl-componentupgraded', function() {
            this.MaterialProgress.setProgress(percent);
          });
          $("#progress_bar_quota_text").html(percent + "% (" + this.bytesToSize(used, 0) + " / " + this.bytesToSize(total, 0) + ")");
        },
        bytesToSize: function(bytes, precision) {
          var kilobyte = 1024;
          var megabyte = kilobyte * 1024;
          var gigabyte = megabyte * 1024;
          var terabyte = gigabyte * 1024;
          if ((bytes >= 0) && (bytes < kilobyte)) {
            return bytes + ' B';
          } else if ((bytes >= kilobyte) && (bytes < megabyte)) {
            return (bytes / kilobyte).toFixed(precision) + ' KB';
          } else if ((bytes >= megabyte) && (bytes < gigabyte)) {
            return (bytes / megabyte).toFixed(precision) + ' MB';
          } else if ((bytes >= gigabyte) && (bytes < terabyte)) {
            return (bytes / gigabyte).toFixed(precision) + ' GB';
          } else if (bytes >= terabyte) {
            return (bytes / terabyte).toFixed(precision) + ' TB';
          } else {
            return bytes + ' B';
          }
        },
        selectMenu: function(index) {
          $('#mainMenu li').each(function() {
            $(this).removeClass('selected');
          });
          if ((index >= 1) && (index <= 6)) {
            $('#myFolders li').each(function() {
              if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
              }
            });
          }
          if (index == 1) {
            $('#mainMenu li.inbox').addClass("selected");
          }
          if (index == 2) {
            $('#mainMenu li.calendar').addClass("selected");
          }
          if (index == 3) {
            $('#mainMenu li.contacts').addClass("selected");
          }
          if (index == 4) {
            $('#mainMenu li.chat').addClass("selected");
          }
          if (index == 5) {
            $('#mainMenu li.settings').addClass("selected");
          }
          if (index == 6) {
            $('#mainMenu li.logout').addClass("selected");
          }
          this.closeMenu();
        },
        toggleMenu: function() {
          if (Shared.menuOpen) {
            this.closeMenu();
          } else {
            this.openMenu();
          }
          return false;
        },
        openMenu: function() {},
        closeMenu: function() {},
        loaded: function() {},
        setChatBadge: function(value) {
          if (value > 0) {
            $("#badge_chat").removeClass("hidden");
            $("#badge_chat").html(value);
          } else {
            $("#badge_chat").addClass("hidden");
            $("#badge_chat").html(value);
          }
        },
        setMailBadge: function(value) {
          if (value > 0) {
            $("#badge_inbox").removeClass("hidden");
            $("#badge_inbox").html(value);
          } else {
            $("#badge_inbox").addClass("hidden");
            $("#badge_inbox").html(value);
          }
        },
        enableBackButton: function(enabled) {
          if (enabled) {
            $('#mainHeader_backButton').removeClass("hidden");
            $('#mainHeader_menuButton').addClass("hidden");
          } else {
            $('#mainHeader_backButton').addClass("hidden");
            $('#mainHeader_menuButton').removeClass("hidden");
          }
        },
        renderContextMenu: function(menuID, params) {
          this.context = new ContextMenuView();
          var contextMenuCollection = new ContextMenuCollection();
          if (menuID == 'detailMessage') {
            this.context.collection = contextMenuCollection.getDetailMessageMenu(params.folderID, params.msgID, params.folderType, params.qtdMessages);
          }
          if (menuID == 'messageList') {
            this.context.collection = contextMenuCollection.getMessagesListMenu(params.folderID, params.folderName, params.folderType, params.qtdMessages);
          }
          if (menuID == 'newMessage') {
            this.context.collection = contextMenuCollection.getSendMessageMenu(params);
          }
          if (menuID == 'newMessageWithCc') {
            this.context.collection = contextMenuCollection.getSendMessageMenuWithCC(params);
          }
          if (menuID == 'personalContacts') {
            this.context.collection = contextMenuCollection.getPersonalContactsMenu();
          }
          if (menuID == 'generalContacts') {
            this.context.collection = contextMenuCollection.getGeneralContactsMenu();
          }
          if (menuID == 'detailsContact') {
            this.context.collection = contextMenuCollection.getDetailsContactMenu(params.email, params.contactID, params.contactType);
          }
          if (menuID == 'calendar') {
            this.context.collection = contextMenuCollection.getCalendarMenu(params.year, params.month, params.day);
          }
          if (menuID == 'mailsignature') {
            this.context.collection = contextMenuCollection.getMailSignatureMenu();
          }
          if (menuID == 'changePassword') {
            this.context.collection = contextMenuCollection.getChangePasswordMenu(params);
          }
          if (menuID == 'calendarAddEvent') {
            this.context.collection = contextMenuCollection.getCalendarAddEventMenu(params);
          }
          if (menuID == 'calendarAddEventParticipant') {
            this.context.collection = contextMenuCollection.getCalendarAddEventParticipantMenu(params);
          }
          if (menuID == 'calendarDetailsEvent') {
            this.context.collection = contextMenuCollection.getCalendarDetailsEventMenu(params.isOwner, params.eventID, params.year, params.month, params.day);
          }
          if (menuID == 'editFolder') {
            this.context.collection = contextMenuCollection.getEditFolderMenu(params);
          }
          if (menuID == 'support') {
            this.context.collection = contextMenuCollection.getSupportMenu(params);
          }
          if (menuID == 'chatOffline') {
            this.context.collection = contextMenuCollection.getChatOfflineMenu(params);
          }
          this.context.render();
        }
      });
      $__export('default', MenuView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("6b", ["5", "9"], function($, moment) {
  moment.lang('pt-br', {
    months: "Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split("_"),
    monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
    weekdays: "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"),
    weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
    weekdaysMin: "Dom_2ª_3ª_4ª_5ª_6ª_Sáb".split("_"),
    longDateFormat: {
      LT: "HH:mm",
      L: "DD/MM/YYYY",
      LL: "D [de] MMMM [de] YYYY",
      LLL: "D [de] MMMM [de] YYYY LT",
      LLLL: "dddd, D [de] MMMM [de] YYYY LT"
    },
    calendar: {
      sameDay: '[Hoje às] LT',
      nextDay: '[Amanhã às] LT',
      nextWeek: 'dddd [às] LT',
      lastDay: '[Ontem às] LT',
      lastWeek: function() {
        return (this.day() === 0 || this.day() === 6) ? '[Último] dddd [às] LT' : '[Última] dddd [às] LT';
      },
      sameElse: 'L'
    },
    relativeTime: {
      future: "%s",
      past: "%s",
      s: "seg",
      m: "um min",
      mm: "%d min(s)",
      h: "1 hora",
      hh: "%d horas",
      d: "1 dia",
      dd: "%d dias",
      M: "um mês",
      MM: "%d meses",
      y: "um ano",
      yy: "%d anos"
    },
    ordinal: '%dº'
  });
});

_removeDefine();
})();
$__System.register("6c", ["5", "6", "7", "8", "34"], function($__export) {
  "use strict";
  var __moduleName = "6c";
  var $,
      _,
      Backbone,
      Shared,
      Material,
      IronScrollTresholdView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }],
    execute: function() {
      IronScrollTresholdView = Backbone.View.extend({
        tagName: 'iron-scroll-threshold',
        containerID: "#iron-scroll-threshold-loader",
        scrollTarget: $("#scrollerList"),
        lowerTriggered: true,
        lowerThreshold: 400,
        refreshFunction: function() {},
        initialize: function(data) {},
        resize: function() {
          this.el.resize();
        },
        render: function() {
          $(this.containerID).empty().append(this.el);
        }
      });
      $__export('default', IronScrollTresholdView);
    }
  };
});

$__System.register("24", ["5", "6", "7", "8", "34"], function($__export) {
  "use strict";
  var __moduleName = "24";
  var $,
      _,
      Backbone,
      Shared,
      Material,
      PullToActionView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }],
    execute: function() {
      PullToActionView = Backbone.View.extend({
        _shadow: null,
        container: '#pageContent',
        refreshFunction: function() {},
        initialize: function(data) {
          if (data.refreshAction != undefined) {
            this.refreshFunction = data.refreshAction;
          }
          if (data.container != undefined) {
            this.container = data.container;
          }
        },
        events: {
          'refresh': "_refresh",
          'lower-trigger': '_loadNextPage'
        },
        resize: function() {
          this.el.resize();
        },
        _refresh: function() {
          this.refreshFunction();
        },
        _loadNextPage: function() {
          console.log("_loadNextPage");
        },
        render: function() {
          this.el.innerHTML = '<pull-to-action action="attribute.fire(\'refresh\',{})" color="blue" container="' + this.container + '"></pull-to-action>';
          $(this.container).empty().append(this.el);
        }
      });
      $__export('default', PullToActionView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("6d", [], function() {
  return "<div id=\"attach_<%=fileID%>\" class=\"attachment<% if (fileType != 'base64') { %> attachment-arquivo-background <% } %>\">\n    <div id=\"preview_<%=fileID%>\" class=\"attachmentPreview\">&nbsp;</div>\n    <div class=\"attachmentTitle\">\n      <% if (!( (Shared.isIDevice()) && (!Shared.isPhonegap()) &&  (previewType != 'compose')) ) { %>\n      <a id=\"attachLink_<%=fileID%>\" href=\"#\" class=\"<% if (previewType == 'compose') { %>deleteAttachmentLink<% } else { if (Shared.isDesktop()) { %>downloadAttachmentLink<% } else { %>touchDownloadAttachmentLink<% } } %>\">\n        <div class=\"icon-attachment <% if (previewType == 'compose') { %>deleteAttachment<% } else { %>downloadAttachment<% } %>\"></div>\n        <div class=\"fileSize\"><%=Shared.bytesToSize(fileSize,0)%></div>\n        <div class=\"fileName\"><%=fileName%></div>\n      </a>\n      <% } else { %>\n        <div class=\"fileSize\"><%=Shared.bytesToSize(fileSize,0)%></div>\n        <div class=\"fileName\"><%=fileName%></div>\n      <% } %>\n    </div>\n    <% if (fileType == \"base64\") { %>\n      <div style=\"position: relative; overflow: hidden;\">\n        <img class=\"attachmentImage\" style=\"position: relative; left: 0px; height: 150px;\" src=\"data:image/jpeg;base64,<%=fileData%>\">\n      </div>\n    <% } %>\n</div>";
});

_removeDefine();
})();
$__System.register("4d", ["5", "6", "7", "8", "a", "6d"], function($__export) {
  "use strict";
  var __moduleName = "4d";
  var $,
      _,
      Backbone,
      Shared,
      LoadingView,
      previewAttachmentMessageTemplate,
      PreviewAttachmentMessageView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      previewAttachmentMessageTemplate = $__m.default;
    }],
    execute: function() {
      PreviewAttachmentMessageView = Backbone.View.extend({
        previewType: 'compose',
        fileID: "",
        fileName: "",
        fileEncoding: "",
        fileIndex: "",
        fileType: "",
        fileSize: "",
        fileData: "",
        msgID: "",
        folderID: "",
        hasPreview: false,
        forceDownloadFile: false,
        render: function() {
          var elementID = "#msgAttachmentsRecipients";
          var newData = {
            fileID: this.fileID,
            fileName: this.fileName,
            fileType: this.fileType,
            fileSize: this.fileSize,
            fileData: this.fileData,
            previewType: this.previewType,
            _: _,
            Shared: Shared
          };
          var htmlTemplate = _.template(previewAttachmentMessageTemplate);
          var compiledTemplate = htmlTemplate(newData);
          this.$el.html(compiledTemplate);
          $(elementID).prepend(this.$el);
          if (this.canShowPreview()) {
            this.preview();
          }
          if (this.forceDownloadFile != false) {
            var that = this;
            this.getFileData(function(params, result) {
              var base64 = that.base64ArrayBuffer(result);
              that.fileData = base64;
              that.forceDownloadFile(that.fileID, base64, that.fileName, "base64");
            });
          }
        },
        events: {
          "touchend .touchDownloadAttachmentLink": "download",
          "click .downloadAttachmentLink": "download",
          "click .deleteAttachmentLink": "deleteAttachment"
        },
        startLoading: function() {
          var imageID = "attachment_image_" + this.fileID;
          $("#attachment_image_" + this.fileID).addClass("hidden");
          $("#attach_" + this.fileID).removeClass("attachment-arquivo-background");
          var div = $("<div />").addClass("spinner").attr("style", "position: absolute; margin-top: 20px; margin-left: 40px; ");
          $("#preview_" + this.fileID).empty().prepend(div);
        },
        stopLoading: function() {
          $("#attachment_image_" + this.fileID).removeClass("hidden");
          $("#attach_" + this.fileID).addClass("attachment-arquivo-background");
          $("#preview_" + this.fileID).empty();
        },
        deleteAttachment: function(e) {
          Shared.currentDraftMessage.removeFileByID(this.fileID);
          $("#attach_" + this.fileID).remove();
        },
        canShowPreview: function() {
          var fileExtension = this.fileName.toLowerCase().substr(this.fileName.length - 3, 3);
          var retVal = false;
          if (((this.previewType == 'compose') && (this.fileType == 'binary')) || (this.fileData == '')) {
            switch (fileExtension) {
              case "png":
                retVal = true;
                break;
              case "jpg":
                retVal = true;
                break;
            }
          }
          return retVal;
        },
        showImage: function(base64) {
          if (!this.hasPreview) {
            var imageID = "attachment_image_" + this.fileID;
            var div = $("<div />").attr("style", "position: relative; overflow: hidden; height: 100%;").addClass("grow");
            var img = $("<img />").attr("style", "position: relative; left: 0px; height: 150px;").addClass("attachmentImage");
            img.attr("id", imageID);
            img.attr("src", "data:image/jpeg;base64," + base64);
            img.appendTo(div);
            $("#attach_" + this.fileID).append(div);
            $("#attach_" + this.fileID).removeClass("attachment-arquivo-background");
            var width = $("#" + imageID).width();
            var margin = 0;
            if (width < 160) {
              margin = (160 - width) / 2;
            } else if (width > 160) {
              margin = ((160 - width) / 2);
            }
            if (width == 0) {
              margin = 0;
            }
            $("#" + imageID).attr("style", "margin-left: " + margin + "px;");
            this.hasPreview = true;
          }
        },
        base64ArrayBuffer: function(arrayBuffer) {
          var base64 = '';
          var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
          var bytes = new Uint8Array(arrayBuffer);
          var byteLength = bytes.byteLength;
          var byteRemainder = byteLength % 3;
          var mainLength = byteLength - byteRemainder;
          var a,
              b,
              c,
              d;
          var chunk;
          for (var i = 0; i < mainLength; i = i + 3) {
            chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];
            a = (chunk & 16515072) >> 18;
            b = (chunk & 258048) >> 12;
            c = (chunk & 4032) >> 6;
            d = chunk & 63;
            base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];
          }
          if (byteRemainder == 1) {
            chunk = bytes[mainLength];
            a = (chunk & 252) >> 2;
            b = (chunk & 3) << 4;
            base64 += encodings[a] + encodings[b] + '==';
          } else if (byteRemainder == 2) {
            chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];
            a = (chunk & 64512) >> 10;
            b = (chunk & 1008) >> 4;
            c = (chunk & 15) << 2;
            base64 += encodings[a] + encodings[b] + encodings[c] + '=';
          }
          return base64;
        },
        downloadBrowser: function(params, result) {
          window.URL = window.URL || window.webkitURL;
          var base64 = this.base64ArrayBuffer(result);
          this.showImage(base64);
          var fileExtension = params.attachmentName.toLowerCase().substr(params.attachmentName.length - 3, 3);
          var fileType = "application/*";
          switch (fileExtension) {
            case "png":
              fileType = "image/png";
              break;
            case "jpg":
              fileType = "image/jpeg";
              break;
            case "jpge":
              fileType = "image/jpge";
              break;
            case "pdf":
              fileType = "application/pdf";
              break;
          }
          var blob = new Blob([result], {type: fileType});
          var link = document.createElement('a');
          var name = params.attachmentName;
          link.href = window.URL.createObjectURL(blob);
          link.setAttribute("download", name);
          $('body').append(link);
          var event = document.createEvent('MouseEvents');
          event.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);
          link.dispatchEvent(event);
          $(link).trigger('click');
        },
        downloadPhonegap: function(params, result) {
          var base64 = this.base64ArrayBuffer(result);
          this.showImage(base64);
          window.plugins.expresso.saveImage(base64, {
            filename: params.attachmentName,
            overwrite: true
          }, function(fileURL) {
            var fileExtension = params.attachmentName.toLowerCase().substr(params.attachmentName.length - 3, 3);
            var fileType = "application/*";
            switch (fileExtension) {
              case "jpg":
                fileType = "image/*";
                break;
              case "png":
                fileType = "image/*";
                break;
              case "pdf":
                fileType = "application/pdf";
                break;
            }
            window.plugins.webintent.startActivity({
              action: window.plugins.webintent.ACTION_VIEW,
              type: fileType,
              url: "file://" + fileURL
            }, function() {}, function() {
              alert('Não foi possível abrir o Arquivo.');
            });
          }, function(error) {
            alert(error);
          });
        },
        downloadPhonegapIOS: function(params, result) {
          var fileName = params.attachmentName;
          var base64 = this.base64ArrayBuffer(result);
          this.showImage(base64);
          ExternalFileUtil.openWith(fileName, "", base64, function(message) {}, function(message) {
            alert(message);
          });
        },
        getFileData: function(callBack) {
          var that = this;
          this.startLoading();
          var params = {
            attachmentID: this.fileID,
            attachmentName: this.fileName,
            attachmentEncoding: this.fileEncoding,
            attachmentIndex: this.fileIndex,
            msgID: this.msgID,
            folderID: this.folderID
          };
          Shared.api.resource('/Mail/Attachment').dataType("arraybuffer").params(params).done(function(result) {
            that.stopLoading();
            callBack(params, result);
          }).execute();
        },
        download: function() {
          var that = this;
          this.getFileData(function(params, result) {
            if ((Shared.isPhonegap()) && (Shared.isAndroid())) {
              that.downloadPhonegap(params, result);
            } else {
              if ((Shared.isPhonegap()) && (Shared.isIDevice())) {
                that.downloadPhonegapIOS(params, result);
              } else {
                that.downloadBrowser(params, result);
              }
            }
          });
        },
        preview: function(e) {
          var that = this;
          if ((this.previewType != 'compose') || (this.forceDownloadFile != false)) {
            this.getFileData(function(params, result) {
              var base64 = that.base64ArrayBuffer(result);
              that.showImage(base64);
            });
          } else {
            var reader = new FileReader();
            reader.fileName = that.fileName;
            reader.fileID = that.fileID;
            reader.onerror = function(e) {};
            reader.onprogress = function(e) {};
            reader.onabort = function(e) {};
            reader.onloadstart = function(e) {};
            reader.onload = function(e) {
              var buffer = e.target.result;
              var base64 = that.base64ArrayBuffer(buffer);
              that.showImage(base64);
            };
            reader.readAsArrayBuffer(that.fileData);
          }
        }
      });
      $__export('default', PreviewAttachmentMessageView);
    }
  };
});

$__System.register("6e", ["6", "7", "8"], function($__export) {
  "use strict";
  var __moduleName = "6e";
  var _,
      Backbone,
      Shared,
      ContextMenuModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }],
    execute: function() {
      ContextMenuModel = Backbone.Model.extend({
        defaults: {
          route: "",
          id: "",
          title: "",
          iconClass: "",
          callBack: "",
          parentCallBack: "",
          primary: false
        },
        initialize: function() {}
      });
      $__export('default', ContextMenuModel);
    }
  };
});

$__System.register("29", ["6", "7", "8", "6e"], function($__export) {
  "use strict";
  var __moduleName = "29";
  var _,
      Backbone,
      Shared,
      ContextMenuModel,
      ContextMenuCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      ContextMenuModel = $__m.default;
    }],
    execute: function() {
      ContextMenuCollection = Backbone.Collection.extend({
        model: ContextMenuModel,
        initialize: function(models, options) {
          this.api = Shared.api;
          this.model = ContextMenuModel;
        },
        createModelsFromArray: function(arrJson) {
          for (var i in arrJson) {
            var currentModel = new ContextMenuModel(arrJson[i]);
            this.add(currentModel);
          }
        },
        getMessagesListMenu: function(folderID, folderName, folderType, qtdMessages) {
          var menuItems = [];
          var newMessage = {
            route: "/Mail/Message/New",
            id: "1",
            title: "Nova Mensagem",
            iconClass: 'btn-compose',
            primary: true
          };
          var addFolder = {
            route: "/Mail/AddFolder/" + folderID + "",
            id: "2",
            iconClass: 'context-add-folder',
            title: "Adicionar Pasta"
          };
          var renameFolder = {
            route: "/Mail/RenameFolder/" + folderID + "",
            id: "3",
            iconClass: 'context-rename-folder',
            title: "Renomear Pasta"
          };
          var deleteFolder = {
            route: "/Mail/DeleteFolder/" + folderID + "",
            id: "4",
            iconClass: 'context-del-folder',
            title: "Apagar Pasta"
          };
          var cleanTrash = {
            route: "/Mail/CleanTrash/" + folderID + "",
            id: "5",
            iconClass: 'context-delete-message',
            title: "Limpar Lixeira"
          };
          menuItems.push(newMessage);
          if (folderType == 5) {
            menuItems.push(addFolder);
            menuItems.push(renameFolder);
            if (qtdMessages == 0) {
              menuItems.push(deleteFolder);
            }
          }
          if (folderType == 0) {
            menuItems.push(addFolder);
          }
          if (folderType == 3) {
            menuItems.push(cleanTrash);
          }
          this.createModelsFromArray(menuItems);
          return this;
        },
        getMailSignatureMenu: function() {
          var menuItems = [{
            route: "/Settings/SaveMailSignature",
            title: "Salvar",
            primary: true
          }];
          this.createModelsFromArray(menuItems);
          return this;
        },
        getChangePasswordMenu: function(params) {
          var menuItems = [{
            route: "#",
            id: "0",
            callBack: params.saveCallBack,
            parentCallBack: params.parentCallBack,
            title: "Salvar",
            primary: true
          }];
          this.createModelsFromArray(menuItems);
          return this;
        },
        getSupportMenu: function(params) {
          var menuItems = [{
            route: "#",
            id: "0",
            callBack: params.saveCallBack,
            parentCallBack: params.parentCallBack,
            title: "Enviar",
            primary: true
          }];
          this.createModelsFromArray(menuItems);
          return this;
        },
        getEditFolderMenu: function(params) {
          var menuItems = [{
            route: "#",
            id: "0",
            callBack: params.saveCallBack,
            parentCallBack: params.parentCallBack,
            title: "Salvar",
            primary: true
          }];
          this.createModelsFromArray(menuItems);
          return this;
        },
        getDetailMessageMenu: function(folderID, msgID, folderType, qtdMessages) {
          var menuItems = [];
          var newMessage = {
            route: "/Mail/Message/New",
            id: "0",
            title: "Nova Mensagem",
            iconClass: 'btn-compose',
            primary: true
          };
          var replyMessage = {
            route: "/Mail/Message/ReplyMessage/" + msgID + "/" + folderID,
            id: "1",
            iconClass: 'context-reply',
            title: "Responder"
          };
          var replyMessageToAll = {
            route: "/Mail/Message/ReplyToAll/" + msgID + "/" + folderID,
            id: "2",
            iconClass: 'context-reply-all',
            title: "Responder p/ Todos"
          };
          var forwardMessage = {
            route: "/Mail/Message/Forward/" + msgID + "/" + folderID,
            id: "3",
            iconClass: 'context-forward',
            title: "Encaminhar"
          };
          var deleteMessage = {
            route: "/Mail/Message/DelMessage/" + msgID + "/" + folderID,
            id: "4",
            iconClass: 'context-delete-message',
            title: "Apagar Mensagem"
          };
          var addFolder = {
            route: "/Mail/AddFolder/" + folderID + "",
            id: "5",
            iconClass: 'context-add-folder',
            title: "Adicionar Pasta"
          };
          var renameFolder = {
            route: "/Mail/RenameFolder/" + folderID + "",
            id: "6",
            iconClass: 'context-rename-folder',
            title: "Renomear Pasta"
          };
          var deleteFolder = {
            route: "/Mail/DeleteFolder/" + folderID + "",
            id: "7",
            iconClass: 'context-del-folder',
            title: "Apagar Pasta"
          };
          var cleanTrash = {
            route: "/Mail/CleanTrash/" + folderID + "",
            id: "5",
            iconClass: 'context-delete-message',
            title: "Limpar Lixeira"
          };
          menuItems.push(newMessage);
          if (msgID != 0) {
            menuItems.push(replyMessage);
            menuItems.push(replyMessageToAll);
            menuItems.push(forwardMessage);
            menuItems.push(deleteMessage);
          }
          if (folderType == 5) {
            menuItems.push(addFolder);
            menuItems.push(renameFolder);
            if (qtdMessages == 0) {
              menuItems.push(deleteFolder);
            }
          }
          if (folderType == 0) {
            menuItems.push(addFolder);
          }
          if (folderType == 3) {
            menuItems.push(cleanTrash);
          }
          this.createModelsFromArray(menuItems);
          return this;
        },
        getSendMessageMenu: function(params) {
          var menuItems = [{
            route: "#",
            id: "0",
            callBack: params.sendCallBack,
            parentCallBack: params.parentCallBack,
            title: "Enviar",
            iconClass: '',
            primary: true
          }, {
            route: "#",
            id: "1",
            callBack: params.addCcBccCallBack,
            parentCallBack: params.parentCallBack,
            title: "Adicionar CC/BCC",
            iconClass: 'icon-add-ccbcc',
            primary: false
          }];
          var takePicture = {
            route: "#",
            id: "3",
            callBack: params.takePictureCallBack,
            parentCallBack: params.parentCallBack,
            title: "Tirar Foto",
            iconClass: 'icon-take-picture',
            primary: false
          };
          var selectPicture = {
            route: "#",
            id: "4",
            callBack: params.selectPictureCallBack,
            parentCallBack: params.parentCallBack,
            title: "Escolher Foto",
            iconClass: 'icon-select-picture',
            primary: false
          };
          var addAttachment = {
            route: "#",
            id: "5",
            callBack: params.selectAttachmentFileCallBack,
            parentCallBack: params.parentCallBack,
            title: "Adicionar Anexo",
            iconClass: 'icon-select-picture',
            primary: false
          };
          if (Shared.isPhonegap()) {
            menuItems.push(takePicture);
            menuItems.push(selectPicture);
          } else {
            menuItems.push(addAttachment);
          }
          this.createModelsFromArray(menuItems);
          return this;
        },
        getSendMessageMenuWithCC: function(params) {
          var menuItems = [{
            route: "#",
            id: "0",
            callBack: params.sendCallBack,
            parentCallBack: params.parentCallBack,
            title: "Enviar",
            iconClass: '',
            primary: true
          }, {
            route: "#",
            id: "2",
            callBack: params.removeCcBccCallBack,
            parentCallBack: params.parentCallBack,
            title: "Remover CC/BCC",
            iconClass: 'icon-remove-ccbcc',
            primary: false
          }];
          var takePicture = {
            route: "#",
            id: "3",
            callBack: params.takePictureCallBack,
            parentCallBack: params.parentCallBack,
            title: "Tirar Foto",
            iconClass: 'icon-take-picture',
            primary: false
          };
          var selectPicture = {
            route: "#",
            id: "4",
            callBack: params.selectPictureCallBack,
            parentCallBack: params.parentCallBack,
            title: "Escolher Foto",
            iconClass: 'icon-select-picture',
            primary: false
          };
          var addAttachment = {
            route: "#",
            id: "5",
            callBack: params.selectAttachmentFileCallBack,
            parentCallBack: params.parentCallBack,
            title: "Adicionar Anexo",
            iconClass: 'icon-select-picture',
            primary: false
          };
          if (Shared.api.phoneGap()) {
            menuItems.push(takePicture);
            menuItems.push(selectPicture);
          } else {
            menuItems.push(addAttachment);
          }
          this.createModelsFromArray(menuItems);
          return this;
        },
        getPrimaryAction: function() {
          var retVal = false;
          for (var i in this.models) {
            if (this.models[i].get('primary') == true) {
              retVal = this.models[i];
            }
          }
          return retVal;
        },
        getActionById: function(actID) {
          var retVal = false;
          for (var i in this.models) {
            if (this.models[i].get('id') == actID) {
              retVal = this.models[i];
            }
          }
          return retVal;
        },
        getGeneralContactsMenu: function() {
          var menuItems = [{
            route: "/Contacts/Personal",
            iconClass: 'btn-catalogo-pessoal',
            title: "Contatos Pessoais",
            primary: true
          }];
          this.createModelsFromArray(menuItems);
          return this;
        },
        getPersonalContactsMenu: function() {
          var menuItems = [{
            route: "/Contacts/General",
            iconClass: 'btn-catalogo-geral',
            title: "Catálogo Geral",
            primary: true
          }];
          this.createModelsFromArray(menuItems);
          return this;
        },
        getDetailsContactMenu: function(email, contactID, contactType) {
          var newMail = {
            route: "/Mail/Message/New/" + email,
            id: '0',
            title: "Nova Mensagem",
            iconClass: 'btn-compose',
            primary: true
          };
          var personalContacts = {
            route: "/Contacts/Personal",
            iconClass: 'context-catalogo-pessoal',
            id: '1',
            title: "Contatos Pessoais"
          };
          var generalContacts = {
            route: "/Contacts/General",
            iconClass: 'context-catalogo-geral',
            id: '2',
            title: "Catálogo Geral"
          };
          var addContactToPersonal = {
            route: "/Contacts/Add/" + contactID,
            id: "3",
            title: "Adicionar nos contatos pessoais",
            iconClass: 'icon-add-contact-personal'
          };
          var deletePersonalContact = {
            route: "/Contacts/Delete/" + contactID,
            id: "3",
            title: "Remover dos contatos pessoais",
            iconClass: 'icon-delete-contact-personal'
          };
          var menuItems = [];
          if (Shared.userHasModule("mail")) {
            menuItems.push(newMail);
          } else {
            addContactToPersonal.primary = true;
            addContactToPersonal.iconClass = 'btn-add-contact-personal';
            deletePersonalContact.primary = true;
            deletePersonalContact.iconClass = 'btn-delete-contact-personal';
          }
          if (contactType == 'General') {
            menuItems.push(personalContacts);
            menuItems.push(addContactToPersonal);
          } else {
            if (Shared.apiVersion != '1.0') {
              menuItems.push(generalContacts);
              menuItems.push(deletePersonalContact);
            }
          }
          this.createModelsFromArray(menuItems);
          return this;
        },
        getCalendarMenu: function(year, month, day) {
          var today = new Date();
          var pad = "00";
          if (year == '' || year == undefined)
            year = today.getFullYear();
          if (month == '' || month == undefined) {
            month = today.getMonth() + 1;
            month = pad.substring(0, pad.length - ("" + month).length) + ("" + month);
          }
          if (day == '' || day == undefined)
            day = today.getDate();
          var menuItems = [{
            route: "/Calendar/Events/Add/" + year + "/" + month + "/" + day,
            title: "Adicionar evento",
            iconClass: 'btn-add-event',
            primary: true
          }];
          this.createModelsFromArray(menuItems);
          return this;
        },
        getCalendarAddEventMenu: function(params) {
          var menuItems = [{
            route: "#",
            id: "0",
            callBack: params.saveCallBack,
            parentCallBack: params.parentCallBack,
            title: "Salvar",
            iconClass: 'btn-save-event',
            primary: true
          }, {
            route: "#",
            id: "1",
            callBack: params.addParticipantsCallBack,
            parentCallBack: params.parentCallBack,
            title: "Adicionar participantes",
            iconClass: 'icon-add-contact-agenda',
            primary: false,
            action: 'addParticipants'
          }];
          this.createModelsFromArray(menuItems);
          return this;
        },
        getCalendarDetailsEventMenu: function(isOwner, eventID, year, month, day) {
          var today = new Date();
          var pad = "00";
          if (year == '' || year == undefined)
            year = today.getFullYear();
          if (month == '' || month == undefined) {
            month = today.getMonth() + 1;
            month = pad.substring(0, pad.length - ("" + month).length) + ("" + month);
          }
          if (day == '' || day == undefined)
            day = today.getDate();
          var menuItems = [];
          if (isOwner) {
            menuItems.push({
              route: "/Calendar/Events/Edit/" + eventID,
              id: "1",
              title: "Editar evento",
              iconClass: 'btn-edit-event',
              primary: true
            });
            menuItems.push({
              route: "/Calendar/Events/Add/" + year + "/" + month + "/" + day,
              id: "0",
              title: "Adicionar evento",
              iconClass: '',
              primary: false,
              action: 'add',
              iconClass: 'icon-add-event'
            });
            menuItems.push({
              route: "/Calendar/Events/Delete/" + eventID + "/" + year + "/" + month + "/" + day,
              id: "2",
              title: "Excluir evento",
              iconClass: '',
              primary: false,
              action: 'delete',
              iconClass: 'icon-delete-event'
            });
          } else {
            menuItems.push({
              route: "/Calendar/Events/Add/" + year + "/" + month + "/" + day,
              id: "0",
              title: "Adicionar evento",
              iconClass: '',
              primary: true,
              action: 'add',
              iconClass: 'btn-add-event'
            });
          }
          this.createModelsFromArray(menuItems);
          return this;
        },
        getCalendarAddEventParticipantMenu: function(params) {
          var menuItems = [{
            route: "#",
            id: "0",
            callBack: params.saveCallBack,
            parentCallBack: params.parentCallBack,
            title: "Salvar",
            iconClass: 'btn-add-contact-agenda',
            primary: true
          }];
          this.createModelsFromArray(menuItems);
          return this;
        },
        getChatOfflineMenu: function(params) {
          var menuItems = [{
            id: "0",
            route: "/ChatReconnect",
            title: "Reconectar",
            iconClass: '',
            primary: true
          }, {
            id: "1",
            route: "/Settings/Support",
            title: "Suporte / Sugestões",
            iconClass: ''
          }];
          this.createModelsFromArray(menuItems);
          return this;
        }
      });
      $__export('default', ContextMenuCollection);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("6f", [], function() {
  return "<% if (messages.length != 0) { %>\n<% _.each(messages, function(message){ %>\n<div class=\"expresso-email animation-fadein\">\n<!-- <div class=\"mdl-card mdl-shadow--2dp card-detailMessage\"> -->\n  <div class=\"mdl-card__title mdl-card--expand mdl-color--blue-100\">\n    <h2 class=\"mdl-card__title-text\"><%= message.get(\"msgSubject\") %></h2>\n  </div>\n \n<article id=\"wrapperDetail\" class=\"contentScroll\" style=\"overflow: auto; width: 100%;\">\n  <div id=\"scrollerDetail\">\n    <table id=\"messageDetails\"> \n      <tr class=\"detailRow\">\n        <td class=\"item detailCol\">\n          De:\n        </td>\n        <td class=\"description detailCol\">\n          <span class=\"badge-big badge-write-message\">\n             <%= message.get(\"msgFrom\").mailAddress %>\n          </span>\n        </td>\n        <td class=\"detailCol\">\n          <div class=\"msg-list-images\" style=\"width: 150px;\">\n            <% if (message.get(\"msgHasAttachments\") == '1') { %>\n            <div class=\"icon-msg-details icon-msg-details-attachments\"></div>\n            <% } %>\n            <% if (message.get(\"msgFlagged\") == '1') { %>\n            <div class=\"icon-msg-details icon-msg-details-flagged\"></div>\n            <% } %>\n            <% if (message.get(\"msgForwarded\") == '1') { %>\n            <div class=\"icon-msg-details icon-msg-details-forwarded\"></div>\n            <% } %>\n            <div class=\"clear\"></div>\n          </div>\n        </td>\n      </tr> \n      <div id=\"msgDetails\" class=\"hidden\">\n        <tr class=\"detailRow\">\n          <td class=\"item detailCol\">\n            Para:\n          </td>\n          <td class=\"description detailCol\" colspan=\"2\">\n            <% if (message.get(\"msgTo\")) {  %>\n              <% if (message.get(\"msgTo\").length > 3) { %>\n                <div style=\"float: right;\">\n                  <a href=\"#\" class=\"showMoreMsgTo\">e mais <%=(message.get(\"msgTo\").length - 3)%> pessoas...</a>\n                </div>\n              <% } %>\n                <% var qtdMsgTo = 1; %>\n                <% _.each(message.get(\"msgTo\"), function(msgRecipient){ %>\n                    <span class=\"detailMsgTo badge-big badge-write-message <% if (qtdMsgTo >= 4) { %>hidden<% } %>\" data-mail=\"<%=msgRecipient.mailAddress%>\">\n                      \n                    <% if ($.trim(msgRecipient.fullName) != '') { %> \n                      <%=$.trim(msgRecipient.fullName)%>\n                    <% } else { %>\n                      <%=msgRecipient.mailAddress%>\n                    <% } %>\n                    \n                    </span>\n                    <% qtdMsgTo = qtdMsgTo + 1; %>\n                <% }); %>\n            <% } %>\n          </td>\n        </tr> \n      \n        <% if (message.get(\"msgCC\").length) {  %>\n        <tr class=\"detailRow\">\n          <td class=\"item detailCol\">\n            Cc:\n          </td>\n          <td class=\"description detailCol\" colspan=\"2\">\n              <% if (message.get(\"msgCC\").length > 3) { %>\n                <div style=\"float: right;\">\n                  <a href=\"#\" class=\"showMoreMsgCc\">e mais <%=(message.get(\"msgCC\").length - 3)%> pessoas...</a>\n                </div>\n              <% } %>\n              <% var qtdMsgCc = 1; %>\n              <% _.each(message.get(\"msgCC\"), function(msgRecipientCc){ %>\n                <span class=\"detailMsgCc badge-big badge-write-message <% if (qtdMsgCc >= 4) { %>hidden<% } %>\">\n                <% if ($.trim(msgRecipientCc.fullName) != '') { %> \n                  <%=$.trim(msgRecipientCc.fullName)%>\n                <% } else { %>\n                  <%=msgRecipientCc.mailAddress%>\n                <% } %>\n                </span>\n                <% qtdMsgCc = qtdMsgCc + 1; %>\n              <% }); %>\n            \n          </td>\n        </tr> \n        <% } %>\n        <% if (message.get(\"msgBcc\").length) {  %>\n        <tr class=\"detailRow\">\n          <td class=\"item detailCol\">\n            Bcc:\n          </td>\n          <td class=\"description detailCol\" colspan=\"2\">\n              <% _.each(message.get(\"msgBcc\"), function(msgRecipientBcc){ %>\n                <span class=\"badge-big badge-write-message\">\n                <% if ($.trim(msgRecipientBcc.fullName) != '') { %> \n                  <%=$.trim(msgRecipientBcc.fullName)%>\n                <% } else { %>\n                  <%=msgRecipientBcc.mailAddress%>\n                <% } %>\n                </span>\n              <% }); %>\n          </td>\n        </tr> \n        <% } %>\n      </div>\n      <tr class=\"detailRow\">\n        <td class=\"item detailCol\">\n          Data:\n        </td>\n        <td class=\"description detailCol\" colspan=\"2\">\n          <%=message.get(\"msgDate\")%>&nbsp;(<%=message.getTimeAgo()%>)\n        </td>\n      </tr> \n      <!-- <tr class=\"detailRow\">\n        <td class=\"item detailCol\">\n          Assunto:\n        </td>\n        <td class=\"description detailCol\" colspan=\"2\">\n          <%= message.get(\"msgSubject\") %>\n        </td>\n      </tr> -->\n      <% if (message.get(\"msgAttachments\")) {  %>\n      <tr class=\"detailRow\">\n        <td class=\"item detailCol\">\n          Anexos:\n        </td>\n        <td class=\"description detailCol\" colspan=\"2\">\n            <div id=\"msgAttachmentsRecipients\">\n\n            </div>\n\n        </td>\n      </tr> \n      <% } %>\n      <tr>\n        <td colspan=\"3\">\n          <div class=\"mdl-card__actions mdl-card--border\">\n            <a href=\"#\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"><i class=\"material-icons\" role=\"presentation\">reply</i></a>\n            <a href=\"#\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"><i class=\"material-icons\" role=\"presentation\">reply_all</i></a>\n            <a href=\"#\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"><i class=\"material-icons\" role=\"presentation\">forward</i></a>\n            <a href=\"#\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"><i class=\"material-icons\" role=\"presentation\">delete</i></a>\n        </div>\n        </td>\n      </tr>\n      <tr class=\"detailRow\">\n        <td id=\"contentMessageBody\" class=\"itemBody detailCol\" colspan=\"3\">\n          <div id=\"disable-all-css\">\n          <%=message.getMessageBody(false)%>\n          </div>\n        </td>\n      </tr> \n    </table>\n\n  </div>\n</article>\n  <!-- <div class=\"mdl-card__actions mdl-card--border\">\n      <a href=\"#\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"><i class=\"material-icons\" role=\"presentation\">reply</i>Responder</a>\n      <a href=\"#\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"><i class=\"material-icons\" role=\"presentation\">reply_all</i>Responder p/ Todos</a>\n      <a href=\"#\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"><i class=\"material-icons\" role=\"presentation\">forward</i>Encaminhar</a>\n      <a href=\"#\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect\"><i class=\"material-icons\" role=\"presentation\">delete</i>Apagar</a>\n    </div> -->\n</div>\n<% }); %>\n<% } else { %>\n<h2 class=\"font-big\"><span class=\"font-small-info\"></span>&nbsp;</h2>\n<article id=\"wrapperDetail\" class=\"content\">\n  <div id=\"scrollerDetail\">\n    <br><br>\n    <center>\n      <span>\n        Nenhuma mensagem foi selecionada...\n      </span>\n    </center>\n  </div>\n</article>\n<% } %>";
});

_removeDefine();
})();
$__System.register("70", ["5", "6", "7", "8", "4c", "6f", "a", "29", "4d"], function($__export) {
  "use strict";
  var __moduleName = "70";
  var $,
      _,
      Backbone,
      Shared,
      MessagesCollection,
      detailMessageTemplate,
      LoadingView,
      ContextMenuCollection,
      PreviewAttachmentMessageView,
      DetailMessageView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      MessagesCollection = $__m.default;
    }, function($__m) {
      detailMessageTemplate = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      ContextMenuCollection = $__m.default;
    }, function($__m) {
      PreviewAttachmentMessageView = $__m.default;
    }],
    execute: function() {
      DetailMessageView = Backbone.View.extend({
        folderID: 'INBOX',
        msgID: '',
        search: '',
        page: 1,
        scrollRefresh: false,
        scrollDetail: '',
        render: function() {
          var elementID = "#contentDetail";
          if (Shared.isSmartPhoneResolution()) {
            elementID = "#content";
          }
          this.$el.html("");
          var that = this;
          if (this.msgID) {
            var loadingView = new LoadingView({el: $(elementID)});
            loadingView.render();
            var messagesData = new MessagesCollection();
            messagesData.getMessagesInFolder(this.folderID, this.msgID, this.search, this.page).done(function(data) {
              var message = data.models[0];
              var qtdMessages = data.models.length;
              var data = {
                messages: data.models,
                _: _,
                Shared: Shared,
                $: $
              };
              var htmlTemplate = _.template(detailMessageTemplate);
              var compiledTemplate = htmlTemplate(data);
              that.$el.html(compiledTemplate);
              $(elementID).empty().append(that.$el);
              that.renderAttachments(message);
              var folderType = 5;
              if (Shared.folders != undefined) {
                var currentFolder = Shared.folders.getFolderByID(that.folderID);
                if (currentFolder.get != undefined) {
                  folderType = currentFolder.get("folderType");
                }
              }
              Shared.menuView.renderContextMenu('detailMessage', {
                folderID: that.folderID,
                msgID: that.msgID,
                folderType: folderType,
                qtdMessages: qtdMessages
              });
              setTimeout(function() {
                $.each($("#contentMessageBody img"), function() {
                  var max_width = $("#wrapperDetail").width();
                  max_width = max_width - 40;
                  var current_height = $(this).height();
                  var current_width = $(this).width();
                  if (current_width > max_width) {
                    var new_width = max_width;
                    var new_height = max_width * (current_height / current_width);
                    $("#contentMessageBody").width(max_width);
                    $(this).css("max-width", max_width);
                    $(this).css("max-height", current_height);
                    $(this).css("height", new_height);
                    $(this).css("width", new_width);
                  }
                });
                that.loaded();
              }, 500);
            }).fail(function(result) {
              Shared.handleErrors(result.error);
              $(elementID).empty();
              return false;
            }).execute();
          }
        },
        renderAttachments: function(message) {
          if (message != undefined) {
            var attachments = message.get("msgAttachments");
            for (var i in attachments) {
              var attachment = attachments[i];
              var preview = new PreviewAttachmentMessageView();
              preview.fileID = attachment.attachmentID;
              preview.fileName = attachment.attachmentName;
              preview.fileSize = attachment.attachmentSize;
              preview.fileEncoding = attachment.attachmentEncoding;
              preview.fileIndex = attachment.attachmentIndex;
              preview.msgID = message.get("msgID");
              preview.folderID = message.get("folderID");
              preview.fileData = '';
              preview.previewType = 'detailmessage';
              preview.render();
            }
          }
        },
        events: {
          'click .attachmentLink': 'openAttachment',
          'click .showMoreMsgTo': 'showMoreMsgTo',
          'click .showMoreMsgCc': 'showMoreMsgCc'
        },
        showMoreMsgTo: function(e) {
          $(".detailMsgTo").removeClass("hidden");
          $(".showMoreMsgTo").addClass("hidden");
          this.loaded();
        },
        showMoreMsgCc: function(e) {
          $(".detailMsgCc").removeClass("hidden");
          $(".showMoreMsgCc").addClass("hidden");
          this.loaded();
        },
        openAttachment: function(e) {
          e.preventDefault();
          Shared.router.navigate(e.currentTarget.getAttribute("href"), {trigger: true});
        },
        loaded: function() {}
      });
      $__export('default', DetailMessageView);
    }
  };
});

$__System.register("46", ["6", "7", "8", "71"], function($__export) {
  "use strict";
  var __moduleName = "46";
  var _,
      Backbone,
      Shared,
      FoldersModel,
      FoldersCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      FoldersModel = $__m.default;
    }],
    execute: function() {
      FoldersCollection = Backbone.Collection.extend({
        model: FoldersModel,
        diskSizeUsed: 0,
        diskSizeLimit: 0,
        diskSizePercent: 0,
        _data: {},
        done: function(value) {
          this._data.done = value;
          return this;
        },
        fail: function(value) {
          this._data.fail = value;
          return this;
        },
        currentFolder: '',
        currentSearch: '',
        initialize: function(models, options) {
          this.api = Shared.api;
          this.model = FoldersModel;
          this.diskSizeUsed = 0;
          this.diskSizeLimit = 0;
          this.diskSizePercent = 0;
        },
        getSubFoldersFromFolderID: function(PfolderID) {
          var result = [];
          _.each(this.models, function(folder) {
            if (folder.get("folderParentID") == PfolderID) {
              result.push(folder);
            }
          });
          return result;
        },
        getFolderByID: function(PfolderID) {
          var result = [];
          _.each(this.models, function(folder) {
            if (folder.get("folderID") == PfolderID) {
              result = folder;
            }
          });
          return result;
        },
        renameFolder: function(PfolderName, PfolderID) {
          var that = this;
          that._data = {};
          var thatModel = FoldersModel;
          var data = this._data;
          this.api.resource('/Mail/RenameFolder').params({
            folderName: PfolderName,
            folderID: PfolderID
          }).done(function(result) {
            if (that._data.done) {
              that._data.done(result);
            }
          }).fail(function(error) {
            if (that._data.fail) {
              that._data.fail(error);
            }
          });
          return that;
        },
        addFolder: function(PfolderName, PparentFolderID) {
          var that = this;
          that._data = {};
          var thatModel = FoldersModel;
          var data = this._data;
          this.api.resource('/Mail/AddFolder').params({
            folderName: PfolderName,
            parentFolderID: PparentFolderID
          }).done(function(result) {
            if (that._data.done) {
              that._data.done(result);
            }
          }).fail(function(error) {
            if (that._data.fail) {
              that._data.fail(error);
            }
          });
          return that;
        },
        cleanTrash: function() {
          var that = this;
          that._data = {};
          var thatModel = FoldersModel;
          var data = this._data;
          this.api.resource('/Mail/CleanTrash').params({}).done(function(result) {
            if (that._data.done) {
              that._data.done(result);
            }
          }).fail(function(error) {
            if (that._data.fail) {
              that._data.fail(error);
            }
          });
          return that;
        },
        deleteFolder: function(PfolderID) {
          var that = this;
          that._data = {};
          var thatModel = FoldersModel;
          var data = this._data;
          this.api.resource('/Mail/DelFolder').params({folderID: PfolderID}).done(function(result) {
            if (that._data.done) {
              that._data.done(result);
            }
          }).fail(function(error) {
            if (that._data.fail) {
              that._data.fail(error);
            }
          });
          return that;
        },
        getFolders: function(PfolderID, Psearch) {
          var that = this;
          that._data = {};
          var thatModel = FoldersModel;
          var data = this._data;
          this.currentFolder = PfolderID;
          this.currentSearch = Psearch;
          this.api.resource('/Mail/Folders').params({
            folderID: PfolderID,
            search: Psearch
          }).done(function(result) {
            for (var i in result.folders) {
              var currentModel = new thatModel(result.folders[i]);
              that.add(currentModel);
            }
            that.diskSizeUsed = result.diskSizeUsed;
            that.diskSizeLimit = result.diskSizeLimit;
            that.diskSizePercent = result.diskSizePercent;
            Shared.folders = that;
            if (that._data.done) {
              that._data.done(that);
            }
          }).fail(function(error) {
            if (that._data.fail) {
              that._data.fail(error);
            }
          });
          return that;
        },
        execute: function() {
          return this.api.execute();
        }
      });
      $__export('default', FoldersCollection);
    }
  };
});

$__System.register("71", ["6", "7", "8"], function($__export) {
  "use strict";
  var __moduleName = "71";
  var _,
      Backbone,
      Shared,
      FoldersModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }],
    execute: function() {
      FoldersModel = Backbone.Model.extend({
        defaults: {
          folderName: "",
          folderParentID: "",
          folderHasChildren: 0,
          qtdUnreadMessages: 0,
          qtdMessages: 0,
          folderID: "INBOX",
          folderType: 0,
          diskSizeUsed: "",
          diskSizePercent: 0
        },
        initialize: function() {
          this.api = Shared.api;
        },
        route: function() {
          return '/Mail/Messages/1/0/' + this.get("folderID") + '#';
        }
      });
      $__export('default', FoldersModel);
    }
  };
});

$__System.register("72", ["5", "6", "7", "8", "34"], function($__export) {
  "use strict";
  var __moduleName = "72";
  var $,
      _,
      Backbone,
      Shared,
      Material,
      MessageListItemView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }],
    execute: function() {
      MessageListItemView = Backbone.View.extend({
        tagName: 'mail-thread',
        _shadow: null,
        initialize: function(data) {
          this.attributes = data.attributes;
          this.el["msg-id"] = data.attributes["msg-id"];
          this.el["folder-id"] = data.attributes["folder-id"];
        },
        events: {
          'open-message': "_openMessage",
          'thread-archive': "_archiveMessage",
          'thread-unarchive': "_unarchiveMessage",
          'thread-select': "_selectMessage",
          'message-starred': "_starredMessage"
        },
        resize: function() {
          this.el.resize();
        },
        _starredMessage: function(event) {
          var messageView = event.currentTarget;
          console.log("starredMessage:" + messageView.get("msg-id") + " in folder:" + messageView.get('folder-id'));
        },
        _selectMessage: function(event) {
          var messageView = event.currentTarget;
          if (messageView.selected == true) {
            console.log("selectMessage:" + messageView.get("msg-id") + " in folder:" + messageView.get('folder-id'));
          } else {
            console.log("unselectMessage:" + messageView.get("msg-id") + " in folder:" + messageView.get('folder-id'));
          }
        },
        _openMessage: function(event) {
          var messageView = event.currentTarget;
          var route = messageView.get("route");
          Shared.router.navigate(route, {trigger: true});
        },
        _archiveMessage: function(event) {
          var messageView = event.currentTarget;
          console.log("archiveMessage:" + messageView.get("msg-id") + " in folder:" + messageView.get('folder-id'));
        },
        _unarchiveMessage: function(event) {
          var messageView = event.currentTarget;
          console.log("unarchiveMessage:" + messageView.get("msg-id") + " in folder:" + messageView.get('folder-id'));
        },
        render: function() {
          $("#scrollerList").append(this.el);
        }
      });
      $__export('default', MessageListItemView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("73", [], function() {
  return "<% if ((Shared.isBuiltInExpresso()) && (1 == 0) ) { %>\n<% \n  _.each(messages, function(message){ \n   %>\n  <tr>\n      <td class=\"mdl-data-table__cell--non-numeric\" style=\"position: relative; overflow: hidden;\"><a href=\"<%=message.route()%>\" class=\"listItemLink\"><%= message.get(\"msgSubject\") %></a></td>\n      <td><%= message.get(\"msgFrom\").mailAddress %></td>\n      <td><%=message.getTimeAgo()%></td>\n      <td><%=message.getMessageSize()%></td>\n    </tr>\n<% }); %>\n<% } else { %>\n\n<% _.each(parentFolders, function(folder){ %>\n  <li>\n    <a href=\"<%=folder.route()%>\" name=\"<%=folder.route()%>\" data-toggle=\"collapse\" data-target=\"#menu\" class=\"listFolderItemLink\">\n      <% if (folder.get(\"folderType\") == 0) { %>\n        <div class=\"folder-icon  folder-inbox\"></div>\n      <% } %>\n      <% if (folder.get(\"folderType\") == 4) { %>\n        <div class=\"folder-icon folder-drafts\"></div>\n      <% } %>\n      <% if (folder.get(\"folderType\") == 1) { %>\n        <div class=\"folder-icon  folder-sent\"></div>\n      <% } %>\n      <% if (folder.get(\"folderType\") == 2) { %>\n        <div class=\"folder-icon  folder-blue\"></div>\n      <% } %>\n      <% if (folder.get(\"folderType\") == 3) { %>\n        <div class=\"folder-icon  folder-trash-full\"></div>\n      <% } %>\n      <% if (folder.get(\"folderType\") == 5) { %>\n        <div class=\"folder-icon  folder-blue\"></div>\n      <% } %>\n      <% if (folder.get(\"folderType\") == 6) { %>\n        <div class=\"folder-icon  folder-shared\"></div>\n      <% } %>\n      <% if (folder.get(\"qtdUnreadMessages\") != 0) { %><strong class=\"badge badge-info\" style=\"float: right; margin-top: 20px; margin-right: 10px;\"><%=folder.get(\"qtdUnreadMessages\")%></strong><% } %>\n      <h3 class=\"font-mid\" style=\"margin-left: 40px;\"><%=folder.get(\"folderName\")%></h3>\n    </a>\n  </li>\n<% }); %>\n<% \n\n  _.each(messages, function(message){ \n   %>\n   <li id=\"<%=message.listItemID()%>\" class=\"messageListItem <% if (message.get(\"msgID\") == msgIDSelected) { %>selected<%} %>\"> \n    <a href=\"<%=message.route()%>\" rowid=\"<%=message.listItemID()%>\" class=\"listItemLink\">\n        <div class=\"messageItemContainer\">\n          <div id=\"thread\" class=\"layout horizontal \">\n            <div class=\"flex layout horizontal\">\n              <div class=\"message-header layout vertical flex unread\">\n                <span class=\"layout horizontal center justified\">\n                  <span class=\"name\">\n                    <%= message.get(\"msgSubject\") %>\n                    <span class=\"messagecount\"></span>\n                  </span>\n                  <time><%=message.getTimeAgo()%></time>\n                </span>\n                <!-- <span class=\"subject\"></span> -->\n                <span id=\"lastline\" class=\"layout horizontal center justified\">\n                  <span class=\"snippet flex\"><%= message.get(\"msgFrom\").fullName %> &lt;<%= message.get(\"msgFrom\").mailAddress %>&gt;</span>\n                </span>\n              </div>\n              <% if (Shared.isDesktop()) { %>\n              <div id=\"actionicons\">\n                <button id=\"accbtn_reply\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\">\n                  <i class=\"material-icons\" role=\"presentation\">reply</i>\n                  <span class=\"visuallyhidden\">Responder</span>\n                </button>\n                <button id=\"accbtn_reply_all\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\">\n                  <i class=\"material-icons\" role=\"presentation\">reply_all</i>\n                  <span class=\"visuallyhidden\">Responder p/ Todos</span>\n                </button>\n                <button id=\"accbtn_forward\" class=\"mdl-button mdl-js-button mdl-js-ripple-effect mdl-button--icon\">\n                  <i class=\"material-icons\" role=\"presentation\">forward</i>\n                  <span class=\"visuallyhidden\">Encaminhar</span>\n                </button>\n              </div> \n              <% } %> \n            </div>\n          </div>\n        </div>\n    </a>\n  </li>\n  <!--<li id=\"<%=message.listItemID()%>\" <% if (message.get(\"msgID\") == msgIDSelected) { %>class=\"selected\"<%} %>> \n    <a href=\"<%=message.route()%>\" class=\"listItemLink\">\n      <div class=\"msg-list-images\">\n        <span class=\"font-small\" style=\"text-align: right; margin: 5px; font-size: 10px;\"><%=message.getTimeAgo()%></span>\n        <% if (message.get(\"msgHasAttachments\") == '1') { %>\n        <div class=\"icon-msg-details icon-msg-details-attachments\"></div>\n        <% } %>\n        <% if (message.get(\"msgFlagged\") == '1') { %>\n        <div class=\"icon-msg-details icon-msg-details-flagged\"></div>\n        <% } %>\n        <% if (message.get(\"msgForwarded\") == '1') { %>\n        <div class=\"icon-msg-details icon-msg-details-forwarded\"></div>\n        <% } %>\n        <div class=\"clear\"></div>\n      </div>\n      <% if ((message.get(\"msgSeen\") == '0') && (message.get(\"msgID\") != msgIDSelected)) { %>\n        <div id=\"<%=message.listItemID()%>_unread\" class=\"msg-unread\"></div>\n      <% } %>\n      <h3 class=\"font-mid\"><%= message.get(\"msgSubject\") %></h3>\n      <span class=\"font-small\"><%= message.get(\"msgFrom\").mailAddress %></span>\n    </a> \n  </li>-->\n<% }); %>\n<% } %>";
});

_removeDefine();
})();
$__System.register("74", ["5", "6", "7", "8", "73", "4c", "34", "72", "71"], function($__export) {
  "use strict";
  var __moduleName = "74";
  var $,
      _,
      Backbone,
      Shared,
      messagesListItemsTemplate,
      MessagesCollection,
      Material,
      MessagesListItemView,
      FoldersModel,
      MessagesListItemsView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      messagesListItemsTemplate = $__m.default;
    }, function($__m) {
      MessagesCollection = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }, function($__m) {
      MessagesListItemView = $__m.default;
    }, function($__m) {
      FoldersModel = $__m.default;
    }],
    execute: function() {
      MessagesListItemsView = Backbone.View.extend({
        tagName: 'mail-messages',
        _shadow: null,
        currentPageTitle: '',
        messageView: null,
        parentFolders: [],
        items: [],
        initialize: function(data) {
          this.attributes = data.attributes;
        },
        resize: function() {
          this.el.resize();
        },
        render: function(nextPage, nextPageItems) {
          if (nextPage) {
            this.el.addItems(nextPageItems);
          } else {
            $("#messagesList").empty().append(this.el);
          }
        },
        events: {
          'evt-open-message': "_openMessage",
          'evt-starred-message': "_starredMessage",
          'evt-select-messages': "_selectedMessages",
          'evt-open-folder': "_openFolder"
        },
        _selectedMessages: function(event) {
          var messagesView = event.currentTarget;
          this.messageView = messagesView;
          Shared.messagesView = messagesView;
          var that = this;
          var backButtonFunction = function() {
            Shared.menuView.enableBackButton(false);
            $("#currentPageTitle").html(that.currentPageTitle);
            $("#mainHeader").removeClass("selected-threads");
            jQuery.each($("mail-thread"), function(i, message) {
              if (message.selected) {
                message.selected = false;
                message.fire('thread-select', {thread: message});
              }
            });
          };
          Shared.backButtonClicked = backButtonFunction;
          var qtdMessagesSelected = Shared.messagesView.selectedMessages.length;
          var messages = Shared.messagesView.getSelectedMessages();
          if (qtdMessagesSelected != 0) {
            Shared.menuView.enableBackButton(true);
            if (this.currentPageTitle == '') {
              this.currentPageTitle = $("#currentPageTitle").html();
            }
            $("#currentPageTitle").html(qtdMessagesSelected);
            $("#mainHeader").addClass("selected-threads");
          } else {
            Shared.menuView.enableBackButton(false);
            $("#currentPageTitle").html(this.currentPageTitle);
            $("#mainHeader").removeClass("selected-threads");
          }
        },
        _starredMessage: function(event) {
          var messagesView = event.currentTarget;
          var currentMessage = messagesView.currentMessage;
          var flagType = 2;
          var msgSuccess = "Mensagem desmarcada de importante.";
          var msgFail = "Não foi possível desmarcar a mensagem.";
          if (currentMessage.starred) {
            flagType = 1;
            msgSuccess = "Mensagem marcada como importante.";
            msgFail = "Não foi possível marcar a mensagem.";
          }
          console.log("_starredMessage");
          console.log(currentMessage);
          var callbackSuccess = function(result) {
            Shared.showMessage({
              type: "success",
              icon: 'icon-expresso',
              title: msgSuccess,
              description: "",
              timeout: 3000,
              elementID: "#pageMessage"
            });
          };
          var callbackFail = function(error) {
            Shared.showMessage({
              type: "error",
              icon: 'icon-expresso',
              title: msgFail,
              description: "",
              timeout: 3000,
              elementID: "#pageMessage"
            });
            if (flagType == 1) {
              currentMessage.starred = false;
            } else {
              currentMessage.starred = true;
            }
          };
          var collection = new MessagesCollection();
          collection.flagMessage(currentMessage.folderid, currentMessage.msgid, flagType, callbackSuccess, callbackFail);
        },
        _openFolder: function(event) {
          var messagesView = event.currentTarget;
          console.log("_openFolder");
          console.log(messagesView.currentFolder);
          var folder = new FoldersModel({folderId: messagesView.currentFolder.folderId});
          folder.set('folderID', messagesView.currentFolder.folderId);
          Shared.router.navigate(folder.route(), {trigger: true});
        },
        _openMessage: function(event) {
          Shared.menuView.enableBackButton(false);
          $("#currentPageTitle").html(this.currentPageTitle);
          $("#mainHeader").removeClass("selected-threads");
          var messagesView = event.currentTarget;
          Shared.router.navigate(messagesView.currentMessage.route, {trigger: true});
        }
      });
      $__export('default', MessagesListItemsView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("75", [], function() {
  return "<div id=\"pull-to-action-loader\"></div>\n<ul id=\"messagesList\"></ul>";
});

_removeDefine();
})();
$__System.register("76", ["5", "6", "7", "8", "75", "74", "72", "46", "4c", "a", "70", "24", "6c", "34", "9", "6b"], function($__export) {
  "use strict";
  var __moduleName = "76";
  var $,
      _,
      Backbone,
      Shared,
      messagesListTemplate,
      MessagesListItemsView,
      MessagesListItemView,
      FoldersCollection,
      MessagesCollection,
      LoadingView,
      DetailMessageView,
      PullToActionView,
      IronScrollTresholdView,
      Material,
      moment,
      moment_ptBR,
      MessagesListView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      messagesListTemplate = $__m.default;
    }, function($__m) {
      MessagesListItemsView = $__m.default;
    }, function($__m) {
      MessagesListItemView = $__m.default;
    }, function($__m) {
      FoldersCollection = $__m.default;
    }, function($__m) {
      MessagesCollection = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      DetailMessageView = $__m.default;
    }, function($__m) {
      PullToActionView = $__m.default;
    }, function($__m) {
      IronScrollTresholdView = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }, function($__m) {
      moment = $__m.default;
    }, function($__m) {
      moment_ptBR = $__m.default;
    }],
    execute: function() {
      MessagesListView = Backbone.View.extend({
        currentFolder: [],
        parentFolders: [],
        elementID: "#content",
        detailElementID: "#contentDetail",
        folderID: 'INBOX',
        msgID: '',
        forceReload: "0",
        search: '',
        page: 1,
        doneRoute: '',
        enabledDesktopVersion: false,
        messagesListItemsView: null,
        render: function() {
          this.elementID = "#content";
          var that = this;
          var beforeRenderCallback = function(colection) {
            Shared.setCurrentPageTitle(that.currentFolder.get("folderName"));
            var newData = {
              folderID: that.folderID,
              msgID: that.msgID,
              currentFolder: that.currentFolder,
              collection: colection,
              _: _,
              Shared: Shared,
              enabledDesktopVersion: that.enabledDesktopVersion
            };
            if (!colection.length) {
              if (Shared.isTabletResolution()) {
                if (Shared.newMessageIntent) {
                  Shared.newMessageIntent = false;
                  Shared.router.navigate("/Mail/Message/New", {trigger: true});
                } else {
                  Shared.router.navigate("/Mail/Messages/0/0/" + that.folderID + "#", {trigger: true});
                }
              }
            }
            var htmlTemplate = _.template(messagesListTemplate);
            var htmlWithData = htmlTemplate(newData);
            that.$el.html(htmlWithData);
            $(that.elementID).empty().append(that.$el);
            var refreshFunction = function() {
              that.page = 1;
              $("#messagesList").empty();
              that.getMessages(that.folderID, that.search, that.page, false, true);
            };
            var pullToAction = new PullToActionView({
              refreshAction: refreshFunction,
              container: '#pull-to-action-loader'
            });
            pullToAction.render();
          };
          var doneFunction = function() {
            if (Shared.newMessageIntent == false) {
              Shared.menuView.renderContextMenu('messageList', {
                folderID: that.folderID,
                folderName: that.currentFolder.folderName,
                folderType: that.currentFolder.get("folderType"),
                qtdMessages: 0
              });
            }
            if (((Shared.isTabletResolution()) && (that.forceReload == "1")) || ((!Shared.isTabletResolution()) && (Shared.gotoRoute != false))) {
              if (Shared.newMessageIntent == true) {
                Shared.newMessageIntent = false;
                Shared.router.navigate("/Mail/Message/New", {trigger: true});
              } else {
                if (that.msgID != undefined) {
                  var detailMessageView = new DetailMessageView();
                  detailMessageView.folderID = that.folderID;
                  detailMessageView.msgID = that.msgID;
                  Shared.menuView.renderContextMenu('messageList', {
                    folderID: that.folderID,
                    folderName: that.currentFolder.folderName,
                    folderType: that.currentFolder.get("folderType"),
                    qtdMessages: 0
                  });
                  detailMessageView.render();
                }
              }
            }
            Shared.setDefaultIMListeners();
          };
          if (this.forceReload == "1") {
            var loadingView = new LoadingView({el: $(this.elementID)});
            loadingView.render();
            var loadingView = new LoadingView({el: $(this.detailElementID)});
            loadingView.render();
            that.getMessages(that.folderID, that.search, that.page, false, false, beforeRenderCallback, doneFunction);
          } else {
            var loadingView = new LoadingView({el: $(this.detailElementID)});
            loadingView.render();
            var detailMessageView = new DetailMessageView();
            detailMessageView.folderID = that.folderID;
            detailMessageView.msgID = that.msgID;
            detailMessageView.render();
          }
        },
        events: {
          "keydown #searchField": "searchMessage",
          "lower-trigger": "loadNextPage"
        },
        loadNextPage: function(e) {
          this.pullUpAction();
        },
        searchMessage: function(e) {
          if (e.which == 13 && !e.shiftKey) {
            this.search = $('#searchField').val();
            pullDownEl = document.getElementById('pullDown');
            pullDownEl.className = 'loading';
            pullDownEl.querySelector('.pullDownLabel').innerHTML = 'Carregando...';
            this.pullDownAction();
          }
        },
        selectFirstMessage: function() {
          var firstMessage = this.collection[0];
          if (firstMessage) {
            $("#" + firstMessage.listItemID()).addClass("selected");
            Shared.router.navigate(firstMessage.route(), {trigger: true});
          }
        },
        getMessages: function(pFolderID, pSearch, pPage, appendAtEnd, ignoreCache, beforeRenderCallback, doneCallback) {
          var messagesData = new MessagesCollection();
          var foldersCollection = new FoldersCollection();
          var index = 0;
          var that = this;
          foldersCollection.getFolders(this.folderID, this.search).done(function(foldersData) {
            var currentFolder = foldersData.getFolderByID(that.folderID);
            var parentFolders = foldersData.getSubFoldersFromFolderID(that.folderID);
            that.currentFolder = currentFolder;
            that.parentFolders = parentFolders;
            if (ignoreCache == true) {
              messagesData.ignoreCache(true);
            }
            messagesData.getMessagesInFolder(pFolderID, '', pSearch, pPage).done(function(data) {
              if (appendAtEnd == true) {}
              that.collection = data.models;
              if (beforeRenderCallback) {
                beforeRenderCallback(that.collection);
              }
              var messages = data.models;
              var parentFolders = that.parentFolders;
              var arr_items = [];
              var currentIndex = 0;
              if (!appendAtEnd) {
                _.each(parentFolders, function(folder) {
                  var attrs = {};
                  currentIndex = currentIndex + 1;
                  attrs["index"] = currentIndex + 1;
                  attrs["isFolder"] = true;
                  attrs["folderID"] = folder.get("folderID");
                  attrs["folderName"] = folder.get("folderName");
                  attrs["route"] = folder.route();
                  arr_items.push(attrs);
                });
              }
              _.each(messages, function(message) {
                var attrs = {};
                currentIndex = currentIndex + 1;
                attrs["index"] = (((pPage - 1) * Shared.settings.resultsPerPage) + parentFolders.length) + currentIndex;
                attrs["isFolder"] = false;
                attrs["subject"] = message.get("msgSubject");
                attrs["from"] = message.get("msgFrom").fullName;
                attrs["date"] = message.getTimeAgo();
                attrs["bodyresume"] = message.get("msgBodyResume");
                attrs["msgID"] = message.get("msgID");
                attrs["folderID"] = message.get("folderID");
                attrs["route"] = message.route();
                if (message.get("msgFlagged") == "1") {
                  attrs["starred"] = true;
                } else {
                  attrs["starred"] = false;
                }
                if (message.get("msgSeen") == "0") {
                  attrs["unread"] = true;
                } else {
                  attrs["unread"] = false;
                }
                arr_items.push(attrs);
              });
              if (!appendAtEnd) {
                var attrs = [];
                attrs["items"] = JSON.stringify(arr_items);
                that.messagesListItemsView = new MessagesListItemsView({attributes: attrs});
              }
              if ((that.msgID == "") || (that.msgID == "0")) {
                if (data.length) {
                  if (Shared.isTabletResolution()) {
                    that.msgID = data.models[0].get("msgID");
                  }
                }
              }
              that.messagesListItemsView.render(appendAtEnd, arr_items);
              if (doneCallback) {
                doneCallback();
              }
            }).fail(function(result) {
              Shared.handleErrors(result.error);
              $(that.elementID).empty();
              $(that.detailElementID).empty();
              return false;
            }).execute();
          }).fail(function(result) {
            Shared.handleErrors(result.error);
            $(that.elementID).empty();
            $(that.detailElementID).empty();
            return false;
          }).execute();
        },
        pullDownAction: function() {
          this.page = 1;
          $("#scrollerList").empty();
          getMessages(this.folderID, this.search, this.page, false, true);
        },
        pullUpAction: function() {
          this.page = this.page + 1;
          this.getMessages(this.folderID, this.search, this.page, true, false);
        }
      });
      $__export('default', MessagesListView);
    }
  };
});

$__System.register("77", ["6", "7", "8"], function($__export) {
  "use strict";
  var __moduleName = "77";
  var _,
      Backbone,
      Shared,
      ServerModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }],
    execute: function() {
      ServerModel = Backbone.Model.extend({
        defaults: {
          serverID: "",
          serverName: "",
          serverDescription: "",
          serverUrl: "",
          serverContext: "",
          serverStatus: "1"
        },
        initialize: function() {},
        getServerURL: function() {
          return this.get("serverUrl").concat(this.get("serverContext"));
        }
      });
      $__export('default', ServerModel);
    }
  };
});

$__System.register("78", ["6", "7", "8", "77", "79"], function($__export) {
  "use strict";
  var __moduleName = "78";
  var _,
      Backbone,
      Shared,
      ServerModel,
      expressoAPI,
      ServersCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      ServerModel = $__m.default;
    }, function($__m) {
      expressoAPI = $__m.default;
    }],
    execute: function() {
      ServersCollection = Backbone.Collection.extend({
        model: ServerModel,
        _data: {},
        done: function(value) {
          this._data.done = value;
          return this;
        },
        fail: function(value) {
          this._data.fail = value;
          return this;
        },
        initialize: function(models, options) {
          this.api = Shared.api;
          this.model = ServerModel;
        },
        getServersFromExpressoLivre: function() {
          var that = this;
          var data = this._data;
          var isPhoneGap = Shared.api.phoneGap();
          var serverURL = Shared.ComunityServerURL;
          if (isPhoneGap) {
            Shared.api.context(serverURL).crossdomain(serverURL);
          } else {
            Shared.api.context(Shared.context).crossdomain(serverURL);
          }
          Shared.api.resource('AvailableServers').params({}).done(function(result) {
            for (var i in result.servers) {
              var currentModel = new ServerModel(result.servers[i]);
              that.add(currentModel);
            }
            if (that._data.done) {
              that._data.done(that);
            }
            return false;
          }).fail(function(error) {
            if (that._data.fail) {
              that._data.fail(error);
            }
            return false;
          }).execute();
        },
        getServers: function() {
          var that = this;
          var data = this._data;
          var isPhoneGap = Shared.api.phoneGap();
          if (!isPhoneGap) {
            var jqxhr = $.ajax("servers.json").done(function(tempData) {
              try {
                var result = jQuery.parseJSON(tempData).result;
                for (var i in result.servers) {
                  var currentModel = new ServerModel(result.servers[i]);
                  that.add(currentModel);
                }
                if (that._data.done) {
                  that._data.done(that);
                }
              } catch (error) {
                that.getServersFromExpressoLivre();
              }
            });
          } else {
            that.getServersFromExpressoLivre();
          }
          return that;
        }
      });
      $__export('default', ServersCollection);
    }
  };
});

$__System.register("26", ["5", "6", "7", "8", "4c", "78", "76", "70", "6a", "24", "61", "34", "5c", "21", "5d", "60", "58", "5e", "5f", "5a"], function($__export) {
  "use strict";
  var __moduleName = "26";
  var $,
      _,
      Backbone,
      Shared,
      MessagesCollection,
      ServersCollection,
      MessagesListView,
      DetailMessageView,
      MenuView,
      PullToActionView,
      homeTemplate,
      Material,
      jquery_migrate,
      jqueryui,
      wijmo,
      wijdialog,
      tinysort,
      contextmenu,
      linkify,
      im,
      HomeView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      MessagesCollection = $__m.default;
    }, function($__m) {
      ServersCollection = $__m.default;
    }, function($__m) {
      MessagesListView = $__m.default;
    }, function($__m) {
      DetailMessageView = $__m.default;
    }, function($__m) {
      MenuView = $__m.default;
    }, function($__m) {
      PullToActionView = $__m.default;
    }, function($__m) {
      homeTemplate = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }, function($__m) {
      jquery_migrate = $__m.default;
    }, function($__m) {
      jqueryui = $__m.default;
    }, function($__m) {
      wijmo = $__m.default;
    }, function($__m) {
      wijdialog = $__m.default;
    }, function($__m) {
      tinysort = $__m.default;
    }, function($__m) {
      contextmenu = $__m.default;
    }, function($__m) {
      linkify = $__m.default;
    }, function($__m) {
      im = $__m.default;
    }],
    execute: function() {
      HomeView = Backbone.View.extend({
        folderID: 'INBOX',
        msgID: '0',
        search: '',
        page: '1',
        profile: null,
        menuView: null,
        menuOpen: false,
        initialize: function() {
          $(window).on("resize", this.refreshWindow);
          var mView = new MenuView();
          this.menuView = mView;
          Shared.menuView = mView;
        },
        remove: function() {
          $(window).off("resize", this.refreshWindow);
          Backbone.View.prototype.remove.apply(this, arguments);
        },
        render: function() {
          var newData = {
            _: _,
            Shared: Shared
          };
          var htmlTemplate = _.template(homeTemplate);
          var compiledTemplate = htmlTemplate(newData);
          this.$el.html(compiledTemplate);
          this.$el.css("width", "100%");
          this.$el.css("height", "100%");
          $("#mainAppPageContent").empty().append(this.$el);
          window.componentHandler.upgradeDom();
          var that = this;
          Shared.api.getLocalStorageValue("expresso", function(expressoValue) {
            if (expressoValue != null) {
              Shared.profile = expressoValue.profile;
              var userName = expressoValue.username;
              var passwd = Shared.password;
              Shared.api.phoneGap(expressoValue.phoneGap);
              if (expressoValue.phoneGap) {
                Shared.api.context(expressoValue.serverAPI).crossdomain(expressoValue.serverAPI);
              } else {
                Shared.api.context(Shared.context).crossdomain(expressoValue.serverAPI);
              }
            }
            if (Shared.userHasModule("chat")) {
              Shared.api.resource('Services/Chat').params({}).done(function(resultChat) {
                Shared.im_resource = resultChat.A;
                Shared.im_url = resultChat.B;
                Shared.im_domain = resultChat.C;
                var im_userName = resultChat.D;
                var im_password = resultChat.E + "==";
                $("#chatDesktop").im({
                  "resource": "JABBER_IM_PR",
                  "url": Shared.im_url,
                  "domain": Shared.im_domain,
                  "username": im_userName,
                  "password": im_password,
                  "debug": false,
                  "soundPath": "libs/messenger/",
                  "height": $("#chatContactsWindow").height() - $(".chat-title").height() - 30,
                  "minimizeZone": "minimizedWindows"
                });
              }).execute();
            }
            Shared.api.resource('ExpressoVersion').params({}).done(function(resultExpressoVersion) {
              Shared.apiVersion = resultExpressoVersion.apiVersion;
              Shared.expressoVersion = resultExpressoVersion.expressoVersion;
              Shared.refreshSettings();
              that.menuView = new MenuView({el: $("#scrollerMenu")});
              that.menuView.profile = that.profile;
              that.menuView.render();
              if (Shared.isDesktop()) {
                that.refreshWindow();
              }
              Shared.setDefaultIMListeners();
              Shared.BlinkWindowTitle();
              if (Shared.gotoRoute == false) {
                if (Shared.userHasModule("mail")) {
                  if ((Shared.isSmartPhoneResolution()) && (Shared.newMessageIntent == true)) {
                    Shared.newMessageIntent = false;
                    Shared.router.navigate("/Mail/Message/New", {trigger: true});
                  } else {
                    that.menuView.selectMenu(1);
                    that.loadMessagesInFolder(that.folderID, that.search, '', '1');
                    that.loaded();
                  }
                } else {
                  if (Shared.userHasModule("calendar")) {
                    that.menuView.selectMenu(2);
                    Shared.router.navigate("/Calendar", {trigger: true});
                  } else {
                    if (Shared.userHasModule("catalog")) {
                      that.menuView.selectMenu(3);
                      Shared.router.navigate("/Contacts/Personal", {trigger: true});
                    } else {
                      if (Shared.userHasModule("chat")) {
                        that.menuView.selectMenu(4);
                        Shared.router.navigate("/Chat", {trigger: true});
                      } else {
                        that.menuView.selectMenu(5);
                        Shared.router.navigate("/Settings", {trigger: true});
                      }
                    }
                  }
                }
              } else {
                that.loaded();
              }
              Shared.scheduleCheckForNewMessages();
            }).execute();
          });
        },
        loadMessagesInFolder: function(Pfolder, Psearch, PmsgID, PforceReload) {
          this.msgID = PmsgID;
          Shared.menuView.setMailBadge(0);
          var messagesListView = new MessagesListView({
            folderID: Pfolder,
            search: Psearch,
            page: this.page,
            msgID: PmsgID
          });
          messagesListView.folderID = Pfolder;
          messagesListView.msgID = PmsgID;
          messagesListView.forceReload = PforceReload;
          messagesListView.render();
        },
        events: {
          "click #chat_toggleRoster": "toggleChat",
          "click .menuLink": "selectMenuItem",
          "click .listItemLink": "selectListItem",
          "click #mainHeader_back_button": "backButtonClick"
        },
        backButtonClick: function() {
          console.log("backButton");
          Shared.backButtonClicked();
        },
        selectListItem: function(e) {
          e.preventDefault();
          parent = $(e.target).parent();
          $('#scroller li').each(function() {
            $(this).removeClass('selected');
          });
          if (parent.hasClass("listItemLink")) {
            parent = parent.parent();
          }
          var rowid = e.currentTarget.getAttribute("rowid");
          if (rowid != undefined) {
            $("#" + rowid).addClass("selected");
          }
          Shared.router.navigate(e.currentTarget.getAttribute("href"), {trigger: true});
        },
        selectMenuItem: function(e) {
          e.preventDefault();
          Shared.router.navigate(e.currentTarget.getAttribute("href"), {trigger: true});
        },
        selectFolderItem: function(e) {
          e.preventDefault();
          Shared.router.navigate(e.currentTarget.getAttribute("href"), {trigger: true});
        },
        toggleMenuDesktop: function(e) {
          if (e != undefined) {
            e.preventDefault();
          }
        },
        toggleMenu: function(e) {
          if (e != undefined) {
            e.preventDefault();
          }
        },
        toggleContextMenu: function() {
          this.menuView.context.toggleMenu();
        },
        toggleChat: function(e) {
          if (e != undefined) {
            e.preventDefault();
          }
          var chatWidth = 250;
          var menuWidth = 0;
          if (!$("#mainPage").hasClass("is-small-screen")) {
            menuWidth = $("#menu").width();
          }
          var newPageWidth = $(window).width() - menuWidth;
          if ($("#chatContactsWindow").width() != 0) {
            $("#chatContactsWindow").animate({width: "0px"}, 200);
            $("#pageContent").animate({width: newPageWidth}, 200);
            $(".expresso-fab-button").animate({right: "16px"}, 200);
          } else {
            newPageWidth = newPageWidth - chatWidth;
            $("#chatContactsWindow").animate({width: chatWidth + "px"}, 200);
            $("#pageContent").animate({width: newPageWidth}, 200);
            $(".expresso-fab-button").animate({right: "266px"}, 200);
          }
        },
        refreshWindow: function() {
          var that = this;
          var doneResizing = function() {
            var menuWidth = 0;
            if (!$("#mainPage").hasClass("is-small-screen")) {
              menuWidth = $("#menu").width();
            }
            var newPageWidth = $(window).width() - menuWidth;
            var chatWidth = 250;
            if (Shared.isSmartPhoneResolution()) {
              $("#contentDetail").addClass("hidden");
            } else {
              $("#contentDetail").removeClass("hidden");
            }
            if (Shared.isDesktop()) {
              if ($("#chatContactsWindow").width() == 0) {
                $("#chatContactsWindow").animate({width: "0px"}, 200);
                $("#pageContent").animate({width: newPageWidth}, 200);
                $(".expresso-fab-button").animate({right: "16px"}, 200);
              } else {
                newPageWidth = newPageWidth - chatWidth;
                $("#chatContactsWindow").animate({width: chatWidth + "px"}, 200);
                $("#pageContent").animate({width: newPageWidth}, 200);
                $(".expresso-fab-button").animate({right: "266px"}, 200);
              }
            } else {
              $("#chatContactsWindow").animate({width: "0px"}, 200);
              $("#pageContent").animate({width: newPageWidth}, 200);
              $(".expresso-fab-button").animate({right: "16px"}, 200);
            }
          };
          clearTimeout(this.idResize);
          this.idResize = setTimeout(doneResizing, 500);
        },
        loaded: function() {
          if (Shared.gotoRoute != false) {
            Shared.router.navigate(Shared.gotoRoute, {trigger: true});
            Shared.gotoRoute = false;
          }
        }
      });
      $__export('default', HomeView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("7a", [], function() {
  return "<div class=\"expresso-loading-spacer\">\n    <div class=\"mdl-spinner mdl-spinner--single-color mdl-js-spinner is-active\"></div>\n</div>\n";
});

_removeDefine();
})();
$__System.register("a", ["5", "6", "7", "8", "7a", "34"], function($__export) {
  "use strict";
  var __moduleName = "a";
  var $,
      _,
      Backbone,
      Shared,
      loadingTemplate,
      Material,
      LoadingView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      loadingTemplate = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }],
    execute: function() {
      LoadingView = Backbone.View.extend({
        el: $("#content"),
        render: function() {
          if (Shared.menuView) {
            Shared.menuView.renderContextMenu(0, []);
          }
          var compiledTemplate = _.template(loadingTemplate);
          this.$el.html(compiledTemplate);
          window.componentHandler.upgradeDom();
        },
        loaded: function() {}
      });
      $__export('default', LoadingView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("7b", [], function() {
  return "<div id=\"pageMessage\"></div>\n<div class=\"login-center\" style=\"width: 250px; margin-top: 20px;\">\n      <div class=\"login-logo animation-scale-fadein\"></div>\n</div>\n<div class=\"login-center\" style=\"width: 250px; margin-top: 20px;\">\n      <form method=\"POST\" action=\"#/Home\" onsubmit=\"return false;\">\n            <div id=\"login-loading\" class=\"animation-falling mdl-card mdl-shadow--2dp\" style=\"width: 250px;\">\n              <div class=\"mdl-card__supporting-text\" style=\"\">\n                  <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label textfield-demo\">\n                        <% if (servers.length > 1) { %>\n                        <select id=\"serverURL\" name=\"serverURL\" class=\"mdl-textfield__input\" >\n                              <% _.each(servers, function(server){ %>\n                                    <option value=\"<%=server.getServerURL()%>\"><%=server.get(\"serverName\")%></option>\n                              <% }); %>\n                        </select>\n                        <label class=\"mdl-textfield__label\" for=\"serverURL\">Servidor</label>\n                        <% } else { %>\n                              <% _.each(servers, function(server){ %>\n                                    <input type=\"hidden\" id=\"serverURL\" name=\"serverURL\" value=\"<%=server.getServerURL()%>\" />\n                              <% }); %>\n                        <% } %>\n                  </div>\n                  <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                      <input id=\"username\" type=\"username\" name=\"username\" class=\"mdl-textfield__input\" type=\"text\" id=\"username\" />\n                      <label class=\"mdl-textfield__label\" for=\"username\">Usu&aacute;rio</label>\n                  </div>\n                  <div class=\"mdl-textfield mdl-js-textfield mdl-textfield--floating-label\">\n                      <input id=\"password\" type=\"password\" name=\"password\" class=\"mdl-textfield__input\" type=\"text\" id=\"username\" />\n                      <label class=\"mdl-textfield__label\" for=\"username\">Senha</label>\n                  </div>\n              </div>\n              <div class=\"mdl-card__actions mdl-card--border\">\n                   <button id=\"btn-login\" class=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent\" style=\"width: 100%;\">\n                    Conectar\n                   </button>\n                </div>\n            </div>\n      </form>\n</div>\n<div class=\"login-center\" style=\"width: 250px; margin-top: 20px;\">\n      <div class=\"login-company-logo animation-scale-fadein\"></div>\n      <% if (Shared.isPhonegap()) { %>\n            <div id=\"helpLink\" class=\"help\">? Ajuda/Perguntas Frequentes</div>\n      <% } %>\n</div>\n<paper-toast id=\"toastMessageLogin\" text=\"Bem vindo ao Expresso...\" style=\"z-index: 10000;\" opened></paper-toast>";
});

_removeDefine();
})();
$__System.register("4c", ["6", "7", "8", "4b"], function($__export) {
  "use strict";
  var __moduleName = "4c";
  var _,
      Backbone,
      Shared,
      MessagesModel,
      MessagesCollection;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      MessagesModel = $__m.default;
    }],
    execute: function() {
      MessagesCollection = Backbone.Collection.extend({
        model: MessagesModel,
        _data: {},
        done: function(value) {
          this._data.done = value;
          return this;
        },
        fail: function(value) {
          this._data.fail = value;
          return this;
        },
        currentPage: 1,
        currentFolder: '',
        currentSearch: '',
        _ignoreCache: false,
        ignoreCache: function(value) {
          this._ignoreCache = value;
          return this;
        },
        initialize: function(models, options) {
          this.api = Shared.api;
          this.model = MessagesModel;
        },
        flagMessage: function(PfolderID, PmsgID, pFlagType, callbackSuccess, callbackFail) {
          this.model = new MessagesModel();
          this.model.flagMessage(PfolderID, PmsgID, pFlagType, callbackSuccess, callbackFail);
        },
        getMessagesInFolder: function(PfolderID, PmsgID, Psearch, Ppage) {
          var that = this;
          that._data = {};
          var thatModel = MessagesModel;
          var data = this._data;
          this.currentFolder = PfolderID;
          this.currentSearch = Psearch;
          var pageToSearch = null;
          if (!Ppage) {
            pageToSearch = that.currentPage;
          } else {
            pageToSearch = Ppage;
            this.currentPage = 1;
          }
          this.api.resource('/Mail/Messages').params({
            folderID: PfolderID,
            msgID: PmsgID,
            search: Psearch,
            resultsPerPage: Shared.settings.resultsPerPage,
            page: pageToSearch
          }).done(function(result) {
            for (var i in result.messages) {
              var thisMessage = new thatModel(result.messages[i]);
              that.add(thisMessage);
            }
            if (that._data.done) {
              that._data.done(that);
            }
            if (PfolderID == "INBOX") {
              Shared.lastCheckDate = Date.now();
            }
          }).fail(function(error) {
            if (that._data.fail) {
              that._data.fail(error);
            }
          });
          if (this._ignoreCache) {
            console.log("ignoreCache");
            this.api.ignoreCache(true);
          }
          return that;
        },
        getMessageByID: function(PfolderID, PmsgID) {
          return this.getMessagesInFolder(PfolderID, PmsgID, '', 1);
        },
        execute: function() {
          return this.api.execute();
        },
        getNextPage: function() {
          this.currentPage = this.currentPage + 1;
          return this.getMessagesInFolder(this.currentFolder, this.currentSearch, this.currentPage);
        }
      });
      $__export('default', MessagesCollection);
    }
  };
});

$__System.register("4b", ["6", "7", "8", "9"], function($__export) {
  "use strict";
  var __moduleName = "4b";
  var _,
      Backbone,
      Shared,
      moment,
      MessagesModel;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      moment = $__m.default;
    }],
    execute: function() {
      MessagesModel = Backbone.Model.extend({
        defaults: {
          msgID: "",
          folderID: "",
          msgDate: "",
          msgFrom: {
            "fullName": "",
            "mailAddress": ""
          },
          msgTo: [],
          msgReplyTo: [],
          msgCc: [],
          msgCC: [],
          msgBcc: [],
          msgSubject: "",
          msgHasAttachments: "",
          msgFlagged: "",
          msgForwarded: "",
          msgAnswered: "",
          msgDraft: "",
          msgSeen: "",
          msgSize: "",
          msgBodyResume: "",
          msgType: "",
          files: []
        },
        initialize: function() {
          this.api = Shared.api;
          this.readResource = '/Mail/Messages';
          this.updateResource = '';
          this.createResource = '/Mail/Send';
          this.deleteResource = '/Mail/DelMessage';
          this.flagResource = '/Mail/FlagMessage';
        },
        checkAttachments: function(showMessage) {
          var maxSize = Shared.max_upload_file_size;
          var maxAttachments = Shared.max_upload_file_qtd;
          var files = this.get("files");
          var sumSize = 0;
          var retVal = true;
          for (var i in files) {
            sumSize = sumSize + files[i].fileSize;
          }
          if ((sumSize / 1024) > maxSize) {
            var maxMsgSize = Shared.bytesToSize(maxSize * 1024, 0);
            retVal = "Sua mensagem está com mais de " + maxMsgSize + "!";
          }
          if (files.length > maxAttachments) {
            retVal = "Sua mensagem está com mais de " + maxAttachments + " anexos!";
          }
          if ((retVal != true) && (showMessage)) {
            if (showMessage) {
              Shared.showMessage({
                type: "warning",
                icon: 'icon-email',
                title: retVal,
                description: "",
                elementID: "#pageMessage"
              });
            }
          }
          return retVal;
        },
        clearFiles: function() {
          this.set("files", []);
        },
        addFile: function(fileID, fileData, fileName, dataType, fileSize) {
          var files = this.get("files");
          var file = {
            "fileID": fileID,
            "filename": decodeURI(fileName),
            "fileSize": fileSize,
            "src": fileData,
            "dataType": dataType
          };
          files.push(file);
          this.set("files", files);
          this.checkAttachments(true);
        },
        removeFileByID: function(fileID) {
          var files = this.get("files");
          var newFiles = [];
          for (var i in files) {
            if (files[i].fileID != fileID) {
              newFiles.push(files[i]);
            }
          }
          this.set("files", newFiles);
        },
        route: function() {
          return '/Mail/Messages/0/' + this.get("msgID") + "/" + this.get("folderID");
        },
        listItemID: function() {
          return 'Mail_Message_ListItem_' + this.get("folderID").split('/').join('_').split(' ').join('_') + "_" + this.get("msgID");
        },
        getEmailsRecipientsInArray: function(fieldName) {
          var resultString = '';
          var arrEmails = this.get(fieldName);
          for (var i in arrEmails) {
            resultString += this.getEmailStringForMessageRecipient(arrEmails[i]) + ", ";
          }
          return resultString;
        },
        getAttachmentSize: function(attachmentID) {
          var retVal = '';
          var that = this;
          _.each(this.get("msgAttachments"), function(msgAttachment) {
            if (msgAttachment.attachmentID == attachmentID) {
              retVal = Shared.bytesToSize(msgAttachment.attachmentSize, 0);
            }
          });
          return "" + retVal + "";
        },
        getMessageBody: function(signature, msgType, msgOriginal) {
          var msgBody = "";
          if (msgOriginal != undefined) {
            msgBody = msgOriginal.get("msgBody");
          } else {
            msgBody = this.get("msgBody");
          }
          var retString = "";
          if (signature == true) {
            retString = "<br><br>" + this.getUserSignature() + "<br><br>";
            if (msgType == 'forward') {
              retString = retString + msgOriginal.getForwardMessageString(msgOriginal);
              retString = this.nl2br(retString, '<br>');
              retString = retString + msgBody;
            } else {
              if (msgType == 'reply') {
                retString = retString + this.getReplyMessageString(msgOriginal);
                retString = this.nl2br(retString, '<br>');
                retString = retString + '<blockquote style="margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex; border-left-color: rgb(204, 204, 204); border-left-width: 1px; border-left-style: solid;">' + msgBody + '</blockquote>';
              }
            }
          } else {
            retString = msgBody;
          }
          return retString;
        },
        getReplyMessageString: function(message) {
          var date = message.get("msgDate");
          var retString = "Em " + date + ", " + message.getEmailStringForMessageRecipient(message.get("msgFrom"), true) + " escreveu: \n\n";
          return retString;
        },
        getForwardMessageString: function(message) {
          var retString = "---------- Mensagem encaminhada ----------\n";
          retString = retString + "Remetente: " + message.get("msgFrom").mailAddress + "\n";
          retString = retString + "Data: " + message.get("msgDate") + "\n";
          retString = retString + "Assunto: " + message.get("msgSubject") + "\n";
          retString = retString + "Para: ";
          _.each(message.get("msgTo"), function(msgRecipient) {
            retString = retString + message.getEmailStringForMessageRecipient(msgRecipient, true) + ", ";
          });
          if (message.get("msgCc").length) {
            retString = retString + "\nCc: ";
            _.each(message.get("msgCc"), function(msgRecipient) {
              retString = retString + message.getEmailStringForMessageRecipient(msgRecipient, true) + ", ";
            });
          }
          retString = retString + "\n";
          return retString;
        },
        getUserSignature: function() {
          if (Shared.settings.mailSignature == undefined) {
            Shared.settings.mailSignature = "Mensagem enviada pelo Expresso Mobile.";
          }
          if (Shared.settings.typeSignature != "html") {
            return this.nl2br(Shared.settings.mailSignature, '<br>');
          } else {
            return Shared.settings.mailSignature;
          }
        },
        nl2br: function(str, breakTag) {
          if (breakTag == undefined) {
            breakTag = '<br>';
          }
          return (str + '').replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, '$1' + breakTag + '');
        },
        getEmailStringForMessageRecipient: function(emailRecipient, htmlEntities) {
          var resultString = '';
          if (($.trim(emailRecipient.fullName) != '') && ($.trim(emailRecipient.fullName) != 'undefined')) {
            if (htmlEntities == undefined) {
              resultString += '"' + $.trim(emailRecipient.fullName) + '" <' + emailRecipient.mailAddress + ">";
            } else {
              resultString += '"' + $.trim(emailRecipient.fullName) + '" &lt;' + emailRecipient.mailAddress + "&gt;";
            }
          } else {
            resultString += emailRecipient.mailAddress + "";
          }
          return resultString;
        },
        htmlDecode: function(text) {
          var decoded = $('<div/>').html(text).text();
          return decoded;
        },
        htmlEncode: function(text) {
          return $('<div/>').text(text).html();
        },
        removeRecipient: function(fieldName, email) {
          var msgRecipient = this.get(fieldName);
          var newMsgRecipient = [];
          for (var i = 0,
              f = void 0; recipient = msgRecipient[i]; i++) {
            if (recipient.mailAddress != email) {
              newMsgRecipient.push(recipient);
            }
          }
          this.set(fieldName, newMsgRecipient);
        },
        addRecipient: function(fieldName, email, fullName) {
          var msgRecipient = this.get(fieldName);
          var recipient = {
            "fullName": fullName,
            "mailAddress": email
          };
          msgRecipient.push(recipient);
          this.set(fieldName, msgRecipient);
        },
        getTimeAgo: function() {
          var date = this.get("msgDate");
          return moment(date, "DD/MM/YYYY hh:mm").fromNow();
        },
        getQtdFiles: function() {
          var files = this.get("files");
          return files.length;
        },
        addBinaryFile: function(fileID, fileName, file, callbackSuccess) {
          var reader = new FileReader();
          var that = this;
          reader.fileName = fileName;
          reader.fileID = fileID;
          reader.fileSize = file.size;
          reader.onerror = function(e) {};
          reader.onprogress = function(e) {};
          reader.onabort = function(e) {};
          reader.onloadstart = function(e) {};
          reader.onload = function(e) {
            blobBinaryString = reader.result;
            that.addFile(reader.fileID, blobBinaryString, escape(reader.fileName), 'binary', reader.fileSize);
            if (callbackSuccess != undefined) {
              callbackSuccess(that);
            }
          };
          reader.readAsBinaryString(file);
        },
        addNewMessageFiles: function(callbackSuccess) {
          var that = this;
          var qtdFiles = 1;
          var failLoad = function(evt) {
            alert("Não foi possível anexar um arquivo!\n");
            callbackSuccess(that);
          };
          var gotFile = function(file) {
            var callback = function(message) {
              callbackSuccess(message);
            };
            qtdFiles = qtdFiles + 1;
            that.addBinaryFile(qtdFiles, file.name, file, callback);
          };
          var gotFileEntry = function(fileEntry) {
            fileEntry.file(gotFile, failLoad);
          };
          var gotFS = function(fileSystem) {
            var files = Shared.newMessageFiles;
            for (var i = 0,
                f = void 0; f = files[i]; i++) {
              var fileName = files[i];
              fileSystem.root.getFile(fileName, null, gotFileEntry, failLoad);
            }
          };
          if (Shared.newMessageFiles != false) {
            window.requestFileSystem(LocalFileSystem.PERSISTENT, 0, gotFS, failLoad);
          } else {
            callbackSuccess(that);
          }
        },
        send: function(callbackSuccess, callbackFail) {
          var that = this;
          var params = {
            msgTo: this.get("msgToString"),
            msgCcTo: this.get("msgCcString"),
            msgBccTo: this.get("msgBccString"),
            msgSubject: this.get("msgSubject"),
            msgBody: this.get("msgBody"),
            msgType: this.get("msgType")
          };
          var files = this.get("files");
          this.api.resource(this.createResource).params(params);
          this.api.clearFiles();
          for (var i in files) {
            this.api.addFile(files[i].src, files[i].filename, files[i].dataType, files[i].size);
          }
          this.api.dataType("fileupload").done(function(result) {
            callbackSuccess(result);
          }).fail(function(error) {
            callbackFail(error);
          }).execute();
        },
        getMessageSize: function() {
          return Shared.bytesToSize(this.get("msgSize"), 0);
        },
        delete: function(callbackSuccess, callbackFail) {
          var that = this;
          this.api.resource(this.deleteResource).params({
            folderID: this.get("folderID"),
            msgID: this.get("msgID")
          }).done(function(result) {
            callbackSuccess(result);
          }).fail(function(error) {
            callbackFail(error);
          }).execute();
        },
        flagMessage: function(PfolderID, PmsgID, PflagType, callbackSuccess, callbackFail) {
          var that = this;
          var reqParams = {
            folderID: PfolderID,
            msgID: PmsgID,
            flagType: PflagType
          };
          console.log(reqParams);
          this.api.resource(this.flagResource).params(reqParams).done(function(result) {
            callbackSuccess(result);
          }).fail(function(error) {
            callbackFail(error);
          }).execute();
        }
      });
      $__export('default', MessagesModel);
    }
  };
});

$__System.register("7c", ["7d", "5", "6", "7", "8", "4b", "4c", "7b", "a", "26", "7e", "53", "78", "43", "34"], function($__export) {
  "use strict";
  var __moduleName = "7c";
  var webcomponents,
      $,
      _,
      Backbone,
      Shared,
      MessagesModel,
      MessagesCollection,
      loginTemplate,
      LoadingView,
      HomeView,
      expressoIM,
      ExpressoCollection,
      ServersCollection,
      SettingsFaqListView,
      Material,
      LoginView;
  return {
    setters: [function($__m) {
      webcomponents = $__m.default;
    }, function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      MessagesModel = $__m.default;
    }, function($__m) {
      MessagesCollection = $__m.default;
    }, function($__m) {
      loginTemplate = $__m.default;
    }, function($__m) {
      LoadingView = $__m.default;
    }, function($__m) {
      HomeView = $__m.default;
    }, function($__m) {
      expressoIM = $__m.default;
    }, function($__m) {
      ExpressoCollection = $__m.default;
    }, function($__m) {
      ServersCollection = $__m.default;
    }, function($__m) {
      SettingsFaqListView = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }],
    execute: function() {
      LoginView = Backbone.View.extend({
        errors: false,
        render: function() {
          var collection = new ServersCollection();
          var that = this;
          collection.done(function(data) {
            var newData = {
              servers: data.models,
              Shared: Shared,
              _: _
            };
            var htmlTemplate = _.template(loginTemplate);
            var compiledTemplate = htmlTemplate(newData);
            that.$el.html(compiledTemplate);
            $("#mainAppPageContent").empty().append(that.$el);
            window.componentHandler.upgradeDom();
            if (Shared.betaVersion) {
              $("#beta").removeClass("hidden");
            }
            if ((Shared.isAndroid()) && (Shared.isPhonegap())) {
              if (Shared.forceLogout == false) {
                if (window.plugins.expresso != null) {
                  window.plugins.expresso.getAccounts("", function(accounts) {
                    Shared.automaticLoginAccounts = JSON.parse(accounts);
                    var JsonAccounts = Shared.automaticLoginAccounts;
                    if (Shared.automaticLoginAccounts.accounts.length >= 1) {
                      if ((Shared.forceAutomaticLoginInAccountName == false) || (Shared.automaticLoginAccounts.accounts.length == 1)) {
                        Shared.forceAutomaticLoginInAccountName = JsonAccounts.accounts[0].accountName;
                      }
                      for (var i = 0; i < JsonAccounts.accounts.length; i++) {
                        if (JsonAccounts.accounts[i] != undefined) {
                          if (Shared.forceAutomaticLoginInAccountName == JsonAccounts.accounts[i].accountName) {
                            that.automaticLogin(JsonAccounts.accounts[i]);
                          }
                        }
                      }
                    }
                  }, function() {});
                } else {}
              }
            }
          }).fail(function(error) {
            Shared.handleErrors(error);
          }).getServers();
        },
        events: {
          'click #btn-login': 'login',
          "keydown #username": "keydownUserName",
          "keydown #password": "keydownPassword",
          "click #helpLink": "showHelp"
        },
        showHelp: function(e) {
          var secondView = new SettingsFaqListView({});
          secondView.elementID = "#mainAppPageContent";
          secondView.render();
        },
        keydownUserName: function(e) {
          if ((e.which == 13 && !e.shiftKey)) {
            $("#password").focus();
          }
        },
        keydownPassword: function(e) {
          if ((e.which == 13 && !e.shiftKey)) {
            this.login();
          }
        },
        automaticLogin: function(Account) {
          this.loginUser(Account.accountName, Account.accountPassword, Account.accountAPIURL);
        },
        login: function(ev) {
          var userName = $("#username").val().toLowerCase();
          var passwd = $("#password").val();
          var serverURL = $("#serverURL").val();
          this.loginUser(userName, passwd, serverURL);
        },
        loginUser: function(userName, passwd, serverURL) {
          var isPhoneGap = Shared.api.phoneGap();
          if (isPhoneGap) {
            Shared.api.context(serverURL).crossdomain(serverURL);
          } else {
            Shared.api.context(Shared.context).crossdomain(serverURL);
          }
          this.errors = false;
          if (passwd == "") {
            Shared.showMessage({
              type: "error",
              icon: 'icon-expresso',
              title: "Senha não informada/inválida!",
              description: "",
              elementID: "#pageMessage"
            });
            this.errors = true;
          }
          if (userName == "") {
            Shared.showMessage({
              type: "error",
              icon: 'icon-expresso',
              title: "Usuário não informado/inválido!",
              description: "",
              elementID: "#pageMessage"
            });
            this.errors = true;
          }
          if (Shared.betaVersion) {
            var found = false;
            if (Shared.betaTesters.length > 0) {
              for (var i in Shared.betaTesters) {
                if (userName == Shared.betaTesters[i]) {
                  found = true;
                }
              }
              if (!found) {
                Shared.showMessage({
                  type: "error",
                  icon: 'icon-expresso',
                  title: "Este usuário não possui acesso a versão BETA!",
                  description: "",
                  elementID: "#pageMessage"
                });
                this.errors = true;
              }
            }
          }
          var that = this;
          that.userName = userName;
          that.serverURL = serverURL;
          if (!that.errors) {
            var loadingView = new LoadingView({el: $("#login-loading")});
            loadingView.render();
            Shared.api.resource('Login').params({
              user: userName,
              password: passwd
            }).done(function(result) {
              if (result.profile[0].contactApps.length != 0) {
                var expressoValues = {
                  auth: Shared.api.auth(),
                  "profile": result.profile[0],
                  username: userName,
                  phoneGap: isPhoneGap,
                  serverAPI: serverURL
                };
                Shared.password = passwd;
                Shared.profile = expressoValues.profile;
                Shared.api.setLocalStorageValue("expresso", expressoValues);
                if ((Shared.isAndroid()) && (Shared.isPhonegap())) {
                  if (Shared.service != undefined) {
                    Shared.service.setConfig(serverURL, Shared.api.auth(), userName, passwd);
                    Shared.service.startService();
                    setTimeout(function() {
                      Shared.service.setConfig(serverURL, Shared.api.auth(), userName, passwd);
                      Shared.service.enableTimer();
                    }, 10000);
                  } else {
                    console.log("undefined service");
                  }
                  if (window.plugins != undefined) {
                    window.plugins.expresso.createAccount({
                      accountName: userName,
                      accountPassword: passwd,
                      accountAuthToken: Shared.api.auth(),
                      accountAPIURL: serverURL
                    }, function(result) {}, function(error) {});
                  }
                }
                $("#login-loading").empty();
                $("#login-loading").addClass("animation-big-scale");
                setTimeout(function() {
                  var homeView = new HomeView();
                  homeView.profile = result.profile[0];
                  homeView.render();
                  Shared.showMessage({
                    type: "success",
                    icon: 'icon-expresso',
                    title: "Bem vindo ao Expresso!",
                    description: "",
                    timeout: 2000,
                    elementID: "#pageMessage"
                  });
                }, 1000);
                return false;
              } else {
                Shared.showMessage({
                  type: "error",
                  icon: 'icon-expresso',
                  title: "Este usuário não possui acesso a nenhum módulo neste servidor!",
                  description: "",
                  timeout: 0,
                  elementID: "#pageMessage"
                });
                setTimeout(function() {
                  Shared.router.navigate('', {trigger: true});
                }, 2000);
              }
            }).fail(function(result) {
              if (result.error.code == 5) {
                Shared.showMessage({
                  type: "error",
                  icon: 'icon-expresso',
                  title: "Usuário ou senha inválidos!",
                  description: "",
                  timeout: 0,
                  elementID: "#pageMessage"
                });
              } else {
                Shared.showMessage({
                  type: "error",
                  icon: 'icon-expresso',
                  title: "Não foi possível efetuar o Login!",
                  description: "",
                  timeout: 0,
                  elementID: "#pageMessage"
                });
              }
              setTimeout(function() {
                Shared.router.navigate('', {trigger: true});
              }, 2000);
              return false;
            });
            Shared.api.ignoreCache(true);
            var doLogin = function(currentValue) {
              if (currentValue != undefined) {
                if (currentValue.username != undefined) {
                  if ((currentValue.username != that.userName) || (currentValue.serverAPI != that.serverURL)) {
                    Shared.api.setLocalStorageValue("expressoCache", []);
                  }
                }
              }
              Shared.api.execute();
            };
            Shared.api.getLocalStorageValue("expresso", doLogin, doLogin);
          }
          return false;
        },
        logoutUser: function(forceLogout) {
          $("#mainAppPageContent").empty();
          var loadingView = new LoadingView({el: $("#mainAppPageContent")});
          loadingView.render();
          if (forceLogout == undefined) {
            forceLogout = true;
          }
          Shared.forceLogout = forceLogout;
          Shared.api.resource('Logout').done(function(result) {}).fail(function(error) {
            Shared.handleErrors(error);
          }).execute();
          Shared.scrollMenu = null;
          Shared.stopBlinkWindowTitle();
          Shared.api.getLocalStorageValue("expresso", function(expressoValue) {
            var isPhoneGap = Shared.api.phoneGap();
            expressoValue.auth = "";
            expressoValue.profile = "";
            expressoValue.username = "";
            expressoValue.password = "";
            expressoValue.phoneGap = isPhoneGap;
            expressoValue.serverAPI = "";
            if (Shared.isAndroid()) {
              Shared.service.disableTimer();
              Shared.service.stopService();
            }
            Shared.api.setLocalStorageValue("expresso", expressoValue);
          });
          Shared.router.navigate('Login', true);
        }
      });
      $__export('default', LoginView);
    }
  };
});

$__System.register("7f", ["5", "6", "7", "8", "7c", "26", "4f", "70", "4a", "45", "42", "32", "2c", "2a", "25", "1b", "1a", "15", "10", "1f", "f"], function($__export) {
  "use strict";
  var __moduleName = "7f";
  var $,
      _,
      Backbone,
      Shared,
      LoginView,
      HomeView,
      OfflineView,
      DetailMessageView,
      ComposeMessageView,
      EditFolderView,
      SettingsListView,
      ContactsListView,
      DetailsContactView,
      AddContactView,
      DeleteContactView,
      CalendarListView,
      CalendarDetailsView,
      CalendarEditEventView,
      CalendarDeleteEventView,
      CalendarFullDayListView,
      ChatListView,
      router;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      LoginView = $__m.default;
    }, function($__m) {
      HomeView = $__m.default;
    }, function($__m) {
      OfflineView = $__m.default;
    }, function($__m) {
      DetailMessageView = $__m.default;
    }, function($__m) {
      ComposeMessageView = $__m.default;
    }, function($__m) {
      EditFolderView = $__m.default;
    }, function($__m) {
      SettingsListView = $__m.default;
    }, function($__m) {
      ContactsListView = $__m.default;
    }, function($__m) {
      DetailsContactView = $__m.default;
    }, function($__m) {
      AddContactView = $__m.default;
    }, function($__m) {
      DeleteContactView = $__m.default;
    }, function($__m) {
      CalendarListView = $__m.default;
    }, function($__m) {
      CalendarDetailsView = $__m.default;
    }, function($__m) {
      CalendarEditEventView = $__m.default;
    }, function($__m) {
      CalendarDeleteEventView = $__m.default;
    }, function($__m) {
      CalendarFullDayListView = $__m.default;
    }, function($__m) {
      ChatListView = $__m.default;
    }],
    execute: function() {
      router = Backbone.Router.extend({
        routes: {
          'Home': 'homeView',
          'Login': 'loginView',
          'AutomaticLogin': 'automaticLoginView',
          'Offline': 'offlineView',
          'Switch/*accountName': 'switchAccount',
          'Mail/CleanTrash/*PfolderID': 'cleanTrashView',
          'Mail/AddFolder/*PfolderID': 'newFolderView',
          'Mail/RenameFolder/*PfolderID': 'renameFolderView',
          'Mail/DeleteFolder/*PfolderID': 'deleteFolderView',
          'Mail/Message/:secondViewName/:msgID/*folderID': 'composeMessageView',
          'Mail/Message/:secondViewName/:emailTo': 'composeMessageTo',
          'Mail/Message/:secondViewName': 'composeMessageView',
          'Mail/Messages/:forceReload/:msgID/*folderID': 'detailMessageView',
          'Contacts': 'contactsListView',
          'Contacts/Add/:contactID': 'addContactView',
          'Contacts/Delete/:contactID': 'deleteContactView',
          'Contacts/:secondViewName/OK': 'deleteContactsListView',
          'Contacts/:secondViewName/:contactID/:status': 'detailsContactView',
          'Contacts/:secondViewName/:contactID': 'detailsContactView',
          'Contacts/:secondViewName': 'contactsListView',
          'Calendar/FullDay/:year/:month/:day': 'calendarFullDayView',
          'Calendar/Events/Add/:year/:month/:day': 'calendarAddEventView',
          'Calendar/Events/Edit/:eventID': 'calendarEditEventView',
          'Calendar/Events/Delete/:eventID/:year/:month/:day': 'calendarDeleteEventView',
          'Calendar/Events/:eventID/:status': 'calendarDetailsView',
          'Calendar/Events/:eventID': 'calendarDetailsView',
          'Calendar/:year/:month/:day/:status': 'calendarListView',
          'Calendar/:year/:month/:day': 'calendarListView',
          'Calendar': 'calendarListView',
          'ChatReconnect': 'chatReconnectView',
          'Chat': 'chatListView',
          'Chat/:secondViewName': 'chatListView',
          'Settings': 'settingsListView',
          'Settings/:secondViewName': 'settingsListView',
          'Logout': 'logoutView',
          'ContextMenu': 'contextMenuView',
          '*actions': 'defaultAction'
        },
        start: function() {
          if (Shared.isBuiltInExpresso()) {
            Backbone.history.start({
              pushState: true,
              root: "/email/"
            });
          } else {
            Backbone.history.start({pushState: true});
          }
        },
        setupRouter: function() {
          var app_router = this;
          app_router.on('route:homeView', function(actions) {
            var homeView = new HomeView();
            homeView.render();
          });
          app_router.on('route:switchAccount', function(PaccountName) {
            Shared.forceAutomaticLoginInAccountName = PaccountName;
            var loginView = new LoginView();
            loginView.logoutUser(false);
          });
          app_router.on('route:newFolderView', function(PfolderID) {
            if (PfolderID == undefined) {
              PfolderID = "INBOX";
            }
            PfolderID = PfolderID.replace("#", "");
            var editFolderView = new EditFolderView();
            editFolderView.action = "addFolder";
            editFolderView.parentFolderID = PfolderID;
            editFolderView.render();
            Shared.menuView.closeMenu();
          });
          app_router.on('route:cleanTrashView', function(PfolderID) {
            if (PfolderID == undefined) {
              PfolderID = "INBOX";
            }
            PfolderID = PfolderID.replace("#", "");
            var editFolderView = new EditFolderView();
            editFolderView.cleanTrash(PfolderID);
            Shared.menuView.closeMenu();
          });
          app_router.on('route:renameFolderView', function(PfolderID) {
            if (PfolderID == undefined) {
              PfolderID = "INBOX";
            }
            PfolderID = PfolderID.replace("#", "");
            var editFolderView = new EditFolderView();
            editFolderView.action = "renameFolder";
            editFolderView.folderID = PfolderID;
            editFolderView.render();
            Shared.menuView.closeMenu();
          });
          app_router.on('route:deleteFolderView', function(PfolderID) {
            PfolderID = PfolderID.replace("#", "");
            var editFolderView = new EditFolderView();
            editFolderView.deleteFolder(PfolderID);
            Shared.menuView.closeMenu();
          });
          app_router.on('route:loginView', function(actions) {
            var loginView = new LoginView();
            loginView.render();
          });
          app_router.on('route:automaticLoginView', function(actions) {
            var loginView = new LoginView();
            loginView.automaticLogin();
          });
          app_router.on('route:offlineView', function(actions) {
            var offlineView = new OfflineView();
            offlineView.render();
          });
          app_router.on('route:logoutView', function(actions) {
            var loginView = new LoginView();
            loginView.logoutUser();
          });
          app_router.on('route:defaultAction', function(actions) {
            if (Shared.versionIsActive) {
              Shared.api.getLocalStorageValue("expresso", function(expressoValue) {
                if (expressoValue != null) {
                  var authValue = expressoValue.auth;
                  if (authValue != null) {
                    Shared.api.auth(authValue);
                  }
                  Shared.profile = expressoValue.profile;
                }
              });
              if ((Shared.api.auth())) {
                app_router.navigate("Home", {trigger: true});
              } else {
                app_router.navigate("Login", {trigger: true});
              }
            } else {
              app_router.navigate("Offline", {trigger: true});
            }
          });
          app_router.on('route:detailMessageView', function(PforceReload, PmsgID, PfolderID) {
            PfolderID = PfolderID.replace("#", "");
            var homeView = new HomeView({folderID: PfolderID});
            Shared.menuView.closeMenu();
            homeView.loadMessagesInFolder(PfolderID, '', PmsgID, PforceReload);
            if (PfolderID == 'INBOX') {
              Shared.menuView.selectMenu(1);
            } else {
              Shared.menuView.selectMenu(0);
            }
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:composeMessageView', function(secondViewName, msgID, folderID) {
            var composeMessageView = new ComposeMessageView();
            composeMessageView.secondViewName = secondViewName;
            composeMessageView.msgID = msgID;
            composeMessageView.folderID = folderID;
            composeMessageView.render();
            Shared.menuView.closeMenu();
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:composeMessageTo', function(secondViewName, emailTo) {
            var composeMessageView = new ComposeMessageView();
            composeMessageView.secondViewName = secondViewName;
            composeMessageView.emailTo = emailTo;
            composeMessageView.render();
            Shared.menuView.closeMenu();
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:settingsListView', function(secondViewName) {
            var settingsListView = new SettingsListView();
            settingsListView.secondViewName = secondViewName;
            settingsListView.render();
            Shared.menuView.selectMenu(5);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:contactsListView', function(secondViewName) {
            var contListView = new ContactsListView();
            contListView.secondViewName = secondViewName;
            contListView.render();
            Shared.menuView.selectMenu(3);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:deleteContactsListView', function(secondViewName) {
            var contactsListView = new ContactsListView();
            contactsListView.secondViewName = secondViewName;
            contactsListView.status = 'OK';
            contactsListView.render();
            Shared.menuView.selectMenu(3);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:detailsContactView', function(secondViewName, contactID, status) {
            var detailsContactView = new DetailsContactView();
            detailsContactView.secondViewName = secondViewName;
            detailsContactView.contactID = contactID;
            detailsContactView.status = status;
            detailsContactView.render();
            Shared.menuView.selectMenu(3);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:addContactView', function(contactID, email) {
            var addContactView = new AddContactView();
            addContactView.contactID = contactID;
            addContactView.email = email;
            addContactView.render();
            Shared.menuView.selectMenu(3);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:deleteContactView', function(contactID) {
            var deleteContactView = new DeleteContactView();
            deleteContactView.contactID = contactID;
            deleteContactView.render();
            Shared.menuView.selectMenu(3);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:calendarListView', function(year, month, day, status) {
            var calendarListView = new CalendarListView();
            calendarListView.year = year;
            calendarListView.month = month;
            calendarListView.day = day;
            calendarListView.fullDay = false;
            calendarListView.status = status;
            calendarListView.render();
            Shared.menuView.selectMenu(2);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:calendarFullDayView', function(year, month, day) {
            var calendarFullDayListView = new CalendarFullDayListView();
            calendarFullDayListView.year = year;
            calendarFullDayListView.month = month;
            calendarFullDayListView.day = day;
            calendarFullDayListView.fullDay = true;
            calendarFullDayListView.render();
            Shared.menuView.selectMenu(2);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:calendarDetailsView', function(eventID, status) {
            var calendarDetailsView = new CalendarDetailsView();
            calendarDetailsView.eventID = eventID;
            calendarDetailsView.status = status;
            calendarDetailsView.render();
            Shared.menuView.selectMenu(2);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:calendarEditEventView', function(eventID) {
            var calendarEditEventView = new CalendarEditEventView();
            calendarEditEventView.eventID = eventID;
            calendarEditEventView.render();
            Shared.menuView.selectMenu(2);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:calendarAddEventView', function(year, month, day) {
            var calendarAddEventView = new CalendarEditEventView({
              year: year,
              month: month,
              day: day
            });
            calendarAddEventView.render();
            Shared.menuView.selectMenu(2);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:calendarDeleteEventView', function(eventID, year, month, day) {
            var calendarDeleteEventView = new CalendarDeleteEventView();
            calendarDeleteEventView.eventID = eventID;
            calendarDeleteEventView.year = year;
            calendarDeleteEventView.month = month;
            calendarDeleteEventView.day = day;
            calendarDeleteEventView.render();
            Shared.menuView.selectMenu(2);
            Shared.deviceType(Shared.isSmartPhoneResolution());
          });
          app_router.on('route:chatListView', function(secondViewName) {});
          app_router.on('route:contextMenuView', function() {
            Shared.menuView.context.toggleMenu();
          });
          app_router.on('route:chatReconnectView', function() {
            Shared.chatReconnect();
          });
          return app_router;
        }
      });
      $__export('default', router);
    }
  };
});

$__System.registerDynamic("34", [], false, function(__require, __exports, __module) {
  var _retrieveGlobal = $__System.get("@@global-helpers").prepareGlobal(__module.id, null, null);
  (function() {
    ;
    (function() {
      "use strict";
      var componentHandler = {
        upgradeDom: function(optJsClass, optCssClass) {},
        upgradeElement: function(element, optJsClass) {},
        upgradeElements: function(elements) {},
        upgradeAllRegistered: function() {},
        registerUpgradedCallback: function(jsClass, callback) {},
        register: function(config) {},
        downgradeElements: function(nodes) {}
      };
      componentHandler = (function() {
        'use strict';
        var registeredComponents_ = [];
        var createdComponents_ = [];
        var downgradeMethod_ = 'mdlDowngrade';
        var componentConfigProperty_ = 'mdlComponentConfigInternal_';
        function findRegisteredClass_(name, optReplace) {
          for (var i = 0; i < registeredComponents_.length; i++) {
            if (registeredComponents_[i].className === name) {
              if (typeof optReplace !== 'undefined') {
                registeredComponents_[i] = optReplace;
              }
              return registeredComponents_[i];
            }
          }
          return false;
        }
        function getUpgradedListOfElement_(element) {
          var dataUpgraded = element.getAttribute('data-upgraded');
          return dataUpgraded === null ? [''] : dataUpgraded.split(',');
        }
        function isElementUpgraded_(element, jsClass) {
          var upgradedList = getUpgradedListOfElement_(element);
          return upgradedList.indexOf(jsClass) !== -1;
        }
        function upgradeDomInternal(optJsClass, optCssClass) {
          if (typeof optJsClass === 'undefined' && typeof optCssClass === 'undefined') {
            for (var i = 0; i < registeredComponents_.length; i++) {
              upgradeDomInternal(registeredComponents_[i].className, registeredComponents_[i].cssClass);
            }
          } else {
            var jsClass = (optJsClass);
            if (typeof optCssClass === 'undefined') {
              var registeredClass = findRegisteredClass_(jsClass);
              if (registeredClass) {
                optCssClass = registeredClass.cssClass;
              }
            }
            var elements = document.querySelectorAll('.' + optCssClass);
            for (var n = 0; n < elements.length; n++) {
              upgradeElementInternal(elements[n], jsClass);
            }
          }
        }
        function upgradeElementInternal(element, optJsClass) {
          if (!(typeof element === 'object' && element instanceof Element)) {
            throw new Error('Invalid argument provided to upgrade MDL element.');
          }
          var upgradedList = getUpgradedListOfElement_(element);
          var classesToUpgrade = [];
          if (!optJsClass) {
            var classList = element.classList;
            registeredComponents_.forEach(function(component) {
              if (classList.contains(component.cssClass) && classesToUpgrade.indexOf(component) === -1 && !isElementUpgraded_(element, component.className)) {
                classesToUpgrade.push(component);
              }
            });
          } else if (!isElementUpgraded_(element, optJsClass)) {
            classesToUpgrade.push(findRegisteredClass_(optJsClass));
          }
          for (var i = 0,
              n = classesToUpgrade.length,
              registeredClass; i < n; i++) {
            registeredClass = classesToUpgrade[i];
            if (registeredClass) {
              upgradedList.push(registeredClass.className);
              element.setAttribute('data-upgraded', upgradedList.join(','));
              var instance = new registeredClass.classConstructor(element);
              instance[componentConfigProperty_] = registeredClass;
              createdComponents_.push(instance);
              for (var j = 0,
                  m = registeredClass.callbacks.length; j < m; j++) {
                registeredClass.callbacks[j](element);
              }
              if (registeredClass.widget) {
                element[registeredClass.className] = instance;
              }
            } else {
              throw new Error('Unable to find a registered component for the given class.');
            }
            var ev = document.createEvent('Events');
            ev.initEvent('mdl-componentupgraded', true, true);
            element.dispatchEvent(ev);
          }
        }
        function upgradeElementsInternal(elements) {
          if (!Array.isArray(elements)) {
            if (typeof elements.item === 'function') {
              elements = Array.prototype.slice.call((elements));
            } else {
              elements = [elements];
            }
          }
          for (var i = 0,
              n = elements.length,
              element; i < n; i++) {
            element = elements[i];
            if (element instanceof HTMLElement) {
              upgradeElementInternal(element);
              if (element.children.length > 0) {
                upgradeElementsInternal(element.children);
              }
            }
          }
        }
        function registerInternal(config) {
          var widgetMissing = (typeof config.widget === 'undefined' && typeof config['widget'] === 'undefined');
          var widget = true;
          if (!widgetMissing) {
            widget = config.widget || config['widget'];
          }
          var newConfig = ({
            classConstructor: config.constructor || config['constructor'],
            className: config.classAsString || config['classAsString'],
            cssClass: config.cssClass || config['cssClass'],
            widget: widget,
            callbacks: []
          });
          registeredComponents_.forEach(function(item) {
            if (item.cssClass === newConfig.cssClass) {
              throw new Error('The provided cssClass has already been registered: ' + item.cssClass);
            }
            if (item.className === newConfig.className) {
              throw new Error('The provided className has already been registered');
            }
          });
          if (config.constructor.prototype.hasOwnProperty(componentConfigProperty_)) {
            throw new Error('MDL component classes must not have ' + componentConfigProperty_ + ' defined as a property.');
          }
          var found = findRegisteredClass_(config.classAsString, newConfig);
          if (!found) {
            registeredComponents_.push(newConfig);
          }
        }
        function registerUpgradedCallbackInternal(jsClass, callback) {
          var regClass = findRegisteredClass_(jsClass);
          if (regClass) {
            regClass.callbacks.push(callback);
          }
        }
        function upgradeAllRegisteredInternal() {
          for (var n = 0; n < registeredComponents_.length; n++) {
            upgradeDomInternal(registeredComponents_[n].className);
          }
        }
        function findCreatedComponentByNodeInternal(node) {
          for (var n = 0; n < createdComponents_.length; n++) {
            var component = createdComponents_[n];
            if (component.element_ === node) {
              return component;
            }
          }
        }
        function deconstructComponentInternal(component) {
          if (component && component[componentConfigProperty_].classConstructor.prototype.hasOwnProperty(downgradeMethod_)) {
            component[downgradeMethod_]();
            var componentIndex = createdComponents_.indexOf(component);
            createdComponents_.splice(componentIndex, 1);
            var upgrades = component.element_.getAttribute('data-upgraded').split(',');
            var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);
            upgrades.splice(componentPlace, 1);
            component.element_.setAttribute('data-upgraded', upgrades.join(','));
            var ev = document.createEvent('Events');
            ev.initEvent('mdl-componentdowngraded', true, true);
            component.element_.dispatchEvent(ev);
          }
        }
        function downgradeNodesInternal(nodes) {
          var downgradeNode = function(node) {
            deconstructComponentInternal(findCreatedComponentByNodeInternal(node));
          };
          if (nodes instanceof Array || nodes instanceof NodeList) {
            for (var n = 0; n < nodes.length; n++) {
              downgradeNode(nodes[n]);
            }
          } else if (nodes instanceof Node) {
            downgradeNode(nodes);
          } else {
            throw new Error('Invalid argument provided to downgrade MDL nodes.');
          }
        }
        return {
          upgradeDom: upgradeDomInternal,
          upgradeElement: upgradeElementInternal,
          upgradeElements: upgradeElementsInternal,
          upgradeAllRegistered: upgradeAllRegisteredInternal,
          registerUpgradedCallback: registerUpgradedCallbackInternal,
          register: registerInternal,
          downgradeElements: downgradeNodesInternal
        };
      })();
      componentHandler.ComponentConfigPublic;
      componentHandler.ComponentConfig;
      componentHandler.Component;
      componentHandler['upgradeDom'] = componentHandler.upgradeDom;
      componentHandler['upgradeElement'] = componentHandler.upgradeElement;
      componentHandler['upgradeElements'] = componentHandler.upgradeElements;
      componentHandler['upgradeAllRegistered'] = componentHandler.upgradeAllRegistered;
      componentHandler['registerUpgradedCallback'] = componentHandler.registerUpgradedCallback;
      componentHandler['register'] = componentHandler.register;
      componentHandler['downgradeElements'] = componentHandler.downgradeElements;
      window.componentHandler = componentHandler;
      window['componentHandler'] = componentHandler;
      window.addEventListener('load', function() {
        'use strict';
        if ('classList' in document.createElement('div') && 'querySelector' in document && 'addEventListener' in window && Array.prototype.forEach) {
          document.documentElement.classList.add('mdl-js');
          componentHandler.upgradeAllRegistered();
        } else {
          componentHandler.upgradeElement = function() {};
          componentHandler.register = function() {};
        }
      });
      if (!Date.now) {
        Date.now = function() {
          return new Date().getTime();
        };
        Date['now'] = Date.now;
      }
      var vendors = ['webkit', 'moz'];
      for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {
        var vp = vendors[i];
        window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];
        window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];
        window['requestAnimationFrame'] = window.requestAnimationFrame;
        window['cancelAnimationFrame'] = window.cancelAnimationFrame;
      }
      if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {
        var lastTime = 0;
        window.requestAnimationFrame = function(callback) {
          var now = Date.now();
          var nextTime = Math.max(lastTime + 16, now);
          return setTimeout(function() {
            callback(lastTime = nextTime);
          }, nextTime - now);
        };
        window.cancelAnimationFrame = clearTimeout;
        window['requestAnimationFrame'] = window.requestAnimationFrame;
        window['cancelAnimationFrame'] = window.cancelAnimationFrame;
      }
      var MaterialButton = function MaterialButton(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialButton'] = MaterialButton;
      MaterialButton.prototype.Constant_ = {};
      MaterialButton.prototype.CssClasses_ = {
        RIPPLE_EFFECT: 'mdl-js-ripple-effect',
        RIPPLE_CONTAINER: 'mdl-button__ripple-container',
        RIPPLE: 'mdl-ripple'
      };
      MaterialButton.prototype.blurHandler_ = function(event) {
        if (event) {
          this.element_.blur();
        }
      };
      MaterialButton.prototype.disable = function() {
        this.element_.disabled = true;
      };
      MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;
      MaterialButton.prototype.enable = function() {
        this.element_.disabled = false;
      };
      MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;
      MaterialButton.prototype.init = function() {
        if (this.element_) {
          if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            var rippleContainer = document.createElement('span');
            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            this.rippleElement_ = document.createElement('span');
            this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);
            rippleContainer.appendChild(this.rippleElement_);
            this.boundRippleBlurHandler = this.blurHandler_.bind(this);
            this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);
            this.element_.appendChild(rippleContainer);
          }
          this.boundButtonBlurHandler = this.blurHandler_.bind(this);
          this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);
          this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);
        }
      };
      MaterialButton.prototype.mdlDowngrade_ = function() {
        if (this.rippleElement_) {
          this.rippleElement_.removeEventListener('mouseup', this.boundRippleBlurHandler);
        }
        this.element_.removeEventListener('mouseup', this.boundButtonBlurHandler);
        this.element_.removeEventListener('mouseleave', this.boundButtonBlurHandler);
      };
      MaterialButton.prototype.mdlDowngrade = MaterialButton.prototype.mdlDowngrade_;
      MaterialButton.prototype['mdlDowngrade'] = MaterialButton.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialButton,
        classAsString: 'MaterialButton',
        cssClass: 'mdl-js-button',
        widget: true
      });
      var MaterialCheckbox = function MaterialCheckbox(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialCheckbox'] = MaterialCheckbox;
      MaterialCheckbox.prototype.Constant_ = {TINY_TIMEOUT: 0.001};
      MaterialCheckbox.prototype.CssClasses_ = {
        INPUT: 'mdl-checkbox__input',
        BOX_OUTLINE: 'mdl-checkbox__box-outline',
        FOCUS_HELPER: 'mdl-checkbox__focus-helper',
        TICK_OUTLINE: 'mdl-checkbox__tick-outline',
        RIPPLE_EFFECT: 'mdl-js-ripple-effect',
        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
        RIPPLE_CONTAINER: 'mdl-checkbox__ripple-container',
        RIPPLE_CENTER: 'mdl-ripple--center',
        RIPPLE: 'mdl-ripple',
        IS_FOCUSED: 'is-focused',
        IS_DISABLED: 'is-disabled',
        IS_CHECKED: 'is-checked',
        IS_UPGRADED: 'is-upgraded'
      };
      MaterialCheckbox.prototype.onChange_ = function(event) {
        this.updateClasses_();
      };
      MaterialCheckbox.prototype.onFocus_ = function(event) {
        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
      };
      MaterialCheckbox.prototype.onBlur_ = function(event) {
        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
      };
      MaterialCheckbox.prototype.onMouseUp_ = function(event) {
        this.blur_();
      };
      MaterialCheckbox.prototype.updateClasses_ = function() {
        this.checkDisabled();
        this.checkToggleState();
      };
      MaterialCheckbox.prototype.blur_ = function() {
        window.setTimeout(function() {
          this.inputElement_.blur();
        }.bind(this), this.Constant_.TINY_TIMEOUT);
      };
      MaterialCheckbox.prototype.checkToggleState = function() {
        if (this.inputElement_.checked) {
          this.element_.classList.add(this.CssClasses_.IS_CHECKED);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_CHECKED);
        }
      };
      MaterialCheckbox.prototype['checkToggleState'] = MaterialCheckbox.prototype.checkToggleState;
      MaterialCheckbox.prototype.checkDisabled = function() {
        if (this.inputElement_.disabled) {
          this.element_.classList.add(this.CssClasses_.IS_DISABLED);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
        }
      };
      MaterialCheckbox.prototype['checkDisabled'] = MaterialCheckbox.prototype.checkDisabled;
      MaterialCheckbox.prototype.disable = function() {
        this.inputElement_.disabled = true;
        this.updateClasses_();
      };
      MaterialCheckbox.prototype['disable'] = MaterialCheckbox.prototype.disable;
      MaterialCheckbox.prototype.enable = function() {
        this.inputElement_.disabled = false;
        this.updateClasses_();
      };
      MaterialCheckbox.prototype['enable'] = MaterialCheckbox.prototype.enable;
      MaterialCheckbox.prototype.check = function() {
        this.inputElement_.checked = true;
        this.updateClasses_();
      };
      MaterialCheckbox.prototype['check'] = MaterialCheckbox.prototype.check;
      MaterialCheckbox.prototype.uncheck = function() {
        this.inputElement_.checked = false;
        this.updateClasses_();
      };
      MaterialCheckbox.prototype['uncheck'] = MaterialCheckbox.prototype.uncheck;
      MaterialCheckbox.prototype.init = function() {
        if (this.element_) {
          this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);
          var boxOutline = document.createElement('span');
          boxOutline.classList.add(this.CssClasses_.BOX_OUTLINE);
          var tickContainer = document.createElement('span');
          tickContainer.classList.add(this.CssClasses_.FOCUS_HELPER);
          var tickOutline = document.createElement('span');
          tickOutline.classList.add(this.CssClasses_.TICK_OUTLINE);
          boxOutline.appendChild(tickOutline);
          this.element_.appendChild(tickContainer);
          this.element_.appendChild(boxOutline);
          if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            this.rippleContainerElement_ = document.createElement('span');
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);
            this.boundRippleMouseUp = this.onMouseUp_.bind(this);
            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);
            var ripple = document.createElement('span');
            ripple.classList.add(this.CssClasses_.RIPPLE);
            this.rippleContainerElement_.appendChild(ripple);
            this.element_.appendChild(this.rippleContainerElement_);
          }
          this.boundInputOnChange = this.onChange_.bind(this);
          this.boundInputOnFocus = this.onFocus_.bind(this);
          this.boundInputOnBlur = this.onBlur_.bind(this);
          this.boundElementMouseUp = this.onMouseUp_.bind(this);
          this.inputElement_.addEventListener('change', this.boundInputOnChange);
          this.inputElement_.addEventListener('focus', this.boundInputOnFocus);
          this.inputElement_.addEventListener('blur', this.boundInputOnBlur);
          this.element_.addEventListener('mouseup', this.boundElementMouseUp);
          this.updateClasses_();
          this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
        }
      };
      MaterialCheckbox.prototype.mdlDowngrade_ = function() {
        if (this.rippleContainerElement_) {
          this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);
        }
        this.inputElement_.removeEventListener('change', this.boundInputOnChange);
        this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);
        this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);
        this.element_.removeEventListener('mouseup', this.boundElementMouseUp);
      };
      MaterialCheckbox.prototype.mdlDowngrade = MaterialCheckbox.prototype.mdlDowngrade_;
      MaterialCheckbox.prototype['mdlDowngrade'] = MaterialCheckbox.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialCheckbox,
        classAsString: 'MaterialCheckbox',
        cssClass: 'mdl-js-checkbox',
        widget: true
      });
      var MaterialIconToggle = function MaterialIconToggle(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialIconToggle'] = MaterialIconToggle;
      MaterialIconToggle.prototype.Constant_ = {TINY_TIMEOUT: 0.001};
      MaterialIconToggle.prototype.CssClasses_ = {
        INPUT: 'mdl-icon-toggle__input',
        JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',
        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
        RIPPLE_CONTAINER: 'mdl-icon-toggle__ripple-container',
        RIPPLE_CENTER: 'mdl-ripple--center',
        RIPPLE: 'mdl-ripple',
        IS_FOCUSED: 'is-focused',
        IS_DISABLED: 'is-disabled',
        IS_CHECKED: 'is-checked'
      };
      MaterialIconToggle.prototype.onChange_ = function(event) {
        this.updateClasses_();
      };
      MaterialIconToggle.prototype.onFocus_ = function(event) {
        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
      };
      MaterialIconToggle.prototype.onBlur_ = function(event) {
        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
      };
      MaterialIconToggle.prototype.onMouseUp_ = function(event) {
        this.blur_();
      };
      MaterialIconToggle.prototype.updateClasses_ = function() {
        this.checkDisabled();
        this.checkToggleState();
      };
      MaterialIconToggle.prototype.blur_ = function() {
        window.setTimeout(function() {
          this.inputElement_.blur();
        }.bind(this), this.Constant_.TINY_TIMEOUT);
      };
      MaterialIconToggle.prototype.checkToggleState = function() {
        if (this.inputElement_.checked) {
          this.element_.classList.add(this.CssClasses_.IS_CHECKED);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_CHECKED);
        }
      };
      MaterialIconToggle.prototype['checkToggleState'] = MaterialIconToggle.prototype.checkToggleState;
      MaterialIconToggle.prototype.checkDisabled = function() {
        if (this.inputElement_.disabled) {
          this.element_.classList.add(this.CssClasses_.IS_DISABLED);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
        }
      };
      MaterialIconToggle.prototype['checkDisabled'] = MaterialIconToggle.prototype.checkDisabled;
      MaterialIconToggle.prototype.disable = function() {
        this.inputElement_.disabled = true;
        this.updateClasses_();
      };
      MaterialIconToggle.prototype['disable'] = MaterialIconToggle.prototype.disable;
      MaterialIconToggle.prototype.enable = function() {
        this.inputElement_.disabled = false;
        this.updateClasses_();
      };
      MaterialIconToggle.prototype['enable'] = MaterialIconToggle.prototype.enable;
      MaterialIconToggle.prototype.check = function() {
        this.inputElement_.checked = true;
        this.updateClasses_();
      };
      MaterialIconToggle.prototype['check'] = MaterialIconToggle.prototype.check;
      MaterialIconToggle.prototype.uncheck = function() {
        this.inputElement_.checked = false;
        this.updateClasses_();
      };
      MaterialIconToggle.prototype['uncheck'] = MaterialIconToggle.prototype.uncheck;
      MaterialIconToggle.prototype.init = function() {
        if (this.element_) {
          this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);
          if (this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            this.rippleContainerElement_ = document.createElement('span');
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);
            this.boundRippleMouseUp = this.onMouseUp_.bind(this);
            this.rippleContainerElement_.addEventListener('mouseup', this.boundRippleMouseUp);
            var ripple = document.createElement('span');
            ripple.classList.add(this.CssClasses_.RIPPLE);
            this.rippleContainerElement_.appendChild(ripple);
            this.element_.appendChild(this.rippleContainerElement_);
          }
          this.boundInputOnChange = this.onChange_.bind(this);
          this.boundInputOnFocus = this.onFocus_.bind(this);
          this.boundInputOnBlur = this.onBlur_.bind(this);
          this.boundElementOnMouseUp = this.onMouseUp_.bind(this);
          this.inputElement_.addEventListener('change', this.boundInputOnChange);
          this.inputElement_.addEventListener('focus', this.boundInputOnFocus);
          this.inputElement_.addEventListener('blur', this.boundInputOnBlur);
          this.element_.addEventListener('mouseup', this.boundElementOnMouseUp);
          this.updateClasses_();
          this.element_.classList.add('is-upgraded');
        }
      };
      MaterialIconToggle.prototype.mdlDowngrade_ = function() {
        if (this.rippleContainerElement_) {
          this.rippleContainerElement_.removeEventListener('mouseup', this.boundRippleMouseUp);
        }
        this.inputElement_.removeEventListener('change', this.boundInputOnChange);
        this.inputElement_.removeEventListener('focus', this.boundInputOnFocus);
        this.inputElement_.removeEventListener('blur', this.boundInputOnBlur);
        this.element_.removeEventListener('mouseup', this.boundElementOnMouseUp);
      };
      MaterialIconToggle.prototype.mdlDowngrade = MaterialIconToggle.prototype.mdlDowngrade_;
      MaterialIconToggle.prototype['mdlDowngrade'] = MaterialIconToggle.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialIconToggle,
        classAsString: 'MaterialIconToggle',
        cssClass: 'mdl-js-icon-toggle',
        widget: true
      });
      var MaterialMenu = function MaterialMenu(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialMenu'] = MaterialMenu;
      MaterialMenu.prototype.Constant_ = {
        TRANSITION_DURATION_SECONDS: 0.3,
        TRANSITION_DURATION_FRACTION: 0.8,
        CLOSE_TIMEOUT: 150
      };
      MaterialMenu.prototype.Keycodes_ = {
        ENTER: 13,
        ESCAPE: 27,
        SPACE: 32,
        UP_ARROW: 38,
        DOWN_ARROW: 40
      };
      MaterialMenu.prototype.CssClasses_ = {
        CONTAINER: 'mdl-menu__container',
        OUTLINE: 'mdl-menu__outline',
        ITEM: 'mdl-menu__item',
        ITEM_RIPPLE_CONTAINER: 'mdl-menu__item-ripple-container',
        RIPPLE_EFFECT: 'mdl-js-ripple-effect',
        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
        RIPPLE: 'mdl-ripple',
        IS_UPGRADED: 'is-upgraded',
        IS_VISIBLE: 'is-visible',
        IS_ANIMATING: 'is-animating',
        BOTTOM_LEFT: 'mdl-menu--bottom-left',
        BOTTOM_RIGHT: 'mdl-menu--bottom-right',
        TOP_LEFT: 'mdl-menu--top-left',
        TOP_RIGHT: 'mdl-menu--top-right',
        UNALIGNED: 'mdl-menu--unaligned'
      };
      MaterialMenu.prototype.init = function() {
        if (this.element_) {
          var container = document.createElement('div');
          container.classList.add(this.CssClasses_.CONTAINER);
          this.element_.parentElement.insertBefore(container, this.element_);
          this.element_.parentElement.removeChild(this.element_);
          container.appendChild(this.element_);
          this.container_ = container;
          var outline = document.createElement('div');
          outline.classList.add(this.CssClasses_.OUTLINE);
          this.outline_ = outline;
          container.insertBefore(outline, this.element_);
          var forElId = this.element_.getAttribute('for');
          var forEl = null;
          if (forElId) {
            forEl = document.getElementById(forElId);
            if (forEl) {
              this.forElement_ = forEl;
              forEl.addEventListener('click', this.handleForClick_.bind(this));
              forEl.addEventListener('keydown', this.handleForKeyboardEvent_.bind(this));
            }
          }
          var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);
          this.boundItemKeydown_ = this.handleItemKeyboardEvent_.bind(this);
          this.boundItemClick_ = this.handleItemClick_.bind(this);
          for (var i = 0; i < items.length; i++) {
            items[i].addEventListener('click', this.boundItemClick_);
            items[i].tabIndex = '-1';
            items[i].addEventListener('keydown', this.boundItemKeydown_);
          }
          if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            for (i = 0; i < items.length; i++) {
              var item = items[i];
              var rippleContainer = document.createElement('span');
              rippleContainer.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);
              var ripple = document.createElement('span');
              ripple.classList.add(this.CssClasses_.RIPPLE);
              rippleContainer.appendChild(ripple);
              item.appendChild(rippleContainer);
              item.classList.add(this.CssClasses_.RIPPLE_EFFECT);
            }
          }
          if (this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)) {
            this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT);
          }
          if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {
            this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT);
          }
          if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {
            this.outline_.classList.add(this.CssClasses_.TOP_LEFT);
          }
          if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {
            this.outline_.classList.add(this.CssClasses_.TOP_RIGHT);
          }
          if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {
            this.outline_.classList.add(this.CssClasses_.UNALIGNED);
          }
          container.classList.add(this.CssClasses_.IS_UPGRADED);
        }
      };
      MaterialMenu.prototype.handleForClick_ = function(evt) {
        if (this.element_ && this.forElement_) {
          var rect = this.forElement_.getBoundingClientRect();
          var forRect = this.forElement_.parentElement.getBoundingClientRect();
          if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {} else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {
            this.container_.style.right = forRect.right - rect.right + 'px';
            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';
          } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {
            this.container_.style.left = this.forElement_.offsetLeft + 'px';
            this.container_.style.bottom = forRect.bottom - rect.top + 'px';
          } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {
            this.container_.style.right = forRect.right - rect.right + 'px';
            this.container_.style.bottom = forRect.bottom - rect.top + 'px';
          } else {
            this.container_.style.left = this.forElement_.offsetLeft + 'px';
            this.container_.style.top = this.forElement_.offsetTop + this.forElement_.offsetHeight + 'px';
          }
        }
        this.toggle(evt);
      };
      MaterialMenu.prototype.handleForKeyboardEvent_ = function(evt) {
        if (this.element_ && this.container_ && this.forElement_) {
          var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');
          if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {
            if (evt.keyCode === this.Keycodes_.UP_ARROW) {
              evt.preventDefault();
              items[items.length - 1].focus();
            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {
              evt.preventDefault();
              items[0].focus();
            }
          }
        }
      };
      MaterialMenu.prototype.handleItemKeyboardEvent_ = function(evt) {
        if (this.element_ && this.container_) {
          var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM + ':not([disabled])');
          if (items && items.length > 0 && this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {
            var currentIndex = Array.prototype.slice.call(items).indexOf(evt.target);
            if (evt.keyCode === this.Keycodes_.UP_ARROW) {
              evt.preventDefault();
              if (currentIndex > 0) {
                items[currentIndex - 1].focus();
              } else {
                items[items.length - 1].focus();
              }
            } else if (evt.keyCode === this.Keycodes_.DOWN_ARROW) {
              evt.preventDefault();
              if (items.length > currentIndex + 1) {
                items[currentIndex + 1].focus();
              } else {
                items[0].focus();
              }
            } else if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {
              evt.preventDefault();
              var e = new MouseEvent('mousedown');
              evt.target.dispatchEvent(e);
              e = new MouseEvent('mouseup');
              evt.target.dispatchEvent(e);
              evt.target.click();
            } else if (evt.keyCode === this.Keycodes_.ESCAPE) {
              evt.preventDefault();
              this.hide();
            }
          }
        }
      };
      MaterialMenu.prototype.handleItemClick_ = function(evt) {
        if (evt.target.hasAttribute('disabled')) {
          evt.stopPropagation();
        } else {
          this.closing_ = true;
          window.setTimeout(function(evt) {
            this.hide();
            this.closing_ = false;
          }.bind(this), this.Constant_.CLOSE_TIMEOUT);
        }
      };
      MaterialMenu.prototype.applyClip_ = function(height, width) {
        if (this.element_.classList.contains(this.CssClasses_.UNALIGNED)) {
          this.element_.style.clip = '';
        } else if (this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)) {
          this.element_.style.clip = 'rect(0 ' + width + 'px ' + '0 ' + width + 'px)';
        } else if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT)) {
          this.element_.style.clip = 'rect(' + height + 'px 0 ' + height + 'px 0)';
        } else if (this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {
          this.element_.style.clip = 'rect(' + height + 'px ' + width + 'px ' + height + 'px ' + width + 'px)';
        } else {
          this.element_.style.clip = '';
        }
      };
      MaterialMenu.prototype.addAnimationEndListener_ = function() {
        var cleanup = function() {
          this.element_.removeEventListener('transitionend', cleanup);
          this.element_.removeEventListener('webkitTransitionEnd', cleanup);
          this.element_.classList.remove(this.CssClasses_.IS_ANIMATING);
        }.bind(this);
        this.element_.addEventListener('transitionend', cleanup);
        this.element_.addEventListener('webkitTransitionEnd', cleanup);
      };
      MaterialMenu.prototype.show = function(evt) {
        if (this.element_ && this.container_ && this.outline_) {
          var height = this.element_.getBoundingClientRect().height;
          var width = this.element_.getBoundingClientRect().width;
          this.container_.style.width = width + 'px';
          this.container_.style.height = height + 'px';
          this.outline_.style.width = width + 'px';
          this.outline_.style.height = height + 'px';
          var transitionDuration = this.Constant_.TRANSITION_DURATION_SECONDS * this.Constant_.TRANSITION_DURATION_FRACTION;
          var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);
          for (var i = 0; i < items.length; i++) {
            var itemDelay = null;
            if (this.element_.classList.contains(this.CssClasses_.TOP_LEFT) || this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)) {
              itemDelay = (height - items[i].offsetTop - items[i].offsetHeight) / height * transitionDuration + 's';
            } else {
              itemDelay = items[i].offsetTop / height * transitionDuration + 's';
            }
            items[i].style.transitionDelay = itemDelay;
          }
          this.applyClip_(height, width);
          window.requestAnimationFrame(function() {
            this.element_.classList.add(this.CssClasses_.IS_ANIMATING);
            this.element_.style.clip = 'rect(0 ' + width + 'px ' + height + 'px 0)';
            this.container_.classList.add(this.CssClasses_.IS_VISIBLE);
          }.bind(this));
          this.addAnimationEndListener_();
          var callback = function(e) {
            if (e !== evt && !this.closing_ && e.target.parentNode !== this.element_) {
              document.removeEventListener('click', callback);
              this.hide();
            }
          }.bind(this);
          document.addEventListener('click', callback);
        }
      };
      MaterialMenu.prototype['show'] = MaterialMenu.prototype.show;
      MaterialMenu.prototype.hide = function() {
        if (this.element_ && this.container_ && this.outline_) {
          var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);
          for (var i = 0; i < items.length; i++) {
            items[i].style.transitionDelay = null;
          }
          var rect = this.element_.getBoundingClientRect();
          var height = rect.height;
          var width = rect.width;
          this.element_.classList.add(this.CssClasses_.IS_ANIMATING);
          this.applyClip_(height, width);
          this.container_.classList.remove(this.CssClasses_.IS_VISIBLE);
          this.addAnimationEndListener_();
        }
      };
      MaterialMenu.prototype['hide'] = MaterialMenu.prototype.hide;
      MaterialMenu.prototype.toggle = function(evt) {
        if (this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)) {
          this.hide();
        } else {
          this.show(evt);
        }
      };
      MaterialMenu.prototype['toggle'] = MaterialMenu.prototype.toggle;
      MaterialMenu.prototype.mdlDowngrade_ = function() {
        var items = this.element_.querySelectorAll('.' + this.CssClasses_.ITEM);
        for (var i = 0; i < items.length; i++) {
          items[i].removeEventListener('click', this.boundItemClick_);
          items[i].removeEventListener('keydown', this.boundItemKeydown_);
        }
      };
      MaterialMenu.prototype.mdlDowngrade = MaterialMenu.prototype.mdlDowngrade_;
      MaterialMenu.prototype['mdlDowngrade'] = MaterialMenu.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialMenu,
        classAsString: 'MaterialMenu',
        cssClass: 'mdl-js-menu',
        widget: true
      });
      var MaterialProgress = function MaterialProgress(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialProgress'] = MaterialProgress;
      MaterialProgress.prototype.Constant_ = {};
      MaterialProgress.prototype.CssClasses_ = {INDETERMINATE_CLASS: 'mdl-progress__indeterminate'};
      MaterialProgress.prototype.setProgress = function(p) {
        if (this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)) {
          return;
        }
        this.progressbar_.style.width = p + '%';
      };
      MaterialProgress.prototype['setProgress'] = MaterialProgress.prototype.setProgress;
      MaterialProgress.prototype.setBuffer = function(p) {
        this.bufferbar_.style.width = p + '%';
        this.auxbar_.style.width = 100 - p + '%';
      };
      MaterialProgress.prototype['setBuffer'] = MaterialProgress.prototype.setBuffer;
      MaterialProgress.prototype.init = function() {
        if (this.element_) {
          var el = document.createElement('div');
          el.className = 'progressbar bar bar1';
          this.element_.appendChild(el);
          this.progressbar_ = el;
          el = document.createElement('div');
          el.className = 'bufferbar bar bar2';
          this.element_.appendChild(el);
          this.bufferbar_ = el;
          el = document.createElement('div');
          el.className = 'auxbar bar bar3';
          this.element_.appendChild(el);
          this.auxbar_ = el;
          this.progressbar_.style.width = '0%';
          this.bufferbar_.style.width = '100%';
          this.auxbar_.style.width = '0%';
          this.element_.classList.add('is-upgraded');
        }
      };
      MaterialProgress.prototype.mdlDowngrade_ = function() {
        while (this.element_.firstChild) {
          this.element_.removeChild(this.element_.firstChild);
        }
      };
      MaterialProgress.prototype.mdlDowngrade = MaterialProgress.prototype.mdlDowngrade_;
      MaterialProgress.prototype['mdlDowngrade'] = MaterialProgress.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialProgress,
        classAsString: 'MaterialProgress',
        cssClass: 'mdl-js-progress',
        widget: true
      });
      var MaterialRadio = function MaterialRadio(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialRadio'] = MaterialRadio;
      MaterialRadio.prototype.Constant_ = {TINY_TIMEOUT: 0.001};
      MaterialRadio.prototype.CssClasses_ = {
        IS_FOCUSED: 'is-focused',
        IS_DISABLED: 'is-disabled',
        IS_CHECKED: 'is-checked',
        IS_UPGRADED: 'is-upgraded',
        JS_RADIO: 'mdl-js-radio',
        RADIO_BTN: 'mdl-radio__button',
        RADIO_OUTER_CIRCLE: 'mdl-radio__outer-circle',
        RADIO_INNER_CIRCLE: 'mdl-radio__inner-circle',
        RIPPLE_EFFECT: 'mdl-js-ripple-effect',
        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
        RIPPLE_CONTAINER: 'mdl-radio__ripple-container',
        RIPPLE_CENTER: 'mdl-ripple--center',
        RIPPLE: 'mdl-ripple'
      };
      MaterialRadio.prototype.onChange_ = function(event) {
        var radios = document.getElementsByClassName(this.CssClasses_.JS_RADIO);
        for (var i = 0; i < radios.length; i++) {
          var button = radios[i].querySelector('.' + this.CssClasses_.RADIO_BTN);
          if (button.getAttribute('name') === this.btnElement_.getAttribute('name')) {
            radios[i]['MaterialRadio'].updateClasses_();
          }
        }
      };
      MaterialRadio.prototype.onFocus_ = function(event) {
        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
      };
      MaterialRadio.prototype.onBlur_ = function(event) {
        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
      };
      MaterialRadio.prototype.onMouseup_ = function(event) {
        this.blur_();
      };
      MaterialRadio.prototype.updateClasses_ = function() {
        this.checkDisabled();
        this.checkToggleState();
      };
      MaterialRadio.prototype.blur_ = function() {
        window.setTimeout(function() {
          this.btnElement_.blur();
        }.bind(this), this.Constant_.TINY_TIMEOUT);
      };
      MaterialRadio.prototype.checkDisabled = function() {
        if (this.btnElement_.disabled) {
          this.element_.classList.add(this.CssClasses_.IS_DISABLED);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
        }
      };
      MaterialRadio.prototype['checkDisabled'] = MaterialRadio.prototype.checkDisabled;
      MaterialRadio.prototype.checkToggleState = function() {
        if (this.btnElement_.checked) {
          this.element_.classList.add(this.CssClasses_.IS_CHECKED);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_CHECKED);
        }
      };
      MaterialRadio.prototype['checkToggleState'] = MaterialRadio.prototype.checkToggleState;
      MaterialRadio.prototype.disable = function() {
        this.btnElement_.disabled = true;
        this.updateClasses_();
      };
      MaterialRadio.prototype['disable'] = MaterialRadio.prototype.disable;
      MaterialRadio.prototype.enable = function() {
        this.btnElement_.disabled = false;
        this.updateClasses_();
      };
      MaterialRadio.prototype['enable'] = MaterialRadio.prototype.enable;
      MaterialRadio.prototype.check = function() {
        this.btnElement_.checked = true;
        this.updateClasses_();
      };
      MaterialRadio.prototype['check'] = MaterialRadio.prototype.check;
      MaterialRadio.prototype.uncheck = function() {
        this.btnElement_.checked = false;
        this.updateClasses_();
      };
      MaterialRadio.prototype['uncheck'] = MaterialRadio.prototype.uncheck;
      MaterialRadio.prototype.init = function() {
        if (this.element_) {
          this.btnElement_ = this.element_.querySelector('.' + this.CssClasses_.RADIO_BTN);
          this.boundChangeHandler_ = this.onChange_.bind(this);
          this.boundFocusHandler_ = this.onChange_.bind(this);
          this.boundBlurHandler_ = this.onBlur_.bind(this);
          this.boundMouseUpHandler_ = this.onMouseup_.bind(this);
          var outerCircle = document.createElement('span');
          outerCircle.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);
          var innerCircle = document.createElement('span');
          innerCircle.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE);
          this.element_.appendChild(outerCircle);
          this.element_.appendChild(innerCircle);
          var rippleContainer;
          if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            rippleContainer = document.createElement('span');
            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            rippleContainer.classList.add(this.CssClasses_.RIPPLE_EFFECT);
            rippleContainer.classList.add(this.CssClasses_.RIPPLE_CENTER);
            rippleContainer.addEventListener('mouseup', this.boundMouseUpHandler_);
            var ripple = document.createElement('span');
            ripple.classList.add(this.CssClasses_.RIPPLE);
            rippleContainer.appendChild(ripple);
            this.element_.appendChild(rippleContainer);
          }
          this.btnElement_.addEventListener('change', this.boundChangeHandler_);
          this.btnElement_.addEventListener('focus', this.boundFocusHandler_);
          this.btnElement_.addEventListener('blur', this.boundBlurHandler_);
          this.element_.addEventListener('mouseup', this.boundMouseUpHandler_);
          this.updateClasses_();
          this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
        }
      };
      MaterialRadio.prototype.mdlDowngrade_ = function() {
        var rippleContainer = this.element_.querySelector('.' + this.CssClasses_.RIPPLE_CONTAINER);
        this.btnElement_.removeEventListener('change', this.boundChangeHandler_);
        this.btnElement_.removeEventListener('focus', this.boundFocusHandler_);
        this.btnElement_.removeEventListener('blur', this.boundBlurHandler_);
        this.element_.removeEventListener('mouseup', this.boundMouseUpHandler_);
        if (rippleContainer) {
          rippleContainer.removeEventListener('mouseup', this.boundMouseUpHandler_);
          this.element_.removeChild(rippleContainer);
        }
      };
      MaterialRadio.prototype.mdlDowngrade = MaterialRadio.prototype.mdlDowngrade_;
      MaterialRadio.prototype['mdlDowngrade'] = MaterialRadio.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialRadio,
        classAsString: 'MaterialRadio',
        cssClass: 'mdl-js-radio',
        widget: true
      });
      var MaterialSlider = function MaterialSlider(element) {
        this.element_ = element;
        this.isIE_ = window.navigator.msPointerEnabled;
        this.init();
      };
      window['MaterialSlider'] = MaterialSlider;
      MaterialSlider.prototype.Constant_ = {};
      MaterialSlider.prototype.CssClasses_ = {
        IE_CONTAINER: 'mdl-slider__ie-container',
        SLIDER_CONTAINER: 'mdl-slider__container',
        BACKGROUND_FLEX: 'mdl-slider__background-flex',
        BACKGROUND_LOWER: 'mdl-slider__background-lower',
        BACKGROUND_UPPER: 'mdl-slider__background-upper',
        IS_LOWEST_VALUE: 'is-lowest-value',
        IS_UPGRADED: 'is-upgraded'
      };
      MaterialSlider.prototype.onInput_ = function(event) {
        this.updateValueStyles_();
      };
      MaterialSlider.prototype.onChange_ = function(event) {
        this.updateValueStyles_();
      };
      MaterialSlider.prototype.onMouseUp_ = function(event) {
        event.target.blur();
      };
      MaterialSlider.prototype.onContainerMouseDown_ = function(event) {
        if (event.target !== this.element_.parentElement) {
          return;
        }
        event.preventDefault();
        var newEvent = new MouseEvent('mousedown', {
          target: event.target,
          buttons: event.buttons,
          clientX: event.clientX,
          clientY: this.element_.getBoundingClientRect().y
        });
        this.element_.dispatchEvent(newEvent);
      };
      MaterialSlider.prototype.updateValueStyles_ = function() {
        var fraction = (this.element_.value - this.element_.min) / (this.element_.max - this.element_.min);
        if (fraction === 0) {
          this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE);
        }
        if (!this.isIE_) {
          this.backgroundLower_.style.flex = fraction;
          this.backgroundLower_.style.webkitFlex = fraction;
          this.backgroundUpper_.style.flex = 1 - fraction;
          this.backgroundUpper_.style.webkitFlex = 1 - fraction;
        }
      };
      MaterialSlider.prototype.disable = function() {
        this.element_.disabled = true;
      };
      MaterialSlider.prototype['disable'] = MaterialSlider.prototype.disable;
      MaterialSlider.prototype.enable = function() {
        this.element_.disabled = false;
      };
      MaterialSlider.prototype['enable'] = MaterialSlider.prototype.enable;
      MaterialSlider.prototype.change = function(value) {
        if (typeof value !== 'undefined') {
          this.element_.value = value;
        }
        this.updateValueStyles_();
      };
      MaterialSlider.prototype['change'] = MaterialSlider.prototype.change;
      MaterialSlider.prototype.init = function() {
        if (this.element_) {
          if (this.isIE_) {
            var containerIE = document.createElement('div');
            containerIE.classList.add(this.CssClasses_.IE_CONTAINER);
            this.element_.parentElement.insertBefore(containerIE, this.element_);
            this.element_.parentElement.removeChild(this.element_);
            containerIE.appendChild(this.element_);
          } else {
            var container = document.createElement('div');
            container.classList.add(this.CssClasses_.SLIDER_CONTAINER);
            this.element_.parentElement.insertBefore(container, this.element_);
            this.element_.parentElement.removeChild(this.element_);
            container.appendChild(this.element_);
            var backgroundFlex = document.createElement('div');
            backgroundFlex.classList.add(this.CssClasses_.BACKGROUND_FLEX);
            container.appendChild(backgroundFlex);
            this.backgroundLower_ = document.createElement('div');
            this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER);
            backgroundFlex.appendChild(this.backgroundLower_);
            this.backgroundUpper_ = document.createElement('div');
            this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER);
            backgroundFlex.appendChild(this.backgroundUpper_);
          }
          this.boundInputHandler = this.onInput_.bind(this);
          this.boundChangeHandler = this.onChange_.bind(this);
          this.boundMouseUpHandler = this.onMouseUp_.bind(this);
          this.boundContainerMouseDownHandler = this.onContainerMouseDown_.bind(this);
          this.element_.addEventListener('input', this.boundInputHandler);
          this.element_.addEventListener('change', this.boundChangeHandler);
          this.element_.addEventListener('mouseup', this.boundMouseUpHandler);
          this.element_.parentElement.addEventListener('mousedown', this.boundContainerMouseDownHandler);
          this.updateValueStyles_();
          this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
        }
      };
      MaterialSlider.prototype.mdlDowngrade_ = function() {
        this.element_.removeEventListener('input', this.boundInputHandler);
        this.element_.removeEventListener('change', this.boundChangeHandler);
        this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);
        this.element_.parentElement.removeEventListener('mousedown', this.boundContainerMouseDownHandler);
      };
      MaterialSlider.prototype.mdlDowngrade = MaterialSlider.prototype.mdlDowngrade_;
      MaterialSlider.prototype['mdlDowngrade'] = MaterialSlider.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialSlider,
        classAsString: 'MaterialSlider',
        cssClass: 'mdl-js-slider',
        widget: true
      });
      var MaterialSpinner = function MaterialSpinner(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialSpinner'] = MaterialSpinner;
      MaterialSpinner.prototype.Constant_ = {MDL_SPINNER_LAYER_COUNT: 4};
      MaterialSpinner.prototype.CssClasses_ = {
        MDL_SPINNER_LAYER: 'mdl-spinner__layer',
        MDL_SPINNER_CIRCLE_CLIPPER: 'mdl-spinner__circle-clipper',
        MDL_SPINNER_CIRCLE: 'mdl-spinner__circle',
        MDL_SPINNER_GAP_PATCH: 'mdl-spinner__gap-patch',
        MDL_SPINNER_LEFT: 'mdl-spinner__left',
        MDL_SPINNER_RIGHT: 'mdl-spinner__right'
      };
      MaterialSpinner.prototype.createLayer = function(index) {
        var layer = document.createElement('div');
        layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER);
        layer.classList.add(this.CssClasses_.MDL_SPINNER_LAYER + '-' + index);
        var leftClipper = document.createElement('div');
        leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);
        leftClipper.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);
        var gapPatch = document.createElement('div');
        gapPatch.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);
        var rightClipper = document.createElement('div');
        rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER);
        rightClipper.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);
        var circleOwners = [leftClipper, gapPatch, rightClipper];
        for (var i = 0; i < circleOwners.length; i++) {
          var circle = document.createElement('div');
          circle.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE);
          circleOwners[i].appendChild(circle);
        }
        layer.appendChild(leftClipper);
        layer.appendChild(gapPatch);
        layer.appendChild(rightClipper);
        this.element_.appendChild(layer);
      };
      MaterialSpinner.prototype['createLayer'] = MaterialSpinner.prototype.createLayer;
      MaterialSpinner.prototype.stop = function() {
        this.element_.classList.remove('is-active');
      };
      MaterialSpinner.prototype['stop'] = MaterialSpinner.prototype.stop;
      MaterialSpinner.prototype.start = function() {
        this.element_.classList.add('is-active');
      };
      MaterialSpinner.prototype['start'] = MaterialSpinner.prototype.start;
      MaterialSpinner.prototype.init = function() {
        if (this.element_) {
          for (var i = 1; i <= this.Constant_.MDL_SPINNER_LAYER_COUNT; i++) {
            this.createLayer(i);
          }
          this.element_.classList.add('is-upgraded');
        }
      };
      componentHandler.register({
        constructor: MaterialSpinner,
        classAsString: 'MaterialSpinner',
        cssClass: 'mdl-js-spinner',
        widget: true
      });
      var MaterialSwitch = function MaterialSwitch(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialSwitch'] = MaterialSwitch;
      MaterialSwitch.prototype.Constant_ = {TINY_TIMEOUT: 0.001};
      MaterialSwitch.prototype.CssClasses_ = {
        INPUT: 'mdl-switch__input',
        TRACK: 'mdl-switch__track',
        THUMB: 'mdl-switch__thumb',
        FOCUS_HELPER: 'mdl-switch__focus-helper',
        RIPPLE_EFFECT: 'mdl-js-ripple-effect',
        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
        RIPPLE_CONTAINER: 'mdl-switch__ripple-container',
        RIPPLE_CENTER: 'mdl-ripple--center',
        RIPPLE: 'mdl-ripple',
        IS_FOCUSED: 'is-focused',
        IS_DISABLED: 'is-disabled',
        IS_CHECKED: 'is-checked'
      };
      MaterialSwitch.prototype.onChange_ = function(event) {
        this.updateClasses_();
      };
      MaterialSwitch.prototype.onFocus_ = function(event) {
        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
      };
      MaterialSwitch.prototype.onBlur_ = function(event) {
        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
      };
      MaterialSwitch.prototype.onMouseUp_ = function(event) {
        this.blur_();
      };
      MaterialSwitch.prototype.updateClasses_ = function() {
        this.checkDisabled();
        this.checkToggleState();
      };
      MaterialSwitch.prototype.blur_ = function() {
        window.setTimeout(function() {
          this.inputElement_.blur();
        }.bind(this), this.Constant_.TINY_TIMEOUT);
      };
      MaterialSwitch.prototype.checkDisabled = function() {
        if (this.inputElement_.disabled) {
          this.element_.classList.add(this.CssClasses_.IS_DISABLED);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
        }
      };
      MaterialSwitch.prototype['checkDisabled'] = MaterialSwitch.prototype.checkDisabled;
      MaterialSwitch.prototype.checkToggleState = function() {
        if (this.inputElement_.checked) {
          this.element_.classList.add(this.CssClasses_.IS_CHECKED);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_CHECKED);
        }
      };
      MaterialSwitch.prototype['checkToggleState'] = MaterialSwitch.prototype.checkToggleState;
      MaterialSwitch.prototype.disable = function() {
        this.inputElement_.disabled = true;
        this.updateClasses_();
      };
      MaterialSwitch.prototype['disable'] = MaterialSwitch.prototype.disable;
      MaterialSwitch.prototype.enable = function() {
        this.inputElement_.disabled = false;
        this.updateClasses_();
      };
      MaterialSwitch.prototype['enable'] = MaterialSwitch.prototype.enable;
      MaterialSwitch.prototype.on = function() {
        this.inputElement_.checked = true;
        this.updateClasses_();
      };
      MaterialSwitch.prototype['on'] = MaterialSwitch.prototype.on;
      MaterialSwitch.prototype.off = function() {
        this.inputElement_.checked = false;
        this.updateClasses_();
      };
      MaterialSwitch.prototype['off'] = MaterialSwitch.prototype.off;
      MaterialSwitch.prototype.init = function() {
        if (this.element_) {
          this.inputElement_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);
          var track = document.createElement('div');
          track.classList.add(this.CssClasses_.TRACK);
          var thumb = document.createElement('div');
          thumb.classList.add(this.CssClasses_.THUMB);
          var focusHelper = document.createElement('span');
          focusHelper.classList.add(this.CssClasses_.FOCUS_HELPER);
          thumb.appendChild(focusHelper);
          this.element_.appendChild(track);
          this.element_.appendChild(thumb);
          this.boundMouseUpHandler = this.onMouseUp_.bind(this);
          if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {
            this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            this.rippleContainerElement_ = document.createElement('span');
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT);
            this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER);
            this.rippleContainerElement_.addEventListener('mouseup', this.boundMouseUpHandler);
            var ripple = document.createElement('span');
            ripple.classList.add(this.CssClasses_.RIPPLE);
            this.rippleContainerElement_.appendChild(ripple);
            this.element_.appendChild(this.rippleContainerElement_);
          }
          this.boundChangeHandler = this.onChange_.bind(this);
          this.boundFocusHandler = this.onFocus_.bind(this);
          this.boundBlurHandler = this.onBlur_.bind(this);
          this.inputElement_.addEventListener('change', this.boundChangeHandler);
          this.inputElement_.addEventListener('focus', this.boundFocusHandler);
          this.inputElement_.addEventListener('blur', this.boundBlurHandler);
          this.element_.addEventListener('mouseup', this.boundMouseUpHandler);
          this.updateClasses_();
          this.element_.classList.add('is-upgraded');
        }
      };
      MaterialSwitch.prototype.mdlDowngrade_ = function() {
        if (this.rippleContainerElement_) {
          this.rippleContainerElement_.removeEventListener('mouseup', this.boundMouseUpHandler);
        }
        this.inputElement_.removeEventListener('change', this.boundChangeHandler);
        this.inputElement_.removeEventListener('focus', this.boundFocusHandler);
        this.inputElement_.removeEventListener('blur', this.boundBlurHandler);
        this.element_.removeEventListener('mouseup', this.boundMouseUpHandler);
      };
      MaterialSwitch.prototype.mdlDowngrade = MaterialSwitch.prototype.mdlDowngrade_;
      MaterialSwitch.prototype['mdlDowngrade'] = MaterialSwitch.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialSwitch,
        classAsString: 'MaterialSwitch',
        cssClass: 'mdl-js-switch',
        widget: true
      });
      var MaterialTabs = function MaterialTabs(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialTabs'] = MaterialTabs;
      MaterialTabs.prototype.Constant_ = {};
      MaterialTabs.prototype.CssClasses_ = {
        TAB_CLASS: 'mdl-tabs__tab',
        PANEL_CLASS: 'mdl-tabs__panel',
        ACTIVE_CLASS: 'is-active',
        UPGRADED_CLASS: 'is-upgraded',
        MDL_JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',
        MDL_RIPPLE_CONTAINER: 'mdl-tabs__ripple-container',
        MDL_RIPPLE: 'mdl-ripple',
        MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events'
      };
      MaterialTabs.prototype.initTabs_ = function() {
        if (this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {
          this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS);
        }
        this.tabs_ = this.element_.querySelectorAll('.' + this.CssClasses_.TAB_CLASS);
        this.panels_ = this.element_.querySelectorAll('.' + this.CssClasses_.PANEL_CLASS);
        for (var i = 0; i < this.tabs_.length; i++) {
          new MaterialTab(this.tabs_[i], this);
        }
        this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS);
      };
      MaterialTabs.prototype.resetTabState_ = function() {
        for (var k = 0; k < this.tabs_.length; k++) {
          this.tabs_[k].classList.remove(this.CssClasses_.ACTIVE_CLASS);
        }
      };
      MaterialTabs.prototype.resetPanelState_ = function() {
        for (var j = 0; j < this.panels_.length; j++) {
          this.panels_[j].classList.remove(this.CssClasses_.ACTIVE_CLASS);
        }
      };
      MaterialTabs.prototype.init = function() {
        if (this.element_) {
          this.initTabs_();
        }
      };
      function MaterialTab(tab, ctx) {
        if (tab) {
          if (ctx.element_.classList.contains(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT)) {
            var rippleContainer = document.createElement('span');
            rippleContainer.classList.add(ctx.CssClasses_.MDL_RIPPLE_CONTAINER);
            rippleContainer.classList.add(ctx.CssClasses_.MDL_JS_RIPPLE_EFFECT);
            var ripple = document.createElement('span');
            ripple.classList.add(ctx.CssClasses_.MDL_RIPPLE);
            rippleContainer.appendChild(ripple);
            tab.appendChild(rippleContainer);
          }
          tab.addEventListener('click', function(e) {
            e.preventDefault();
            var href = tab.href.split('#')[1];
            var panel = ctx.element_.querySelector('#' + href);
            ctx.resetTabState_();
            ctx.resetPanelState_();
            tab.classList.add(ctx.CssClasses_.ACTIVE_CLASS);
            panel.classList.add(ctx.CssClasses_.ACTIVE_CLASS);
          });
        }
      }
      componentHandler.register({
        constructor: MaterialTabs,
        classAsString: 'MaterialTabs',
        cssClass: 'mdl-js-tabs'
      });
      var MaterialTextfield = function MaterialTextfield(element) {
        this.element_ = element;
        this.maxRows = this.Constant_.NO_MAX_ROWS;
        this.init();
      };
      window['MaterialTextfield'] = MaterialTextfield;
      MaterialTextfield.prototype.Constant_ = {
        NO_MAX_ROWS: -1,
        MAX_ROWS_ATTRIBUTE: 'maxrows'
      };
      MaterialTextfield.prototype.CssClasses_ = {
        LABEL: 'mdl-textfield__label',
        INPUT: 'mdl-textfield__input',
        IS_DIRTY: 'is-dirty',
        IS_FOCUSED: 'is-focused',
        IS_DISABLED: 'is-disabled',
        IS_INVALID: 'is-invalid',
        IS_UPGRADED: 'is-upgraded'
      };
      MaterialTextfield.prototype.onKeyDown_ = function(event) {
        var currentRowCount = event.target.value.split('\n').length;
        if (event.keyCode === 13) {
          if (currentRowCount >= this.maxRows) {
            event.preventDefault();
          }
        }
      };
      MaterialTextfield.prototype.onFocus_ = function(event) {
        this.element_.classList.add(this.CssClasses_.IS_FOCUSED);
      };
      MaterialTextfield.prototype.onBlur_ = function(event) {
        this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);
      };
      MaterialTextfield.prototype.updateClasses_ = function() {
        this.checkDisabled();
        this.checkValidity();
        this.checkDirty();
      };
      MaterialTextfield.prototype.checkDisabled = function() {
        if (this.input_.disabled) {
          this.element_.classList.add(this.CssClasses_.IS_DISABLED);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_DISABLED);
        }
      };
      MaterialTextfield.prototype['checkDisabled'] = MaterialTextfield.prototype.checkDisabled;
      MaterialTextfield.prototype.checkValidity = function() {
        if (this.input_.validity) {
          if (this.input_.validity.valid) {
            this.element_.classList.remove(this.CssClasses_.IS_INVALID);
          } else {
            this.element_.classList.add(this.CssClasses_.IS_INVALID);
          }
        }
      };
      MaterialTextfield.prototype['checkValidity'] = MaterialTextfield.prototype.checkValidity;
      MaterialTextfield.prototype.checkDirty = function() {
        if (this.input_.value && this.input_.value.length > 0) {
          this.element_.classList.add(this.CssClasses_.IS_DIRTY);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_DIRTY);
        }
      };
      MaterialTextfield.prototype['checkDirty'] = MaterialTextfield.prototype.checkDirty;
      MaterialTextfield.prototype.disable = function() {
        this.input_.disabled = true;
        this.updateClasses_();
      };
      MaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;
      MaterialTextfield.prototype.enable = function() {
        this.input_.disabled = false;
        this.updateClasses_();
      };
      MaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;
      MaterialTextfield.prototype.change = function(value) {
        this.input_.value = value || '';
        this.updateClasses_();
      };
      MaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;
      MaterialTextfield.prototype.init = function() {
        if (this.element_) {
          this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);
          this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);
          if (this.input_) {
            if (this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)) {
              this.maxRows = parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE), 10);
              if (isNaN(this.maxRows)) {
                this.maxRows = this.Constant_.NO_MAX_ROWS;
              }
            }
            this.boundUpdateClassesHandler = this.updateClasses_.bind(this);
            this.boundFocusHandler = this.onFocus_.bind(this);
            this.boundBlurHandler = this.onBlur_.bind(this);
            this.input_.addEventListener('input', this.boundUpdateClassesHandler);
            this.input_.addEventListener('focus', this.boundFocusHandler);
            this.input_.addEventListener('blur', this.boundBlurHandler);
            if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {
              this.boundKeyDownHandler = this.onKeyDown_.bind(this);
              this.input_.addEventListener('keydown', this.boundKeyDownHandler);
            }
            var invalid = this.element_.classList.contains(this.CssClasses_.IS_INVALID);
            this.updateClasses_();
            this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
            if (invalid) {
              this.element_.classList.add(this.CssClasses_.IS_INVALID);
            }
          }
        }
      };
      MaterialTextfield.prototype.mdlDowngrade_ = function() {
        this.input_.removeEventListener('input', this.boundUpdateClassesHandler);
        this.input_.removeEventListener('focus', this.boundFocusHandler);
        this.input_.removeEventListener('blur', this.boundBlurHandler);
        if (this.boundKeyDownHandler) {
          this.input_.removeEventListener('keydown', this.boundKeyDownHandler);
        }
      };
      MaterialTextfield.prototype.mdlDowngrade = MaterialTextfield.prototype.mdlDowngrade_;
      MaterialTextfield.prototype['mdlDowngrade'] = MaterialTextfield.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialTextfield,
        classAsString: 'MaterialTextfield',
        cssClass: 'mdl-js-textfield',
        widget: true
      });
      var MaterialTooltip = function MaterialTooltip(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialTooltip'] = MaterialTooltip;
      MaterialTooltip.prototype.Constant_ = {};
      MaterialTooltip.prototype.CssClasses_ = {IS_ACTIVE: 'is-active'};
      MaterialTooltip.prototype.handleMouseEnter_ = function(event) {
        event.stopPropagation();
        var props = event.target.getBoundingClientRect();
        var left = props.left + props.width / 2;
        var marginLeft = -1 * (this.element_.offsetWidth / 2);
        if (left + marginLeft < 0) {
          this.element_.style.left = 0;
          this.element_.style.marginLeft = 0;
        } else {
          this.element_.style.left = left + 'px';
          this.element_.style.marginLeft = marginLeft + 'px';
        }
        this.element_.style.top = props.top + props.height + 10 + 'px';
        this.element_.classList.add(this.CssClasses_.IS_ACTIVE);
        window.addEventListener('scroll', this.boundMouseLeaveHandler, false);
        window.addEventListener('touchmove', this.boundMouseLeaveHandler, false);
      };
      MaterialTooltip.prototype.handleMouseLeave_ = function(event) {
        event.stopPropagation();
        this.element_.classList.remove(this.CssClasses_.IS_ACTIVE);
        window.removeEventListener('scroll', this.boundMouseLeaveHandler);
        window.removeEventListener('touchmove', this.boundMouseLeaveHandler, false);
      };
      MaterialTooltip.prototype.init = function() {
        if (this.element_) {
          var forElId = this.element_.getAttribute('for');
          if (forElId) {
            this.forElement_ = document.getElementById(forElId);
          }
          if (this.forElement_) {
            if (!this.forElement_.hasAttribute('tabindex')) {
              this.forElement_.setAttribute('tabindex', '0');
            }
            this.boundMouseEnterHandler = this.handleMouseEnter_.bind(this);
            this.boundMouseLeaveHandler = this.handleMouseLeave_.bind(this);
            this.forElement_.addEventListener('mouseenter', this.boundMouseEnterHandler, false);
            this.forElement_.addEventListener('click', this.boundMouseEnterHandler, false);
            this.forElement_.addEventListener('blur', this.boundMouseLeaveHandler);
            this.forElement_.addEventListener('touchstart', this.boundMouseEnterHandler, false);
            this.forElement_.addEventListener('mouseleave', this.boundMouseLeaveHandler);
          }
        }
      };
      MaterialTooltip.prototype.mdlDowngrade_ = function() {
        if (this.forElement_) {
          this.forElement_.removeEventListener('mouseenter', this.boundMouseEnterHandler, false);
          this.forElement_.removeEventListener('click', this.boundMouseEnterHandler, false);
          this.forElement_.removeEventListener('touchstart', this.boundMouseEnterHandler, false);
          this.forElement_.removeEventListener('mouseleave', this.boundMouseLeaveHandler);
        }
      };
      MaterialTooltip.prototype.mdlDowngrade = MaterialTooltip.prototype.mdlDowngrade_;
      MaterialTooltip.prototype['mdlDowngrade'] = MaterialTooltip.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialTooltip,
        classAsString: 'MaterialTooltip',
        cssClass: 'mdl-tooltip'
      });
      var MaterialLayout = function MaterialLayout(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialLayout'] = MaterialLayout;
      MaterialLayout.prototype.Constant_ = {
        MAX_WIDTH: '(max-width: 1024px)',
        TAB_SCROLL_PIXELS: 100,
        MENU_ICON: 'menu',
        CHEVRON_LEFT: 'chevron_left',
        CHEVRON_RIGHT: 'chevron_right'
      };
      MaterialLayout.prototype.Mode_ = {
        STANDARD: 0,
        SEAMED: 1,
        WATERFALL: 2,
        SCROLL: 3
      };
      MaterialLayout.prototype.CssClasses_ = {
        CONTAINER: 'mdl-layout__container',
        HEADER: 'mdl-layout__header',
        DRAWER: 'mdl-layout__drawer',
        CONTENT: 'mdl-layout__content',
        DRAWER_BTN: 'mdl-layout__drawer-button',
        ICON: 'material-icons',
        JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',
        RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',
        RIPPLE: 'mdl-ripple',
        RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
        HEADER_SEAMED: 'mdl-layout__header--seamed',
        HEADER_WATERFALL: 'mdl-layout__header--waterfall',
        HEADER_SCROLL: 'mdl-layout__header--scroll',
        FIXED_HEADER: 'mdl-layout--fixed-header',
        OBFUSCATOR: 'mdl-layout__obfuscator',
        TAB_BAR: 'mdl-layout__tab-bar',
        TAB_CONTAINER: 'mdl-layout__tab-bar-container',
        TAB: 'mdl-layout__tab',
        TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',
        TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',
        TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',
        PANEL: 'mdl-layout__tab-panel',
        HAS_DRAWER: 'has-drawer',
        HAS_TABS: 'has-tabs',
        HAS_SCROLLING_HEADER: 'has-scrolling-header',
        CASTING_SHADOW: 'is-casting-shadow',
        IS_COMPACT: 'is-compact',
        IS_SMALL_SCREEN: 'is-small-screen',
        IS_DRAWER_OPEN: 'is-visible',
        IS_ACTIVE: 'is-active',
        IS_UPGRADED: 'is-upgraded',
        IS_ANIMATING: 'is-animating',
        ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',
        ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'
      };
      MaterialLayout.prototype.contentScrollHandler_ = function() {
        if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {
          return;
        }
        if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {
          this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);
          this.header_.classList.add(this.CssClasses_.IS_COMPACT);
          this.header_.classList.add(this.CssClasses_.IS_ANIMATING);
        } else if (this.content_.scrollTop <= 0 && this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {
          this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);
          this.header_.classList.remove(this.CssClasses_.IS_COMPACT);
          this.header_.classList.add(this.CssClasses_.IS_ANIMATING);
        }
      };
      MaterialLayout.prototype.screenSizeHandler_ = function() {
        if (this.screenSizeMediaQuery_.matches) {
          this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);
        } else {
          this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);
          if (this.drawer_) {
            this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);
            this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);
          }
        }
      };
      MaterialLayout.prototype.drawerToggleHandler_ = function() {
        this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);
        this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);
      };
      MaterialLayout.prototype.headerTransitionEndHandler_ = function() {
        this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);
      };
      MaterialLayout.prototype.headerClickHandler_ = function() {
        if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {
          this.header_.classList.remove(this.CssClasses_.IS_COMPACT);
          this.header_.classList.add(this.CssClasses_.IS_ANIMATING);
        }
      };
      MaterialLayout.prototype.resetTabState_ = function(tabBar) {
        for (var k = 0; k < tabBar.length; k++) {
          tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);
        }
      };
      MaterialLayout.prototype.resetPanelState_ = function(panels) {
        for (var j = 0; j < panels.length; j++) {
          panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);
        }
      };
      MaterialLayout.prototype.init = function() {
        if (this.element_) {
          var container = document.createElement('div');
          container.classList.add(this.CssClasses_.CONTAINER);
          this.element_.parentElement.insertBefore(container, this.element_);
          this.element_.parentElement.removeChild(this.element_);
          container.appendChild(this.element_);
          var directChildren = this.element_.childNodes;
          var numChildren = directChildren.length;
          for (var c = 0; c < numChildren; c++) {
            var child = directChildren[c];
            if (child.classList && child.classList.contains(this.CssClasses_.HEADER)) {
              this.header_ = child;
            }
            if (child.classList && child.classList.contains(this.CssClasses_.DRAWER)) {
              this.drawer_ = child;
            }
            if (child.classList && child.classList.contains(this.CssClasses_.CONTENT)) {
              this.content_ = child;
            }
          }
          if (this.header_) {
            this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);
          }
          var mode = this.Mode_.STANDARD;
          if (this.header_) {
            if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {
              mode = this.Mode_.SEAMED;
            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)) {
              mode = this.Mode_.WATERFALL;
              this.header_.addEventListener('transitionend', this.headerTransitionEndHandler_.bind(this));
              this.header_.addEventListener('click', this.headerClickHandler_.bind(this));
            } else if (this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)) {
              mode = this.Mode_.SCROLL;
              container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);
            }
            if (mode === this.Mode_.STANDARD) {
              this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);
              if (this.tabBar_) {
                this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);
              }
            } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {
              this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);
              if (this.tabBar_) {
                this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);
              }
            } else if (mode === this.Mode_.WATERFALL) {
              this.content_.addEventListener('scroll', this.contentScrollHandler_.bind(this));
              this.contentScrollHandler_();
            }
          }
          if (this.drawer_) {
            var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);
            if (!drawerButton) {
              drawerButton = document.createElement('div');
              drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);
              var drawerButtonIcon = document.createElement('i');
              drawerButtonIcon.classList.add(this.CssClasses_.ICON);
              drawerButtonIcon.textContent = this.Constant_.MENU_ICON;
              drawerButton.appendChild(drawerButtonIcon);
            }
            if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {
              drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);
            } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {
              drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);
            }
            drawerButton.addEventListener('click', this.drawerToggleHandler_.bind(this));
            this.element_.classList.add(this.CssClasses_.HAS_DRAWER);
            if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {
              this.header_.insertBefore(drawerButton, this.header_.firstChild);
            } else {
              this.element_.insertBefore(drawerButton, this.content_);
            }
            var obfuscator = document.createElement('div');
            obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);
            this.element_.appendChild(obfuscator);
            obfuscator.addEventListener('click', this.drawerToggleHandler_.bind(this));
            this.obfuscator_ = obfuscator;
          }
          this.screenSizeMediaQuery_ = window.matchMedia(this.Constant_.MAX_WIDTH);
          this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));
          this.screenSizeHandler_();
          if (this.header_ && this.tabBar_) {
            this.element_.classList.add(this.CssClasses_.HAS_TABS);
            var tabContainer = document.createElement('div');
            tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);
            this.header_.insertBefore(tabContainer, this.tabBar_);
            this.header_.removeChild(this.tabBar_);
            var leftButton = document.createElement('div');
            leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);
            leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);
            var leftButtonIcon = document.createElement('i');
            leftButtonIcon.classList.add(this.CssClasses_.ICON);
            leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;
            leftButton.appendChild(leftButtonIcon);
            leftButton.addEventListener('click', function() {
              this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;
            }.bind(this));
            var rightButton = document.createElement('div');
            rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);
            rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);
            var rightButtonIcon = document.createElement('i');
            rightButtonIcon.classList.add(this.CssClasses_.ICON);
            rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;
            rightButton.appendChild(rightButtonIcon);
            rightButton.addEventListener('click', function() {
              this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;
            }.bind(this));
            tabContainer.appendChild(leftButton);
            tabContainer.appendChild(this.tabBar_);
            tabContainer.appendChild(rightButton);
            var tabScrollHandler = function() {
              if (this.tabBar_.scrollLeft > 0) {
                leftButton.classList.add(this.CssClasses_.IS_ACTIVE);
              } else {
                leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);
              }
              if (this.tabBar_.scrollLeft < this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {
                rightButton.classList.add(this.CssClasses_.IS_ACTIVE);
              } else {
                rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);
              }
            }.bind(this);
            this.tabBar_.addEventListener('scroll', tabScrollHandler);
            tabScrollHandler();
            if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {
              this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);
            }
            var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);
            var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);
            for (var i = 0; i < tabs.length; i++) {
              new MaterialLayoutTab(tabs[i], tabs, panels, this);
            }
          }
          this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
        }
      };
      function MaterialLayoutTab(tab, tabs, panels, layout) {
        if (layout.tabBar_.classList.contains(layout.CssClasses_.JS_RIPPLE_EFFECT)) {
          var rippleContainer = document.createElement('span');
          rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);
          rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);
          var ripple = document.createElement('span');
          ripple.classList.add(layout.CssClasses_.RIPPLE);
          rippleContainer.appendChild(ripple);
          tab.appendChild(rippleContainer);
        }
        tab.addEventListener('click', function(e) {
          e.preventDefault();
          var href = tab.href.split('#')[1];
          var panel = layout.content_.querySelector('#' + href);
          layout.resetTabState_(tabs);
          layout.resetPanelState_(panels);
          tab.classList.add(layout.CssClasses_.IS_ACTIVE);
          panel.classList.add(layout.CssClasses_.IS_ACTIVE);
        });
      }
      componentHandler.register({
        constructor: MaterialLayout,
        classAsString: 'MaterialLayout',
        cssClass: 'mdl-js-layout'
      });
      var MaterialDataTable = function MaterialDataTable(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialDataTable'] = MaterialDataTable;
      MaterialDataTable.prototype.Constant_ = {};
      MaterialDataTable.prototype.CssClasses_ = {
        DATA_TABLE: 'mdl-data-table',
        SELECTABLE: 'mdl-data-table--selectable',
        SELECT_ELEMENT: 'mdl-data-table__select',
        IS_SELECTED: 'is-selected',
        IS_UPGRADED: 'is-upgraded'
      };
      MaterialDataTable.prototype.selectRow_ = function(checkbox, row, opt_rows) {
        if (row) {
          return function() {
            if (checkbox.checked) {
              row.classList.add(this.CssClasses_.IS_SELECTED);
            } else {
              row.classList.remove(this.CssClasses_.IS_SELECTED);
            }
          }.bind(this);
        }
        if (opt_rows) {
          return function() {
            var i;
            var el;
            if (checkbox.checked) {
              for (i = 0; i < opt_rows.length; i++) {
                el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');
                el['MaterialCheckbox'].check();
                opt_rows[i].classList.add(this.CssClasses_.IS_SELECTED);
              }
            } else {
              for (i = 0; i < opt_rows.length; i++) {
                el = opt_rows[i].querySelector('td').querySelector('.mdl-checkbox');
                el['MaterialCheckbox'].uncheck();
                opt_rows[i].classList.remove(this.CssClasses_.IS_SELECTED);
              }
            }
          }.bind(this);
        }
      };
      MaterialDataTable.prototype.createCheckbox_ = function(row, opt_rows) {
        var label = document.createElement('label');
        var labelClasses = ['mdl-checkbox', 'mdl-js-checkbox', 'mdl-js-ripple-effect', this.CssClasses_.SELECT_ELEMENT];
        label.className = labelClasses.join(' ');
        var checkbox = document.createElement('input');
        checkbox.type = 'checkbox';
        checkbox.classList.add('mdl-checkbox__input');
        checkbox.addEventListener('change', this.selectRow_(checkbox, row, opt_rows));
        label.appendChild(checkbox);
        componentHandler.upgradeElement(label, 'MaterialCheckbox');
        return label;
      };
      MaterialDataTable.prototype.init = function() {
        if (this.element_) {
          var firstHeader = this.element_.querySelector('th');
          var rows = this.element_.querySelector('tbody').querySelectorAll('tr');
          if (this.element_.classList.contains(this.CssClasses_.SELECTABLE)) {
            var th = document.createElement('th');
            var headerCheckbox = this.createCheckbox_(null, rows);
            th.appendChild(headerCheckbox);
            firstHeader.parentElement.insertBefore(th, firstHeader);
            for (var i = 0; i < rows.length; i++) {
              var firstCell = rows[i].querySelector('td');
              if (firstCell) {
                var td = document.createElement('td');
                var rowCheckbox = this.createCheckbox_(rows[i]);
                td.appendChild(rowCheckbox);
                rows[i].insertBefore(td, firstCell);
              }
            }
          }
          this.element_.classList.add(this.CssClasses_.IS_UPGRADED);
        }
      };
      componentHandler.register({
        constructor: MaterialDataTable,
        classAsString: 'MaterialDataTable',
        cssClass: 'mdl-js-data-table'
      });
      var MaterialRipple = function MaterialRipple(element) {
        this.element_ = element;
        this.init();
      };
      window['MaterialRipple'] = MaterialRipple;
      MaterialRipple.prototype.Constant_ = {
        INITIAL_SCALE: 'scale(0.0001, 0.0001)',
        INITIAL_SIZE: '1px',
        INITIAL_OPACITY: '0.4',
        FINAL_OPACITY: '0',
        FINAL_SCALE: ''
      };
      MaterialRipple.prototype.CssClasses_ = {
        RIPPLE_CENTER: 'mdl-ripple--center',
        RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',
        RIPPLE: 'mdl-ripple',
        IS_ANIMATING: 'is-animating',
        IS_VISIBLE: 'is-visible'
      };
      MaterialRipple.prototype.downHandler_ = function(event) {
        if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {
          var rect = this.element_.getBoundingClientRect();
          this.boundHeight = rect.height;
          this.boundWidth = rect.width;
          this.rippleSize_ = Math.sqrt(rect.width * rect.width + rect.height * rect.height) * 2 + 2;
          this.rippleElement_.style.width = this.rippleSize_ + 'px';
          this.rippleElement_.style.height = this.rippleSize_ + 'px';
        }
        this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);
        if (event.type === 'mousedown' && this.ignoringMouseDown_) {
          this.ignoringMouseDown_ = false;
        } else {
          if (event.type === 'touchstart') {
            this.ignoringMouseDown_ = true;
          }
          var frameCount = this.getFrameCount();
          if (frameCount > 0) {
            return;
          }
          this.setFrameCount(1);
          var bound = event.currentTarget.getBoundingClientRect();
          var x;
          var y;
          if (event.clientX === 0 && event.clientY === 0) {
            x = Math.round(bound.width / 2);
            y = Math.round(bound.height / 2);
          } else {
            var clientX = event.clientX ? event.clientX : event.touches[0].clientX;
            var clientY = event.clientY ? event.clientY : event.touches[0].clientY;
            x = Math.round(clientX - bound.left);
            y = Math.round(clientY - bound.top);
          }
          this.setRippleXY(x, y);
          this.setRippleStyles(true);
          window.requestAnimationFrame(this.animFrameHandler.bind(this));
        }
      };
      MaterialRipple.prototype.upHandler_ = function(event) {
        if (event && event.detail !== 2) {
          this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);
        }
        window.setTimeout(function() {
          this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);
        }.bind(this), 0);
      };
      MaterialRipple.prototype.init = function() {
        if (this.element_) {
          var recentering = this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);
          if (!this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {
            this.rippleElement_ = this.element_.querySelector('.' + this.CssClasses_.RIPPLE);
            this.frameCount_ = 0;
            this.rippleSize_ = 0;
            this.x_ = 0;
            this.y_ = 0;
            this.ignoringMouseDown_ = false;
            this.boundDownHandler = this.downHandler_.bind(this);
            this.element_.addEventListener('mousedown', this.boundDownHandler);
            this.element_.addEventListener('touchstart', this.boundDownHandler);
            this.boundUpHandler = this.upHandler_.bind(this);
            this.element_.addEventListener('mouseup', this.boundUpHandler);
            this.element_.addEventListener('mouseleave', this.boundUpHandler);
            this.element_.addEventListener('touchend', this.boundUpHandler);
            this.element_.addEventListener('blur', this.boundUpHandler);
            this.getFrameCount = function() {
              return this.frameCount_;
            };
            this.setFrameCount = function(fC) {
              this.frameCount_ = fC;
            };
            this.getRippleElement = function() {
              return this.rippleElement_;
            };
            this.setRippleXY = function(newX, newY) {
              this.x_ = newX;
              this.y_ = newY;
            };
            this.setRippleStyles = function(start) {
              if (this.rippleElement_ !== null) {
                var transformString;
                var scale;
                var size;
                var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';
                if (start) {
                  scale = this.Constant_.INITIAL_SCALE;
                  size = this.Constant_.INITIAL_SIZE;
                } else {
                  scale = this.Constant_.FINAL_SCALE;
                  size = this.rippleSize_ + 'px';
                  if (recentering) {
                    offset = 'translate(' + this.boundWidth / 2 + 'px, ' + this.boundHeight / 2 + 'px)';
                  }
                }
                transformString = 'translate(-50%, -50%) ' + offset + scale;
                this.rippleElement_.style.webkitTransform = transformString;
                this.rippleElement_.style.msTransform = transformString;
                this.rippleElement_.style.transform = transformString;
                if (start) {
                  this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);
                } else {
                  this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);
                }
              }
            };
            this.animFrameHandler = function() {
              if (this.frameCount_-- > 0) {
                window.requestAnimationFrame(this.animFrameHandler.bind(this));
              } else {
                this.setRippleStyles(false);
              }
            };
          }
        }
      };
      MaterialRipple.prototype.mdlDowngrade_ = function() {
        this.element_.removeEventListener('mousedown', this.boundDownHandler);
        this.element_.removeEventListener('touchstart', this.boundDownHandler);
        this.element_.removeEventListener('mouseup', this.boundUpHandler);
        this.element_.removeEventListener('mouseleave', this.boundUpHandler);
        this.element_.removeEventListener('touchend', this.boundUpHandler);
        this.element_.removeEventListener('blur', this.boundUpHandler);
      };
      MaterialRipple.prototype.mdlDowngrade = MaterialRipple.prototype.mdlDowngrade_;
      MaterialRipple.prototype['mdlDowngrade'] = MaterialRipple.prototype.mdlDowngrade;
      componentHandler.register({
        constructor: MaterialRipple,
        classAsString: 'MaterialRipple',
        cssClass: 'mdl-js-ripple-effect',
        widget: false
      });
    }());
  })();
  return _retrieveGlobal();
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
(function(undefined) {
  var moment,
      VERSION = "2.1.0",
      round = Math.round,
      i,
      languages = {},
      hasModule = (typeof module !== 'undefined' && module.exports),
      aspNetJsonRegex = /^\/?Date\((\-?\d+)/i,
      aspNetTimeSpanJsonRegex = /(\-)?(\d*)?\.?(\d+)\:(\d+)\:(\d+)\.?(\d{3})?/,
      formattingTokens = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g,
      localFormattingTokens = /(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,
      parseTokenOneOrTwoDigits = /\d\d?/,
      parseTokenOneToThreeDigits = /\d{1,3}/,
      parseTokenThreeDigits = /\d{3}/,
      parseTokenFourDigits = /\d{1,4}/,
      parseTokenSixDigits = /[+\-]?\d{1,6}/,
      parseTokenWord = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
      parseTokenTimezone = /Z|[\+\-]\d\d:?\d\d/i,
      parseTokenT = /T/i,
      parseTokenTimestampMs = /[\+\-]?\d+(\.\d{1,3})?/,
      isoRegex = /^\s*\d{4}-\d\d-\d\d((T| )(\d\d(:\d\d(:\d\d(\.\d\d?\d?)?)?)?)?([\+\-]\d\d:?\d\d)?)?/,
      isoFormat = 'YYYY-MM-DDTHH:mm:ssZ',
      isoTimes = [['HH:mm:ss.S', /(T| )\d\d:\d\d:\d\d\.\d{1,3}/], ['HH:mm:ss', /(T| )\d\d:\d\d:\d\d/], ['HH:mm', /(T| )\d\d:\d\d/], ['HH', /(T| )\d\d/]],
      parseTimezoneChunker = /([\+\-]|\d\d)/gi,
      proxyGettersAndSetters = 'Date|Hours|Minutes|Seconds|Milliseconds'.split('|'),
      unitMillisecondFactors = {
        'Milliseconds': 1,
        'Seconds': 1e3,
        'Minutes': 6e4,
        'Hours': 36e5,
        'Days': 864e5,
        'Months': 2592e6,
        'Years': 31536e6
      },
      unitAliases = {
        ms: 'millisecond',
        s: 'second',
        m: 'minute',
        h: 'hour',
        d: 'day',
        w: 'week',
        M: 'month',
        y: 'year'
      },
      formatFunctions = {},
      ordinalizeTokens = 'DDD w W M D d'.split(' '),
      paddedTokens = 'M D H h m s w W'.split(' '),
      formatTokenFunctions = {
        M: function() {
          return this.month() + 1;
        },
        MMM: function(format) {
          return this.lang().monthsShort(this, format);
        },
        MMMM: function(format) {
          return this.lang().months(this, format);
        },
        D: function() {
          return this.date();
        },
        DDD: function() {
          return this.dayOfYear();
        },
        d: function() {
          return this.day();
        },
        dd: function(format) {
          return this.lang().weekdaysMin(this, format);
        },
        ddd: function(format) {
          return this.lang().weekdaysShort(this, format);
        },
        dddd: function(format) {
          return this.lang().weekdays(this, format);
        },
        w: function() {
          return this.week();
        },
        W: function() {
          return this.isoWeek();
        },
        YY: function() {
          return leftZeroFill(this.year() % 100, 2);
        },
        YYYY: function() {
          return leftZeroFill(this.year(), 4);
        },
        YYYYY: function() {
          return leftZeroFill(this.year(), 5);
        },
        gg: function() {
          return leftZeroFill(this.weekYear() % 100, 2);
        },
        gggg: function() {
          return this.weekYear();
        },
        ggggg: function() {
          return leftZeroFill(this.weekYear(), 5);
        },
        GG: function() {
          return leftZeroFill(this.isoWeekYear() % 100, 2);
        },
        GGGG: function() {
          return this.isoWeekYear();
        },
        GGGGG: function() {
          return leftZeroFill(this.isoWeekYear(), 5);
        },
        e: function() {
          return this.weekday();
        },
        E: function() {
          return this.isoWeekday();
        },
        a: function() {
          return this.lang().meridiem(this.hours(), this.minutes(), true);
        },
        A: function() {
          return this.lang().meridiem(this.hours(), this.minutes(), false);
        },
        H: function() {
          return this.hours();
        },
        h: function() {
          return this.hours() % 12 || 12;
        },
        m: function() {
          return this.minutes();
        },
        s: function() {
          return this.seconds();
        },
        S: function() {
          return ~~(this.milliseconds() / 100);
        },
        SS: function() {
          return leftZeroFill(~~(this.milliseconds() / 10), 2);
        },
        SSS: function() {
          return leftZeroFill(this.milliseconds(), 3);
        },
        Z: function() {
          var a = -this.zone(),
              b = "+";
          if (a < 0) {
            a = -a;
            b = "-";
          }
          return b + leftZeroFill(~~(a / 60), 2) + ":" + leftZeroFill(~~a % 60, 2);
        },
        ZZ: function() {
          var a = -this.zone(),
              b = "+";
          if (a < 0) {
            a = -a;
            b = "-";
          }
          return b + leftZeroFill(~~(10 * a / 6), 4);
        },
        z: function() {
          return this.zoneAbbr();
        },
        zz: function() {
          return this.zoneName();
        },
        X: function() {
          return this.unix();
        }
      };
  function padToken(func, count) {
    return function(a) {
      return leftZeroFill(func.call(this, a), count);
    };
  }
  function ordinalizeToken(func, period) {
    return function(a) {
      return this.lang().ordinal(func.call(this, a), period);
    };
  }
  while (ordinalizeTokens.length) {
    i = ordinalizeTokens.pop();
    formatTokenFunctions[i + 'o'] = ordinalizeToken(formatTokenFunctions[i], i);
  }
  while (paddedTokens.length) {
    i = paddedTokens.pop();
    formatTokenFunctions[i + i] = padToken(formatTokenFunctions[i], 2);
  }
  formatTokenFunctions.DDDD = padToken(formatTokenFunctions.DDD, 3);
  function Language() {}
  function Moment(config) {
    extend(this, config);
  }
  function Duration(duration) {
    var years = duration.years || duration.year || duration.y || 0,
        months = duration.months || duration.month || duration.M || 0,
        weeks = duration.weeks || duration.week || duration.w || 0,
        days = duration.days || duration.day || duration.d || 0,
        hours = duration.hours || duration.hour || duration.h || 0,
        minutes = duration.minutes || duration.minute || duration.m || 0,
        seconds = duration.seconds || duration.second || duration.s || 0,
        milliseconds = duration.milliseconds || duration.millisecond || duration.ms || 0;
    this._input = duration;
    this._milliseconds = milliseconds + seconds * 1e3 + minutes * 6e4 + hours * 36e5;
    this._days = days + weeks * 7;
    this._months = months + years * 12;
    this._data = {};
    this._bubble();
  }
  function extend(a, b) {
    for (var i in b) {
      if (b.hasOwnProperty(i)) {
        a[i] = b[i];
      }
    }
    return a;
  }
  function absRound(number) {
    if (number < 0) {
      return Math.ceil(number);
    } else {
      return Math.floor(number);
    }
  }
  function leftZeroFill(number, targetLength) {
    var output = number + '';
    while (output.length < targetLength) {
      output = '0' + output;
    }
    return output;
  }
  function addOrSubtractDurationFromMoment(mom, duration, isAdding, ignoreUpdateOffset) {
    var milliseconds = duration._milliseconds,
        days = duration._days,
        months = duration._months,
        minutes,
        hours,
        currentDate;
    if (milliseconds) {
      mom._d.setTime(+mom._d + milliseconds * isAdding);
    }
    if (days || months) {
      minutes = mom.minute();
      hours = mom.hour();
    }
    if (days) {
      mom.date(mom.date() + days * isAdding);
    }
    if (months) {
      mom.month(mom.month() + months * isAdding);
    }
    if (milliseconds && !ignoreUpdateOffset) {
      moment.updateOffset(mom);
    }
    if (days || months) {
      mom.minute(minutes);
      mom.hour(hours);
    }
  }
  function isArray(input) {
    return Object.prototype.toString.call(input) === '[object Array]';
  }
  function compareArrays(array1, array2) {
    var len = Math.min(array1.length, array2.length),
        lengthDiff = Math.abs(array1.length - array2.length),
        diffs = 0,
        i;
    for (i = 0; i < len; i++) {
      if (~~array1[i] !== ~~array2[i]) {
        diffs++;
      }
    }
    return diffs + lengthDiff;
  }
  function normalizeUnits(units) {
    return units ? unitAliases[units] || units.toLowerCase().replace(/(.)s$/, '$1') : units;
  }
  Language.prototype = {
    set: function(config) {
      var prop,
          i;
      for (i in config) {
        prop = config[i];
        if (typeof prop === 'function') {
          this[i] = prop;
        } else {
          this['_' + i] = prop;
        }
      }
    },
    _months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
    months: function(m) {
      return this._months[m.month()];
    },
    _monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
    monthsShort: function(m) {
      return this._monthsShort[m.month()];
    },
    monthsParse: function(monthName) {
      var i,
          mom,
          regex;
      if (!this._monthsParse) {
        this._monthsParse = [];
      }
      for (i = 0; i < 12; i++) {
        if (!this._monthsParse[i]) {
          mom = moment([2000, i]);
          regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
          this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        if (this._monthsParse[i].test(monthName)) {
          return i;
        }
      }
    },
    _weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
    weekdays: function(m) {
      return this._weekdays[m.day()];
    },
    _weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
    weekdaysShort: function(m) {
      return this._weekdaysShort[m.day()];
    },
    _weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
    weekdaysMin: function(m) {
      return this._weekdaysMin[m.day()];
    },
    weekdaysParse: function(weekdayName) {
      var i,
          mom,
          regex;
      if (!this._weekdaysParse) {
        this._weekdaysParse = [];
      }
      for (i = 0; i < 7; i++) {
        if (!this._weekdaysParse[i]) {
          mom = moment([2000, 1]).day(i);
          regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
          this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        if (this._weekdaysParse[i].test(weekdayName)) {
          return i;
        }
      }
    },
    _longDateFormat: {
      LT: "h:mm A",
      L: "MM/DD/YYYY",
      LL: "MMMM D YYYY",
      LLL: "MMMM D YYYY LT",
      LLLL: "dddd, MMMM D YYYY LT"
    },
    longDateFormat: function(key) {
      var output = this._longDateFormat[key];
      if (!output && this._longDateFormat[key.toUpperCase()]) {
        output = this._longDateFormat[key.toUpperCase()].replace(/MMMM|MM|DD|dddd/g, function(val) {
          return val.slice(1);
        });
        this._longDateFormat[key] = output;
      }
      return output;
    },
    isPM: function(input) {
      return ((input + '').toLowerCase()[0] === 'p');
    },
    _meridiemParse: /[ap]\.?m?\.?/i,
    meridiem: function(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'pm' : 'PM';
      } else {
        return isLower ? 'am' : 'AM';
      }
    },
    _calendar: {
      sameDay: '[Today at] LT',
      nextDay: '[Tomorrow at] LT',
      nextWeek: 'dddd [at] LT',
      lastDay: '[Yesterday at] LT',
      lastWeek: '[Last] dddd [at] LT',
      sameElse: 'L'
    },
    calendar: function(key, mom) {
      var output = this._calendar[key];
      return typeof output === 'function' ? output.apply(mom) : output;
    },
    _relativeTime: {
      future: "in %s",
      past: "%s ago",
      s: "a few seconds",
      m: "a minute",
      mm: "%d minutes",
      h: "an hour",
      hh: "%d hours",
      d: "a day",
      dd: "%d days",
      M: "a month",
      MM: "%d months",
      y: "a year",
      yy: "%d years"
    },
    relativeTime: function(number, withoutSuffix, string, isFuture) {
      var output = this._relativeTime[string];
      return (typeof output === 'function') ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);
    },
    pastFuture: function(diff, output) {
      var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
      return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);
    },
    ordinal: function(number) {
      return this._ordinal.replace("%d", number);
    },
    _ordinal: "%d",
    preparse: function(string) {
      return string;
    },
    postformat: function(string) {
      return string;
    },
    week: function(mom) {
      return weekOfYear(mom, this._week.dow, this._week.doy).week;
    },
    _week: {
      dow: 0,
      doy: 6
    }
  };
  function loadLang(key, values) {
    values.abbr = key;
    if (!languages[key]) {
      languages[key] = new Language();
    }
    languages[key].set(values);
    return languages[key];
  }
  function getLangDefinition(key) {
    if (!key) {
      return moment.fn._lang;
    }
    if (!languages[key] && hasModule) {
      try {
        require('./lang/' + key);
      } catch (e) {
        return moment.fn._lang;
      }
    }
    return languages[key];
  }
  function removeFormattingTokens(input) {
    if (input.match(/\[.*\]/)) {
      return input.replace(/^\[|\]$/g, "");
    }
    return input.replace(/\\/g, "");
  }
  function makeFormatFunction(format) {
    var array = format.match(formattingTokens),
        i,
        length;
    for (i = 0, length = array.length; i < length; i++) {
      if (formatTokenFunctions[array[i]]) {
        array[i] = formatTokenFunctions[array[i]];
      } else {
        array[i] = removeFormattingTokens(array[i]);
      }
    }
    return function(mom) {
      var output = "";
      for (i = 0; i < length; i++) {
        output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];
      }
      return output;
    };
  }
  function formatMoment(m, format) {
    var i = 5;
    function replaceLongDateFormatTokens(input) {
      return m.lang().longDateFormat(input) || input;
    }
    while (i-- && localFormattingTokens.test(format)) {
      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
    }
    if (!formatFunctions[format]) {
      formatFunctions[format] = makeFormatFunction(format);
    }
    return formatFunctions[format](m);
  }
  function getParseRegexForToken(token, config) {
    switch (token) {
      case 'DDDD':
        return parseTokenThreeDigits;
      case 'YYYY':
        return parseTokenFourDigits;
      case 'YYYYY':
        return parseTokenSixDigits;
      case 'S':
      case 'SS':
      case 'SSS':
      case 'DDD':
        return parseTokenOneToThreeDigits;
      case 'MMM':
      case 'MMMM':
      case 'dd':
      case 'ddd':
      case 'dddd':
        return parseTokenWord;
      case 'a':
      case 'A':
        return getLangDefinition(config._l)._meridiemParse;
      case 'X':
        return parseTokenTimestampMs;
      case 'Z':
      case 'ZZ':
        return parseTokenTimezone;
      case 'T':
        return parseTokenT;
      case 'MM':
      case 'DD':
      case 'YY':
      case 'HH':
      case 'hh':
      case 'mm':
      case 'ss':
      case 'M':
      case 'D':
      case 'd':
      case 'H':
      case 'h':
      case 'm':
      case 's':
        return parseTokenOneOrTwoDigits;
      default:
        return new RegExp(token.replace('\\', ''));
    }
  }
  function timezoneMinutesFromString(string) {
    var tzchunk = (parseTokenTimezone.exec(string) || [])[0],
        parts = (tzchunk + '').match(parseTimezoneChunker) || ['-', 0, 0],
        minutes = +(parts[1] * 60) + ~~parts[2];
    return parts[0] === '+' ? -minutes : minutes;
  }
  function addTimeToArrayFromToken(token, input, config) {
    var a,
        datePartArray = config._a;
    switch (token) {
      case 'M':
      case 'MM':
        datePartArray[1] = (input == null) ? 0 : ~~input - 1;
        break;
      case 'MMM':
      case 'MMMM':
        a = getLangDefinition(config._l).monthsParse(input);
        if (a != null) {
          datePartArray[1] = a;
        } else {
          config._isValid = false;
        }
        break;
      case 'D':
      case 'DD':
      case 'DDD':
      case 'DDDD':
        if (input != null) {
          datePartArray[2] = ~~input;
        }
        break;
      case 'YY':
        datePartArray[0] = ~~input + (~~input > 68 ? 1900 : 2000);
        break;
      case 'YYYY':
      case 'YYYYY':
        datePartArray[0] = ~~input;
        break;
      case 'a':
      case 'A':
        config._isPm = getLangDefinition(config._l).isPM(input);
        break;
      case 'H':
      case 'HH':
      case 'h':
      case 'hh':
        datePartArray[3] = ~~input;
        break;
      case 'm':
      case 'mm':
        datePartArray[4] = ~~input;
        break;
      case 's':
      case 'ss':
        datePartArray[5] = ~~input;
        break;
      case 'S':
      case 'SS':
      case 'SSS':
        datePartArray[6] = ~~(('0.' + input) * 1000);
        break;
      case 'X':
        config._d = new Date(parseFloat(input) * 1000);
        break;
      case 'Z':
      case 'ZZ':
        config._useUTC = true;
        config._tzm = timezoneMinutesFromString(input);
        break;
    }
    if (input == null) {
      config._isValid = false;
    }
  }
  function dateFromArray(config) {
    var i,
        date,
        input = [];
    if (config._d) {
      return;
    }
    for (i = 0; i < 7; i++) {
      config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
    }
    input[3] += ~~((config._tzm || 0) / 60);
    input[4] += ~~((config._tzm || 0) % 60);
    date = new Date(0);
    if (config._useUTC) {
      date.setUTCFullYear(input[0], input[1], input[2]);
      date.setUTCHours(input[3], input[4], input[5], input[6]);
    } else {
      date.setFullYear(input[0], input[1], input[2]);
      date.setHours(input[3], input[4], input[5], input[6]);
    }
    config._d = date;
  }
  function makeDateFromStringAndFormat(config) {
    var tokens = config._f.match(formattingTokens),
        string = config._i,
        i,
        parsedInput;
    config._a = [];
    for (i = 0; i < tokens.length; i++) {
      parsedInput = (getParseRegexForToken(tokens[i], config).exec(string) || [])[0];
      if (parsedInput) {
        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
      }
      if (formatTokenFunctions[tokens[i]]) {
        addTimeToArrayFromToken(tokens[i], parsedInput, config);
      }
    }
    if (string) {
      config._il = string;
    }
    if (config._isPm && config._a[3] < 12) {
      config._a[3] += 12;
    }
    if (config._isPm === false && config._a[3] === 12) {
      config._a[3] = 0;
    }
    dateFromArray(config);
  }
  function makeDateFromStringAndArray(config) {
    var tempConfig,
        tempMoment,
        bestMoment,
        scoreToBeat = 99,
        i,
        currentScore;
    for (i = 0; i < config._f.length; i++) {
      tempConfig = extend({}, config);
      tempConfig._f = config._f[i];
      makeDateFromStringAndFormat(tempConfig);
      tempMoment = new Moment(tempConfig);
      currentScore = compareArrays(tempConfig._a, tempMoment.toArray());
      if (tempMoment._il) {
        currentScore += tempMoment._il.length;
      }
      if (currentScore < scoreToBeat) {
        scoreToBeat = currentScore;
        bestMoment = tempMoment;
      }
    }
    extend(config, bestMoment);
  }
  function makeDateFromString(config) {
    var i,
        string = config._i,
        match = isoRegex.exec(string);
    if (match) {
      config._f = 'YYYY-MM-DD' + (match[2] || " ");
      for (i = 0; i < 4; i++) {
        if (isoTimes[i][1].exec(string)) {
          config._f += isoTimes[i][0];
          break;
        }
      }
      if (parseTokenTimezone.exec(string)) {
        config._f += " Z";
      }
      makeDateFromStringAndFormat(config);
    } else {
      config._d = new Date(string);
    }
  }
  function makeDateFromInput(config) {
    var input = config._i,
        matched = aspNetJsonRegex.exec(input);
    if (input === undefined) {
      config._d = new Date();
    } else if (matched) {
      config._d = new Date(+matched[1]);
    } else if (typeof input === 'string') {
      makeDateFromString(config);
    } else if (isArray(input)) {
      config._a = input.slice(0);
      dateFromArray(config);
    } else {
      config._d = input instanceof Date ? new Date(+input) : new Date(input);
    }
  }
  function substituteTimeAgo(string, number, withoutSuffix, isFuture, lang) {
    return lang.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
  }
  function relativeTime(milliseconds, withoutSuffix, lang) {
    var seconds = round(Math.abs(milliseconds) / 1000),
        minutes = round(seconds / 60),
        hours = round(minutes / 60),
        days = round(hours / 24),
        years = round(days / 365),
        args = seconds < 45 && ['s', seconds] || minutes === 1 && ['m'] || minutes < 45 && ['mm', minutes] || hours === 1 && ['h'] || hours < 22 && ['hh', hours] || days === 1 && ['d'] || days <= 25 && ['dd', days] || days <= 45 && ['M'] || days < 345 && ['MM', round(days / 30)] || years === 1 && ['y'] || ['yy', years];
    args[2] = withoutSuffix;
    args[3] = milliseconds > 0;
    args[4] = lang;
    return substituteTimeAgo.apply({}, args);
  }
  function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {
    var end = firstDayOfWeekOfYear - firstDayOfWeek,
        daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),
        adjustedMoment;
    if (daysToDayOfWeek > end) {
      daysToDayOfWeek -= 7;
    }
    if (daysToDayOfWeek < end - 7) {
      daysToDayOfWeek += 7;
    }
    adjustedMoment = moment(mom).add('d', daysToDayOfWeek);
    return {
      week: Math.ceil(adjustedMoment.dayOfYear() / 7),
      year: adjustedMoment.year()
    };
  }
  function makeMoment(config) {
    var input = config._i,
        format = config._f;
    if (input === null || input === '') {
      return null;
    }
    if (typeof input === 'string') {
      config._i = input = getLangDefinition().preparse(input);
    }
    if (moment.isMoment(input)) {
      config = extend({}, input);
      config._d = new Date(+input._d);
    } else if (format) {
      if (isArray(format)) {
        makeDateFromStringAndArray(config);
      } else {
        makeDateFromStringAndFormat(config);
      }
    } else {
      makeDateFromInput(config);
    }
    return new Moment(config);
  }
  moment = function(input, format, lang) {
    return makeMoment({
      _i: input,
      _f: format,
      _l: lang,
      _isUTC: false
    });
  };
  moment.utc = function(input, format, lang) {
    return makeMoment({
      _useUTC: true,
      _isUTC: true,
      _l: lang,
      _i: input,
      _f: format
    });
  };
  moment.unix = function(input) {
    return moment(input * 1000);
  };
  moment.duration = function(input, key) {
    var isDuration = moment.isDuration(input),
        isNumber = (typeof input === 'number'),
        duration = (isDuration ? input._input : (isNumber ? {} : input)),
        matched = aspNetTimeSpanJsonRegex.exec(input),
        sign,
        ret;
    if (isNumber) {
      if (key) {
        duration[key] = input;
      } else {
        duration.milliseconds = input;
      }
    } else if (matched) {
      sign = (matched[1] === "-") ? -1 : 1;
      duration = {
        y: 0,
        d: ~~matched[2] * sign,
        h: ~~matched[3] * sign,
        m: ~~matched[4] * sign,
        s: ~~matched[5] * sign,
        ms: ~~matched[6] * sign
      };
    }
    ret = new Duration(duration);
    if (isDuration && input.hasOwnProperty('_lang')) {
      ret._lang = input._lang;
    }
    return ret;
  };
  moment.version = VERSION;
  moment.defaultFormat = isoFormat;
  moment.updateOffset = function() {};
  moment.lang = function(key, values) {
    if (!key) {
      return moment.fn._lang._abbr;
    }
    if (values) {
      loadLang(key, values);
    } else if (!languages[key]) {
      getLangDefinition(key);
    }
    moment.duration.fn._lang = moment.fn._lang = getLangDefinition(key);
  };
  moment.langData = function(key) {
    if (key && key._lang && key._lang._abbr) {
      key = key._lang._abbr;
    }
    return getLangDefinition(key);
  };
  moment.isMoment = function(obj) {
    return obj instanceof Moment;
  };
  moment.isDuration = function(obj) {
    return obj instanceof Duration;
  };
  moment.fn = Moment.prototype = {
    clone: function() {
      return moment(this);
    },
    valueOf: function() {
      return +this._d + ((this._offset || 0) * 60000);
    },
    unix: function() {
      return Math.floor(+this / 1000);
    },
    toString: function() {
      return this.format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
    },
    toDate: function() {
      return this._offset ? new Date(+this) : this._d;
    },
    toISOString: function() {
      return formatMoment(moment(this).utc(), 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
    },
    toArray: function() {
      var m = this;
      return [m.year(), m.month(), m.date(), m.hours(), m.minutes(), m.seconds(), m.milliseconds()];
    },
    isValid: function() {
      if (this._isValid == null) {
        if (this._a) {
          this._isValid = !compareArrays(this._a, (this._isUTC ? moment.utc(this._a) : moment(this._a)).toArray());
        } else {
          this._isValid = !isNaN(this._d.getTime());
        }
      }
      return !!this._isValid;
    },
    utc: function() {
      return this.zone(0);
    },
    local: function() {
      this.zone(0);
      this._isUTC = false;
      return this;
    },
    format: function(inputString) {
      var output = formatMoment(this, inputString || moment.defaultFormat);
      return this.lang().postformat(output);
    },
    add: function(input, val) {
      var dur;
      if (typeof input === 'string') {
        dur = moment.duration(+val, input);
      } else {
        dur = moment.duration(input, val);
      }
      addOrSubtractDurationFromMoment(this, dur, 1);
      return this;
    },
    subtract: function(input, val) {
      var dur;
      if (typeof input === 'string') {
        dur = moment.duration(+val, input);
      } else {
        dur = moment.duration(input, val);
      }
      addOrSubtractDurationFromMoment(this, dur, -1);
      return this;
    },
    diff: function(input, units, asFloat) {
      var that = this._isUTC ? moment(input).zone(this._offset || 0) : moment(input).local(),
          zoneDiff = (this.zone() - that.zone()) * 6e4,
          diff,
          output;
      units = normalizeUnits(units);
      if (units === 'year' || units === 'month') {
        diff = (this.daysInMonth() + that.daysInMonth()) * 432e5;
        output = ((this.year() - that.year()) * 12) + (this.month() - that.month());
        output += ((this - moment(this).startOf('month')) - (that - moment(that).startOf('month'))) / diff;
        output -= ((this.zone() - moment(this).startOf('month').zone()) - (that.zone() - moment(that).startOf('month').zone())) * 6e4 / diff;
        if (units === 'year') {
          output = output / 12;
        }
      } else {
        diff = (this - that);
        output = units === 'second' ? diff / 1e3 : units === 'minute' ? diff / 6e4 : units === 'hour' ? diff / 36e5 : units === 'day' ? (diff - zoneDiff) / 864e5 : units === 'week' ? (diff - zoneDiff) / 6048e5 : diff;
      }
      return asFloat ? output : absRound(output);
    },
    from: function(time, withoutSuffix) {
      return moment.duration(this.diff(time)).lang(this.lang()._abbr).humanize(!withoutSuffix);
    },
    fromNow: function(withoutSuffix) {
      return this.from(moment(), withoutSuffix);
    },
    calendar: function() {
      var diff = this.diff(moment().startOf('day'), 'days', true),
          format = diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';
      return this.format(this.lang().calendar(format, this));
    },
    isLeapYear: function() {
      var year = this.year();
      return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    },
    isDST: function() {
      return (this.zone() < this.clone().month(0).zone() || this.zone() < this.clone().month(5).zone());
    },
    day: function(input) {
      var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
      if (input != null) {
        if (typeof input === 'string') {
          input = this.lang().weekdaysParse(input);
          if (typeof input !== 'number') {
            return this;
          }
        }
        return this.add({d: input - day});
      } else {
        return day;
      }
    },
    month: function(input) {
      var utc = this._isUTC ? 'UTC' : '',
          dayOfMonth,
          daysInMonth;
      if (input != null) {
        if (typeof input === 'string') {
          input = this.lang().monthsParse(input);
          if (typeof input !== 'number') {
            return this;
          }
        }
        dayOfMonth = this.date();
        this.date(1);
        this._d['set' + utc + 'Month'](input);
        this.date(Math.min(dayOfMonth, this.daysInMonth()));
        moment.updateOffset(this);
        return this;
      } else {
        return this._d['get' + utc + 'Month']();
      }
    },
    startOf: function(units) {
      units = normalizeUnits(units);
      switch (units) {
        case 'year':
          this.month(0);
        case 'month':
          this.date(1);
        case 'week':
        case 'day':
          this.hours(0);
        case 'hour':
          this.minutes(0);
        case 'minute':
          this.seconds(0);
        case 'second':
          this.milliseconds(0);
      }
      if (units === 'week') {
        this.weekday(0);
      }
      return this;
    },
    endOf: function(units) {
      return this.startOf(units).add(units, 1).subtract('ms', 1);
    },
    isAfter: function(input, units) {
      units = typeof units !== 'undefined' ? units : 'millisecond';
      return +this.clone().startOf(units) > +moment(input).startOf(units);
    },
    isBefore: function(input, units) {
      units = typeof units !== 'undefined' ? units : 'millisecond';
      return +this.clone().startOf(units) < +moment(input).startOf(units);
    },
    isSame: function(input, units) {
      units = typeof units !== 'undefined' ? units : 'millisecond';
      return +this.clone().startOf(units) === +moment(input).startOf(units);
    },
    min: function(other) {
      other = moment.apply(null, arguments);
      return other < this ? this : other;
    },
    max: function(other) {
      other = moment.apply(null, arguments);
      return other > this ? this : other;
    },
    zone: function(input) {
      var offset = this._offset || 0;
      if (input != null) {
        if (typeof input === "string") {
          input = timezoneMinutesFromString(input);
        }
        if (Math.abs(input) < 16) {
          input = input * 60;
        }
        this._offset = input;
        this._isUTC = true;
        if (offset !== input) {
          addOrSubtractDurationFromMoment(this, moment.duration(offset - input, 'm'), 1, true);
        }
      } else {
        return this._isUTC ? offset : this._d.getTimezoneOffset();
      }
      return this;
    },
    zoneAbbr: function() {
      return this._isUTC ? "UTC" : "";
    },
    zoneName: function() {
      return this._isUTC ? "Coordinated Universal Time" : "";
    },
    daysInMonth: function() {
      return moment.utc([this.year(), this.month() + 1, 0]).date();
    },
    dayOfYear: function(input) {
      var dayOfYear = round((moment(this).startOf('day') - moment(this).startOf('year')) / 864e5) + 1;
      return input == null ? dayOfYear : this.add("d", (input - dayOfYear));
    },
    weekYear: function(input) {
      var year = weekOfYear(this, this.lang()._week.dow, this.lang()._week.doy).year;
      return input == null ? year : this.add("y", (input - year));
    },
    isoWeekYear: function(input) {
      var year = weekOfYear(this, 1, 4).year;
      return input == null ? year : this.add("y", (input - year));
    },
    week: function(input) {
      var week = this.lang().week(this);
      return input == null ? week : this.add("d", (input - week) * 7);
    },
    isoWeek: function(input) {
      var week = weekOfYear(this, 1, 4).week;
      return input == null ? week : this.add("d", (input - week) * 7);
    },
    weekday: function(input) {
      var weekday = (this._d.getDay() + 7 - this.lang()._week.dow) % 7;
      return input == null ? weekday : this.add("d", input - weekday);
    },
    isoWeekday: function(input) {
      return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);
    },
    lang: function(key) {
      if (key === undefined) {
        return this._lang;
      } else {
        this._lang = getLangDefinition(key);
        return this;
      }
    }
  };
  function makeGetterAndSetter(name, key) {
    moment.fn[name] = moment.fn[name + 's'] = function(input) {
      var utc = this._isUTC ? 'UTC' : '';
      if (input != null) {
        this._d['set' + utc + key](input);
        moment.updateOffset(this);
        return this;
      } else {
        return this._d['get' + utc + key]();
      }
    };
  }
  for (i = 0; i < proxyGettersAndSetters.length; i++) {
    makeGetterAndSetter(proxyGettersAndSetters[i].toLowerCase().replace(/s$/, ''), proxyGettersAndSetters[i]);
  }
  makeGetterAndSetter('year', 'FullYear');
  moment.fn.days = moment.fn.day;
  moment.fn.months = moment.fn.month;
  moment.fn.weeks = moment.fn.week;
  moment.fn.isoWeeks = moment.fn.isoWeek;
  moment.fn.toJSON = moment.fn.toISOString;
  moment.duration.fn = Duration.prototype = {
    _bubble: function() {
      var milliseconds = this._milliseconds,
          days = this._days,
          months = this._months,
          data = this._data,
          seconds,
          minutes,
          hours,
          years;
      data.milliseconds = milliseconds % 1000;
      seconds = absRound(milliseconds / 1000);
      data.seconds = seconds % 60;
      minutes = absRound(seconds / 60);
      data.minutes = minutes % 60;
      hours = absRound(minutes / 60);
      data.hours = hours % 24;
      days += absRound(hours / 24);
      data.days = days % 30;
      months += absRound(days / 30);
      data.months = months % 12;
      years = absRound(months / 12);
      data.years = years;
    },
    weeks: function() {
      return absRound(this.days() / 7);
    },
    valueOf: function() {
      return this._milliseconds + this._days * 864e5 + (this._months % 12) * 2592e6 + ~~(this._months / 12) * 31536e6;
    },
    humanize: function(withSuffix) {
      var difference = +this,
          output = relativeTime(difference, !withSuffix, this.lang());
      if (withSuffix) {
        output = this.lang().pastFuture(difference, output);
      }
      return this.lang().postformat(output);
    },
    add: function(input, val) {
      var dur = moment.duration(input, val);
      this._milliseconds += dur._milliseconds;
      this._days += dur._days;
      this._months += dur._months;
      this._bubble();
      return this;
    },
    subtract: function(input, val) {
      var dur = moment.duration(input, val);
      this._milliseconds -= dur._milliseconds;
      this._days -= dur._days;
      this._months -= dur._months;
      this._bubble();
      return this;
    },
    get: function(units) {
      units = normalizeUnits(units);
      return this[units.toLowerCase() + 's']();
    },
    as: function(units) {
      units = normalizeUnits(units);
      return this['as' + units.charAt(0).toUpperCase() + units.slice(1) + 's']();
    },
    lang: moment.fn.lang
  };
  function makeDurationGetter(name) {
    moment.duration.fn[name] = function() {
      return this._data[name];
    };
  }
  function makeDurationAsGetter(name, factor) {
    moment.duration.fn['as' + name] = function() {
      return +this / factor;
    };
  }
  for (i in unitMillisecondFactors) {
    if (unitMillisecondFactors.hasOwnProperty(i)) {
      makeDurationAsGetter(i, unitMillisecondFactors[i]);
      makeDurationGetter(i.toLowerCase());
    }
  }
  makeDurationAsGetter('Weeks', 6048e5);
  moment.duration.fn.asMonths = function() {
    return (+this - this.years() * 31536e6) / 2592e6 + this.years() * 12;
  };
  moment.lang('en', {ordinal: function(number) {
      var b = number % 10,
          output = (~~(number % 100 / 10) === 1) ? 'th' : (b === 1) ? 'st' : (b === 2) ? 'nd' : (b === 3) ? 'rd' : 'th';
      return number + output;
    }});
  if (hasModule) {
    module.exports = moment;
  }
  if (typeof ender === 'undefined') {
    this['moment'] = moment;
  }
  if (typeof define === "function" && define.amd) {
    define("9", [], function() {
      return moment;
    });
  }
}).call(this);

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("80", ["5", "6", "7"], function($, _, Backbone) {
  var ExpressoService = new function() {
    var service;
    this.startService = function() {
      var that = this;
      if (this.service != undefined) {
        this.service.startService(function(r) {
          that.handleSuccess(r);
        }, function(e) {
          that.handleError(e);
        });
      } else {
        console.log("SERVICE - UNDEFINED");
      }
    };
    this.stopService = function() {
      var that = this;
      if (this.service != undefined) {
        this.service.stopService(function(r) {
          that.handleSuccess(r);
        }, function(e) {
          that.handleError(e);
        });
      } else {
        console.log("SERVICE - UNDEFINED");
      }
    };
    this.enableTimer = function() {
      var that = this;
      if (this.service != undefined) {
        this.service.enableTimer(120000, function(r) {
          that.handleSuccess(r);
        }, function(e) {
          that.handleError(e);
        });
      } else {
        console.log("SERVICE - UNDEFINED");
      }
    };
    this.disableTimer = function() {
      var that = this;
      if (this.service != undefined) {
        this.service.disableTimer(function(r) {
          that.handleSuccess(r);
        }, function(e) {
          that.handleError(e);
        });
      } else {
        console.log("SERVICE - UNDEFINED");
      }
    };
    this.registerForBootStart = function() {
      var that = this;
      if (this.service != undefined) {
        this.service.registerForBootStart(function(r) {
          that.handleSuccess(r);
        }, function(e) {
          that.handleError(e);
        });
      } else {
        console.log("SERVICE - UNDEFINED");
      }
    };
    this.deregisterForBootStart = function() {
      var that = this;
      if (this.service != undefined) {
        this.service.deregisterForBootStart(function(r) {
          that.handleSuccess(r);
        }, function(e) {
          that.handleError(e);
        });
      } else {
        console.log("SERVICE - UNDEFINED");
      }
    };
    this.registerForUpdates = function() {
      var that = this;
      if (this.service != undefined) {
        this.service.registerForUpdates(function(r) {
          that.handleSuccess(r);
        }, function(e) {
          that.handleError(e);
        });
      } else {
        console.log("SERVICE - UNDEFINED");
      }
    };
    this.deregisterForUpdates = function() {
      var that = this;
      if (this.service != undefined) {
        this.service.deregisterForUpdates(function(r) {
          that.handleSuccess(r);
        }, function(e) {
          that.handleError(e);
        });
      } else {
        console.log("SERVICE - UNDEFINED");
      }
    };
    this.handleSuccess = function(r) {};
    this.handleError = function(e) {};
    this.setConfig = function(apiURL, auth, username, password) {
      var that = this;
      var config = {
        "auth": auth,
        "apiURL": apiURL,
        "username": username,
        "password": password
      };
      if (this.service != undefined) {
        this.service.setConfiguration(config, function(r) {
          that.handleSuccess(r);
        }, function(e) {
          that.handleError(e);
        });
      }
    };
  };
  return ExpressoService;
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("81", [], function() {
  return "<% if (route != \"\") { %>\n<a href=\"<%=route%>\" class=\"routeMessage\" style=\"text-decoration: none;\">\n<% } %>\n\t<paper-toast id=\"toast_message\" text=\"<%=title%>\">\n\t    <span role=\"button\" class=\"routeMessage\" tabindex=\"0\" style=\"color: #eeff41;margin: 10px\" href=\"<%=route%>\" onclick=\"console.log('RETRY')\">Abrir</span>\n\t</paper-toast>\n\t<div class=\"<%=type%> message\">\n\t\t<% if (icon != \"\") { %>\n\t\t\t<div class=\"message-icon <%=icon%>\"></div>\n\t\t<% } %>\n\t\t<% if (description != '') { %>\n\t\t\t<h3><%=title%></h3>\n\t\t\t<p><%=description%></p>\n\t\t<% } else { %>\n\t\t\t<h4><%=title%></h4>\n\t\t<% } %>\n\t</div>\n<% if (route != \"\") { %>\n\t</a>\n<% } %>";
});

_removeDefine();
})();
$__System.register("82", ["5", "6", "7", "81"], function($__export) {
  "use strict";
  var __moduleName = "82";
  var $,
      _,
      Backbone,
      userMessageTemplate,
      UserMessageView;
  return {
    setters: [function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      userMessageTemplate = $__m.default;
    }],
    execute: function() {
      UserMessageView = Backbone.View.extend({
        msgType: '',
        msgTitle: '',
        msgDescription: '',
        msgRoute: '',
        msgIcon: '',
        elementID: '',
        animate: true,
        timeout: 3000,
        render: function() {
          var that = this;
          setTimeout(function() {
            $('#toastMessage').attr("text", that.msgTitle);
            if (document.querySelector('#toastMessage')) {
              document.querySelector('#toastMessage').show();
            }
          }, 1000);
        },
        events: {'click .routeMessage': 'clickMessage'},
        clickMessage: function(e) {
          e.preventDefault();
          var router = new Backbone.Router();
          router.navigate(e.currentTarget.getAttribute("href"), {trigger: true});
          $(this.elementID).empty();
        }
      });
      $__export('default', UserMessageView);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("5b", ["5"], function($) {
  (function($) {
    var APIAjax = new function() {
      var _id;
      var _data = {};
      this.id = function(value) {
        if (value == undefined)
          return _id;
        var int = parseInt(String(value));
        _id = (isNaN(int)) ? 0 : int;
        _data[_id] = {stage: 0};
        this.url('').type('POST').params({}).done().always().fail();
        return this;
      };
      this.url = function(value) {
        if (value == undefined)
          return _data[_id].url;
        _data[_id].url = value;
        return this;
      };
      this.type = function(value) {
        if (value == undefined)
          return _data[_id].type;
        _data[_id].type = (value.toUpperCase() == 'GET') ? 'GET' : 'POST';
        return this;
      };
      this.params = function(value) {
        if (value == undefined)
          return _data[_id].params;
        _data[_id].params = value;
        return this;
      };
      this.done = function(value) {
        _data[_id].done = value;
        return this;
      };
      this.fail = function(value) {
        _data[_id].fail = value;
        return this;
      };
      this.always = function(value) {
        _data[_id].always = value;
        return this;
      };
      this.options = function(value) {
        for (var method in value)
          if (this.hasOwnProperty(method))
            this[method](value[method]);
        return this;
      };
      this.length = function() {
        var size = 0,
            key;
        for (key in _data) {
          if (_data.hasOwnProperty(key) && _data[key].stage > 0)
            size++;
        }
        return size;
      };
      this.conf = function() {
        _data[_id].send = {};
        _data[_id].send.id = _id;
        _data[_id].send.params = this.params();
        var conf = {};
        conf.id = _id;
        conf.type = this.type();
        conf.url = this.url();
        conf.data = this.params();
        conf.dataType = 'text';
        return conf;
      };
      this.transport = function() {
        if (window.XDomainRequest) {
          jQuery.ajaxTransport(function(s, o) {
            if (s.crossDomain && s.async) {
              if (s.timeout) {
                s.xdrTimeout = s.timeout;
                delete s.timeout;
              }
              var xdr;
              return {
                send: function(_, complete) {
                  function callback(status, statusText, responses, responseHeaders) {
                    xdr.onload = xdr.onerror = xdr.ontimeout = jQuery.noop;
                    xdr = undefined;
                    complete(status, statusText, responses, responseHeaders);
                  }
                  xdr = new XDomainRequest();
                  if (o.id != undefined)
                    _data[o.id].xdr = xdr;
                  xdr.onload = function() {
                    callback(200, "OK", {text: xdr.responseText}, "Content-Type: " + xdr.contentType);
                  };
                  xdr.onerror = function() {
                    callback(404, "Not Found");
                  };
                  xdr.onprogress = function() {};
                  xdr.ontimeout = function() {
                    callback(0, "timeout");
                  };
                  xdr.timeout = s.xdrTimeout || Number.MAX_VALUE;
                  xdr.open(s.type, s.url);
                  xdr.send((s.hasContent && s.data) || null);
                },
                abort: function() {
                  if (xdr) {
                    xdr.onerror = jQuery.noop;
                    xdr.abort();
                  }
                }
              };
            }
          });
        }
        return this;
      };
      this.execute = function() {
        var conf = this.conf();
        _data[_id].stage = 1;
        _data[_id].ajax = jQuery.ajax(conf).done(function(response) {
          if (_data[this.id] == undefined)
            return;
          _data[this.id].stage = -1;
          _data[this.id].send.response = response;
          if (_data[this.id].done)
            _data[this.id].done(response, _data[this.id].send);
        }).fail(function(response) {
          if (_data[this.id] == undefined)
            return;
          _data[this.id].stage = -1;
          if (_data[this.id].fail)
            _data[this.id].fail(response, _data[this.id].send);
        }).always(function() {
          if (_data[this.id] == undefined)
            return;
          if (_data[this.id].always)
            _data[this.id].always(_data[this.id].send);
          delete _data[this.id];
        });
        this.id(_id + 1);
        return this;
      };
      this.abortAll = function() {
        var tempID = _data[_id];
        _data = {};
        _data[_id] = tempID;
        return this;
      };
    };
    APIAjax.transport().id(0);
    $.xmpp = {
      rid: null,
      sid: null,
      jid: null,
      url: null,
      uri: null,
      myPresence: "unavailable",
      domainJabber: "",
      listening: false,
      hasConn: false,
      onRoster: null,
      onMessage: null,
      onIq: null,
      onComposing: null,
      onPresence: null,
      onError: null,
      connections: 0,
      resource: null,
      connected: false,
      wait: 60,
      inactivity: 60,
      _jsTimeout: null,
      _timeoutMilis: 500,
      __lastAjaxRequest: null,
      connect: function(options) {
        this.rid = Math.round(Math.random() * Math.pow(10, 10));
        this.jid = options.username + "@" + options.domain;
        var domain = options.domain;
        this.domainJabber = options.domain;
        this.hasConn = true;
        var xmpp = this;
        if (options.url == null)
          this.url = '/http-bind';
        else
          this.url = options.url;
        if (!isNaN(options.wait)) {
          this.wait = options.wait;
        }
        this._timeoutMilis = xmpp.wait * 1000;
        if (!isNaN(options.inactivity)) {
          this.inactivity = options.inactivity;
        }
        this.uri = this.jid;
        if (options.resource == null)
          this.resource = "";
        else {
          this.resource = options.resource;
          this.uri += "/" + this.resource;
        }
        this.onMessage = options.onMessage;
        this.onIq = options.onIq;
        this.onPresence = options.onPresence;
        this.onError = options.onError;
        this.onDisconnect = options.onDisconnect;
        this.onConnect = options.onConnect;
        this.onRoster = options.onRoster;
        this.onComposing = options.onComposing;
        var msg = "<body rid='" + this.rid + "' xmlns='http://jabber.org/protocol/httpbind' to='" + domain + "' xml:lang='en' wait='" + this.wait + "' inactivity='" + this.inactivity + "' hold='1' content='text/xml; charset=utf-8' ver='1.6' xmpp:version='1.0' xmlns:xmpp='urn:xmpp:xbosh'/>";
        $.post(this.url, msg, function(data) {
          var response = $(xmpp.fixBody(data));
          xmpp.sid = response.attr("sid");
          if (response.find("mechanism:contains('PLAIN')").length) {
            xmpp.loginPlain(options);
          } else if (response.find("mechanism:contains('DIGEST-MD5')").length) {
            xmpp.loginDigestMD5(options);
          } else {
            if (xmpp.onError != null) {
              xmpp.onError({
                error: "No auth method supported",
                data: data
              });
            }
          }
        }, 'text');
      },
      attach: function(options) {
        this.jid = options.username + "@" + options.domain;
        this.sid = options.sid;
        this.rid = options.rid;
        var xmpp = this;
        if (options.url == null)
          this.url = '/http-bind';
        else
          this.url = options.url;
        this.uri = this.jid;
        if (options.resource == null)
          this.resource = "";
        else {
          this.resource = options.resource;
          this.uri += "/" + this.resource;
        }
        this.onMessage = options.onMessage;
        this.onIq = options.onIq;
        this.onPresence = options.onPresence;
        this.onError = options.onError;
        this.onDisconnect = options.onDisconnect;
        this.onConnect = options.onConnect;
        if (!isNaN(options.wait)) {
          this.wait = options.wait;
        }
        this._timeoutMilis = xmpp.wait * 1000;
        if (options.onConnect != null)
          xmpp.connected = true;
        options.onConnect();
        xmpp.listen();
      },
      disconnectSync: function(callback) {
        var xmpp = this;
        xmpp.rid = xmpp.rid + 1;
        this.listening = true;
        xmpp.connections = xmpp.connections + 1;
        var msg = "<body rid='" + this.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + this.sid + "' type='terminate'><presence xmlns='jabber:client' type='unavailable'/></body>";
        $.ajax({
          type: 'POST',
          url: this.url,
          data: msg,
          success: function(data) {
            xmpp.connections = xmpp.connections - 1;
            xmpp.messageHandler(data);
            xmpp.listening = false;
            if (callback != null)
              callback(data);
            if (xmpp.onDisconnect != null)
              xmpp.connected = false;
            xmpp.onDisconnect(data);
            xmpp.myPresence = "unavailable";
          },
          dataType: 'text',
          async: false
        });
      },
      disconnect: function(callback) {
        this.hasConn = false;
        var xmpp = this;
        xmpp.rid = xmpp.rid + 1;
        this.listening = true;
        xmpp.connections = xmpp.connections + 1;
        var msg = "<body rid='" + this.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + this.sid + "' type='terminate'><presence xmlns='jabber:client' type='unavailable'/></body>";
        $.post(this.url, msg, function(data) {
          xmpp.connections = xmpp.connections - 1;
          xmpp.messageHandler(data);
          xmpp.listening = false;
          xmpp.myPresence = "unavailable";
          if (callback != null)
            callback(data);
          if (xmpp.onDisconnect != null)
            xmpp.connected = false;
          xmpp.onDisconnect(data);
        }, 'text');
      },
      loginDigestMD5: function(options) {
        var xmpp = this;
        this.rid++;
        var msg = "<body rid='" + this.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + this.sid + "'><auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='DIGEST-MD5'/></body>";
        $.post(this.url, msg, function(data) {
          var response = $(data);
          var domain = options.domain;
          var username = options.username;
          var attribMatch = /([a-z]+)=("[^"]+"|[^,"]+)(?:,|$)/;
          var challenge = Base64.decode(response.text());
          var cnonce = MD5.hexdigest("" + (Math.random() * 1234567890));
          var realm = "";
          var host = null;
          var nonce = "";
          var qop = "";
          var matches;
          while (challenge.match(attribMatch)) {
            matches = challenge.match(attribMatch);
            challenge = challenge.replace(matches[0], "");
            matches[2] = matches[2].replace(/^"(.+)"$/, "$1");
            switch (matches[1]) {
              case "realm":
                realm = matches[2];
                break;
              case "nonce":
                nonce = matches[2];
                break;
              case "qop":
                qop = matches[2];
                break;
              case "host":
                host = matches[2];
                break;
            }
          }
          var digest_uri = "xmpp/" + domain;
          if (host !== null) {
            digest_uri = digest_uri + "/" + host;
          }
          var A1 = MD5.hash(username + ":" + realm + ":" + options.password) + ":" + nonce + ":" + cnonce;
          var A2 = 'AUTHENTICATE:' + digest_uri;
          var responseText = "";
          responseText += 'username=' + xmpp._quote(username) + ',';
          responseText += 'realm=' + xmpp._quote(realm) + ',';
          responseText += 'nonce=' + xmpp._quote(nonce) + ',';
          responseText += 'cnonce=' + xmpp._quote(cnonce) + ',';
          responseText += 'nc="00000001",';
          responseText += 'qop="auth",';
          responseText += 'digest-uri=' + xmpp._quote(digest_uri) + ',';
          responseText += 'response=' + xmpp._quote(MD5.hexdigest(MD5.hexdigest(A1) + ":" + nonce + ":00000001:" + cnonce + ":auth:" + MD5.hexdigest(A2))) + ',';
          responseText += 'charset="utf-8"';
          xmpp.rid++;
          var msg = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'><response xmlns='urn:ietf:params:xml:ns:xmpp-sasl'>" + Base64.encode(responseText) + "</response></body>";
          $.post(this.url, msg, function(data) {
            var response = $(xmpp.fixBody(data));
            if (!response.find("failure").length) {
              xmpp.rid++;
              var msg = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'><response xmlns='urn:ietf:params:xml:ns:xmpp-sasl'/></body>";
              $.post(this.url, msg, function(data) {
                var response = $(xmpp.fixBody(data));
                if (response.find("success").length) {
                  xmpp.rid++;
                  var msg = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "' to='" + domain + "' xml:lang='en' xmpp:restart='true' xmlns:xmpp='urn:xmpp:xbosh'/>";
                  $.post(this.url, msg, function(data) {
                    xmpp.rid++;
                    var msg = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'><iq type='set' id='_bind_auth_2' xmlns='jabber:client'><bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'><resource>" + xmpp.resource + "</resource></bind></iq></body>";
                    $.post(this.url, msg, function(data) {
                      xmpp.rid++;
                      var msg = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'><iq type='set' id='_session_auth_2' xmlns='jabber:client'><session xmlns='urn:ietf:params:xml:ns:xmpp-session'/></iq></body>";
                      $.post(this.url, msg, function(data) {
                        if (options.onConnect != null)
                          xmpp.connected = true;
                        options.onConnect(data);
                        xmpp.listen();
                      }, 'text');
                    }, 'text');
                  }, 'text');
                } else {
                  if (xmpp.onError != null)
                    xmpp.onError({
                      error: "Invalid credentials",
                      data: data
                    });
                }
              }, 'text');
            } else {
              if (xmpp.onError != null)
                xmpp.onError({
                  error: "Invalid credentials",
                  data: data
                });
            }
          }, 'text');
        }, 'text');
      },
      _quote: function(string) {
        return '"' + string + '"';
      },
      loginPlainPHP: function(options) {
        this.rid++;
        var domain = options.domain;
        var xmpp = this;
        var text = "";
        var url = this.url;
        $.post("bind.php", url, function(data) {
          var auth = $.trim(data);
          var php_text = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'><auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='PLAIN'>" + auth + "</auth></body>";
          $.post(xmpp.url, php_text, function(data) {
            var response = $(xmpp.fixBody(data));
            if (response.find("success").length) {
              xmpp.rid++;
              text = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "' to='" + domain + "' xml:lang='en' xmpp:restart='true' xmlns:xmpp='urn:xmpp:xbosh'/>";
              $.post(url, text, function(data) {
                xmpp.rid++;
                text = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'><iq type='set' id='_bind_auth_2' xmlns='jabber:client'><bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'><resource>" + xmpp.resource + "</resource></bind></iq></body>";
                $.post(url, text, function(data) {
                  xmpp.rid++;
                  text = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'><iq type='set' id='_session_auth_2' xmlns='jabber:client'><session xmlns='urn:ietf:params:xml:ns:xmpp-session'/></iq></body>";
                  $.post(url, text, function(data) {
                    if (options.onConnect != null) {
                      xmpp.connected = true;
                    }
                    options.onConnect(data);
                    xmpp.listen();
                  }, 'text');
                }, 'text');
              }, 'text');
            } else {
              if (options.onError != null) {
                options.onError({
                  error: "Invalid credentials",
                  data: data
                });
              }
            }
          }, 'text');
        }, 'text');
      },
      loginPlain: function(options) {
        if ((this.jid != null && $.trim(this.jid) != "") && (options.password != undefined && $.trim(options.password) != "")) {
          this.rid++;
          var user = options.username;
          var domain = options.domain;
          var xmpp = this;
          var text = "<body rid='" + this.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + this.sid + "'><auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='PLAIN'>" + options.password + "</auth></body>";
          var url = this.url;
          $.post(this.url, text, function(data) {
            var response = $(xmpp.fixBody(data));
            if (response.find("success").length) {
              xmpp.rid++;
              text = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "' to='" + domain + "' xml:lang='en' xmpp:restart='true' xmlns:xmpp='urn:xmpp:xbosh'/>";
              $.post(url, text, function(data) {
                xmpp.rid++;
                text = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'><iq type='set' id='_bind_auth_2' xmlns='jabber:client'><bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'><resource>" + xmpp.resource + "</resource></bind></iq></body>";
                $.post(url, text, function(data) {
                  xmpp.rid++;
                  text = "<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'><iq type='set' id='_session_auth_2' xmlns='jabber:client'><session xmlns='urn:ietf:params:xml:ns:xmpp-session'/></iq></body>";
                  $.post(url, text, function(data) {
                    if (options.onConnect != null) {
                      xmpp.connected = true;
                    }
                    options.onConnect(data);
                    xmpp.listen();
                  }, 'text');
                }, 'text');
              }, 'text');
            } else {
              if (options.onError != null) {
                options.onError({
                  error: "Invalid credentials",
                  data: data
                });
              }
            }
          }, 'text');
        } else {
          this.loginPlainPHP(options);
        }
      },
      __networkError: function() {
        if ($.xmpp.onError != null) {
          $.xmpp.onError({error: "Network error"});
        }
        if ($.xmpp.onDisconnect != null) {
          $.xmpp.onDisconnect();
        }
        APIAjax.abortAll();
        $.xmpp.connections = $.xmpp.connections - 1;
        $.xmpp.listening = false;
        $.xmpp.connected = false;
      },
      listen: function() {
        var xmpp = this;
        if (APIAjax.length() == 0 && (xmpp.sid != null && xmpp.rid != null) && this.hasConn) {
          xmpp.rid = xmpp.rid + 1;
          xmpp.connections = xmpp.connections + 1;
          APIAjax.url(xmpp.url).params("<body rid='" + xmpp.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + xmpp.sid + "'></body>").done(function(data, x, y, z) {
            xmpp.connections = xmpp.connections - 1;
            xmpp.listening = false;
            var body = $(xmpp.fixBody(data));
            if (body.children().length > 0) {
              xmpp.messageHandler(data);
            }
            xmpp.listen();
          }).fail(function(XMLHttpRequest, textStatus, errorThrown) {
            xmpp.__networkError();
            xmpp.onError({
              "error": errorThrown,
              "data": textStatus
            });
          }).execute();
        }
      },
      sendCommand: function(rawCommand, callback) {
        var self = this;
        this.rid = this.rid + 1;
        this.listening = true;
        this.connections = this.connections + 1;
        var command = "<body rid='" + this.rid + "' xmlns='http://jabber.org/protocol/httpbind' sid='" + this.sid + "'>" + rawCommand + "</body>";
        APIAjax.url(self.url).params(command).done(function(data) {
          self.connections = self.connections - 1;
          self.messageHandler(data);
          self.listening = false;
          self.listen();
          if (callback != null)
            callback(data);
        }).fail(function() {
          self.__networkError();
          APIAjax.abortAll();
        }).execute();
      },
      sendMessage: function(options, data, callback) {
        var toJid = options.to;
        var body = options.body;
        if (options.resource != null)
          toJid = toJid + "/" + options.resource;
        else if (this.resource != "")
          toJid = toJid + "/" + this.resource;
        delete options.to;
        delete options.body;
        delete options.resource;
        var msg = "<message type='chat' to='" + toJid + "' xmlns='jabber:client'><body>" + body + "</body></message>";
        this.sendCommand(msg, callback);
      },
      setPresence: function(type, callback) {
        var msg = "<presence xmlns='jabber:client'>";
        if (type != null) {
          if (type.show && (type.show != null && type.show != "available")) {
            msg += "<show>" + type.show + "</show>";
          }
          if (type.status) {
            msg += "<status>" + type.status + "</status>";
          }
        }
        msg += "</presence>";
        if (type == null)
          this.myPresence = "available";
        else
          this.myPresence = (type.show == null) ? "available" : type.show;
        this.sendCommand(msg, callback);
      },
      isConnected: function() {
        return this.connected;
      },
      getMyPresence: function() {
        return this.myPresence;
      },
      getRoster: function(callback) {
        var msg = "<iq type='get'><query xmlns='jabber:iq:roster'/></iq>";
        this.sendCommand(msg);
      },
      getDomain: function() {
        return this.domainJabber;
      },
      addContact: function(contact) {
        if ($.trim(this.jid) != $.trim(contact.to)) {
          var msg = "<iq from='" + this.jid + "/" + this.resource + "' type='set' id='set1'>";
          msg += "<query xmlns='jabber:iq:roster'>";
          msg += "<item jid='" + contact.to + "' name='" + contact.name + "'>";
          if ($.trim(contact.group) != "" && contact.group != null) {
            msg += "<group>" + contact.group + "</group>";
          }
          msg += "</item></query>";
          msg += "</iq>";
          this.sendCommand(msg);
        }
      },
      deleteContact: function(contact) {
        var msg = "<iq from='" + this.jid + "' id='delete' type='set'>" + "<query xmlns='jabber:iq:roster'>" + "<item jid='" + contact.to + "' subscription='remove'/>" + "</query>" + "</iq>";
        this.sendCommand(msg);
      },
      updateContact: function(contact) {
        var msg = "<iq from='" + this.jid + "' type='set' id='updateContact'>" + "<query xmlns='jabber:iq:roster'>" + "<item jid='" + contact.jid + "' name='" + contact.name + "' subscription='" + contact.subscription + "'>" + "<group>" + contact.group + "</group>" + "</item>" + "</query>" + "</iq>";
        this.sendCommand(msg);
      },
      subscription: function(contact) {
        if (this.jid != $.trim(contact.to)) {
          var msg = "<presence from='" + this.jid + "' to='" + contact.to + "' type='" + contact.type + "'></presence>";
          this.sendCommand(msg);
        }
      },
      isWriting: function(options) {
        var msg = "";
        switch (options.isWriting) {
          case "active":
            msg = "<message type='chat' to='" + options.to + "' from='" + this.jid + "/" + this.resource + "'><active xmlns='http://jabber.org/protocol/chatstates'/></message>";
            break;
          case "inactive":
            msg = "<message type='chat' to='" + options.to + "' from='" + this.jid + "/" + this.resource + "'><inactive xmlns='http://jabber.org/protocol/chatstates'/></message>";
            break;
          case "composing":
            msg = "<message type='chat' to='" + options.to + "' from='" + this.jid + "/" + this.resource + "'><composing xmlns='http://jabber.org/protocol/chatstates'/></message>";
            break;
          case "gone":
            msg = "<message type='chat' to='" + options.to + "' from='" + this.jid + "/" + this.resource + "'><gone xmlns='http://jabber.org/protocol/chatstates'/></message>";
            break;
          case "paused":
            msg = "<message type='chat' to='" + options.to + "' from='" + this.jid + "/" + this.resource + "'><paused xmlns='http://jabber.org/protocol/chatstates'/></message>";
            break;
          case "x":
            msg = "<message type='chat' to='" + options.to + "' from='" + this.jid + "/" + this.resource + "'>";
            msg += "<x xmlns='jabber:x:event'><offline/><composing/><delivered/><displayed/></x>";
            msg += "</message>";
            break;
        }
        this.sendCommand(msg);
      },
      getPresence: function() {
        var msg = "<presence/>";
        var self = this;
        this.sendCommand(msg, function(data) {
          self.messageHandler(data, self);
        });
      },
      messageHandler: function(data, context) {
        var xmpp = this;
        var response = $(xmpp.fixBody(data));
        $.each(response.find("message"), function(i, element) {
          try {
            var e = $(element);
            var active = $(element).find("active");
            var composing = $(element).find("composing");
            var inactive = $(element).find("inactive");
            var gone = $(element).find("gone");
            var paused = $(element).find("paused");
            var body = $(element).find("div");
            if (body.length > 0) {
              xmpp.onMessage({
                "from": e.attr('from'),
                "to": e.attr('to'),
                "body": body.html()
              });
            } else {
              var composingMessage = function(to, from, state, type) {
                xmpp.onComposing({
                  "from": from,
                  "to": to,
                  "state": state,
                  "type": type
                });
              };
              if (active.length > 0) {
                composingMessage(e.attr('to'), e.attr('from'), 'active', e.attr('type'));
              }
              if (composing.length > 0) {
                composingMessage(e.attr('to'), e.attr('from'), 'composing', e.attr('type'));
              }
              if (inactive.length > 0) {
                composingMessage(e.attr('to'), e.attr('from'), 'inactive', e.attr('type'));
              }
              if (paused.length > 0) {
                composingMessage(e.attr('to'), e.attr('from'), 'paused', e.attr('type'));
              }
              if (gone.length > 0) {
                composingMessage(e.attr('to'), e.attr('from'), 'gone', e.attr('type'));
              }
            }
          } catch (e) {}
        });
        $.each(response.find("query").find("item"), function(i, element) {
          try {
            var e = $(element);
            if ($.trim(e.attr('subscription')) != "remove") {
              var _show = "unavailable";
              if (response.find("iq").attr("type") == "set") {
                if (e.attr('subscription') != "none") {
                  _show = "available";
                }
              }
              xmpp.onRoster({
                "ask": e.attr("ask"),
                "jid": e.attr("jid"),
                "name": e.attr("name"),
                "subscription": e.attr("subscription"),
                "show": _show,
                "group": ($.trim($(this).find("group").html())) ? $(this).find("group").html() : ""
              });
            }
          } catch (e) {}
        });
        $.each(response.find("iq"), function(i, element) {
          try {
            var e = $(element);
            if (e.find("query") && $.trim(e.find("query").attr("xmlns")) == "jabber:iq:roster") {
              e.find("item").each(function() {
                if ($.trim(e.attr('subscription')) != "remove") {
                  xmpp.onRoster({
                    "jid": e.attr("jid"),
                    "name": e.attr("name"),
                    "subscription": e.attr("subscription"),
                    "group": ($.trim($(this).find("group").html())) ? $(this).find("group").html() : ""
                  });
                }
              });
            } else {
              xmpp.onIq(e);
            }
          } catch (e) {}
        });
        $.each(response.find("presence"), function(i, element) {
          try {
            var e = $(element);
            if (e.attr('type') && $.trim(e.attr('type')) != "unavailable") {
              xmpp.onRoster({
                "jid": e.attr("from"),
                "name": "",
                "show": e.attr("type"),
                "subscription": ($.trim(e.attr("type")) === "subscribed") ? "both" : e.attr("type"),
                "group": ""
              });
              if ($.trim(e.attr('type')) == "subscribe") {
                xmpp.subscription({
                  "to": e.attr("from"),
                  "type": "subscribed"
                });
              }
              if ($.trim(e.attr('type')) == "subscribed") {
                xmpp.subscription({
                  "to": e.attr("from"),
                  "type": "subscribe"
                });
              }
            } else {
              var _statusContact = "";
              if (e.find("status").length > 0) {
                _statusContact = e.find("status").html();
                _statusContact = _statusContact.replace(")", "");
                _statusContact = _statusContact.replace("(", "");
              }
              xmpp.onPresence({
                "from": e.attr("from"),
                "to": e.attr("to"),
                "show": (e.find("show").html()) ? e.find("show").html() : (e.attr("type") ? e.attr("type") : "available"),
                "status": _statusContact
              });
            }
          } catch (e) {}
        });
      },
      fixBody: function(html) {
        html = html.replace(/onblur/gi, "EVENT_DENY");
        html = html.replace(/onchange/gi, "EVENT_DENY");
        html = html.replace(/onclick/gi, "EVENT_DENY");
        html = html.replace(/ondblclick/gi, "EVENT_DENY");
        html = html.replace(/onerror/gi, "EVENT_DENY");
        html = html.replace(/onfocus/gi, "EVENT_DENY");
        html = html.replace(/onkeydown/gi, "EVENT_DENY");
        html = html.replace(/onkeypress/gi, "EVENT_DENY");
        html = html.replace(/onkeyup/gi, "EVENT_DENY");
        html = html.replace(/onmousedown/gi, "EVENT_DENY");
        html = html.replace(/onmousemove/gi, "EVENT_DENY");
        html = html.replace(/onmouseout/gi, "EVENT_DENY");
        html = html.replace(/onmouseover/gi, "EVENT_DENY");
        html = html.replace(/onmouseup/gi, "EVENT_DENY");
        html = html.replace(/onresize/gi, "EVENT_DENY");
        html = html.replace(/onselect/gi, "EVENT_DENY");
        html = html.replace(/onunload/gi, "EVENT_DENY");
        html = html.replace(/style/gi, "EVENT_DENY");
        html = html.replace(/img /gi, "IMG_DENY ");
        html = html.replace(/script /gi, "SCRIPT_DENY ");
        html = html.replace(/div /gi, "DIV_DENY ");
        html = html.replace(/span /gi, "SPAN_DENY ");
        html = html.replace(/iframe /gi, "IFRAME_DENY ");
        html = html.replace(/<\/body>/ig, "</div>");
        html = html.replace(/<body/ig, "<div class='body'");
        return html;
      },
      handlePing: function(e) {
        var xmpp = this;
        var id = e.attr('id');
        var from = e.attr('from');
        var to = e.attr('to');
        xmpp.sendCommand("<iq from='" + to + "' to='" + from + "' id='" + id + "' type='result'/>");
      }
    };
  })(jQuery);
  var Base64 = (function() {
    var keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    var obj = {
      encode: function(input) {
        var output = "";
        var chr1,
            chr2,
            chr3;
        var enc1,
            enc2,
            enc3,
            enc4;
        var i = 0;
        do {
          chr1 = input.charCodeAt(i++);
          chr2 = input.charCodeAt(i++);
          chr3 = input.charCodeAt(i++);
          enc1 = chr1 >> 2;
          enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
          enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
          enc4 = chr3 & 63;
          if (isNaN(chr2)) {
            enc3 = enc4 = 64;
          } else if (isNaN(chr3)) {
            enc4 = 64;
          }
          output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);
        } while (i < input.length);
        return output;
      },
      decode: function(input) {
        var output = "";
        var chr1,
            chr2,
            chr3;
        var enc1,
            enc2,
            enc3,
            enc4;
        var i = 0;
        input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
        do {
          enc1 = keyStr.indexOf(input.charAt(i++));
          enc2 = keyStr.indexOf(input.charAt(i++));
          enc3 = keyStr.indexOf(input.charAt(i++));
          enc4 = keyStr.indexOf(input.charAt(i++));
          chr1 = (enc1 << 2) | (enc2 >> 4);
          chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
          chr3 = ((enc3 & 3) << 6) | enc4;
          output = output + String.fromCharCode(chr1);
          if (enc3 != 64) {
            output = output + String.fromCharCode(chr2);
          }
          if (enc4 != 64) {
            output = output + String.fromCharCode(chr3);
          }
        } while (i < input.length);
        return output;
      }
    };
    return obj;
  })();
  var MD5 = (function() {
    var hexcase = 0;
    var b64pad = "";
    var chrsz = 8;
    var safe_add = function(x, y) {
      var lsw = (x & 0xFFFF) + (y & 0xFFFF);
      var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
      return (msw << 16) | (lsw & 0xFFFF);
    };
    var bit_rol = function(num, cnt) {
      return (num << cnt) | (num >>> (32 - cnt));
    };
    var str2binl = function(str) {
      var bin = [];
      var mask = (1 << chrsz) - 1;
      for (var i = 0; i < str.length * chrsz; i += chrsz) {
        bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << (i % 32);
      }
      return bin;
    };
    var binl2str = function(bin) {
      var str = "";
      var mask = (1 << chrsz) - 1;
      for (var i = 0; i < bin.length * 32; i += chrsz) {
        str += String.fromCharCode((bin[i >> 5] >>> (i % 32)) & mask);
      }
      return str;
    };
    var binl2hex = function(binarray) {
      var hex_tab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef";
      var str = "";
      for (var i = 0; i < binarray.length * 4; i++) {
        str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) + hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8)) & 0xF);
      }
      return str;
    };
    var binl2b64 = function(binarray) {
      var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
      var str = "";
      var triplet,
          j;
      for (var i = 0; i < binarray.length * 4; i += 3) {
        triplet = (((binarray[i >> 2] >> 8 * (i % 4)) & 0xFF) << 16) | (((binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4)) & 0xFF) << 8) | ((binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4)) & 0xFF);
        for (j = 0; j < 4; j++) {
          if (i * 8 + j * 6 > binarray.length * 32) {
            str += b64pad;
          } else {
            str += tab.charAt((triplet >> 6 * (3 - j)) & 0x3F);
          }
        }
      }
      return str;
    };
    var md5_cmn = function(q, a, b, x, s, t) {
      return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
    };
    var md5_ff = function(a, b, c, d, x, s, t) {
      return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);
    };
    var md5_gg = function(a, b, c, d, x, s, t) {
      return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);
    };
    var md5_hh = function(a, b, c, d, x, s, t) {
      return md5_cmn(b ^ c ^ d, a, b, x, s, t);
    };
    var md5_ii = function(a, b, c, d, x, s, t) {
      return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);
    };
    var core_md5 = function(x, len) {
      x[len >> 5] |= 0x80 << ((len) % 32);
      x[(((len + 64) >>> 9) << 4) + 14] = len;
      var a = 1732584193;
      var b = -271733879;
      var c = -1732584194;
      var d = 271733878;
      var olda,
          oldb,
          oldc,
          oldd;
      for (var i = 0; i < x.length; i += 16) {
        olda = a;
        oldb = b;
        oldc = c;
        oldd = d;
        a = md5_ff(a, b, c, d, x[i + 0], 7, -680876936);
        d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
        c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
        b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
        a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
        d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
        c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
        b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
        a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
        d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
        c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
        b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
        a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
        d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
        c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
        b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
        a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
        d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
        c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
        b = md5_gg(b, c, d, a, x[i + 0], 20, -373897302);
        a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
        d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
        c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
        b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
        a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
        d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
        c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
        b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
        a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
        d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
        c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
        b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
        a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
        d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
        c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
        b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
        a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
        d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
        c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
        b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
        a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
        d = md5_hh(d, a, b, c, x[i + 0], 11, -358537222);
        c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
        b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
        a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
        d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
        c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
        b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
        a = md5_ii(a, b, c, d, x[i + 0], 6, -198630844);
        d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
        c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
        b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
        a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
        d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
        c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
        b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
        a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
        d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
        c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
        b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
        a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
        d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
        c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
        b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
        a = safe_add(a, olda);
        b = safe_add(b, oldb);
        c = safe_add(c, oldc);
        d = safe_add(d, oldd);
      }
      return [a, b, c, d];
    };
    var core_hmac_md5 = function(key, data) {
      var bkey = str2binl(key);
      if (bkey.length > 16) {
        bkey = core_md5(bkey, key.length * chrsz);
      }
      var ipad = new Array(16),
          opad = new Array(16);
      for (var i = 0; i < 16; i++) {
        ipad[i] = bkey[i] ^ 0x36363636;
        opad[i] = bkey[i] ^ 0x5C5C5C5C;
      }
      var hash = core_md5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
      return core_md5(opad.concat(hash), 512 + 128);
    };
    var obj = {
      hexdigest: function(s) {
        return binl2hex(core_md5(str2binl(s), s.length * chrsz));
      },
      b64digest: function(s) {
        return binl2b64(core_md5(str2binl(s), s.length * chrsz));
      },
      hash: function(s) {
        return binl2str(core_md5(str2binl(s), s.length * chrsz));
      },
      hmac_hexdigest: function(key, data) {
        return binl2hex(core_hmac_md5(key, data));
      },
      hmac_b64digest: function(key, data) {
        return binl2b64(core_hmac_md5(key, data));
      },
      hmac_hash: function(key, data) {
        return binl2str(core_hmac_md5(key, data));
      },
      test: function() {
        return MD5.hexdigest("abc") === "900150983cd24fb0d6963f7d28e17f72";
      }
    };
    return obj;
  })();
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("7e", ["5", "6", "7", "5b"], function($, _, Backbone, jquery_xmpp) {
  var ExpressoIM = new function() {
    var _resource = "";
    var _url = "";
    var _domain = "";
    var _username = "";
    var _password = "";
    var _debug = false;
    var _messages = {};
    var _isConnected = false;
    var _online_contacts = [];
    var _offline_contacts = [];
    var _away_contacts = [];
    var _busy_contacts = [];
    var _contacts = [];
    var _groups = [];
    var _onMessageDelegate = [];
    var _onIqDelegate = [];
    var _onDisconnectDelegate = [];
    var _onComposingDelegate = [];
    var _onPresenceDelegate = [];
    var _onErrorDelegate = [];
    var _qtdUnreadMessages = 0;
    this.resource = function(value) {
      if (value == undefined)
        return _resource;
      _resource = value;
      return this;
    };
    this.url = function(value) {
      if (value == undefined)
        return _url;
      _url = value;
      return this;
    };
    this.onMessage = function(message) {
      if (_onMessageDelegate != '') {
        _onMessageDelegate(message);
      }
    };
    this.onComposing = function(message) {
      if (_onComposingDelegate.length > 1) {
        _onComposingDelegate(message);
      }
    };
    this.clearListeners = function() {
      _onMessageDelegate = [];
      _onComposingDelegate = [];
      _onPresenceDelegate = [];
      _onErrorDelegate = [];
      _onDisconnectDelegate = [];
      _onIqDelegate = [];
    };
    this.executeListenersFromArray = function(_array, params) {
      for (var i in _array) {
        _array[i](params);
      }
    };
    this.addOnMessageListener = function(value) {
      _onMessageDelegate.push(value);
      return this;
    };
    this.addOnIqListener = function(value) {
      _onIqDelegate.push(value);
      return this;
    };
    this.addOnDisconnectListener = function(value) {
      _onDisconnectDelegate.push(value);
      return this;
    };
    this.addOnPresenceListener = function(value) {
      _onPresenceDelegate.push(value);
      return this;
    };
    this.addOnErrorListener = function(value) {
      _onErrorDelegate.push(value);
      return this;
    };
    this.addOnComposingListener = function(value) {
      _onComposingDelegate.push(value);
      return this;
    };
    this.domain = function(value) {
      if (value == undefined)
        return _domain;
      _domain = value;
      return this;
    };
    this.username = function(value) {
      if (value == undefined)
        return _username;
      _username = value;
      return this;
    };
    this.password = function(value) {
      if (value == undefined)
        return _password;
      _password = value;
      return this;
    };
    this.inArray = function(array, value) {
      for (var i = 0; i < array.length; i++) {
        if (value == array[i])
          return true;
      }
      return false;
    };
    this.isConnected = function() {
      return _isConnected;
    };
    this.pushIfNotExist = function(array, value) {
      if (!this.inArray(array, value)) {
        array.push(value);
        return array;
      }
      return array;
    };
    this.getContactsByID = function(id) {
      for (var x = 0; x < _contacts.length; x++) {
        if (_contacts[x].id == id) {
          return _contacts[x];
        }
      }
      return false;
    };
    this.getBusyContacts = function() {
      var new_arr = [];
      var _arr = _busy_contacts;
      for (var i = 0; i < _arr.length; i++) {
        new_arr.push(this.getContactsByID(_arr[i]));
      }
      return new_arr;
    };
    this.getAllContacts = function() {
      var new_arr = [];
      new_arr['online'] = this.getOnlineContacts();
      new_arr['busy'] = this.getBusyContacts();
      new_arr['away'] = this.getAwayContacts();
      new_arr['offline'] = this.getOfflineContacts();
      return new_arr;
    };
    this.getAwayContacts = function() {
      var new_arr = [];
      var _arr = _away_contacts;
      var sort_arr = [];
      for (var i = 0; i < _arr.length; i++) {
        var contact = this.getContactsByID(_arr[i]);
        sort_arr[i] = contact.jid + ":" + _arr[i];
      }
      sort_arr.sort();
      for (var i = 0; i < sort_arr.length; i++) {
        var splited = sort_arr[i].split(":");
        new_arr.push(this.getContactsByID(splited[1]));
      }
      return new_arr;
    };
    this.getOfflineContacts = function() {
      var new_arr = [];
      var _arr = _offline_contacts;
      var sort_arr = [];
      for (var i = 0; i < _arr.length; i++) {
        var contact = this.getContactsByID(_arr[i]);
        sort_arr[i] = contact.jid + ":" + _arr[i];
      }
      sort_arr.sort();
      for (var i = 0; i < sort_arr.length; i++) {
        var splited = sort_arr[i].split(":");
        new_arr.push(this.getContactsByID(splited[1]));
      }
      return new_arr;
    };
    this.getOnlineContacts = function() {
      var new_arr = [];
      var _arr = _online_contacts;
      var sort_arr = [];
      for (var i = 0; i < _arr.length; i++) {
        var contact = this.getContactsByID(_arr[i]);
        sort_arr[i] = contact.jid + ":" + _arr[i];
      }
      sort_arr.sort();
      for (var i = 0; i < sort_arr.length; i++) {
        var splited = sort_arr[i].split(":");
        new_arr.push(this.getContactsByID(splited[1]));
      }
      return new_arr;
    };
    this.getMessagesFromID = function(id) {
      return _messages[id];
    };
    this.removeFromArray = function(arr, id) {
      var new_arr = [];
      for (var i in arr) {
        if (arr[i] != id) {
          new_arr.push(arr[i]);
        }
      }
      return new_arr;
    };
    this.setContactStatus = function(Pid, status) {
      _online_contacts = this.removeFromArray(_online_contacts, Pid);
      _offline_contacts = this.removeFromArray(_offline_contacts, Pid);
      _busy_contacts = this.removeFromArray(_busy_contacts, Pid);
      _away_contacts = this.removeFromArray(_away_contacts, Pid);
      if (status == "online") {
        _online_contacts = this.pushIfNotExist(_online_contacts, Pid);
      }
      if (status == "offline") {
        _offline_contacts = this.pushIfNotExist(_offline_contacts, Pid);
      }
      if (status == "away") {
        _away_contacts = this.pushIfNotExist(_away_contacts, Pid);
      }
      if (status == "busy") {
        _busy_contacts = this.pushIfNotExist(_busy_contacts, Pid);
      }
    };
    this.addContact = function(Pid, Pjid, Pname, Pgroup) {
      var contact = {
        id: Pid,
        jid: Pjid,
        name: Pname,
        group: Pgroup,
        qtdUnread: 0
      };
      _contacts.push(contact);
      _messages[Pid] = [];
    };
    this.addMessage = function(Pid, Pjid, Pbody, Pdate) {
      var message = {
        id: Pid,
        jid: Pjid,
        body: Pbody,
        date: Pdate,
        seen: false
      };
      _messages[Pid].push(message);
      return message;
    };
    this.getQtdUnreadMessagesFromContact = function(Pid) {
      return _contacts[Pid].qtdUnread;
    };
    this.setAsSeenAllMessagesFromContact = function(Pid) {
      var qtd = 0;
      for (var i in _messages[Pid]) {
        _messages[Pid][i].seen = true;
      }
      for (var x = 0; x < _contacts.length; x++) {
        if (_contacts[x].id == Pid) {
          _contacts[x].qtdUnread = 0;
        }
      }
    };
    this.updateQtdUnreadMessagesToContact = function(Pid) {
      var qtd = 0;
      if (_messages[Pid] != null) {
        for (var i in _messages[Pid]) {
          if (_messages[Pid][i].seen == false) {
            qtd = qtd + 1;
          }
        }
      }
      for (var x = 0; x < _contacts.length; x++) {
        if (_contacts[x].id == Pid) {
          _contacts[x].qtdUnread = qtd;
        }
      }
      return qtd;
    };
    this.debug = function(value) {
      if (value == undefined)
        return _debug;
      _debug = value;
      return this;
    };
    this.qtdUnreadMessages = function(value) {
      var qtdUnread = 0;
      for (var x = 0; x < _contacts.length; x++) {
        qtdUnread = qtdUnread + _contacts[x].qtdUnread;
      }
      this._qtdUnreadMessages = qtdUnread;
      return qtdUnread;
    };
    this.sendMessage = function(msgTo, message) {
      if ($.trim(message) != "") {
        $.xmpp.sendMessage({
          body: message,
          to: msgTo,
          resource: "Chat",
          otherAttr: "value"
        }, "<error>An error has ocurred</error>");
        msgTo = msgTo.match(/^[\w\W][^\/]+[^\/]/g)[0];
        var id = MD5.hexdigest(msgTo);
        var new_message = this.addMessage(id, "me", message, new Date());
        this.executeListenersFromArray(_onMessageDelegate, new_message);
      }
    };
    this.disconnect = function() {
      var callbackFunction = function() {};
      if ($.xmpp) {
        $.xmpp.disconnect(callbackFunction);
      }
    };
    this.connect = function(connectionDelegate) {
      var connection_options = {};
      if ($.xmpp) {
        var that = this;
        connection_options = {
          "resource": _resource,
          "username": _username,
          "password": _password,
          "url": _url,
          "domain": _domain,
          onDisconnect: function() {
            _isConnected = false;
            that.executeListenersFromArray(_onDisconnectDelegate, []);
          },
          onConnect: function(eas) {
            _isConnected = true;
            $.xmpp.getRoster();
            $.xmpp.setPresence(null);
            if (connectionDelegate != null) {
              connectionDelegate();
            }
          },
          onIq: function(iq) {},
          onMessage: function(message) {
            message.from = message.from.match(/^[\w\W][^\/]+[^\/]/g)[0];
            var jid = message.from.split("/");
            var id = MD5.hexdigest(message.from);
            var new_message = that.addMessage(id, jid[0], message.body, new Date());
            that.updateQtdUnreadMessagesToContact(id);
            that.executeListenersFromArray(_onMessageDelegate, new_message);
          },
          onPresence: function(presence) {
            presence.from = presence.from.match(/^[\w\W][^\/]+[^\/]/g)[0];
            var md5_contact = MD5.hexdigest(presence.from);
            var statusClass = presence['show'] !== "available" ? (presence['show'] === "unavailable" ? "offline" : (presence['show'] === "dnd" ? "busy" : (presence['show'] === "away" ? "away" : "online"))) : "online";
            var presence = {
              id: md5_contact,
              status: statusClass
            };
            that.setContactStatus(md5_contact, statusClass);
            that.executeListenersFromArray(_onPresenceDelegate, presence);
          },
          onError: function(error) {
            _isConnected = false;
            $.xmpp.listening = false;
            $.xmpp.connected = false;
            that.executeListenersFromArray(_onErrorDelegate, error);
          },
          onComposing: function(message) {
            message.from = message.from.match(/^[\w\W][^\/]+[^\/]/g)[0];
            var jid = message.from.split("/");
            message.from = jid[0];
            that.executeListenersFromArray(_onComposingDelegate, message);
          },
          onRoster: function(roster) {
            var _rosterJid = roster.jid;
            _rosterJid = _rosterJid.match(/^[\w\W][^\/]+[^\/]/g)[0];
            var md5_contact = MD5.hexdigest(_rosterJid);
            that.addContact(md5_contact, roster.jid, roster.name, roster.group);
            that.setContactStatus(md5_contact, 'offline');
          }
        };
        $.xmpp.connect(connection_options);
      }
    };
  };
  return ExpressoIM;
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
define("79", ["5", "6", "7"], function($, _, Backbone) {
  jQuery.ajaxTransport('arraybuffer', function(options, originalOptions, jqXHR) {
    return {
      send: function(headers, completeCallback) {
        jqXHR = new XMLHttpRequest();
        jqXHR.open(options.type, options.url);
        jqXHR.responseType = options.dataType;
        jqXHR.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
        jqXHR.timeout = options.xdrTimeout || Number.MAX_VALUE;
        jqXHR.onload = function() {
          options.loadArrayBuffer(jqXHR.response);
        };
        jqXHR.send((options.hasContent && options.data) || null);
      },
      abort: function() {
        if (jqXHR) {
          jqXHR.onerror = jQuery.noop;
          jqXHR.abort();
        }
      }
    };
  });
  jQuery.ajaxTransport('fileupload', function(options, originalOptions, jqXHR) {
    return {
      send: function(headers, completeCallback) {
        jqXHR = new XMLHttpRequest();
        jqXHR.open(options.type, options.url, true);
        var boundary = 'AaB03x03923248232482';
        var body = '';
        var data = {
          id: options.id,
          params: options.params
        };
        body += "--" + boundary + "\r\n";
        body += "Content-Disposition: form-data; name=\"id\"\r\n\r\n";
        body += options.id;
        body += "\r\n";
        for (var i in options.params) {
          body += "--" + boundary + "\r\n";
          body += "Content-Disposition: form-data; name=\"params[" + i + "]\"\r\n";
          body += "Content-Type: text/plain; charset=UTF-8 \r\n\r\n";
          body += unescape(encodeURIComponent(options.params[i].replace(/\t/g, '')));
          body += "\r\n";
        }
        for (var i in options.files) {
          var file = options.files[i];
          body += "--" + boundary + "\r\n";
          body += "Content-Disposition: form-data; name='upload" + i + "'; filename='" + file.filename + "'\r\n";
          body += "Content-Type: application/octet-stream\r\n";
          body += "Content-Transfer-Encoding: binary\r\n\r\n";
          if (options.files[i].dataType == "base64") {
            body += (file.data) ? file.data : atob(file.src.replace(/[^A-Za-z0-9\+\/\=]/g, "")) + "\r\n";
          } else {
            body += options.files[i].src + "\r\n";
          }
        }
        body += "--" + boundary + "--";
        jqXHR.setRequestHeader('content-type', 'multipart/form-data; boundary=' + boundary);
        jqXHR.onload = function() {
          options.loadArrayBuffer(jqXHR.response);
        };
        jqXHR.onerror = function() {};
        if (typeof XMLHttpRequest.prototype.sendAsBinary == 'undefined') {
          var ui8a = new Uint8Array(Array.prototype.map.call(body, function(x) {
            return x.charCodeAt(0) & 0xff;
          }));
          jqXHR.send(ui8a.buffer);
        } else
          jqXHR.sendAsBinary(body);
      },
      abort: function() {
        if (jqXHR) {
          jqXHR.onerror = jQuery.noop;
          jqXHR.abort();
        }
      }
    };
  });
  var ExpressoAPI = new function() {
    var _id = "0";
    var _context = "";
    var _crossdomain = "";
    var _auth = "";
    var _debug = true;
    var _dataType = '';
    var _data = {};
    var _files = [];
    var _phoneGap = false;
    var _android = false;
    var _cache = [];
    var _isOffline = false;
    var _ignoreCache = false;
    var _username = "";
    var timeToLive0 = 0;
    var timeToLive5Minutes = 300;
    var timeToLive1Hour = 3600;
    var timeToLive1Day = 86400;
    var timeToLive1Week = 604800;
    var timeToLive1Month = 2419200;
    var DontCache = ["/Login", "/Logout", "/Mail/Send", "/Mail/AddFolder", "/Mail/DelFolder", "/Mail/RenameFolder", "/Mail/DelMessage", "/Mail/CleanTrash", "/Mail/SendSupportFeedback", "/Preferences/ChangePassword", "/Preferences/ChangeUserPreferences", "/Services/Chat", "/Catalog/ContactAdd", "/Catalog/ContactDelete", "/Calendar/AddEvent", "/Calendar/DelEvent"];
    var KeepCacheFor5Minutes = ["/Mail/Messages", "/Mail/Folders"];
    var KeepCacheFor1Hour = ["/Preferences/UserPreferences", "/Mail/Attachment"];
    var KeepCacheFor1Day = ["/Catalog/Contacts", "/Calendar/Events", "/Calendar/EventCategories"];
    var KeepCacheFor1Week = ["/ExpressoVersion", "/Catalog/ContactPicture"];
    var KeepCacheFor1Month = [];
    var _db;
    var _tempData;
    var _tempCacheData;
    var _tempResult;
    this.id = function(value) {
      if (value == undefined)
        return _id;
      var int = parseInt(String(value));
      _id = (isNaN(int)) ? 0 : int;
      _data[_id] = {};
      this.resource('').type('POST').params({}).done().always().fail(this.defaultErrorCallback);
      this._isOffline = false;
      this._ignoreCache = false;
      return this;
    };
    this.defaultErrorCallback = function(response) {};
    this.getRequest = function(response) {
      var request = {};
      request.resource = this.resource();
      request.params = this.params();
      request.date = Date.now();
      var paramsKeys = Object.keys(request.params);
      request.response = response;
      request.timeToLive = 0;
      if (DontCache.indexOf(request.resource) >= 0) {
        request.timeToLive = timeToLive0;
      }
      if (KeepCacheFor5Minutes.indexOf(request.resource) >= 0) {
        request.timeToLive = timeToLive5Minutes;
      }
      if (KeepCacheFor1Hour.indexOf(request.resource) >= 0) {
        request.timeToLive = timeToLive1Hour;
      }
      if (KeepCacheFor1Day.indexOf(request.resource) >= 0) {
        request.timeToLive = timeToLive1Day;
      }
      if (KeepCacheFor1Week.indexOf(request.resource) >= 0) {
        request.timeToLive = timeToLive1Week;
      }
      if (KeepCacheFor1Month.indexOf(request.resource) >= 0) {
        request.timeToLive = timeToLive1Month;
      }
      if (request.resource == "/Mail/Messages") {
        if (request.params.msgID != undefined) {
          request.timeToLive = timeToLive1Month;
        }
      }
      return request;
    };
    this.getCacheResponse = function(request, finishCallBack) {
      var that = this;
      var requestResource = request.resource;
      var requestParams = request.params;
      var requestTimeToLive = request.timeToLive * 1000;
      var foundCallBack = function(cacheResponse) {
        that._cache = cacheResponse;
        var found = false;
        for (var i in cacheResponse) {
          if (requestResource == cacheResponse[i].resource) {
            var equal = true;
            for (var x in requestParams) {
              if (x != 'auth') {
                if (requestParams[x] != cacheResponse[i].params[x]) {
                  equal = false;
                }
              }
            }
            if (equal) {
              if (that._isOffline == false) {
                var rightnow = new Date();
                if ((requestTimeToLive) > (rightnow - cacheResponse[i].date)) {
                  found = cacheResponse[i];
                }
              } else {
                found = cacheResponse[i];
              }
            }
          }
        }
        finishCallBack(found);
      };
      var erroCB = function() {
        finishCallBack(false);
      };
      this.getLocalStorageValue(this.getCacheID(), foundCallBack, erroCB);
    };
    this.createRequest = function(Presource, Pparams, PemptyParams) {
      var request = {};
      request.params = {};
      request.resource = Presource;
      request.params = Pparams;
      return request;
    };
    this.triggerCacheRequest = function(currentCache, currentRequest) {
      var filterRequests = [];
      filterRequests.push(this.createRequest("/Login", {}));
      if ((currentRequest.resource == "/Mail/AddFolder") || (currentRequest.resource == "/Mail/RenameFolder") || (currentRequest.resource == "/Mail/DelFolder")) {
        filterRequests.push(this.createRequest("/Mail/Folders", {}));
        filterRequests.push(this.createRequest("/Mail/Messages", {folderID: currentRequest.params.folderID}));
        filterRequests.push(this.createRequest(currentRequest.resource, {}));
      }
      if (currentRequest.resource == "/Mail/DelMessage") {
        filterRequests.push(this.createRequest("/Mail/Messages", {
          folderID: currentRequest.params.folderID,
          msgID: ""
        }));
        filterRequests.push(this.createRequest("/Mail/Messages", {
          folderID: currentRequest.params.folderID,
          msgID: currentRequest.params.msgID
        }));
        filterRequests.push(this.createRequest("/Mail/DelMessage", {
          folderID: currentRequest.params.folderID,
          msgID: currentRequest.params.msgID
        }));
      }
      if (currentRequest.resource == "/Preferences/ChangeUserPreferences") {
        filterRequests.push(this.createRequest("/Preferences/UserPreferences", {}));
        filterRequests.push(this.createRequest("/Preferences/ChangeUserPreferences", {}));
      }
      if (currentRequest.resource == "/Calendar/AddEvent") {
        filterRequests.push(this.createRequest("/Calendar/Events", {}));
      }
      if (currentRequest.resource == "/Calendar/DelEvent") {
        filterRequests.push(this.createRequest("/Calendar/Events", {}));
      }
      var debug = false;
      var removeFromCache = [];
      var newCache = [];
      if (debug) {
        console.log("request: " + currentRequest.resource + " - " + JSON.stringify(currentRequest.params));
        console.log("filterRequestsLength:" + filterRequests.length);
        console.log("currentCacheLenght: " + currentCache.length);
      }
      if (filterRequests.length != 0) {
        for (var i in filterRequests) {
          if (debug) {
            console.log("filter: " + filterRequests[i].resource + " - " + JSON.stringify(filterRequests[i].params));
          }
          for (var x in currentCache) {
            if (debug) {
              console.log("Cache " + x + ":" + currentCache[x].resource + " - " + JSON.stringify(currentCache[x].params));
            }
            if (currentCache[x].resource == filterRequests[i].resource) {
              var equal = true;
              for (var y in filterRequests[i].params) {
                for (var z in currentCache[x].params) {
                  if (z == y) {
                    if (currentCache[x].params[z] != filterRequests[i].params[y]) {
                      equal = false;
                    }
                  }
                }
              }
              if (equal) {
                removeFromCache.push(x);
              }
            }
          }
        }
        if (debug) {
          console.log("WillRemoveFromCache");
          console.log(removeFromCache);
        }
        for (var i in currentCache) {
          if (removeFromCache.indexOf(i) < 0) {
            newCache.push(currentCache[i]);
          }
        }
      } else {
        newCache = currentCache;
      }
      return newCache;
    };
    this.getCacheID = function() {
      return "expressoCache";
    };
    this.addToCache = function(request, response) {
      var that = this;
      var saveCache = function(request, response, currentCache) {
        if (currentCache == undefined) {
          currentCache = [];
        }
        that._cache = currentCache;
        var requestParams = request.params;
        var found = false;
        for (var i in that._cache) {
          if (request.resource == that._cache[i].resource) {
            var equal = true;
            for (var x in requestParams) {
              if (x != 'auth') {
                if (requestParams[x] != that._cache[i].params[x]) {
                  equal = false;
                }
              }
            }
            if (equal) {
              if (response.result) {
                that._cache[i].date = Date.now();
                that._cache[i].response = response;
                found = request;
              }
            }
          }
        }
        if (!found) {
          if (response.result) {
            request.response = response;
            that._cache.push(request);
          }
        }
        that._cache = that.triggerCacheRequest(that._cache, request);
        that.setLocalStorageValue(that.getCacheID(), that._cache);
      };
      var foundCallBack = function(cacheResponse) {
        saveCache(request, response, cacheResponse);
      };
      var erroCB = function() {
        console.log("ERROR - FROM CACHE");
        saveCache(request, response, that._cache);
      };
      this.getLocalStorageValue(this.getCacheID(), foundCallBack, erroCB);
    };
    this.ignoreCache = function(value) {
      if (value == undefined)
        return _ignoreCache;
      _ignoreCache = value;
      return this;
    };
    this.crossdomain = function(value) {
      if (value == undefined)
        return _crossdomain;
      _crossdomain = String(value);
      return this;
    };
    this.context = function(value) {
      if (value == undefined)
        return _context;
      _context = (!value) ? '.' : ((value == '/') ? '' : String(value).replace(/\/+$/g, ''));
      return this;
    };
    this.auth = function(value) {
      if (value == undefined)
        return _auth;
      _auth = String(value);
      return this;
    };
    this.phoneGap = function(value) {
      if (value == undefined)
        return _phoneGap;
      _phoneGap = value;
      return this;
    };
    this.android = function(value) {
      if (value == undefined)
        return _android;
      _android = value;
      return this;
    };
    this.debug = function(value) {
      if (value == undefined)
        return _debug;
      _debug = (String(value).toLowerCase() == 'true');
      return this;
    };
    this.dataType = function(value) {
      if (value == undefined)
        return _dataType;
      _dataType = value;
      return this;
    };
    this.resource = function(value) {
      if (value == undefined)
        return _data[_id].resource;
      _dataType = '';
      _data[_id].resource = '/' + String(value).replace(/^\/*|\/*$/g, '');
      return this;
    };
    this.type = function(value) {
      if (value == undefined)
        return _data[_id].type;
      _data[_id].type = (value.toUpperCase() == 'GET') ? 'GET' : 'POST';
      return this;
    };
    this.clearFiles = function() {
      _files = [];
      return this;
    };
    this.addFile = function(fileData, fileName, dataType) {
      _files.push({
        "filename": fileName,
        "src": fileData,
        "dataType": dataType
      });
      return this;
    };
    this.params = function(value) {
      if (value == undefined)
        return _data[_id].params;
      _data[_id].params = value;
      return this;
    };
    this.done = function(value) {
      _data[_id].done = value;
      return this;
    };
    this.fail = function(value) {
      _data[_id].fail = value;
      return this;
    };
    this.always = function(value) {
      _data[_id].always = value;
      return this;
    };
    this.url = function() {
      if (_phoneGap) {
        return this.context() + this.resource();
      } else {
        return this.context() + this.resource() + ((_crossdomain) ? '?resource=' + this.resource() + '&crossdomain=' + _crossdomain : '');
      }
    };
    this.setCookie = function(c_name, value, exdays) {
      window.localStorage.setItem(c_name, value);
    };
    this.read_cookie = function(key) {};
    this.updatePhonegapDatabase = function(tx) {
      var str = JSON.stringify(_tempData);
      var query = 'UPDATE expresso set data = \'' + str + '\' where id = \'1\'';
      tx.executeSql(query);
    };
    this.updatePhonegapCache = function(tx) {
      var str = JSON.stringify(_tempCacheData);
      var query = 'UPDATE expressoCache set data = \'' + str + '\' where id = \'1\'';
      tx.executeSql(query);
    };
    this.getPhonegapDatabaseValue = function(tx) {
      var that = this;
      var querySuccess = function(tx, results) {
        if (results) {
          var len = results.rows.length;
          for (var i = 0; i < len; i++) {
            _tempResult = JSON.parse(results.rows.item(i).data);
            if (_tempCallback != undefined) {
              _tempCallback(_tempResult);
            }
          }
        } else {
          console.log("NO-RESULTS");
        }
      };
      var query = 'SELECT * FROM expresso where id = \'1\'';
      tx.executeSql(query, [], querySuccess, that.errorCB);
    };
    this.getPhonegapCacheValue = function(tx) {
      var querySuccessCache = function(tx, results) {
        if (results) {
          var len = results.rows.length;
          for (var i = 0; i < len; i++) {
            _tempResultCache = JSON.parse(results.rows.item(i).data);
            if (_tempCallbackCache != undefined) {
              _tempCallbackCache(_tempResultCache);
            }
          }
        } else {
          console.log("NO-RESULTS");
        }
      };
      var errorCache = function(err) {
        console.log("errorCache");
      };
      var query = 'SELECT * FROM expressoCache where id = \'1\'';
      tx.executeSql(query, [], querySuccessCache, errorCache);
    };
    this.clearCache = function(c_name) {
      this.setLocalStorageValue(c_name, []);
    };
    this.setLocalStorageValue = function(c_name, value) {
      if (window.localStorage != undefined) {
        try {
          window.localStorage.setItem(c_name, JSON.stringify(value));
          return true;
        } catch (e) {
          window.localStorage.setItem('expressoCache', "[]");
          return false;
        }
      }
    };
    this.removeLocalStorageValue = function(c_name) {
      window.localStorage.removeItem(c_name);
    };
    this.getLocalStorageValue = function(name, successCallBack, failCallBack) {
      if (window.localStorage != undefined) {
        var value = window.localStorage.getItem(name);
      }
      if (value) {
        successCallBack(JSON.parse(value));
      } else {
        if (failCallBack) {
          failCallBack();
        }
      }
    };
    this.errorCB = function(err) {};
    this.successCB = function(data) {};
    this.populatePhoneGapDatabase = function(tx) {
      tx.executeSql('DROP TABLE IF EXISTS expresso');
      tx.executeSql('DROP TABLE IF EXISTS expressoCache');
      var expressovalue = {
        auth: "",
        profile: "",
        username: "",
        password: "",
        phoneGap: true,
        serverAPI: "",
        settings: {
          resultsPerPage: 30,
          automaticLogin: false,
          mailSignature: 'Mensagem enviada pelo Expresso Mobile.'
        }
      };
      var str = JSON.stringify(expressovalue);
      var cacheStr = JSON.stringify([]);
      tx.executeSql('CREATE TABLE IF NOT EXISTS expresso (id unique, data)');
      tx.executeSql('CREATE TABLE IF NOT EXISTS expressoCache (id unique, data)');
      var query = 'INSERT INTO expresso (id, data) VALUES (\'1\', \'' + str + '\')';
      tx.executeSql(query);
      query = 'INSERT INTO expressoCache (id, data) VALUES (\'1\', \'' + cacheStr + '\')';
      tx.executeSql(query);
    };
    this.createPhoneGapDatabase = function() {};
    this.readCookie = function(name) {
      var value = window.localStorage.getItem(name);
      if (value) {
        return value;
      }
    };
    this.options = function(value) {
      for (var method in value)
        if (this.hasOwnProperty(method))
          this[method](value[method]);
      return this;
    };
    this.conf = function() {
      _data[_id].send = {};
      _data[_id].send.id = _id;
      _data[_id].send.params = this.params();
      if (_auth)
        _data[_id].send.params.auth = _auth;
      var conf = {};
      conf.headers = {}, conf.xhrFields = {withCredentials: false};
      if (_phoneGap) {
        conf.id = _id;
        conf.type = this.type();
        conf.url = this.url();
        conf.data = _data[_id].send;
        conf.params = _data[_id].send.params;
        conf.crossDomain = true;
        conf.phoneGap = _phoneGap;
        if (this.dataType() == 'arraybuffer') {
          conf.dataType = this.dataType();
          conf.loadArrayBuffer = function(arrayBuffer) {
            if (_data[this.id].done)
              _data[this.id].done(arrayBuffer, _data[this.id].send);
          };
        } else if (this.dataType() == 'fileupload') {
          conf.dataType = this.dataType();
          conf.files = _files;
          conf.loadArrayBuffer = function(response) {
            var jsonResponse = JSON.parse(response);
            if (jsonResponse && jsonResponse.error && jsonResponse.error.message) {
              if (_data[this.id].fail)
                _data[this.id].fail(jsonResponse.error, _data[this.id].send);
            } else {
              if (_data[this.id].done)
                _data[this.id].done(jsonResponse.result, _data[this.id].send);
            }
          };
        } else {
          conf.timeout = 30000;
        }
      } else {
        conf.id = _id;
        conf.type = this.type();
        conf.url = this.url();
        conf.data = _data[_id].send;
        conf.params = _data[_id].send.params;
        conf.phoneGap = _phoneGap;
        if (this.dataType() == 'arraybuffer') {
          conf.dataType = this.dataType();
          conf.loadArrayBuffer = function(arrayBuffer) {
            if (_data[this.id].done)
              _data[this.id].done(arrayBuffer, _data[this.id].send);
          };
        } else if (this.dataType() == 'fileupload') {
          conf.dataType = this.dataType();
          conf.files = _files;
          conf.loadArrayBuffer = function(arrayBuffer) {
            if (_data[this.id].done)
              _data[this.id].done(arrayBuffer, _data[this.id].send);
          };
        } else {
          conf.timeout = 30000;
        }
      }
      return conf;
    };
    this.execute = function() {
      var that = this;
      var conf = this.conf();
      _debug = false;
      if (_debug) {
        console.log('ExpressoAPI - Execute:' + this.resource());
        console.log(conf);
      }
      var networkError = {error: {
          code: 100,
          message: "Verifique sua conexão com a Internet."
        }};
      var networkTimeoutError = {error: {
          code: 100,
          message: "Esgotou-se o tempo limite da solicitação."
        }};
      if (_phoneGap && _android) {
        var networkState = navigator.connection.type;
        if (networkState == Connection.NONE) {
          that._isOffline = true;
          if (_data[this.id()].fail)
            _data[this.id()].fail(networkError);
        }
      } else {
        if (!_phoneGap) {
          var online = navigator.onLine;
          if (!online) {
            that._isOffline = true;
            console.log("OFFLINEEEE");
            if (_data[this.id()].fail)
              _data[this.id()].fail(networkError);
          }
        }
      }
      this._data = _data;
      conf.error = function(x, t, m) {
        if (t === "timeout") {
          that._isOffline = true;
          if (_data[that.id()].fail)
            _data[that.id()].fail(networkTimeoutError);
        } else {
          that._isOffline = true;
        }
      };
      var CacheRequest = this.getRequest();
      if ((that._isOffline == false) || (that._isOffline == undefined)) {
        $("#isOffline").hide();
      } else {
        $("#isOffline").show();
      }
      var successCallBackCache = function(foundCache) {
        if (that.ignoreCache() == true) {
          foundCache = false;
        }
        if ((foundCache != false) && ((foundCache.response.result != undefined) && (foundCache.response != undefined))) {
          if ((foundCache.response.result) && (foundCache.response)) {
            if (that._data[that.id()].done)
              that._data[that.id()].done(foundCache.response.result, that._data[that.id()].send);
          } else {
            if (that._data[that.id()].fail)
              that._data[that.id()].fail(foundCache.response, that.data[that.id()].send);
          }
        } else {
          if ((that._isOffline == false) || (that._isOffline == undefined)) {
            jQuery.ajax(conf).done(function(response) {
              if ((!response.result) && (!response.error)) {
                response = JSON.parse(response);
              }
              that.addToCache(CacheRequest, response);
              if (response && response.result) {
                if (_debug) {
                  console.log('ExpressoAPI - DONE callback');
                  console.log(JSON.stringify(response));
                }
                if (response.result.auth)
                  that.auth(response.result.auth);
                if (_data[this.id]) {
                  if (_data[this.id].resource == '/Logout')
                    that.auth("");
                  if (_data[this.id].done)
                    _data[this.id].done(response.result, _data[this.id].send);
                }
              } else {
                if (_debug) {
                  console.log('ExpressoAPI - ERROR callback');
                  console.log(JSON.stringify(response));
                }
                if (response.error.code == 100) {
                  if (_debug) {
                    console.log('ExpressoAPI - OFFLINE ERROR');
                    console.log(JSON.stringify(response));
                  }
                  $("#isOffline").show();
                  that._isOffline = true;
                  var thot = that;
                  var _tempDataset = _data;
                  var _tempId = this.id;
                  var forceCache = function(forcedCacheResponse) {
                    if (forcedCacheResponse) {
                      if ((forcedCacheResponse.response.result) && (forcedCacheResponse.response)) {
                        if (_tempDataset[_tempId].done)
                          _tempDataset[_tempId].done(forcedCacheResponse.response.result, _tempDataset[_tempId].send);
                      }
                    } else {
                      if (_tempDataset[_tempId].fail)
                        _tempDataset[_tempId].fail(response, _tempDataset[_tempId].send);
                    }
                  };
                  that.getCacheResponse(CacheRequest, forceCache);
                } else {
                  if (_data[this.id].fail)
                    _data[this.id].fail(response, _data[this.id].send);
                }
              }
              that.ignoreCache(false);
            }).fail(function(response) {
              if (_debug) {
                console.log('ExpressoAPI - FAIL callback');
                console.log(JSON.stringify(response));
              }
              if (_data[this.id].fail)
                _data[this.id].fail(response, _data[this.id].send);
              that.ignoreCache(false);
            }).always(function() {
              if (_debug)
                console.log('ExpressoAPI - ALWAYS callback');
              if (_data[this.id]) {
                if (_data[this.id].always)
                  _data[this.id].always(_data[this.id].send);
                delete _data[this.id];
              }
              that.ignoreCache(false);
            });
          } else {}
        }
      };
      this.getCacheResponse(CacheRequest, successCallBackCache);
      this.id(_id + 1);
      return this;
    };
  };
  return ExpressoAPI;
});

_removeDefine();
})();
$__System.register("8", ["6", "5", "7", "79", "7e", "82", "80", "9"], function($__export) {
  "use strict";
  var __moduleName = "8";
  var _,
      $,
      Backbone,
      expressoAPI,
      expressoIM,
      UserMessageView,
      expressoService,
      moment,
      Shared,
      fileref,
      exitFunction;
  return {
    setters: [function($__m) {
      _ = $__m.default;
    }, function($__m) {
      $ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      expressoAPI = $__m.default;
    }, function($__m) {
      expressoIM = $__m.default;
    }, function($__m) {
      UserMessageView = $__m.default;
    }, function($__m) {
      expressoService = $__m.default;
    }, function($__m) {
      moment = $__m.default;
    }],
    execute: function() {
      Shared = {};
      Shared.betaVersion = false;
      Shared.betaTesters = [];
      Shared.versionIsActive = true;
      Shared.backButtonClicked = function() {};
      if (Shared.betaVersion) {
        Shared.appVersion = "BETA";
      } else {
        Shared.appVersion = "1.2";
      }
      Shared.apiVersion = '';
      Shared.expressoVersion = '';
      if ((IS_BUILTINEXPRESSO == undefined) || (IS_BUILTINEXPRESSO == false)) {
        Shared.serverContext = "";
      } else {
        Shared.serverContext = "/email";
      }
      Shared.context = Shared.serverContext + "/api/";
      Shared.ComunityServerURL = "http://api.expressolivre.org/";
      Shared.settings = {};
      Shared.settings.resultsPerPage = 25;
      Shared.settings.mailSignature = "Mensagem enviada pelo Expresso Mobile.";
      Shared.timeoutDelay = 0;
      Shared.scrollDetail = null;
      Shared.scroll = null;
      Shared.scrollMenu = null;
      Shared.lastCheckDate = null;
      Shared.forceSmartPhoneResolution = true;
      Shared.forceLogout = false;
      Shared.im = expressoIM;
      Shared.api = expressoAPI;
      Shared.service = expressoService;
      Shared.contentView = null;
      Shared.detailView = null;
      Shared.gotoRoute = false;
      Shared.newMessageIntent = false;
      Shared.newMessageFiles = false;
      Shared.max_upload_file_size = 10240;
      Shared.max_upload_file_qtd = 20;
      Shared.currentDraftMessage = '';
      Shared.automaticLoginAccounts = {accounts: []};
      Shared.forceAutomaticLoginInAccountName = false;
      Shared.disabledModules = [];
      Shared.menuOpen = false;
      Shared.isBuiltInExpresso = function() {
        if (IS_BUILTINEXPRESSO) {
          if (Shared.isDesktop()) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      };
      Shared.isTabletResolution = function() {
        var retVal = ($(window).width() >= 720);
        if (Shared.forceSmartPhoneResolution) {
          retVal = false;
        }
        return retVal;
      };
      Shared.isSmartPhoneResolution = function() {
        return !Shared.isTabletResolution();
      };
      Shared.isDesktop = function() {
        var retVal = true;
        retVal = true;
        if (Shared.isPhonegap() || (Shared.isAndroid()) || (Shared.isIDevice())) {
          retVal = false;
        }
        return retVal;
      };
      Shared.isPhonegap = function() {
        return Shared.api.phoneGap();
      };
      Shared.isAndroid = function() {
        return (/android/gi).test(navigator.appVersion);
      };
      Shared.isIDevice = function() {
        return (/iphone|ipad/gi).test(navigator.appVersion);
      };
      Shared.scrollerRefresh = function() {};
      Shared.reloadPage = function() {
        Shared.reloadCurrentPageFunction();
      };
      Shared.reloadCurrentPageFunction = function() {};
      Shared.bytesToSize = function(bytes, precision) {
        var kilobyte = 1024;
        var megabyte = kilobyte * 1024;
        var gigabyte = megabyte * 1024;
        var terabyte = gigabyte * 1024;
        if ((bytes >= 0) && (bytes < kilobyte)) {
          return bytes + ' B';
        } else if ((bytes >= kilobyte) && (bytes < megabyte)) {
          return (bytes / kilobyte).toFixed(precision) + ' KB';
        } else if ((bytes >= megabyte) && (bytes < gigabyte)) {
          return (bytes / megabyte).toFixed(precision) + ' MB';
        } else if ((bytes >= gigabyte) && (bytes < terabyte)) {
          return (bytes / gigabyte).toFixed(precision) + ' GB';
        } else if (bytes >= terabyte) {
          return (bytes / terabyte).toFixed(precision) + ' TB';
        } else {
          return bytes + ' B';
        }
      };
      Shared.setCurrentView = function(type, view) {
        if (type == 1) {
          if (Shared.contentView != null) {
            Shared.contentView.undelegateEvents();
          }
          Shared.contentView = view;
        } else {
          if (Shared.isSmartPhoneResolution()) {
            if (Shared.contentView != null) {
              Shared.contentView.undelegateEvents();
            }
            Shared.contentView = view;
          } else {
            if (Shared.detailView != null) {
              Shared.detailView.undelegateEvents();
            }
            Shared.detailView = view;
          }
        }
      };
      Shared.setCurrentPageTitle = function(title) {
        $("#currentPageTitle").html(title);
      };
      Shared.refreshSettings = function() {
        Shared.api.resource('ExpressoVersion').params({}).done(function(result) {
          Shared.apiVersion = result.apiVersion;
          Shared.expressoVersion = result.expressoVersion;
          if (Shared.apiVersion != "1.0") {
            Shared.api.resource('Preferences/UserPreferences').params({"module": "mail"}).done(function(result) {
              var rpp = 25;
              var mailsign = "Mensagem enviada pelo Expresso Mobile.";
              var typeSignature = "html";
              if (result.mail != undefined) {
                rpp = result.mail.max_email_per_page;
                mailsign = result.mail.signature;
                typeSignature = result.mail.type_signature;
              }
              Shared.settings.resultsPerPage = rpp;
              Shared.settings.mailSignature = mailsign;
              Shared.settings.typeSignature = typeSignature;
              Shared.saveSettingsToLocalStorage();
            }).fail(function(result) {}).execute();
          }
        }).fail(function(result) {}).execute();
      };
      Shared.showMessage = function(message) {
        var messageView = new UserMessageView();
        messageView.msgType = message.type;
        messageView.msgTitle = message.title;
        messageView.msgDescription = message.description;
        messageView.elementID = message.elementID;
        messageView.msgRoute = message.route;
        messageView.msgIcon = message.icon;
        messageView.timeout = message.timeout;
        if (message.animate == false) {
          messageView.animate = false;
        }
        messageView.render();
      };
      Shared.deviceType = function(smartphone) {
        if (smartphone) {
          $('body').addClass('smartphone');
        } else {
          $('body').removeAttr('class');
        }
      };
      Shared.saveSettingsToLocalStorage = function() {
        Shared.api.getLocalStorageValue("expresso", function(expressoValue) {
          if (expressoValue == undefined) {
            var expressoValue = {};
          }
          expressoValue.settings = Shared.settings;
          Shared.api.setLocalStorageValue("expresso", expressoValue);
        });
      };
      Shared.handleErrors = function(error, preferences) {
        if (error.code == 100) {
          if (preferences != undefined) {}
          Shared.showMessage({
            type: "error",
            icon: 'icon-expresso',
            title: "Verifique sua conexão com a Internet...",
            description: "",
            timeout: 3000,
            elementID: "#pageMessage"
          });
        }
        if ((error.code == 7) || (error.code == 3)) {
          var expressoValues = {
            auth: "",
            "profile": "",
            username: "",
            password: "",
            phoneGap: "",
            serverAPI: "",
            settings: {
              resultsPerPage: 30,
              automaticLogin: false,
              mailSignature: ''
            }
          };
          Shared.api.setLocalStorageValue("expresso", expressoValues);
          Shared.showMessage({
            type: "error",
            icon: 'icon-expresso',
            title: "Sua sessão expirou...",
            description: "",
            timeout: 0,
            elementID: "#pageMessage"
          });
          setTimeout(function() {
            Shared.router.navigate('Login', {trigger: true});
          }, 2000);
        }
      };
      Shared.scheduleCheckForNewMessages = function() {
        Shared.checkForNewMessages();
        setInterval(Shared.checkForNewMessages, 70000);
        setInterval(Shared.refreshFolders, 3 * 60000);
      };
      Shared.refreshFolders = function() {
        if (Shared.userHasModule("mail")) {
          Shared.menuView.refreshFolders();
        }
      };
      Shared.checkForNewMessages = function() {
        if (Shared.userHasModule("mail")) {
          Shared.api.resource('/Mail/Messages').params({
            folderID: "INBOX",
            search: "",
            page: 1,
            resultsPerPage: "25",
            msgID: ""
          }).ignoreCache(true).done(function(result) {
            var qtdUnreadMessages = 0;
            var lastMessage = '';
            var unreadMessages = [];
            _.each(result.messages, function(message) {
              var date = moment(message.msgDate + ":59", "DD/MM/YYYY HH:mm:ss").unix();
              if (Shared.lastCheckDate != null) {
                if (date > (Shared.lastCheckDate / 1000)) {
                  qtdUnreadMessages = qtdUnreadMessages + 1;
                  lastMessage = message;
                  unreadMessages.push(message);
                }
              }
            });
            if (qtdUnreadMessages > 0) {
              var msgRoute = "";
              var msgTitle = "";
              var msgDescription = "";
              if (qtdUnreadMessages == 1) {
                msgRoute = "/Mail/Messages/1/" + lastMessage.msgID + "/INBOX";
                msgTitle = lastMessage.msgSubject;
                msgDescription = lastMessage.msgFrom.mailAddress;
              } else {
                msgRoute = "/Mail/Messages/1/0/INBOX";
                msgTitle = "Você tem " + qtdUnreadMessages + " novas mensagens.";
                msgDescription = "";
              }
              Shared.showMessage({
                type: "chat-message",
                icon: 'icon-expresso',
                title: msgTitle,
                description: msgDescription,
                route: msgRoute,
                timeout: 5000,
                elementID: "#pageMessage"
              });
              Shared.menuView.setMailBadge(qtdUnreadMessages);
            }
            Shared.lastCheckDate = Date.now();
          }).fail(function(result) {}).execute();
        }
      };
      Shared.windowTitle = "Expresso";
      Shared.BlinkWindowTitle = function(title) {
        if (Shared.isDesktop()) {
          Shared.stopBlinkWindowTitle();
          Shared.blinkTitleInterval = window.setInterval(function() {
            var msg = '';
            var qtd_chat = 0;
            if (Shared.userHasModule("chat")) {
              qtd_chat = Shared.im.qtdUnreadMessages();
            }
            var qtd_mail = 0;
            if (Shared.userHasModule("mail")) {
              qtd_mail = $("#badge_inbox").html();
              if (qtd_mail != undefined) {
                if (qtd_mail.trim() == '') {
                  qtd_mail = 0;
                }
              }
            }
            if (qtd_mail == undefined) {
              qtd_mail = 0;
            }
            var qtd_total = qtd_chat + qtd_mail;
            var msg_mail = '';
            if (qtd_mail != 0) {
              var msg_mail = qtd_mail + ' Emails';
            }
            if (qtd_mail == 1) {
              msg_mail = qtd_mail + ' Email';
            }
            var msg_chat = '';
            if (qtd_chat != 0) {
              msg_chat = qtd_chat + ' Msgs';
            }
            if (qtd_chat == 1) {
              msg_chat = qtd_chat + ' Msg';
            }
            if (msg_mail != '') {
              msg = msg_mail;
            }
            if (msg_chat != '') {
              if (msg_mail != '') {
                msg = msg_mail + " - " + msg_chat;
              } else {
                msg = msg_chat;
              }
            }
            if (qtd_total == 0) {
              msg = Shared.windowTitle;
            }
            document.title = document.title === Shared.windowTitle ? msg : Shared.windowTitle;
          }, 1000);
        }
      };
      Shared.stopBlinkWindowTitle = function() {
        window.clearInterval(Shared.blinkTitleInterval);
        document.title = Shared.windowTitle;
      };
      Shared.setDefaultIMListeners = function() {
        Shared.im.clearListeners();
        var onMessageFunction = function(message) {
          Shared.menuView.setChatBadge(Shared.im.qtdUnreadMessages());
          var message = {
            type: "chat-message",
            icon: 'icon-jabber',
            title: message.body,
            description: message.jid,
            route: "/Chat/" + message.id,
            timeout: 3000,
            elementID: "#pageMessage"
          };
          var qtd_chat = Shared.im.qtdUnreadMessages();
          Shared.showMessage(message);
        };
        var onComposingFunction = function(message) {};
        Shared.im.addOnMessageListener(onMessageFunction);
        Shared.im.addOnErrorListener(Shared.onIMErrorFunction);
        Shared.im.addOnDisconnectListener(Shared.onIMDisconnectFunction);
      };
      Shared.onIMErrorFunction = function(error) {
        var message = {
          type: "error",
          icon: 'icon-jabber',
          title: "Você não está conectado ao CHAT.",
          description: "Verifique sua conexão com a Internet...",
          route: "/Chat",
          elementID: "#pageMessage"
        };
        Shared.showMessage(message);
      };
      Shared.onIMDisconnectFunction = function(error) {};
      Shared.chatReconnect = function() {
        Shared.lastReconectionTime = new Date();
        Shared.api.resource('Services/Chat').params({}).done(function(resultChat) {
          Shared.im = expressoIM;
          Shared.im_resource = resultChat.A;
          Shared.im_url = resultChat.B;
          Shared.im_domain = resultChat.C;
          var im_userName = resultChat.D;
          var im_password = resultChat.E + "==";
          Shared.im.resource("EXPRESSO_MOBILE").url(Shared.im_url).domain(Shared.im_domain);
          var onConnectFunction = function() {
            Shared.router.navigate("Chat", {trigger: true});
          };
          Shared.im.username(im_userName).password(im_password).connect(onConnectFunction);
        }).execute();
      };
      Shared.api.id(0);
      Shared.api.debug(false);
      if (Shared.isDesktop()) {
        fileref = document.createElement("link");
        fileref.setAttribute("rel", "stylesheet");
        fileref.setAttribute("type", "text/css");
        fileref.setAttribute("href", './css/m_platform_desktop.css');
        document.getElementsByTagName("head")[0].appendChild(fileref);
      }
      if (Shared.isIDevice()) {
        fileref = document.createElement("link");
        fileref.setAttribute("rel", "stylesheet");
        fileref.setAttribute("type", "text/css");
        fileref.setAttribute("href", './css/m_platform_ios.css');
        document.getElementsByTagName("head")[0].appendChild(fileref);
      }
      Shared.userHasModule = function(moduleName) {
        var retVal = false;
        var module = moduleName;
        if (Shared.profile != undefined) {
          var a = Shared.profile.contactApps;
          if (a == undefined) {
            a = [];
          }
          a.push("settings");
          if (Shared.profile.contactServices != undefined) {
            if (Shared.profile.contactServices.chat != undefined) {
              a.push("chat");
            }
          }
          for (var i = 0; i < a.length; i++) {
            if (a[i] === moduleName) {
              retVal = true;
            }
          }
          if (Shared.apiVersion == "1.0") {
            if ((module == 'calendar') || (module == 'chat')) {
              retVal = false;
            }
          }
          for (var i = 0; i < Shared.disabledModules.length; i++) {
            if (module == Shared.disabledModules[i]) {
              retVal = false;
            }
          }
        } else {
          if (moduleName == "settings") {
            retVal = true;
          }
        }
        return retVal;
      };
      Shared.userHasAuth = function() {
        Shared.api.getLocalStorageValue("expresso", function(expressoValue) {
          var authValue = expressoValue.auth;
          if ((authValue != null) && (authValue != "")) {
            var profile = expressoValue.profile;
            Shared.profile = profile;
            Shared.api.auth(authValue);
            if (Shared.isAndroid()) {
              Shared.service.setConfig("http://api.expresso.pr.gov.br/", authValue);
            }
          }
        });
      };
      Shared.userHasAuth();
      Shared.deviceReady = function() {
        Shared.api.phoneGap(true);
        Shared.api.android(Shared.isAndroid());
        if (Shared.isAndroid()) {
          document.addEventListener("backbutton", function(e) {
            var exitURLs = ["file:///Mail/Messages/1/0/INBOX#", "file:///Mail/Messages/1/0/INBOX", "file:///Mail/Messages/0/0/INBOX", "file:///Home", "file:///Login"];
            if ($.inArray(window.location.href, exitURLs) >= 0) {
              e.preventDefault();
              navigator.app.exitApp();
            } else {
              e.preventDefault();
              window.history.back();
            }
          }, false);
          var serviceName = 'com.celepar.expresso.ExpressoService';
          var factory = cordova.require('com.phonegap.plugins.backgroundservice.BackgroundService');
          Shared.service.service = factory.create(serviceName);
          window.plugins = {};
          window.plugins.webintent = cordova.require('com.phonegap.plugins.webintent.WebIntent');
          window.plugins.expresso = cordova.require('com.phonegap.plugins.expresso.ExpressoPlugin');
          Shared.api.createPhoneGapDatabase();
          if (window.plugins != undefined) {
            if (window.plugins.expresso != undefined) {
              window.plugins.expresso.getAccounts("", function(accounts) {
                Shared.automaticLoginAccounts = JSON.parse(accounts);
                var JsonAccounts = Shared.automaticLoginAccounts;
                if (Shared.automaticLoginAccounts.accounts.length >= 1) {
                  if ((Shared.forceAutomaticLoginInAccountName == false) || (Shared.automaticLoginAccounts.accounts.length == 1)) {
                    Shared.forceAutomaticLoginInAccountName = JsonAccounts.accounts[0].accountName;
                  }
                  for (var i = 0; i < JsonAccounts.accounts.length; i++) {
                    if (JsonAccounts.accounts[i] != undefined) {
                      if (Shared.forceAutomaticLoginInAccountName == JsonAccounts.accounts[i].accountName) {
                        var Account = JsonAccounts.accounts[i];
                        Shared.service.setConfig(Account.accountAPIURL, Shared.api.auth(), Account.accountName, Account.accountPassword);
                        Shared.service.startService();
                        setTimeout(function() {
                          Shared.service.setConfig(Account.accountAPIURL, Shared.api.auth(), Account.accountName, Account.accountPassword);
                          Shared.service.enableTimer();
                        }, 10000);
                      }
                    }
                  }
                }
              }, function() {});
            }
            if (window.plugins.webintent != undefined) {
              window.plugins.webintent.hasExtra("android.intent.extra.STREAM", function(hasExtra) {
                window.plugins.webintent.getExtra("android.intent.extra.STREAM", function(files) {
                  var arquivos = [];
                  if (files.indexOf("[") != -1) {
                    files = files.replace("[", "").replace("]", "");
                    arquivos = files.split(",");
                  } else {
                    arquivos.push(files);
                  }
                  for (var i = 0; i < arquivos.length; i++) {
                    arquivos[i] = decodeURI(arquivos[i].replace("file://", "").trim());
                  }
                  Shared.newMessageIntent = true;
                  Shared.newMessageFiles = arquivos;
                }, function(error) {});
              }, function(error) {});
              window.plugins.webintent.onNewIntent(function(newURL) {
                if (newURL != null) {
                  Shared.router.navigate(newURL, {trigger: true});
                }
              });
              window.plugins.webintent.hasExtra("ROUTE", function(hasExtra) {
                window.plugins.webintent.getExtra("ROUTE", function(url) {
                  if (Shared.isTabletResolution()) {
                    url = url.replace("{:TABLET}", "1");
                  } else {
                    url = url.replace("{:TABLET}", "0");
                  }
                  Shared.gotoRoute = url;
                }, function(error) {});
              }, function(error) {});
            } else {}
          } else {}
        }
      };
      document.addEventListener('deviceready', function() {
        Shared.deviceReady();
      });
      exitFunction = function() {
        if (Shared.userHasModule("chat")) {
          Shared.im.disconnect();
        }
        window.location.href = Shared.serverContext + "/";
      };
      if (!IS_BUILTINEXPRESSO) {
        if (window.onpagehide || window.onpagehide === null) {
          window.addEventListener('pagehide', exitFunction, false);
        } else {
          window.addEventListener('unload', exitFunction, false);
        }
        window.onunload = exitFunction;
        window.onbeforeunload = function() {
          exitFunction();
        };
      }
      $__export('default', Shared);
    }
  };
});

(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
(function(t) {
  var e = typeof self == "object" && self.self == self && self || typeof global == "object" && global.global == global && global;
  if (typeof define === "function" && define.amd) {
    define("7", ["6", "5", "exports"], function(i, r, s) {
      e.Backbone = t(e, s, i, r);
    });
  } else if (typeof exports !== "undefined") {
    var i = require("underscore"),
        r;
    try {
      r = require("jquery");
    } catch (s) {}
    t(e, exports, i, r);
  } else {
    e.Backbone = t(e, {}, e._, e.jQuery || e.Zepto || e.ender || e.$);
  }
})(function(t, e, i, r) {
  var s = t.Backbone;
  var n = [].slice;
  e.VERSION = "1.2.1";
  e.$ = r;
  e.noConflict = function() {
    t.Backbone = s;
    return this;
  };
  e.emulateHTTP = false;
  e.emulateJSON = false;
  var a = function(t, e, r) {
    switch (t) {
      case 1:
        return function() {
          return i[e](this[r]);
        };
      case 2:
        return function(t) {
          return i[e](this[r], t);
        };
      case 3:
        return function(t, s) {
          return i[e](this[r], t, s);
        };
      case 4:
        return function(t, s, n) {
          return i[e](this[r], t, s, n);
        };
      default:
        return function() {
          var t = n.call(arguments);
          t.unshift(this[r]);
          return i[e].apply(i, t);
        };
    }
  };
  var o = function(t, e, r) {
    i.each(e, function(e, s) {
      if (i[s])
        t.prototype[s] = a(e, s, r);
    });
  };
  var h = e.Events = {};
  var u = /\s+/;
  var l = function(t, e, r, s, n) {
    var a = 0,
        o;
    if (r && typeof r === "object") {
      if (s !== void 0 && "context" in n && n.context === void 0)
        n.context = s;
      for (o = i.keys(r); a < o.length; a++) {
        e = t(e, o[a], r[o[a]], n);
      }
    } else if (r && u.test(r)) {
      for (o = r.split(u); a < o.length; a++) {
        e = t(e, o[a], s, n);
      }
    } else {
      e = t(e, r, s, n);
    }
    return e;
  };
  h.on = function(t, e, i) {
    return c(this, t, e, i);
  };
  var c = function(t, e, i, r, s) {
    t._events = l(f, t._events || {}, e, i, {
      context: r,
      ctx: t,
      listening: s
    });
    if (s) {
      var n = t._listeners || (t._listeners = {});
      n[s.id] = s;
    }
    return t;
  };
  h.listenTo = function(t, e, r) {
    if (!t)
      return this;
    var s = t._listenId || (t._listenId = i.uniqueId("l"));
    var n = this._listeningTo || (this._listeningTo = {});
    var a = n[s];
    if (!a) {
      var o = this._listenId || (this._listenId = i.uniqueId("l"));
      a = n[s] = {
        obj: t,
        objId: s,
        id: o,
        listeningTo: n,
        count: 0
      };
    }
    c(t, e, r, this, a);
    return this;
  };
  var f = function(t, e, i, r) {
    if (i) {
      var s = t[e] || (t[e] = []);
      var n = r.context,
          a = r.ctx,
          o = r.listening;
      if (o)
        o.count++;
      s.push({
        callback: i,
        context: n,
        ctx: n || a,
        listening: o
      });
    }
    return t;
  };
  h.off = function(t, e, i) {
    if (!this._events)
      return this;
    this._events = l(d, this._events, t, e, {
      context: i,
      listeners: this._listeners
    });
    return this;
  };
  h.stopListening = function(t, e, r) {
    var s = this._listeningTo;
    if (!s)
      return this;
    var n = t ? [t._listenId] : i.keys(s);
    for (var a = 0; a < n.length; a++) {
      var o = s[n[a]];
      if (!o)
        break;
      o.obj.off(e, r, this);
    }
    if (i.isEmpty(s))
      this._listeningTo = void 0;
    return this;
  };
  var d = function(t, e, r, s) {
    if (!t)
      return;
    var n = 0,
        a;
    var o = s.context,
        h = s.listeners;
    if (!e && !r && !o) {
      var u = i.keys(h);
      for (; n < u.length; n++) {
        a = h[u[n]];
        delete h[a.id];
        delete a.listeningTo[a.objId];
      }
      return;
    }
    var l = e ? [e] : i.keys(t);
    for (; n < l.length; n++) {
      e = l[n];
      var c = t[e];
      if (!c)
        break;
      var f = [];
      for (var d = 0; d < c.length; d++) {
        var v = c[d];
        if (r && r !== v.callback && r !== v.callback._callback || o && o !== v.context) {
          f.push(v);
        } else {
          a = v.listening;
          if (a && --a.count === 0) {
            delete h[a.id];
            delete a.listeningTo[a.objId];
          }
        }
      }
      if (f.length) {
        t[e] = f;
      } else {
        delete t[e];
      }
    }
    if (i.size(t))
      return t;
  };
  h.once = function(t, e, r) {
    var s = l(v, {}, t, e, i.bind(this.off, this));
    return this.on(s, void 0, r);
  };
  h.listenToOnce = function(t, e, r) {
    var s = l(v, {}, e, r, i.bind(this.stopListening, this, t));
    return this.listenTo(t, s);
  };
  var v = function(t, e, r, s) {
    if (r) {
      var n = t[e] = i.once(function() {
        s(e, n);
        r.apply(this, arguments);
      });
      n._callback = r;
    }
    return t;
  };
  h.trigger = function(t) {
    if (!this._events)
      return this;
    var e = Math.max(0, arguments.length - 1);
    var i = Array(e);
    for (var r = 0; r < e; r++)
      i[r] = arguments[r + 1];
    l(g, this._events, t, void 0, i);
    return this;
  };
  var g = function(t, e, i, r) {
    if (t) {
      var s = t[e];
      var n = t.all;
      if (s && n)
        n = n.slice();
      if (s)
        p(s, r);
      if (n)
        p(n, [e].concat(r));
    }
    return t;
  };
  var p = function(t, e) {
    var i,
        r = -1,
        s = t.length,
        n = e[0],
        a = e[1],
        o = e[2];
    switch (e.length) {
      case 0:
        while (++r < s)
          (i = t[r]).callback.call(i.ctx);
        return;
      case 1:
        while (++r < s)
          (i = t[r]).callback.call(i.ctx, n);
        return;
      case 2:
        while (++r < s)
          (i = t[r]).callback.call(i.ctx, n, a);
        return;
      case 3:
        while (++r < s)
          (i = t[r]).callback.call(i.ctx, n, a, o);
        return;
      default:
        while (++r < s)
          (i = t[r]).callback.apply(i.ctx, e);
        return;
    }
  };
  h.bind = h.on;
  h.unbind = h.off;
  i.extend(e, h);
  var m = e.Model = function(t, e) {
    var r = t || {};
    e || (e = {});
    this.cid = i.uniqueId(this.cidPrefix);
    this.attributes = {};
    if (e.collection)
      this.collection = e.collection;
    if (e.parse)
      r = this.parse(r, e) || {};
    r = i.defaults({}, r, i.result(this, "defaults"));
    this.set(r, e);
    this.changed = {};
    this.initialize.apply(this, arguments);
  };
  i.extend(m.prototype, h, {
    changed: null,
    validationError: null,
    idAttribute: "id",
    cidPrefix: "c",
    initialize: function() {},
    toJSON: function(t) {
      return i.clone(this.attributes);
    },
    sync: function() {
      return e.sync.apply(this, arguments);
    },
    get: function(t) {
      return this.attributes[t];
    },
    escape: function(t) {
      return i.escape(this.get(t));
    },
    has: function(t) {
      return this.get(t) != null;
    },
    matches: function(t) {
      return !!i.iteratee(t, this)(this.attributes);
    },
    set: function(t, e, r) {
      if (t == null)
        return this;
      var s;
      if (typeof t === "object") {
        s = t;
        r = e;
      } else {
        (s = {})[t] = e;
      }
      r || (r = {});
      if (!this._validate(s, r))
        return false;
      var n = r.unset;
      var a = r.silent;
      var o = [];
      var h = this._changing;
      this._changing = true;
      if (!h) {
        this._previousAttributes = i.clone(this.attributes);
        this.changed = {};
      }
      var u = this.attributes;
      var l = this.changed;
      var c = this._previousAttributes;
      if (this.idAttribute in s)
        this.id = s[this.idAttribute];
      for (var f in s) {
        e = s[f];
        if (!i.isEqual(u[f], e))
          o.push(f);
        if (!i.isEqual(c[f], e)) {
          l[f] = e;
        } else {
          delete l[f];
        }
        n ? delete u[f] : u[f] = e;
      }
      if (!a) {
        if (o.length)
          this._pending = r;
        for (var d = 0; d < o.length; d++) {
          this.trigger("change:" + o[d], this, u[o[d]], r);
        }
      }
      if (h)
        return this;
      if (!a) {
        while (this._pending) {
          r = this._pending;
          this._pending = false;
          this.trigger("change", this, r);
        }
      }
      this._pending = false;
      this._changing = false;
      return this;
    },
    unset: function(t, e) {
      return this.set(t, void 0, i.extend({}, e, {unset: true}));
    },
    clear: function(t) {
      var e = {};
      for (var r in this.attributes)
        e[r] = void 0;
      return this.set(e, i.extend({}, t, {unset: true}));
    },
    hasChanged: function(t) {
      if (t == null)
        return !i.isEmpty(this.changed);
      return i.has(this.changed, t);
    },
    changedAttributes: function(t) {
      if (!t)
        return this.hasChanged() ? i.clone(this.changed) : false;
      var e = this._changing ? this._previousAttributes : this.attributes;
      var r = {};
      for (var s in t) {
        var n = t[s];
        if (i.isEqual(e[s], n))
          continue;
        r[s] = n;
      }
      return i.size(r) ? r : false;
    },
    previous: function(t) {
      if (t == null || !this._previousAttributes)
        return null;
      return this._previousAttributes[t];
    },
    previousAttributes: function() {
      return i.clone(this._previousAttributes);
    },
    fetch: function(t) {
      t = i.extend({parse: true}, t);
      var e = this;
      var r = t.success;
      t.success = function(i) {
        var s = t.parse ? e.parse(i, t) : i;
        if (!e.set(s, t))
          return false;
        if (r)
          r.call(t.context, e, i, t);
        e.trigger("sync", e, i, t);
      };
      q(this, t);
      return this.sync("read", this, t);
    },
    save: function(t, e, r) {
      var s;
      if (t == null || typeof t === "object") {
        s = t;
        r = e;
      } else {
        (s = {})[t] = e;
      }
      r = i.extend({
        validate: true,
        parse: true
      }, r);
      var n = r.wait;
      if (s && !n) {
        if (!this.set(s, r))
          return false;
      } else {
        if (!this._validate(s, r))
          return false;
      }
      var a = this;
      var o = r.success;
      var h = this.attributes;
      r.success = function(t) {
        a.attributes = h;
        var e = r.parse ? a.parse(t, r) : t;
        if (n)
          e = i.extend({}, s, e);
        if (e && !a.set(e, r))
          return false;
        if (o)
          o.call(r.context, a, t, r);
        a.trigger("sync", a, t, r);
      };
      q(this, r);
      if (s && n)
        this.attributes = i.extend({}, h, s);
      var u = this.isNew() ? "create" : r.patch ? "patch" : "update";
      if (u === "patch" && !r.attrs)
        r.attrs = s;
      var l = this.sync(u, this, r);
      this.attributes = h;
      return l;
    },
    destroy: function(t) {
      t = t ? i.clone(t) : {};
      var e = this;
      var r = t.success;
      var s = t.wait;
      var n = function() {
        e.stopListening();
        e.trigger("destroy", e, e.collection, t);
      };
      t.success = function(i) {
        if (s)
          n();
        if (r)
          r.call(t.context, e, i, t);
        if (!e.isNew())
          e.trigger("sync", e, i, t);
      };
      var a = false;
      if (this.isNew()) {
        i.defer(t.success);
      } else {
        q(this, t);
        a = this.sync("delete", this, t);
      }
      if (!s)
        n();
      return a;
    },
    url: function() {
      var t = i.result(this, "urlRoot") || i.result(this.collection, "url") || M();
      if (this.isNew())
        return t;
      var e = this.get(this.idAttribute);
      return t.replace(/[^\/]$/, "$&/") + encodeURIComponent(e);
    },
    parse: function(t, e) {
      return t;
    },
    clone: function() {
      return new this.constructor(this.attributes);
    },
    isNew: function() {
      return !this.has(this.idAttribute);
    },
    isValid: function(t) {
      return this._validate({}, i.defaults({validate: true}, t));
    },
    _validate: function(t, e) {
      if (!e.validate || !this.validate)
        return true;
      t = i.extend({}, this.attributes, t);
      var r = this.validationError = this.validate(t, e) || null;
      if (!r)
        return true;
      this.trigger("invalid", this, r, i.extend(e, {validationError: r}));
      return false;
    }
  });
  var _ = {
    keys: 1,
    values: 1,
    pairs: 1,
    invert: 1,
    pick: 0,
    omit: 0,
    chain: 1,
    isEmpty: 1
  };
  o(m, _, "attributes");
  var y = e.Collection = function(t, e) {
    e || (e = {});
    if (e.model)
      this.model = e.model;
    if (e.comparator !== void 0)
      this.comparator = e.comparator;
    this._reset();
    this.initialize.apply(this, arguments);
    if (t)
      this.reset(t, i.extend({silent: true}, e));
  };
  var b = {
    add: true,
    remove: true,
    merge: true
  };
  var x = {
    add: true,
    remove: false
  };
  i.extend(y.prototype, h, {
    model: m,
    initialize: function() {},
    toJSON: function(t) {
      return this.map(function(e) {
        return e.toJSON(t);
      });
    },
    sync: function() {
      return e.sync.apply(this, arguments);
    },
    add: function(t, e) {
      return this.set(t, i.extend({merge: false}, e, x));
    },
    remove: function(t, e) {
      e = i.extend({}, e);
      var r = !i.isArray(t);
      t = r ? [t] : i.clone(t);
      var s = this._removeModels(t, e);
      if (!e.silent && s)
        this.trigger("update", this, e);
      return r ? s[0] : s;
    },
    set: function(t, e) {
      e = i.defaults({}, e, b);
      if (e.parse && !this._isModel(t))
        t = this.parse(t, e);
      var r = !i.isArray(t);
      t = r ? t ? [t] : [] : t.slice();
      var s,
          n,
          a,
          o,
          h;
      var u = e.at;
      if (u != null)
        u = +u;
      if (u < 0)
        u += this.length + 1;
      var l = this.comparator && u == null && e.sort !== false;
      var c = i.isString(this.comparator) ? this.comparator : null;
      var f = [],
          d = [],
          v = {};
      var g = e.add,
          p = e.merge,
          m = e.remove;
      var _ = !l && g && m ? [] : false;
      var y = false;
      for (var x = 0; x < t.length; x++) {
        a = t[x];
        if (o = this.get(a)) {
          if (m)
            v[o.cid] = true;
          if (p && a !== o) {
            a = this._isModel(a) ? a.attributes : a;
            if (e.parse)
              a = o.parse(a, e);
            o.set(a, e);
            if (l && !h && o.hasChanged(c))
              h = true;
          }
          t[x] = o;
        } else if (g) {
          n = t[x] = this._prepareModel(a, e);
          if (!n)
            continue;
          f.push(n);
          this._addReference(n, e);
        }
        n = o || n;
        if (!n)
          continue;
        s = this.modelId(n.attributes);
        if (_ && (n.isNew() || !v[s])) {
          _.push(n);
          y = y || !this.models[x] || n.cid !== this.models[x].cid;
        }
        v[s] = true;
      }
      if (m) {
        for (var x = 0; x < this.length; x++) {
          if (!v[(n = this.models[x]).cid])
            d.push(n);
        }
        if (d.length)
          this._removeModels(d, e);
      }
      if (f.length || y) {
        if (l)
          h = true;
        this.length += f.length;
        if (u != null) {
          for (var x = 0; x < f.length; x++) {
            this.models.splice(u + x, 0, f[x]);
          }
        } else {
          if (_)
            this.models.length = 0;
          var w = _ || f;
          for (var x = 0; x < w.length; x++) {
            this.models.push(w[x]);
          }
        }
      }
      if (h)
        this.sort({silent: true});
      if (!e.silent) {
        var E = u != null ? i.clone(e) : e;
        for (var x = 0; x < f.length; x++) {
          if (u != null)
            E.index = u + x;
          (n = f[x]).trigger("add", n, this, E);
        }
        if (h || y)
          this.trigger("sort", this, e);
        if (f.length || d.length)
          this.trigger("update", this, e);
      }
      return r ? t[0] : t;
    },
    reset: function(t, e) {
      e = e ? i.clone(e) : {};
      for (var r = 0; r < this.models.length; r++) {
        this._removeReference(this.models[r], e);
      }
      e.previousModels = this.models;
      this._reset();
      t = this.add(t, i.extend({silent: true}, e));
      if (!e.silent)
        this.trigger("reset", this, e);
      return t;
    },
    push: function(t, e) {
      return this.add(t, i.extend({at: this.length}, e));
    },
    pop: function(t) {
      var e = this.at(this.length - 1);
      return this.remove(e, t);
    },
    unshift: function(t, e) {
      return this.add(t, i.extend({at: 0}, e));
    },
    shift: function(t) {
      var e = this.at(0);
      return this.remove(e, t);
    },
    slice: function() {
      return n.apply(this.models, arguments);
    },
    get: function(t) {
      if (t == null)
        return void 0;
      var e = this.modelId(this._isModel(t) ? t.attributes : t);
      return this._byId[t] || this._byId[e] || this._byId[t.cid];
    },
    at: function(t) {
      if (t < 0)
        t += this.length;
      return this.models[t];
    },
    where: function(t, e) {
      var r = i.matches(t);
      return this[e ? "find" : "filter"](function(t) {
        return r(t.attributes);
      });
    },
    findWhere: function(t) {
      return this.where(t, true);
    },
    sort: function(t) {
      if (!this.comparator)
        throw new Error("Cannot sort a set without a comparator");
      t || (t = {});
      if (i.isString(this.comparator) || this.comparator.length === 1) {
        this.models = this.sortBy(this.comparator, this);
      } else {
        this.models.sort(i.bind(this.comparator, this));
      }
      if (!t.silent)
        this.trigger("sort", this, t);
      return this;
    },
    pluck: function(t) {
      return i.invoke(this.models, "get", t);
    },
    fetch: function(t) {
      t = i.extend({parse: true}, t);
      var e = t.success;
      var r = this;
      t.success = function(i) {
        var s = t.reset ? "reset" : "set";
        r[s](i, t);
        if (e)
          e.call(t.context, r, i, t);
        r.trigger("sync", r, i, t);
      };
      q(this, t);
      return this.sync("read", this, t);
    },
    create: function(t, e) {
      e = e ? i.clone(e) : {};
      var r = e.wait;
      t = this._prepareModel(t, e);
      if (!t)
        return false;
      if (!r)
        this.add(t, e);
      var s = this;
      var n = e.success;
      e.success = function(t, e, i) {
        if (r)
          s.add(t, i);
        if (n)
          n.call(i.context, t, e, i);
      };
      t.save(null, e);
      return t;
    },
    parse: function(t, e) {
      return t;
    },
    clone: function() {
      return new this.constructor(this.models, {
        model: this.model,
        comparator: this.comparator
      });
    },
    modelId: function(t) {
      return t[this.model.prototype.idAttribute || "id"];
    },
    _reset: function() {
      this.length = 0;
      this.models = [];
      this._byId = {};
    },
    _prepareModel: function(t, e) {
      if (this._isModel(t)) {
        if (!t.collection)
          t.collection = this;
        return t;
      }
      e = e ? i.clone(e) : {};
      e.collection = this;
      var r = new this.model(t, e);
      if (!r.validationError)
        return r;
      this.trigger("invalid", this, r.validationError, e);
      return false;
    },
    _removeModels: function(t, e) {
      var i = [];
      for (var r = 0; r < t.length; r++) {
        var s = this.get(t[r]);
        if (!s)
          continue;
        var n = this.indexOf(s);
        this.models.splice(n, 1);
        this.length--;
        if (!e.silent) {
          e.index = n;
          s.trigger("remove", s, this, e);
        }
        i.push(s);
        this._removeReference(s, e);
      }
      return i.length ? i : false;
    },
    _isModel: function(t) {
      return t instanceof m;
    },
    _addReference: function(t, e) {
      this._byId[t.cid] = t;
      var i = this.modelId(t.attributes);
      if (i != null)
        this._byId[i] = t;
      t.on("all", this._onModelEvent, this);
    },
    _removeReference: function(t, e) {
      delete this._byId[t.cid];
      var i = this.modelId(t.attributes);
      if (i != null)
        delete this._byId[i];
      if (this === t.collection)
        delete t.collection;
      t.off("all", this._onModelEvent, this);
    },
    _onModelEvent: function(t, e, i, r) {
      if ((t === "add" || t === "remove") && i !== this)
        return;
      if (t === "destroy")
        this.remove(e, r);
      if (t === "change") {
        var s = this.modelId(e.previousAttributes());
        var n = this.modelId(e.attributes);
        if (s !== n) {
          if (s != null)
            delete this._byId[s];
          if (n != null)
            this._byId[n] = e;
        }
      }
      this.trigger.apply(this, arguments);
    }
  });
  var w = {
    forEach: 3,
    each: 3,
    map: 3,
    collect: 3,
    reduce: 4,
    foldl: 4,
    inject: 4,
    reduceRight: 4,
    foldr: 4,
    find: 3,
    detect: 3,
    filter: 3,
    select: 3,
    reject: 3,
    every: 3,
    all: 3,
    some: 3,
    any: 3,
    include: 2,
    contains: 2,
    invoke: 0,
    max: 3,
    min: 3,
    toArray: 1,
    size: 1,
    first: 3,
    head: 3,
    take: 3,
    initial: 3,
    rest: 3,
    tail: 3,
    drop: 3,
    last: 3,
    without: 0,
    difference: 0,
    indexOf: 3,
    shuffle: 1,
    lastIndexOf: 3,
    isEmpty: 1,
    chain: 1,
    sample: 3,
    partition: 3
  };
  o(y, w, "models");
  var E = ["groupBy", "countBy", "sortBy", "indexBy"];
  i.each(E, function(t) {
    if (!i[t])
      return;
    y.prototype[t] = function(e, r) {
      var s = i.isFunction(e) ? e : function(t) {
        return t.get(e);
      };
      return i[t](this.models, s, r);
    };
  });
  var k = e.View = function(t) {
    this.cid = i.uniqueId("view");
    i.extend(this, i.pick(t, I));
    this._ensureElement();
    this.initialize.apply(this, arguments);
  };
  var S = /^(\S+)\s*(.*)$/;
  var I = ["model", "collection", "el", "id", "attributes", "className", "tagName", "events"];
  i.extend(k.prototype, h, {
    tagName: "div",
    $: function(t) {
      return this.$el.find(t);
    },
    initialize: function() {},
    render: function() {
      return this;
    },
    remove: function() {
      this._removeElement();
      this.stopListening();
      return this;
    },
    _removeElement: function() {
      this.$el.remove();
    },
    setElement: function(t) {
      this.undelegateEvents();
      this._setElement(t);
      this.delegateEvents();
      return this;
    },
    _setElement: function(t) {
      this.$el = t instanceof e.$ ? t : e.$(t);
      this.el = this.$el[0];
    },
    delegateEvents: function(t) {
      t || (t = i.result(this, "events"));
      if (!t)
        return this;
      this.undelegateEvents();
      for (var e in t) {
        var r = t[e];
        if (!i.isFunction(r))
          r = this[r];
        if (!r)
          continue;
        var s = e.match(S);
        this.delegate(s[1], s[2], i.bind(r, this));
      }
      return this;
    },
    delegate: function(t, e, i) {
      this.$el.on(t + ".delegateEvents" + this.cid, e, i);
      return this;
    },
    undelegateEvents: function() {
      if (this.$el)
        this.$el.off(".delegateEvents" + this.cid);
      return this;
    },
    undelegate: function(t, e, i) {
      this.$el.off(t + ".delegateEvents" + this.cid, e, i);
      return this;
    },
    _createElement: function(t) {
      return document.createElement(t);
    },
    _ensureElement: function() {
      if (!this.el) {
        var t = i.extend({}, i.result(this, "attributes"));
        if (this.id)
          t.id = i.result(this, "id");
        if (this.className)
          t["class"] = i.result(this, "className");
        this.setElement(this._createElement(i.result(this, "tagName")));
        this._setAttributes(t);
      } else {
        this.setElement(i.result(this, "el"));
      }
    },
    _setAttributes: function(t) {
      this.$el.attr(t);
    }
  });
  e.sync = function(t, r, s) {
    var n = T[t];
    i.defaults(s || (s = {}), {
      emulateHTTP: e.emulateHTTP,
      emulateJSON: e.emulateJSON
    });
    var a = {
      type: n,
      dataType: "json"
    };
    if (!s.url) {
      a.url = i.result(r, "url") || M();
    }
    if (s.data == null && r && (t === "create" || t === "update" || t === "patch")) {
      a.contentType = "application/json";
      a.data = JSON.stringify(s.attrs || r.toJSON(s));
    }
    if (s.emulateJSON) {
      a.contentType = "application/x-www-form-urlencoded";
      a.data = a.data ? {model: a.data} : {};
    }
    if (s.emulateHTTP && (n === "PUT" || n === "DELETE" || n === "PATCH")) {
      a.type = "POST";
      if (s.emulateJSON)
        a.data._method = n;
      var o = s.beforeSend;
      s.beforeSend = function(t) {
        t.setRequestHeader("X-HTTP-Method-Override", n);
        if (o)
          return o.apply(this, arguments);
      };
    }
    if (a.type !== "GET" && !s.emulateJSON) {
      a.processData = false;
    }
    var h = s.error;
    s.error = function(t, e, i) {
      s.textStatus = e;
      s.errorThrown = i;
      if (h)
        h.call(s.context, t, e, i);
    };
    var u = s.xhr = e.ajax(i.extend(a, s));
    r.trigger("request", r, u, s);
    return u;
  };
  var T = {
    create: "POST",
    update: "PUT",
    patch: "PATCH",
    "delete": "DELETE",
    read: "GET"
  };
  e.ajax = function() {
    return e.$.ajax.apply(e.$, arguments);
  };
  var P = e.Router = function(t) {
    t || (t = {});
    if (t.routes)
      this.routes = t.routes;
    this._bindRoutes();
    this.initialize.apply(this, arguments);
  };
  var H = /\((.*?)\)/g;
  var $ = /(\(\?)?:\w+/g;
  var A = /\*\w+/g;
  var C = /[\-{}\[\]+?.,\\\^$|#\s]/g;
  i.extend(P.prototype, h, {
    initialize: function() {},
    route: function(t, r, s) {
      if (!i.isRegExp(t))
        t = this._routeToRegExp(t);
      if (i.isFunction(r)) {
        s = r;
        r = "";
      }
      if (!s)
        s = this[r];
      var n = this;
      e.history.route(t, function(i) {
        var a = n._extractParameters(t, i);
        if (n.execute(s, a, r) !== false) {
          n.trigger.apply(n, ["route:" + r].concat(a));
          n.trigger("route", r, a);
          e.history.trigger("route", n, r, a);
        }
      });
      return this;
    },
    execute: function(t, e, i) {
      if (t)
        t.apply(this, e);
    },
    navigate: function(t, i) {
      e.history.navigate(t, i);
      return this;
    },
    _bindRoutes: function() {
      if (!this.routes)
        return;
      this.routes = i.result(this, "routes");
      var t,
          e = i.keys(this.routes);
      while ((t = e.pop()) != null) {
        this.route(t, this.routes[t]);
      }
    },
    _routeToRegExp: function(t) {
      t = t.replace(C, "\\$&").replace(H, "(?:$1)?").replace($, function(t, e) {
        return e ? t : "([^/?]+)";
      }).replace(A, "([^?]*?)");
      return new RegExp("^" + t + "(?:\\?([\\s\\S]*))?$");
    },
    _extractParameters: function(t, e) {
      var r = t.exec(e).slice(1);
      return i.map(r, function(t, e) {
        if (e === r.length - 1)
          return t || null;
        return t ? decodeURIComponent(t) : null;
      });
    }
  });
  var N = e.History = function() {
    this.handlers = [];
    i.bindAll(this, "checkUrl");
    if (typeof window !== "undefined") {
      this.location = window.location;
      this.history = window.history;
    }
  };
  var R = /^[#\/]|\s+$/g;
  var j = /^\/+|\/+$/g;
  var O = /#.*$/;
  N.started = false;
  i.extend(N.prototype, h, {
    interval: 50,
    atRoot: function() {
      var t = this.location.pathname.replace(/[^\/]$/, "$&/");
      return t === this.root && !this.getSearch();
    },
    matchRoot: function() {
      var t = this.decodeFragment(this.location.pathname);
      var e = t.slice(0, this.root.length - 1) + "/";
      return e === this.root;
    },
    decodeFragment: function(t) {
      return decodeURI(t.replace(/%25/g, "%2525"));
    },
    getSearch: function() {
      var t = this.location.href.replace(/#.*/, "").match(/\?.+/);
      return t ? t[0] : "";
    },
    getHash: function(t) {
      var e = (t || this).location.href.match(/#(.*)$/);
      return e ? e[1] : "";
    },
    getPath: function() {
      var t = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);
      return t.charAt(0) === "/" ? t.slice(1) : t;
    },
    getFragment: function(t) {
      if (t == null) {
        if (this._usePushState || !this._wantsHashChange) {
          t = this.getPath();
        } else {
          t = this.getHash();
        }
      }
      return t.replace(R, "");
    },
    start: function(t) {
      if (N.started)
        throw new Error("Backbone.history has already been started");
      N.started = true;
      this.options = i.extend({root: "/"}, this.options, t);
      this.root = this.options.root;
      this._wantsHashChange = this.options.hashChange !== false;
      this._hasHashChange = "onhashchange" in window;
      this._useHashChange = this._wantsHashChange && this._hasHashChange;
      this._wantsPushState = !!this.options.pushState;
      this._hasPushState = !!(this.history && this.history.pushState);
      this._usePushState = this._wantsPushState && this._hasPushState;
      this.fragment = this.getFragment();
      this.root = ("/" + this.root + "/").replace(j, "/");
      if (this._wantsHashChange && this._wantsPushState) {
        if (!this._hasPushState && !this.atRoot()) {
          var e = this.root.slice(0, -1) || "/";
          this.location.replace(e + "#" + this.getPath());
          return true;
        } else if (this._hasPushState && this.atRoot()) {
          this.navigate(this.getHash(), {replace: true});
        }
      }
      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {
        this.iframe = document.createElement("iframe");
        this.iframe.src = "javascript:0";
        this.iframe.style.display = "none";
        this.iframe.tabIndex = -1;
        var r = document.body;
        var s = r.insertBefore(this.iframe, r.firstChild).contentWindow;
        s.document.open();
        s.document.close();
        s.location.hash = "#" + this.fragment;
      }
      var n = window.addEventListener || function(t, e) {
        return attachEvent("on" + t, e);
      };
      if (this._usePushState) {
        n("popstate", this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        n("hashchange", this.checkUrl, false);
      } else if (this._wantsHashChange) {
        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);
      }
      if (!this.options.silent)
        return this.loadUrl();
    },
    stop: function() {
      var t = window.removeEventListener || function(t, e) {
        return detachEvent("on" + t, e);
      };
      if (this._usePushState) {
        t("popstate", this.checkUrl, false);
      } else if (this._useHashChange && !this.iframe) {
        t("hashchange", this.checkUrl, false);
      }
      if (this.iframe) {
        document.body.removeChild(this.iframe);
        this.iframe = null;
      }
      if (this._checkUrlInterval)
        clearInterval(this._checkUrlInterval);
      N.started = false;
    },
    route: function(t, e) {
      this.handlers.unshift({
        route: t,
        callback: e
      });
    },
    checkUrl: function(t) {
      var e = this.getFragment();
      if (e === this.fragment && this.iframe) {
        e = this.getHash(this.iframe.contentWindow);
      }
      if (e === this.fragment)
        return false;
      if (this.iframe)
        this.navigate(e);
      this.loadUrl();
    },
    loadUrl: function(t) {
      if (!this.matchRoot())
        return false;
      t = this.fragment = this.getFragment(t);
      return i.any(this.handlers, function(e) {
        if (e.route.test(t)) {
          e.callback(t);
          return true;
        }
      });
    },
    navigate: function(t, e) {
      if (!N.started)
        return false;
      if (!e || e === true)
        e = {trigger: !!e};
      t = this.getFragment(t || "");
      var i = this.root;
      if (t === "" || t.charAt(0) === "?") {
        i = i.slice(0, -1) || "/";
      }
      var r = i + t;
      t = this.decodeFragment(t.replace(O, ""));
      if (this.fragment === t)
        return;
      this.fragment = t;
      if (this._usePushState) {
        this.history[e.replace ? "replaceState" : "pushState"]({}, document.title, r);
      } else if (this._wantsHashChange) {
        this._updateHash(this.location, t, e.replace);
        if (this.iframe && t !== this.getHash(this.iframe.contentWindow)) {
          var s = this.iframe.contentWindow;
          if (!e.replace) {
            s.document.open();
            s.document.close();
          }
          this._updateHash(s.location, t, e.replace);
        }
      } else {
        return this.location.assign(r);
      }
      if (e.trigger)
        return this.loadUrl(t);
    },
    _updateHash: function(t, e, i) {
      if (i) {
        var r = t.href.replace(/(javascript:|#).*$/, "");
        t.replace(r + "#" + e);
      } else {
        t.hash = "#" + e;
      }
    }
  });
  e.history = new N;
  var U = function(t, e) {
    var r = this;
    var s;
    if (t && i.has(t, "constructor")) {
      s = t.constructor;
    } else {
      s = function() {
        return r.apply(this, arguments);
      };
    }
    i.extend(s, r, e);
    var n = function() {
      this.constructor = s;
    };
    n.prototype = r.prototype;
    s.prototype = new n;
    if (t)
      i.extend(s.prototype, t);
    s.__super__ = r.prototype;
    return s;
  };
  m.extend = y.extend = P.extend = k.extend = N.extend = U;
  var M = function() {
    throw new Error('A "url" property or function must be specified');
  };
  var q = function(t, e) {
    var i = e.error;
    e.error = function(r) {
      if (i)
        i.call(e.context, t, r, e);
      t.trigger("error", t, r, e);
    };
  };
  return e;
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
(function() {
  function n(n) {
    function t(t, r, e, u, i, o) {
      for (; i >= 0 && o > i; i += n) {
        var a = u ? u[i] : i;
        e = r(e, t[a], a, t);
      }
      return e;
    }
    return function(r, e, u, i) {
      e = b(e, i, 4);
      var o = !k(r) && m.keys(r),
          a = (o || r).length,
          c = n > 0 ? 0 : a - 1;
      return arguments.length < 3 && (u = r[o ? o[c] : c], c += n), t(r, e, u, o, c, a);
    };
  }
  function t(n) {
    return function(t, r, e) {
      r = x(r, e);
      for (var u = O(t),
          i = n > 0 ? 0 : u - 1; i >= 0 && u > i; i += n)
        if (r(t[i], i, t))
          return i;
      return -1;
    };
  }
  function r(n, t, r) {
    return function(e, u, i) {
      var o = 0,
          a = O(e);
      if ("number" == typeof i)
        n > 0 ? o = i >= 0 ? i : Math.max(i + a, o) : a = i >= 0 ? Math.min(i + 1, a) : i + a + 1;
      else if (r && i && a)
        return i = r(e, u), e[i] === u ? i : -1;
      if (u !== u)
        return i = t(l.call(e, o, a), m.isNaN), i >= 0 ? i + o : -1;
      for (i = n > 0 ? o : a - 1; i >= 0 && a > i; i += n)
        if (e[i] === u)
          return i;
      return -1;
    };
  }
  function e(n, t) {
    var r = I.length,
        e = n.constructor,
        u = m.isFunction(e) && e.prototype || a,
        i = "constructor";
    for (m.has(n, i) && !m.contains(t, i) && t.push(i); r--; )
      i = I[r], i in n && n[i] !== u[i] && !m.contains(t, i) && t.push(i);
  }
  var u = this,
      i = u._,
      o = Array.prototype,
      a = Object.prototype,
      c = Function.prototype,
      f = o.push,
      l = o.slice,
      s = a.toString,
      p = a.hasOwnProperty,
      h = Array.isArray,
      v = Object.keys,
      g = c.bind,
      y = Object.create,
      d = function() {},
      m = function(n) {
        return n instanceof m ? n : this instanceof m ? void(this._wrapped = n) : new m(n);
      };
  "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = m), exports._ = m) : u._ = m, m.VERSION = "1.8.3";
  var b = function(n, t, r) {
    if (t === void 0)
      return n;
    switch (null == r ? 3 : r) {
      case 1:
        return function(r) {
          return n.call(t, r);
        };
      case 2:
        return function(r, e) {
          return n.call(t, r, e);
        };
      case 3:
        return function(r, e, u) {
          return n.call(t, r, e, u);
        };
      case 4:
        return function(r, e, u, i) {
          return n.call(t, r, e, u, i);
        };
    }
    return function() {
      return n.apply(t, arguments);
    };
  },
      x = function(n, t, r) {
        return null == n ? m.identity : m.isFunction(n) ? b(n, t, r) : m.isObject(n) ? m.matcher(n) : m.property(n);
      };
  m.iteratee = function(n, t) {
    return x(n, t, 1 / 0);
  };
  var _ = function(n, t) {
    return function(r) {
      var e = arguments.length;
      if (2 > e || null == r)
        return r;
      for (var u = 1; e > u; u++)
        for (var i = arguments[u],
            o = n(i),
            a = o.length,
            c = 0; a > c; c++) {
          var f = o[c];
          t && r[f] !== void 0 || (r[f] = i[f]);
        }
      return r;
    };
  },
      j = function(n) {
        if (!m.isObject(n))
          return {};
        if (y)
          return y(n);
        d.prototype = n;
        var t = new d;
        return d.prototype = null, t;
      },
      w = function(n) {
        return function(t) {
          return null == t ? void 0 : t[n];
        };
      },
      A = Math.pow(2, 53) - 1,
      O = w("length"),
      k = function(n) {
        var t = O(n);
        return "number" == typeof t && t >= 0 && A >= t;
      };
  m.each = m.forEach = function(n, t, r) {
    t = b(t, r);
    var e,
        u;
    if (k(n))
      for (e = 0, u = n.length; u > e; e++)
        t(n[e], e, n);
    else {
      var i = m.keys(n);
      for (e = 0, u = i.length; u > e; e++)
        t(n[i[e]], i[e], n);
    }
    return n;
  }, m.map = m.collect = function(n, t, r) {
    t = x(t, r);
    for (var e = !k(n) && m.keys(n),
        u = (e || n).length,
        i = Array(u),
        o = 0; u > o; o++) {
      var a = e ? e[o] : o;
      i[o] = t(n[a], a, n);
    }
    return i;
  }, m.reduce = m.foldl = m.inject = n(1), m.reduceRight = m.foldr = n(-1), m.find = m.detect = function(n, t, r) {
    var e;
    return e = k(n) ? m.findIndex(n, t, r) : m.findKey(n, t, r), e !== void 0 && e !== -1 ? n[e] : void 0;
  }, m.filter = m.select = function(n, t, r) {
    var e = [];
    return t = x(t, r), m.each(n, function(n, r, u) {
      t(n, r, u) && e.push(n);
    }), e;
  }, m.reject = function(n, t, r) {
    return m.filter(n, m.negate(x(t)), r);
  }, m.every = m.all = function(n, t, r) {
    t = x(t, r);
    for (var e = !k(n) && m.keys(n),
        u = (e || n).length,
        i = 0; u > i; i++) {
      var o = e ? e[i] : i;
      if (!t(n[o], o, n))
        return !1;
    }
    return !0;
  }, m.some = m.any = function(n, t, r) {
    t = x(t, r);
    for (var e = !k(n) && m.keys(n),
        u = (e || n).length,
        i = 0; u > i; i++) {
      var o = e ? e[i] : i;
      if (t(n[o], o, n))
        return !0;
    }
    return !1;
  }, m.contains = m.includes = m.include = function(n, t, r, e) {
    return k(n) || (n = m.values(n)), ("number" != typeof r || e) && (r = 0), m.indexOf(n, t, r) >= 0;
  }, m.invoke = function(n, t) {
    var r = l.call(arguments, 2),
        e = m.isFunction(t);
    return m.map(n, function(n) {
      var u = e ? t : n[t];
      return null == u ? u : u.apply(n, r);
    });
  }, m.pluck = function(n, t) {
    return m.map(n, m.property(t));
  }, m.where = function(n, t) {
    return m.filter(n, m.matcher(t));
  }, m.findWhere = function(n, t) {
    return m.find(n, m.matcher(t));
  }, m.max = function(n, t, r) {
    var e,
        u,
        i = -1 / 0,
        o = -1 / 0;
    if (null == t && null != n) {
      n = k(n) ? n : m.values(n);
      for (var a = 0,
          c = n.length; c > a; a++)
        e = n[a], e > i && (i = e);
    } else
      t = x(t, r), m.each(n, function(n, r, e) {
        u = t(n, r, e), (u > o || u === -1 / 0 && i === -1 / 0) && (i = n, o = u);
      });
    return i;
  }, m.min = function(n, t, r) {
    var e,
        u,
        i = 1 / 0,
        o = 1 / 0;
    if (null == t && null != n) {
      n = k(n) ? n : m.values(n);
      for (var a = 0,
          c = n.length; c > a; a++)
        e = n[a], i > e && (i = e);
    } else
      t = x(t, r), m.each(n, function(n, r, e) {
        u = t(n, r, e), (o > u || 1 / 0 === u && 1 / 0 === i) && (i = n, o = u);
      });
    return i;
  }, m.shuffle = function(n) {
    for (var t,
        r = k(n) ? n : m.values(n),
        e = r.length,
        u = Array(e),
        i = 0; e > i; i++)
      t = m.random(0, i), t !== i && (u[i] = u[t]), u[t] = r[i];
    return u;
  }, m.sample = function(n, t, r) {
    return null == t || r ? (k(n) || (n = m.values(n)), n[m.random(n.length - 1)]) : m.shuffle(n).slice(0, Math.max(0, t));
  }, m.sortBy = function(n, t, r) {
    return t = x(t, r), m.pluck(m.map(n, function(n, r, e) {
      return {
        value: n,
        index: r,
        criteria: t(n, r, e)
      };
    }).sort(function(n, t) {
      var r = n.criteria,
          e = t.criteria;
      if (r !== e) {
        if (r > e || r === void 0)
          return 1;
        if (e > r || e === void 0)
          return -1;
      }
      return n.index - t.index;
    }), "value");
  };
  var F = function(n) {
    return function(t, r, e) {
      var u = {};
      return r = x(r, e), m.each(t, function(e, i) {
        var o = r(e, i, t);
        n(u, e, o);
      }), u;
    };
  };
  m.groupBy = F(function(n, t, r) {
    m.has(n, r) ? n[r].push(t) : n[r] = [t];
  }), m.indexBy = F(function(n, t, r) {
    n[r] = t;
  }), m.countBy = F(function(n, t, r) {
    m.has(n, r) ? n[r]++ : n[r] = 1;
  }), m.toArray = function(n) {
    return n ? m.isArray(n) ? l.call(n) : k(n) ? m.map(n, m.identity) : m.values(n) : [];
  }, m.size = function(n) {
    return null == n ? 0 : k(n) ? n.length : m.keys(n).length;
  }, m.partition = function(n, t, r) {
    t = x(t, r);
    var e = [],
        u = [];
    return m.each(n, function(n, r, i) {
      (t(n, r, i) ? e : u).push(n);
    }), [e, u];
  }, m.first = m.head = m.take = function(n, t, r) {
    return null == n ? void 0 : null == t || r ? n[0] : m.initial(n, n.length - t);
  }, m.initial = function(n, t, r) {
    return l.call(n, 0, Math.max(0, n.length - (null == t || r ? 1 : t)));
  }, m.last = function(n, t, r) {
    return null == n ? void 0 : null == t || r ? n[n.length - 1] : m.rest(n, Math.max(0, n.length - t));
  }, m.rest = m.tail = m.drop = function(n, t, r) {
    return l.call(n, null == t || r ? 1 : t);
  }, m.compact = function(n) {
    return m.filter(n, m.identity);
  };
  var S = function(n, t, r, e) {
    for (var u = [],
        i = 0,
        o = e || 0,
        a = O(n); a > o; o++) {
      var c = n[o];
      if (k(c) && (m.isArray(c) || m.isArguments(c))) {
        t || (c = S(c, t, r));
        var f = 0,
            l = c.length;
        for (u.length += l; l > f; )
          u[i++] = c[f++];
      } else
        r || (u[i++] = c);
    }
    return u;
  };
  m.flatten = function(n, t) {
    return S(n, t, !1);
  }, m.without = function(n) {
    return m.difference(n, l.call(arguments, 1));
  }, m.uniq = m.unique = function(n, t, r, e) {
    m.isBoolean(t) || (e = r, r = t, t = !1), null != r && (r = x(r, e));
    for (var u = [],
        i = [],
        o = 0,
        a = O(n); a > o; o++) {
      var c = n[o],
          f = r ? r(c, o, n) : c;
      t ? (o && i === f || u.push(c), i = f) : r ? m.contains(i, f) || (i.push(f), u.push(c)) : m.contains(u, c) || u.push(c);
    }
    return u;
  }, m.union = function() {
    return m.uniq(S(arguments, !0, !0));
  }, m.intersection = function(n) {
    for (var t = [],
        r = arguments.length,
        e = 0,
        u = O(n); u > e; e++) {
      var i = n[e];
      if (!m.contains(t, i)) {
        for (var o = 1; r > o && m.contains(arguments[o], i); o++)
          ;
        o === r && t.push(i);
      }
    }
    return t;
  }, m.difference = function(n) {
    var t = S(arguments, !0, !0, 1);
    return m.filter(n, function(n) {
      return !m.contains(t, n);
    });
  }, m.zip = function() {
    return m.unzip(arguments);
  }, m.unzip = function(n) {
    for (var t = n && m.max(n, O).length || 0,
        r = Array(t),
        e = 0; t > e; e++)
      r[e] = m.pluck(n, e);
    return r;
  }, m.object = function(n, t) {
    for (var r = {},
        e = 0,
        u = O(n); u > e; e++)
      t ? r[n[e]] = t[e] : r[n[e][0]] = n[e][1];
    return r;
  }, m.findIndex = t(1), m.findLastIndex = t(-1), m.sortedIndex = function(n, t, r, e) {
    r = x(r, e, 1);
    for (var u = r(t),
        i = 0,
        o = O(n); o > i; ) {
      var a = Math.floor((i + o) / 2);
      r(n[a]) < u ? i = a + 1 : o = a;
    }
    return i;
  }, m.indexOf = r(1, m.findIndex, m.sortedIndex), m.lastIndexOf = r(-1, m.findLastIndex), m.range = function(n, t, r) {
    null == t && (t = n || 0, n = 0), r = r || 1;
    for (var e = Math.max(Math.ceil((t - n) / r), 0),
        u = Array(e),
        i = 0; e > i; i++, n += r)
      u[i] = n;
    return u;
  };
  var E = function(n, t, r, e, u) {
    if (!(e instanceof t))
      return n.apply(r, u);
    var i = j(n.prototype),
        o = n.apply(i, u);
    return m.isObject(o) ? o : i;
  };
  m.bind = function(n, t) {
    if (g && n.bind === g)
      return g.apply(n, l.call(arguments, 1));
    if (!m.isFunction(n))
      throw new TypeError("Bind must be called on a function");
    var r = l.call(arguments, 2),
        e = function() {
          return E(n, e, t, this, r.concat(l.call(arguments)));
        };
    return e;
  }, m.partial = function(n) {
    var t = l.call(arguments, 1),
        r = function() {
          for (var e = 0,
              u = t.length,
              i = Array(u),
              o = 0; u > o; o++)
            i[o] = t[o] === m ? arguments[e++] : t[o];
          for (; e < arguments.length; )
            i.push(arguments[e++]);
          return E(n, r, this, this, i);
        };
    return r;
  }, m.bindAll = function(n) {
    var t,
        r,
        e = arguments.length;
    if (1 >= e)
      throw new Error("bindAll must be passed function names");
    for (t = 1; e > t; t++)
      r = arguments[t], n[r] = m.bind(n[r], n);
    return n;
  }, m.memoize = function(n, t) {
    var r = function(e) {
      var u = r.cache,
          i = "" + (t ? t.apply(this, arguments) : e);
      return m.has(u, i) || (u[i] = n.apply(this, arguments)), u[i];
    };
    return r.cache = {}, r;
  }, m.delay = function(n, t) {
    var r = l.call(arguments, 2);
    return setTimeout(function() {
      return n.apply(null, r);
    }, t);
  }, m.defer = m.partial(m.delay, m, 1), m.throttle = function(n, t, r) {
    var e,
        u,
        i,
        o = null,
        a = 0;
    r || (r = {});
    var c = function() {
      a = r.leading === !1 ? 0 : m.now(), o = null, i = n.apply(e, u), o || (e = u = null);
    };
    return function() {
      var f = m.now();
      a || r.leading !== !1 || (a = f);
      var l = t - (f - a);
      return e = this, u = arguments, 0 >= l || l > t ? (o && (clearTimeout(o), o = null), a = f, i = n.apply(e, u), o || (e = u = null)) : o || r.trailing === !1 || (o = setTimeout(c, l)), i;
    };
  }, m.debounce = function(n, t, r) {
    var e,
        u,
        i,
        o,
        a,
        c = function() {
          var f = m.now() - o;
          t > f && f >= 0 ? e = setTimeout(c, t - f) : (e = null, r || (a = n.apply(i, u), e || (i = u = null)));
        };
    return function() {
      i = this, u = arguments, o = m.now();
      var f = r && !e;
      return e || (e = setTimeout(c, t)), f && (a = n.apply(i, u), i = u = null), a;
    };
  }, m.wrap = function(n, t) {
    return m.partial(t, n);
  }, m.negate = function(n) {
    return function() {
      return !n.apply(this, arguments);
    };
  }, m.compose = function() {
    var n = arguments,
        t = n.length - 1;
    return function() {
      for (var r = t,
          e = n[t].apply(this, arguments); r--; )
        e = n[r].call(this, e);
      return e;
    };
  }, m.after = function(n, t) {
    return function() {
      return --n < 1 ? t.apply(this, arguments) : void 0;
    };
  }, m.before = function(n, t) {
    var r;
    return function() {
      return --n > 0 && (r = t.apply(this, arguments)), 1 >= n && (t = null), r;
    };
  }, m.once = m.partial(m.before, 2);
  var M = !{toString: null}.propertyIsEnumerable("toString"),
      I = ["valueOf", "isPrototypeOf", "toString", "propertyIsEnumerable", "hasOwnProperty", "toLocaleString"];
  m.keys = function(n) {
    if (!m.isObject(n))
      return [];
    if (v)
      return v(n);
    var t = [];
    for (var r in n)
      m.has(n, r) && t.push(r);
    return M && e(n, t), t;
  }, m.allKeys = function(n) {
    if (!m.isObject(n))
      return [];
    var t = [];
    for (var r in n)
      t.push(r);
    return M && e(n, t), t;
  }, m.values = function(n) {
    for (var t = m.keys(n),
        r = t.length,
        e = Array(r),
        u = 0; r > u; u++)
      e[u] = n[t[u]];
    return e;
  }, m.mapObject = function(n, t, r) {
    t = x(t, r);
    for (var e,
        u = m.keys(n),
        i = u.length,
        o = {},
        a = 0; i > a; a++)
      e = u[a], o[e] = t(n[e], e, n);
    return o;
  }, m.pairs = function(n) {
    for (var t = m.keys(n),
        r = t.length,
        e = Array(r),
        u = 0; r > u; u++)
      e[u] = [t[u], n[t[u]]];
    return e;
  }, m.invert = function(n) {
    for (var t = {},
        r = m.keys(n),
        e = 0,
        u = r.length; u > e; e++)
      t[n[r[e]]] = r[e];
    return t;
  }, m.functions = m.methods = function(n) {
    var t = [];
    for (var r in n)
      m.isFunction(n[r]) && t.push(r);
    return t.sort();
  }, m.extend = _(m.allKeys), m.extendOwn = m.assign = _(m.keys), m.findKey = function(n, t, r) {
    t = x(t, r);
    for (var e,
        u = m.keys(n),
        i = 0,
        o = u.length; o > i; i++)
      if (e = u[i], t(n[e], e, n))
        return e;
  }, m.pick = function(n, t, r) {
    var e,
        u,
        i = {},
        o = n;
    if (null == o)
      return i;
    m.isFunction(t) ? (u = m.allKeys(o), e = b(t, r)) : (u = S(arguments, !1, !1, 1), e = function(n, t, r) {
      return t in r;
    }, o = Object(o));
    for (var a = 0,
        c = u.length; c > a; a++) {
      var f = u[a],
          l = o[f];
      e(l, f, o) && (i[f] = l);
    }
    return i;
  }, m.omit = function(n, t, r) {
    if (m.isFunction(t))
      t = m.negate(t);
    else {
      var e = m.map(S(arguments, !1, !1, 1), String);
      t = function(n, t) {
        return !m.contains(e, t);
      };
    }
    return m.pick(n, t, r);
  }, m.defaults = _(m.allKeys, !0), m.create = function(n, t) {
    var r = j(n);
    return t && m.extendOwn(r, t), r;
  }, m.clone = function(n) {
    return m.isObject(n) ? m.isArray(n) ? n.slice() : m.extend({}, n) : n;
  }, m.tap = function(n, t) {
    return t(n), n;
  }, m.isMatch = function(n, t) {
    var r = m.keys(t),
        e = r.length;
    if (null == n)
      return !e;
    for (var u = Object(n),
        i = 0; e > i; i++) {
      var o = r[i];
      if (t[o] !== u[o] || !(o in u))
        return !1;
    }
    return !0;
  };
  var N = function(n, t, r, e) {
    if (n === t)
      return 0 !== n || 1 / n === 1 / t;
    if (null == n || null == t)
      return n === t;
    n instanceof m && (n = n._wrapped), t instanceof m && (t = t._wrapped);
    var u = s.call(n);
    if (u !== s.call(t))
      return !1;
    switch (u) {
      case "[object RegExp]":
      case "[object String]":
        return "" + n == "" + t;
      case "[object Number]":
        return +n !== +n ? +t !== +t : 0 === +n ? 1 / +n === 1 / t : +n === +t;
      case "[object Date]":
      case "[object Boolean]":
        return +n === +t;
    }
    var i = "[object Array]" === u;
    if (!i) {
      if ("object" != typeof n || "object" != typeof t)
        return !1;
      var o = n.constructor,
          a = t.constructor;
      if (o !== a && !(m.isFunction(o) && o instanceof o && m.isFunction(a) && a instanceof a) && "constructor" in n && "constructor" in t)
        return !1;
    }
    r = r || [], e = e || [];
    for (var c = r.length; c--; )
      if (r[c] === n)
        return e[c] === t;
    if (r.push(n), e.push(t), i) {
      if (c = n.length, c !== t.length)
        return !1;
      for (; c--; )
        if (!N(n[c], t[c], r, e))
          return !1;
    } else {
      var f,
          l = m.keys(n);
      if (c = l.length, m.keys(t).length !== c)
        return !1;
      for (; c--; )
        if (f = l[c], !m.has(t, f) || !N(n[f], t[f], r, e))
          return !1;
    }
    return r.pop(), e.pop(), !0;
  };
  m.isEqual = function(n, t) {
    return N(n, t);
  }, m.isEmpty = function(n) {
    return null == n ? !0 : k(n) && (m.isArray(n) || m.isString(n) || m.isArguments(n)) ? 0 === n.length : 0 === m.keys(n).length;
  }, m.isElement = function(n) {
    return !(!n || 1 !== n.nodeType);
  }, m.isArray = h || function(n) {
    return "[object Array]" === s.call(n);
  }, m.isObject = function(n) {
    var t = typeof n;
    return "function" === t || "object" === t && !!n;
  }, m.each(["Arguments", "Function", "String", "Number", "Date", "RegExp", "Error"], function(n) {
    m["is" + n] = function(t) {
      return s.call(t) === "[object " + n + "]";
    };
  }), m.isArguments(arguments) || (m.isArguments = function(n) {
    return m.has(n, "callee");
  }), "function" != typeof/./ && "object" != typeof Int8Array && (m.isFunction = function(n) {
    return "function" == typeof n || !1;
  }), m.isFinite = function(n) {
    return isFinite(n) && !isNaN(parseFloat(n));
  }, m.isNaN = function(n) {
    return m.isNumber(n) && n !== +n;
  }, m.isBoolean = function(n) {
    return n === !0 || n === !1 || "[object Boolean]" === s.call(n);
  }, m.isNull = function(n) {
    return null === n;
  }, m.isUndefined = function(n) {
    return n === void 0;
  }, m.has = function(n, t) {
    return null != n && p.call(n, t);
  }, m.noConflict = function() {
    return u._ = i, this;
  }, m.identity = function(n) {
    return n;
  }, m.constant = function(n) {
    return function() {
      return n;
    };
  }, m.noop = function() {}, m.property = w, m.propertyOf = function(n) {
    return null == n ? function() {} : function(t) {
      return n[t];
    };
  }, m.matcher = m.matches = function(n) {
    return n = m.extendOwn({}, n), function(t) {
      return m.isMatch(t, n);
    };
  }, m.times = function(n, t, r) {
    var e = Array(Math.max(0, n));
    t = b(t, r, 1);
    for (var u = 0; n > u; u++)
      e[u] = t(u);
    return e;
  }, m.random = function(n, t) {
    return null == t && (t = n, n = 0), n + Math.floor(Math.random() * (t - n + 1));
  }, m.now = Date.now || function() {
    return (new Date).getTime();
  };
  var B = {
    "&": "&amp;",
    "<": "&lt;",
    ">": "&gt;",
    '"': "&quot;",
    "'": "&#x27;",
    "`": "&#x60;"
  },
      T = m.invert(B),
      R = function(n) {
        var t = function(t) {
          return n[t];
        },
            r = "(?:" + m.keys(n).join("|") + ")",
            e = RegExp(r),
            u = RegExp(r, "g");
        return function(n) {
          return n = null == n ? "" : "" + n, e.test(n) ? n.replace(u, t) : n;
        };
      };
  m.escape = R(B), m.unescape = R(T), m.result = function(n, t, r) {
    var e = null == n ? void 0 : n[t];
    return e === void 0 && (e = r), m.isFunction(e) ? e.call(n) : e;
  };
  var q = 0;
  m.uniqueId = function(n) {
    var t = ++q + "";
    return n ? n + t : t;
  }, m.templateSettings = {
    evaluate: /<%([\s\S]+?)%>/g,
    interpolate: /<%=([\s\S]+?)%>/g,
    escape: /<%-([\s\S]+?)%>/g
  };
  var K = /(.)^/,
      z = {
        "'": "'",
        "\\": "\\",
        "\r": "r",
        "\n": "n",
        "\u2028": "u2028",
        "\u2029": "u2029"
      },
      D = /\\|'|\r|\n|\u2028|\u2029/g,
      L = function(n) {
        return "\\" + z[n];
      };
  m.template = function(n, t, r) {
    !t && r && (t = r), t = m.defaults({}, t, m.templateSettings);
    var e = RegExp([(t.escape || K).source, (t.interpolate || K).source, (t.evaluate || K).source].join("|") + "|$", "g"),
        u = 0,
        i = "__p+='";
    n.replace(e, function(t, r, e, o, a) {
      return i += n.slice(u, a).replace(D, L), u = a + t.length, r ? i += "'+\n((__t=(" + r + "))==null?'':_.escape(__t))+\n'" : e ? i += "'+\n((__t=(" + e + "))==null?'':__t)+\n'" : o && (i += "';\n" + o + "\n__p+='"), t;
    }), i += "';\n", t.variable || (i = "with(obj||{}){\n" + i + "}\n"), i = "var __t,__p='',__j=Array.prototype.join," + "print=function(){__p+=__j.call(arguments,'');};\n" + i + "return __p;\n";
    try {
      var o = new Function(t.variable || "obj", "_", i);
    } catch (a) {
      throw a.source = i, a;
    }
    var c = function(n) {
      return o.call(this, n, m);
    },
        f = t.variable || "obj";
    return c.source = "function(" + f + "){\n" + i + "}", c;
  }, m.chain = function(n) {
    var t = m(n);
    return t._chain = !0, t;
  };
  var P = function(n, t) {
    return n._chain ? m(t).chain() : t;
  };
  m.mixin = function(n) {
    m.each(m.functions(n), function(t) {
      var r = m[t] = n[t];
      m.prototype[t] = function() {
        var n = [this._wrapped];
        return f.apply(n, arguments), P(this, r.apply(m, n));
      };
    });
  }, m.mixin(m), m.each(["pop", "push", "reverse", "shift", "sort", "splice", "unshift"], function(n) {
    var t = o[n];
    m.prototype[n] = function() {
      var r = this._wrapped;
      return t.apply(r, arguments), "shift" !== n && "splice" !== n || 0 !== r.length || delete r[0], P(this, r);
    };
  }), m.each(["concat", "join", "slice"], function(n) {
    var t = o[n];
    m.prototype[n] = function() {
      return P(this, t.apply(this._wrapped, arguments));
    };
  }), m.prototype.value = function() {
    return this._wrapped;
  }, m.prototype.valueOf = m.prototype.toJSON = m.prototype.value, m.prototype.toString = function() {
    return "" + this._wrapped;
  }, "function" == typeof define && define.amd && define("6", [], function() {
    return m;
  });
}).call(this);

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
(function(e) {
  "function" == typeof define && define.amd ? define("21", ["5"], e) : e(jQuery);
})(function(e) {
  function t(t, s) {
    var n,
        a,
        o,
        r = t.nodeName.toLowerCase();
    return "area" === r ? (n = t.parentNode, a = n.name, t.href && a && "map" === n.nodeName.toLowerCase() ? (o = e("img[usemap='#" + a + "']")[0], !!o && i(o)) : !1) : (/^(input|select|textarea|button|object)$/.test(r) ? !t.disabled : "a" === r ? t.href || s : s) && i(t);
  }
  function i(t) {
    return e.expr.filters.visible(t) && !e(t).parents().addBack().filter(function() {
      return "hidden" === e.css(this, "visibility");
    }).length;
  }
  function s(e) {
    for (var t,
        i; e.length && e[0] !== document; ) {
      if (t = e.css("position"), ("absolute" === t || "relative" === t || "fixed" === t) && (i = parseInt(e.css("zIndex"), 10), !isNaN(i) && 0 !== i))
        return i;
      e = e.parent();
    }
    return 0;
  }
  function n() {
    this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = {
      closeText: "Done",
      prevText: "Prev",
      nextText: "Next",
      currentText: "Today",
      monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
      dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
      weekHeader: "Wk",
      dateFormat: "mm/dd/yy",
      firstDay: 0,
      isRTL: !1,
      showMonthAfterYear: !1,
      yearSuffix: ""
    }, this._defaults = {
      showOn: "focus",
      showAnim: "fadeIn",
      showOptions: {},
      defaultDate: null,
      appendText: "",
      buttonText: "...",
      buttonImage: "",
      buttonImageOnly: !1,
      hideIfNoPrevNext: !1,
      navigationAsDateFormat: !1,
      gotoCurrent: !1,
      changeMonth: !1,
      changeYear: !1,
      yearRange: "c-10:c+10",
      showOtherMonths: !1,
      selectOtherMonths: !1,
      showWeek: !1,
      calculateWeek: this.iso8601Week,
      shortYearCutoff: "+10",
      minDate: null,
      maxDate: null,
      duration: "fast",
      beforeShowDay: null,
      beforeShow: null,
      onSelect: null,
      onChangeMonthYear: null,
      onClose: null,
      numberOfMonths: 1,
      showCurrentAtPos: 0,
      stepMonths: 1,
      stepBigMonths: 12,
      altField: "",
      altFormat: "",
      constrainInput: !0,
      showButtonPanel: !1,
      autoSize: !1,
      disabled: !1
    }, e.extend(this._defaults, this.regional[""]), this.regional.en = e.extend(!0, {}, this.regional[""]), this.regional["en-US"] = e.extend(!0, {}, this.regional.en), this.dpDiv = a(e("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"));
  }
  function a(t) {
    var i = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
    return t.delegate(i, "mouseout", function() {
      e(this).removeClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && e(this).removeClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && e(this).removeClass("ui-datepicker-next-hover");
    }).delegate(i, "mouseover", o);
  }
  function o() {
    e.datepicker._isDisabledDatepicker(v.inline ? v.dpDiv.parent()[0] : v.input[0]) || (e(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), e(this).addClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && e(this).addClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && e(this).addClass("ui-datepicker-next-hover"));
  }
  function r(t, i) {
    e.extend(t, i);
    for (var s in i)
      null == i[s] && (t[s] = i[s]);
    return t;
  }
  function h(e) {
    return function() {
      var t = this.element.val();
      e.apply(this, arguments), this._refresh(), t !== this.element.val() && this._trigger("change");
    };
  }
  e.ui = e.ui || {}, e.extend(e.ui, {
    version: "1.11.4",
    keyCode: {
      BACKSPACE: 8,
      COMMA: 188,
      DELETE: 46,
      DOWN: 40,
      END: 35,
      ENTER: 13,
      ESCAPE: 27,
      HOME: 36,
      LEFT: 37,
      PAGE_DOWN: 34,
      PAGE_UP: 33,
      PERIOD: 190,
      RIGHT: 39,
      SPACE: 32,
      TAB: 9,
      UP: 38
    }
  }), e.fn.extend({
    scrollParent: function(t) {
      var i = this.css("position"),
          s = "absolute" === i,
          n = t ? /(auto|scroll|hidden)/ : /(auto|scroll)/,
          a = this.parents().filter(function() {
            var t = e(this);
            return s && "static" === t.css("position") ? !1 : n.test(t.css("overflow") + t.css("overflow-y") + t.css("overflow-x"));
          }).eq(0);
      return "fixed" !== i && a.length ? a : e(this[0].ownerDocument || document);
    },
    uniqueId: function() {
      var e = 0;
      return function() {
        return this.each(function() {
          this.id || (this.id = "ui-id-" + ++e);
        });
      };
    }(),
    removeUniqueId: function() {
      return this.each(function() {
        /^ui-id-\d+$/.test(this.id) && e(this).removeAttr("id");
      });
    }
  }), e.extend(e.expr[":"], {
    data: e.expr.createPseudo ? e.expr.createPseudo(function(t) {
      return function(i) {
        return !!e.data(i, t);
      };
    }) : function(t, i, s) {
      return !!e.data(t, s[3]);
    },
    focusable: function(i) {
      return t(i, !isNaN(e.attr(i, "tabindex")));
    },
    tabbable: function(i) {
      var s = e.attr(i, "tabindex"),
          n = isNaN(s);
      return (n || s >= 0) && t(i, !n);
    }
  }), e("<a>").outerWidth(1).jquery || e.each(["Width", "Height"], function(t, i) {
    function s(t, i, s, a) {
      return e.each(n, function() {
        i -= parseFloat(e.css(t, "padding" + this)) || 0, s && (i -= parseFloat(e.css(t, "border" + this + "Width")) || 0), a && (i -= parseFloat(e.css(t, "margin" + this)) || 0);
      }), i;
    }
    var n = "Width" === i ? ["Left", "Right"] : ["Top", "Bottom"],
        a = i.toLowerCase(),
        o = {
          innerWidth: e.fn.innerWidth,
          innerHeight: e.fn.innerHeight,
          outerWidth: e.fn.outerWidth,
          outerHeight: e.fn.outerHeight
        };
    e.fn["inner" + i] = function(t) {
      return void 0 === t ? o["inner" + i].call(this) : this.each(function() {
        e(this).css(a, s(this, t) + "px");
      });
    }, e.fn["outer" + i] = function(t, n) {
      return "number" != typeof t ? o["outer" + i].call(this, t) : this.each(function() {
        e(this).css(a, s(this, t, !0, n) + "px");
      });
    };
  }), e.fn.addBack || (e.fn.addBack = function(e) {
    return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
  }), e("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (e.fn.removeData = function(t) {
    return function(i) {
      return arguments.length ? t.call(this, e.camelCase(i)) : t.call(this);
    };
  }(e.fn.removeData)), e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), e.fn.extend({
    focus: function(t) {
      return function(i, s) {
        return "number" == typeof i ? this.each(function() {
          var t = this;
          setTimeout(function() {
            e(t).focus(), s && s.call(t);
          }, i);
        }) : t.apply(this, arguments);
      };
    }(e.fn.focus),
    disableSelection: function() {
      var e = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
      return function() {
        return this.bind(e + ".ui-disableSelection", function(e) {
          e.preventDefault();
        });
      };
    }(),
    enableSelection: function() {
      return this.unbind(".ui-disableSelection");
    },
    zIndex: function(t) {
      if (void 0 !== t)
        return this.css("zIndex", t);
      if (this.length)
        for (var i,
            s,
            n = e(this[0]); n.length && n[0] !== document; ) {
          if (i = n.css("position"), ("absolute" === i || "relative" === i || "fixed" === i) && (s = parseInt(n.css("zIndex"), 10), !isNaN(s) && 0 !== s))
            return s;
          n = n.parent();
        }
      return 0;
    }
  }), e.ui.plugin = {
    add: function(t, i, s) {
      var n,
          a = e.ui[t].prototype;
      for (n in s)
        a.plugins[n] = a.plugins[n] || [], a.plugins[n].push([i, s[n]]);
    },
    call: function(e, t, i, s) {
      var n,
          a = e.plugins[t];
      if (a && (s || e.element[0].parentNode && 11 !== e.element[0].parentNode.nodeType))
        for (n = 0; a.length > n; n++)
          e.options[a[n][0]] && a[n][1].apply(e.element, i);
    }
  };
  var l = 0,
      u = Array.prototype.slice;
  e.cleanData = function(t) {
    return function(i) {
      var s,
          n,
          a;
      for (a = 0; null != (n = i[a]); a++)
        try {
          s = e._data(n, "events"), s && s.remove && e(n).triggerHandler("remove");
        } catch (o) {}
      t(i);
    };
  }(e.cleanData), e.widget = function(t, i, s) {
    var n,
        a,
        o,
        r,
        h = {},
        l = t.split(".")[0];
    return t = t.split(".")[1], n = l + "-" + t, s || (s = i, i = e.Widget), e.expr[":"][n.toLowerCase()] = function(t) {
      return !!e.data(t, n);
    }, e[l] = e[l] || {}, a = e[l][t], o = e[l][t] = function(e, t) {
      return this._createWidget ? (arguments.length && this._createWidget(e, t), void 0) : new o(e, t);
    }, e.extend(o, a, {
      version: s.version,
      _proto: e.extend({}, s),
      _childConstructors: []
    }), r = new i, r.options = e.widget.extend({}, r.options), e.each(s, function(t, s) {
      return e.isFunction(s) ? (h[t] = function() {
        var e = function() {
          return i.prototype[t].apply(this, arguments);
        },
            n = function(e) {
              return i.prototype[t].apply(this, e);
            };
        return function() {
          var t,
              i = this._super,
              a = this._superApply;
          return this._super = e, this._superApply = n, t = s.apply(this, arguments), this._super = i, this._superApply = a, t;
        };
      }(), void 0) : (h[t] = s, void 0);
    }), o.prototype = e.widget.extend(r, {widgetEventPrefix: a ? r.widgetEventPrefix || t : t}, h, {
      constructor: o,
      namespace: l,
      widgetName: t,
      widgetFullName: n
    }), a ? (e.each(a._childConstructors, function(t, i) {
      var s = i.prototype;
      e.widget(s.namespace + "." + s.widgetName, o, i._proto);
    }), delete a._childConstructors) : i._childConstructors.push(o), e.widget.bridge(t, o), o;
  }, e.widget.extend = function(t) {
    for (var i,
        s,
        n = u.call(arguments, 1),
        a = 0,
        o = n.length; o > a; a++)
      for (i in n[a])
        s = n[a][i], n[a].hasOwnProperty(i) && void 0 !== s && (t[i] = e.isPlainObject(s) ? e.isPlainObject(t[i]) ? e.widget.extend({}, t[i], s) : e.widget.extend({}, s) : s);
    return t;
  }, e.widget.bridge = function(t, i) {
    var s = i.prototype.widgetFullName || t;
    e.fn[t] = function(n) {
      var a = "string" == typeof n,
          o = u.call(arguments, 1),
          r = this;
      return a ? this.each(function() {
        var i,
            a = e.data(this, s);
        return "instance" === n ? (r = a, !1) : a ? e.isFunction(a[n]) && "_" !== n.charAt(0) ? (i = a[n].apply(a, o), i !== a && void 0 !== i ? (r = i && i.jquery ? r.pushStack(i.get()) : i, !1) : void 0) : e.error("no such method '" + n + "' for " + t + " widget instance") : e.error("cannot call methods on " + t + " prior to initialization; " + "attempted to call method '" + n + "'");
      }) : (o.length && (n = e.widget.extend.apply(null, [n].concat(o))), this.each(function() {
        var t = e.data(this, s);
        t ? (t.option(n || {}), t._init && t._init()) : e.data(this, s, new i(n, this));
      })), r;
    };
  }, e.Widget = function() {}, e.Widget._childConstructors = [], e.Widget.prototype = {
    widgetName: "widget",
    widgetEventPrefix: "",
    defaultElement: "<div>",
    options: {
      disabled: !1,
      create: null
    },
    _createWidget: function(t, i) {
      i = e(i || this.defaultElement || this)[0], this.element = e(i), this.uuid = l++, this.eventNamespace = "." + this.widgetName + this.uuid, this.bindings = e(), this.hoverable = e(), this.focusable = e(), i !== this && (e.data(i, this.widgetFullName, this), this._on(!0, this.element, {remove: function(e) {
          e.target === i && this.destroy();
        }}), this.document = e(i.style ? i.ownerDocument : i.document || i), this.window = e(this.document[0].defaultView || this.document[0].parentWindow)), this.options = e.widget.extend({}, this.options, this._getCreateOptions(), t), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init();
    },
    _getCreateOptions: e.noop,
    _getCreateEventData: e.noop,
    _create: e.noop,
    _init: e.noop,
    destroy: function() {
      this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled " + "ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus");
    },
    _destroy: e.noop,
    widget: function() {
      return this.element;
    },
    option: function(t, i) {
      var s,
          n,
          a,
          o = t;
      if (0 === arguments.length)
        return e.widget.extend({}, this.options);
      if ("string" == typeof t)
        if (o = {}, s = t.split("."), t = s.shift(), s.length) {
          for (n = o[t] = e.widget.extend({}, this.options[t]), a = 0; s.length - 1 > a; a++)
            n[s[a]] = n[s[a]] || {}, n = n[s[a]];
          if (t = s.pop(), 1 === arguments.length)
            return void 0 === n[t] ? null : n[t];
          n[t] = i;
        } else {
          if (1 === arguments.length)
            return void 0 === this.options[t] ? null : this.options[t];
          o[t] = i;
        }
      return this._setOptions(o), this;
    },
    _setOptions: function(e) {
      var t;
      for (t in e)
        this._setOption(t, e[t]);
      return this;
    },
    _setOption: function(e, t) {
      return this.options[e] = t, "disabled" === e && (this.widget().toggleClass(this.widgetFullName + "-disabled", !!t), t && (this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus"))), this;
    },
    enable: function() {
      return this._setOptions({disabled: !1});
    },
    disable: function() {
      return this._setOptions({disabled: !0});
    },
    _on: function(t, i, s) {
      var n,
          a = this;
      "boolean" != typeof t && (s = i, i = t, t = !1), s ? (i = n = e(i), this.bindings = this.bindings.add(i)) : (s = i, i = this.element, n = this.widget()), e.each(s, function(s, o) {
        function r() {
          return t || a.options.disabled !== !0 && !e(this).hasClass("ui-state-disabled") ? ("string" == typeof o ? a[o] : o).apply(a, arguments) : void 0;
        }
        "string" != typeof o && (r.guid = o.guid = o.guid || r.guid || e.guid++);
        var h = s.match(/^([\w:-]*)\s*(.*)$/),
            l = h[1] + a.eventNamespace,
            u = h[2];
        u ? n.delegate(u, l, r) : i.bind(l, r);
      });
    },
    _off: function(t, i) {
      i = (i || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, t.unbind(i).undelegate(i), this.bindings = e(this.bindings.not(t).get()), this.focusable = e(this.focusable.not(t).get()), this.hoverable = e(this.hoverable.not(t).get());
    },
    _delay: function(e, t) {
      function i() {
        return ("string" == typeof e ? s[e] : e).apply(s, arguments);
      }
      var s = this;
      return setTimeout(i, t || 0);
    },
    _hoverable: function(t) {
      this.hoverable = this.hoverable.add(t), this._on(t, {
        mouseenter: function(t) {
          e(t.currentTarget).addClass("ui-state-hover");
        },
        mouseleave: function(t) {
          e(t.currentTarget).removeClass("ui-state-hover");
        }
      });
    },
    _focusable: function(t) {
      this.focusable = this.focusable.add(t), this._on(t, {
        focusin: function(t) {
          e(t.currentTarget).addClass("ui-state-focus");
        },
        focusout: function(t) {
          e(t.currentTarget).removeClass("ui-state-focus");
        }
      });
    },
    _trigger: function(t, i, s) {
      var n,
          a,
          o = this.options[t];
      if (s = s || {}, i = e.Event(i), i.type = (t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t).toLowerCase(), i.target = this.element[0], a = i.originalEvent)
        for (n in a)
          n in i || (i[n] = a[n]);
      return this.element.trigger(i, s), !(e.isFunction(o) && o.apply(this.element[0], [i].concat(s)) === !1 || i.isDefaultPrevented());
    }
  }, e.each({
    show: "fadeIn",
    hide: "fadeOut"
  }, function(t, i) {
    e.Widget.prototype["_" + t] = function(s, n, a) {
      "string" == typeof n && (n = {effect: n});
      var o,
          r = n ? n === !0 || "number" == typeof n ? i : n.effect || i : t;
      n = n || {}, "number" == typeof n && (n = {duration: n}), o = !e.isEmptyObject(n), n.complete = a, n.delay && s.delay(n.delay), o && e.effects && e.effects.effect[r] ? s[t](n) : r !== t && s[r] ? s[r](n.duration, n.easing, a) : s.queue(function(i) {
        e(this)[t](), a && a.call(s[0]), i();
      });
    };
  }), e.widget;
  var d = !1;
  e(document).mouseup(function() {
    d = !1;
  }), e.widget("ui.mouse", {
    version: "1.11.4",
    options: {
      cancel: "input,textarea,button,select,option",
      distance: 1,
      delay: 0
    },
    _mouseInit: function() {
      var t = this;
      this.element.bind("mousedown." + this.widgetName, function(e) {
        return t._mouseDown(e);
      }).bind("click." + this.widgetName, function(i) {
        return !0 === e.data(i.target, t.widgetName + ".preventClickEvent") ? (e.removeData(i.target, t.widgetName + ".preventClickEvent"), i.stopImmediatePropagation(), !1) : void 0;
      }), this.started = !1;
    },
    _mouseDestroy: function() {
      this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
    },
    _mouseDown: function(t) {
      if (!d) {
        this._mouseMoved = !1, this._mouseStarted && this._mouseUp(t), this._mouseDownEvent = t;
        var i = this,
            s = 1 === t.which,
            n = "string" == typeof this.options.cancel && t.target.nodeName ? e(t.target).closest(this.options.cancel).length : !1;
        return s && !n && this._mouseCapture(t) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
          i.mouseDelayMet = !0;
        }, this.options.delay)), this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = this._mouseStart(t) !== !1, !this._mouseStarted) ? (t.preventDefault(), !0) : (!0 === e.data(t.target, this.widgetName + ".preventClickEvent") && e.removeData(t.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function(e) {
          return i._mouseMove(e);
        }, this._mouseUpDelegate = function(e) {
          return i._mouseUp(e);
        }, this.document.bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), t.preventDefault(), d = !0, !0)) : !0;
      }
    },
    _mouseMove: function(t) {
      if (this._mouseMoved) {
        if (e.ui.ie && (!document.documentMode || 9 > document.documentMode) && !t.button)
          return this._mouseUp(t);
        if (!t.which)
          return this._mouseUp(t);
      }
      return (t.which || t.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(t), t.preventDefault()) : (this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, t) !== !1, this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)), !this._mouseStarted);
    },
    _mouseUp: function(t) {
      return this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, t.target === this._mouseDownEvent.target && e.data(t.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(t)), d = !1, !1;
    },
    _mouseDistanceMet: function(e) {
      return Math.max(Math.abs(this._mouseDownEvent.pageX - e.pageX), Math.abs(this._mouseDownEvent.pageY - e.pageY)) >= this.options.distance;
    },
    _mouseDelayMet: function() {
      return this.mouseDelayMet;
    },
    _mouseStart: function() {},
    _mouseDrag: function() {},
    _mouseStop: function() {},
    _mouseCapture: function() {
      return !0;
    }
  }), function() {
    function t(e, t, i) {
      return [parseFloat(e[0]) * (p.test(e[0]) ? t / 100 : 1), parseFloat(e[1]) * (p.test(e[1]) ? i / 100 : 1)];
    }
    function i(t, i) {
      return parseInt(e.css(t, i), 10) || 0;
    }
    function s(t) {
      var i = t[0];
      return 9 === i.nodeType ? {
        width: t.width(),
        height: t.height(),
        offset: {
          top: 0,
          left: 0
        }
      } : e.isWindow(i) ? {
        width: t.width(),
        height: t.height(),
        offset: {
          top: t.scrollTop(),
          left: t.scrollLeft()
        }
      } : i.preventDefault ? {
        width: 0,
        height: 0,
        offset: {
          top: i.pageY,
          left: i.pageX
        }
      } : {
        width: t.outerWidth(),
        height: t.outerHeight(),
        offset: t.offset()
      };
    }
    e.ui = e.ui || {};
    var n,
        a,
        o = Math.max,
        r = Math.abs,
        h = Math.round,
        l = /left|center|right/,
        u = /top|center|bottom/,
        d = /[\+\-]\d+(\.[\d]+)?%?/,
        c = /^\w+/,
        p = /%$/,
        f = e.fn.position;
    e.position = {
      scrollbarWidth: function() {
        if (void 0 !== n)
          return n;
        var t,
            i,
            s = e("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"),
            a = s.children()[0];
        return e("body").append(s), t = a.offsetWidth, s.css("overflow", "scroll"), i = a.offsetWidth, t === i && (i = s[0].clientWidth), s.remove(), n = t - i;
      },
      getScrollInfo: function(t) {
        var i = t.isWindow || t.isDocument ? "" : t.element.css("overflow-x"),
            s = t.isWindow || t.isDocument ? "" : t.element.css("overflow-y"),
            n = "scroll" === i || "auto" === i && t.width < t.element[0].scrollWidth,
            a = "scroll" === s || "auto" === s && t.height < t.element[0].scrollHeight;
        return {
          width: a ? e.position.scrollbarWidth() : 0,
          height: n ? e.position.scrollbarWidth() : 0
        };
      },
      getWithinInfo: function(t) {
        var i = e(t || window),
            s = e.isWindow(i[0]),
            n = !!i[0] && 9 === i[0].nodeType;
        return {
          element: i,
          isWindow: s,
          isDocument: n,
          offset: i.offset() || {
            left: 0,
            top: 0
          },
          scrollLeft: i.scrollLeft(),
          scrollTop: i.scrollTop(),
          width: s || n ? i.width() : i.outerWidth(),
          height: s || n ? i.height() : i.outerHeight()
        };
      }
    }, e.fn.position = function(n) {
      if (!n || !n.of)
        return f.apply(this, arguments);
      n = e.extend({}, n);
      var p,
          m,
          g,
          v,
          y,
          b,
          _ = e(n.of),
          x = e.position.getWithinInfo(n.within),
          w = e.position.getScrollInfo(x),
          k = (n.collision || "flip").split(" "),
          T = {};
      return b = s(_), _[0].preventDefault && (n.at = "left top"), m = b.width, g = b.height, v = b.offset, y = e.extend({}, v), e.each(["my", "at"], function() {
        var e,
            t,
            i = (n[this] || "").split(" ");
        1 === i.length && (i = l.test(i[0]) ? i.concat(["center"]) : u.test(i[0]) ? ["center"].concat(i) : ["center", "center"]), i[0] = l.test(i[0]) ? i[0] : "center", i[1] = u.test(i[1]) ? i[1] : "center", e = d.exec(i[0]), t = d.exec(i[1]), T[this] = [e ? e[0] : 0, t ? t[0] : 0], n[this] = [c.exec(i[0])[0], c.exec(i[1])[0]];
      }), 1 === k.length && (k[1] = k[0]), "right" === n.at[0] ? y.left += m : "center" === n.at[0] && (y.left += m / 2), "bottom" === n.at[1] ? y.top += g : "center" === n.at[1] && (y.top += g / 2), p = t(T.at, m, g), y.left += p[0], y.top += p[1], this.each(function() {
        var s,
            l,
            u = e(this),
            d = u.outerWidth(),
            c = u.outerHeight(),
            f = i(this, "marginLeft"),
            b = i(this, "marginTop"),
            D = d + f + i(this, "marginRight") + w.width,
            S = c + b + i(this, "marginBottom") + w.height,
            M = e.extend({}, y),
            C = t(T.my, u.outerWidth(), u.outerHeight());
        "right" === n.my[0] ? M.left -= d : "center" === n.my[0] && (M.left -= d / 2), "bottom" === n.my[1] ? M.top -= c : "center" === n.my[1] && (M.top -= c / 2), M.left += C[0], M.top += C[1], a || (M.left = h(M.left), M.top = h(M.top)), s = {
          marginLeft: f,
          marginTop: b
        }, e.each(["left", "top"], function(t, i) {
          e.ui.position[k[t]] && e.ui.position[k[t]][i](M, {
            targetWidth: m,
            targetHeight: g,
            elemWidth: d,
            elemHeight: c,
            collisionPosition: s,
            collisionWidth: D,
            collisionHeight: S,
            offset: [p[0] + C[0], p[1] + C[1]],
            my: n.my,
            at: n.at,
            within: x,
            elem: u
          });
        }), n.using && (l = function(e) {
          var t = v.left - M.left,
              i = t + m - d,
              s = v.top - M.top,
              a = s + g - c,
              h = {
                target: {
                  element: _,
                  left: v.left,
                  top: v.top,
                  width: m,
                  height: g
                },
                element: {
                  element: u,
                  left: M.left,
                  top: M.top,
                  width: d,
                  height: c
                },
                horizontal: 0 > i ? "left" : t > 0 ? "right" : "center",
                vertical: 0 > a ? "top" : s > 0 ? "bottom" : "middle"
              };
          d > m && m > r(t + i) && (h.horizontal = "center"), c > g && g > r(s + a) && (h.vertical = "middle"), h.important = o(r(t), r(i)) > o(r(s), r(a)) ? "horizontal" : "vertical", n.using.call(this, e, h);
        }), u.offset(e.extend(M, {using: l}));
      });
    }, e.ui.position = {
      fit: {
        left: function(e, t) {
          var i,
              s = t.within,
              n = s.isWindow ? s.scrollLeft : s.offset.left,
              a = s.width,
              r = e.left - t.collisionPosition.marginLeft,
              h = n - r,
              l = r + t.collisionWidth - a - n;
          t.collisionWidth > a ? h > 0 && 0 >= l ? (i = e.left + h + t.collisionWidth - a - n, e.left += h - i) : e.left = l > 0 && 0 >= h ? n : h > l ? n + a - t.collisionWidth : n : h > 0 ? e.left += h : l > 0 ? e.left -= l : e.left = o(e.left - r, e.left);
        },
        top: function(e, t) {
          var i,
              s = t.within,
              n = s.isWindow ? s.scrollTop : s.offset.top,
              a = t.within.height,
              r = e.top - t.collisionPosition.marginTop,
              h = n - r,
              l = r + t.collisionHeight - a - n;
          t.collisionHeight > a ? h > 0 && 0 >= l ? (i = e.top + h + t.collisionHeight - a - n, e.top += h - i) : e.top = l > 0 && 0 >= h ? n : h > l ? n + a - t.collisionHeight : n : h > 0 ? e.top += h : l > 0 ? e.top -= l : e.top = o(e.top - r, e.top);
        }
      },
      flip: {
        left: function(e, t) {
          var i,
              s,
              n = t.within,
              a = n.offset.left + n.scrollLeft,
              o = n.width,
              h = n.isWindow ? n.scrollLeft : n.offset.left,
              l = e.left - t.collisionPosition.marginLeft,
              u = l - h,
              d = l + t.collisionWidth - o - h,
              c = "left" === t.my[0] ? -t.elemWidth : "right" === t.my[0] ? t.elemWidth : 0,
              p = "left" === t.at[0] ? t.targetWidth : "right" === t.at[0] ? -t.targetWidth : 0,
              f = -2 * t.offset[0];
          0 > u ? (i = e.left + c + p + f + t.collisionWidth - o - a, (0 > i || r(u) > i) && (e.left += c + p + f)) : d > 0 && (s = e.left - t.collisionPosition.marginLeft + c + p + f - h, (s > 0 || d > r(s)) && (e.left += c + p + f));
        },
        top: function(e, t) {
          var i,
              s,
              n = t.within,
              a = n.offset.top + n.scrollTop,
              o = n.height,
              h = n.isWindow ? n.scrollTop : n.offset.top,
              l = e.top - t.collisionPosition.marginTop,
              u = l - h,
              d = l + t.collisionHeight - o - h,
              c = "top" === t.my[1],
              p = c ? -t.elemHeight : "bottom" === t.my[1] ? t.elemHeight : 0,
              f = "top" === t.at[1] ? t.targetHeight : "bottom" === t.at[1] ? -t.targetHeight : 0,
              m = -2 * t.offset[1];
          0 > u ? (s = e.top + p + f + m + t.collisionHeight - o - a, (0 > s || r(u) > s) && (e.top += p + f + m)) : d > 0 && (i = e.top - t.collisionPosition.marginTop + p + f + m - h, (i > 0 || d > r(i)) && (e.top += p + f + m));
        }
      },
      flipfit: {
        left: function() {
          e.ui.position.flip.left.apply(this, arguments), e.ui.position.fit.left.apply(this, arguments);
        },
        top: function() {
          e.ui.position.flip.top.apply(this, arguments), e.ui.position.fit.top.apply(this, arguments);
        }
      }
    }, function() {
      var t,
          i,
          s,
          n,
          o,
          r = document.getElementsByTagName("body")[0],
          h = document.createElement("div");
      t = document.createElement(r ? "div" : "body"), s = {
        visibility: "hidden",
        width: 0,
        height: 0,
        border: 0,
        margin: 0,
        background: "none"
      }, r && e.extend(s, {
        position: "absolute",
        left: "-1000px",
        top: "-1000px"
      });
      for (o in s)
        t.style[o] = s[o];
      t.appendChild(h), i = r || document.documentElement, i.insertBefore(t, i.firstChild), h.style.cssText = "position: absolute; left: 10.7432222px;", n = e(h).offset().left, a = n > 10 && 11 > n, t.innerHTML = "", i.removeChild(t);
    }();
  }(), e.ui.position, e.widget("ui.accordion", {
    version: "1.11.4",
    options: {
      active: 0,
      animate: {},
      collapsible: !1,
      event: "click",
      header: "> li > :first-child,> :not(li):even",
      heightStyle: "auto",
      icons: {
        activeHeader: "ui-icon-triangle-1-s",
        header: "ui-icon-triangle-1-e"
      },
      activate: null,
      beforeActivate: null
    },
    hideProps: {
      borderTopWidth: "hide",
      borderBottomWidth: "hide",
      paddingTop: "hide",
      paddingBottom: "hide",
      height: "hide"
    },
    showProps: {
      borderTopWidth: "show",
      borderBottomWidth: "show",
      paddingTop: "show",
      paddingBottom: "show",
      height: "show"
    },
    _create: function() {
      var t = this.options;
      this.prevShow = this.prevHide = e(), this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role", "tablist"), t.collapsible || t.active !== !1 && null != t.active || (t.active = 0), this._processPanels(), 0 > t.active && (t.active += this.headers.length), this._refresh();
    },
    _getCreateEventData: function() {
      return {
        header: this.active,
        panel: this.active.length ? this.active.next() : e()
      };
    },
    _createIcons: function() {
      var t = this.options.icons;
      t && (e("<span>").addClass("ui-accordion-header-icon ui-icon " + t.header).prependTo(this.headers), this.active.children(".ui-accordion-header-icon").removeClass(t.header).addClass(t.activeHeader), this.headers.addClass("ui-accordion-icons"));
    },
    _destroyIcons: function() {
      this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove();
    },
    _destroy: function() {
      var e;
      this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"), this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").removeUniqueId(), this._destroyIcons(), e = this.headers.next().removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").css("display", "").removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeUniqueId(), "content" !== this.options.heightStyle && e.css("height", "");
    },
    _setOption: function(e, t) {
      return "active" === e ? (this._activate(t), void 0) : ("event" === e && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(t)), this._super(e, t), "collapsible" !== e || t || this.options.active !== !1 || this._activate(0), "icons" === e && (this._destroyIcons(), t && this._createIcons()), "disabled" === e && (this.element.toggleClass("ui-state-disabled", !!t).attr("aria-disabled", t), this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!t)), void 0);
    },
    _keydown: function(t) {
      if (!t.altKey && !t.ctrlKey) {
        var i = e.ui.keyCode,
            s = this.headers.length,
            n = this.headers.index(t.target),
            a = !1;
        switch (t.keyCode) {
          case i.RIGHT:
          case i.DOWN:
            a = this.headers[(n + 1) % s];
            break;
          case i.LEFT:
          case i.UP:
            a = this.headers[(n - 1 + s) % s];
            break;
          case i.SPACE:
          case i.ENTER:
            this._eventHandler(t);
            break;
          case i.HOME:
            a = this.headers[0];
            break;
          case i.END:
            a = this.headers[s - 1];
        }
        a && (e(t.target).attr("tabIndex", -1), e(a).attr("tabIndex", 0), a.focus(), t.preventDefault());
      }
    },
    _panelKeyDown: function(t) {
      t.keyCode === e.ui.keyCode.UP && t.ctrlKey && e(t.currentTarget).prev().focus();
    },
    refresh: function() {
      var t = this.options;
      this._processPanels(), t.active === !1 && t.collapsible === !0 || !this.headers.length ? (t.active = !1, this.active = e()) : t.active === !1 ? this._activate(0) : this.active.length && !e.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (t.active = !1, this.active = e()) : this._activate(Math.max(0, t.active - 1)) : t.active = this.headers.index(this.active), this._destroyIcons(), this._refresh();
    },
    _processPanels: function() {
      var e = this.headers,
          t = this.panels;
      this.headers = this.element.find(this.options.header).addClass("ui-accordion-header ui-state-default ui-corner-all"), this.panels = this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide(), t && (this._off(e.not(this.headers)), this._off(t.not(this.panels)));
    },
    _refresh: function() {
      var t,
          i = this.options,
          s = i.heightStyle,
          n = this.element.parent();
      this.active = this._findActive(i.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all"), this.active.next().addClass("ui-accordion-content-active").show(), this.headers.attr("role", "tab").each(function() {
        var t = e(this),
            i = t.uniqueId().attr("id"),
            s = t.next(),
            n = s.uniqueId().attr("id");
        t.attr("aria-controls", n), s.attr("aria-labelledby", i);
      }).next().attr("role", "tabpanel"), this.headers.not(this.active).attr({
        "aria-selected": "false",
        "aria-expanded": "false",
        tabIndex: -1
      }).next().attr({"aria-hidden": "true"}).hide(), this.active.length ? this.active.attr({
        "aria-selected": "true",
        "aria-expanded": "true",
        tabIndex: 0
      }).next().attr({"aria-hidden": "false"}) : this.headers.eq(0).attr("tabIndex", 0), this._createIcons(), this._setupEvents(i.event), "fill" === s ? (t = n.height(), this.element.siblings(":visible").each(function() {
        var i = e(this),
            s = i.css("position");
        "absolute" !== s && "fixed" !== s && (t -= i.outerHeight(!0));
      }), this.headers.each(function() {
        t -= e(this).outerHeight(!0);
      }), this.headers.next().each(function() {
        e(this).height(Math.max(0, t - e(this).innerHeight() + e(this).height()));
      }).css("overflow", "auto")) : "auto" === s && (t = 0, this.headers.next().each(function() {
        t = Math.max(t, e(this).css("height", "").height());
      }).height(t));
    },
    _activate: function(t) {
      var i = this._findActive(t)[0];
      i !== this.active[0] && (i = i || this.active[0], this._eventHandler({
        target: i,
        currentTarget: i,
        preventDefault: e.noop
      }));
    },
    _findActive: function(t) {
      return "number" == typeof t ? this.headers.eq(t) : e();
    },
    _setupEvents: function(t) {
      var i = {keydown: "_keydown"};
      t && e.each(t.split(" "), function(e, t) {
        i[t] = "_eventHandler";
      }), this._off(this.headers.add(this.headers.next())), this._on(this.headers, i), this._on(this.headers.next(), {keydown: "_panelKeyDown"}), this._hoverable(this.headers), this._focusable(this.headers);
    },
    _eventHandler: function(t) {
      var i = this.options,
          s = this.active,
          n = e(t.currentTarget),
          a = n[0] === s[0],
          o = a && i.collapsible,
          r = o ? e() : n.next(),
          h = s.next(),
          l = {
            oldHeader: s,
            oldPanel: h,
            newHeader: o ? e() : n,
            newPanel: r
          };
      t.preventDefault(), a && !i.collapsible || this._trigger("beforeActivate", t, l) === !1 || (i.active = o ? !1 : this.headers.index(n), this.active = a ? e() : n, this._toggle(l), s.removeClass("ui-accordion-header-active ui-state-active"), i.icons && s.children(".ui-accordion-header-icon").removeClass(i.icons.activeHeader).addClass(i.icons.header), a || (n.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"), i.icons && n.children(".ui-accordion-header-icon").removeClass(i.icons.header).addClass(i.icons.activeHeader), n.next().addClass("ui-accordion-content-active")));
    },
    _toggle: function(t) {
      var i = t.newPanel,
          s = this.prevShow.length ? this.prevShow : t.oldPanel;
      this.prevShow.add(this.prevHide).stop(!0, !0), this.prevShow = i, this.prevHide = s, this.options.animate ? this._animate(i, s, t) : (s.hide(), i.show(), this._toggleComplete(t)), s.attr({"aria-hidden": "true"}), s.prev().attr({
        "aria-selected": "false",
        "aria-expanded": "false"
      }), i.length && s.length ? s.prev().attr({
        tabIndex: -1,
        "aria-expanded": "false"
      }) : i.length && this.headers.filter(function() {
        return 0 === parseInt(e(this).attr("tabIndex"), 10);
      }).attr("tabIndex", -1), i.attr("aria-hidden", "false").prev().attr({
        "aria-selected": "true",
        "aria-expanded": "true",
        tabIndex: 0
      });
    },
    _animate: function(e, t, i) {
      var s,
          n,
          a,
          o = this,
          r = 0,
          h = e.css("box-sizing"),
          l = e.length && (!t.length || e.index() < t.index()),
          u = this.options.animate || {},
          d = l && u.down || u,
          c = function() {
            o._toggleComplete(i);
          };
      return "number" == typeof d && (a = d), "string" == typeof d && (n = d), n = n || d.easing || u.easing, a = a || d.duration || u.duration, t.length ? e.length ? (s = e.show().outerHeight(), t.animate(this.hideProps, {
        duration: a,
        easing: n,
        step: function(e, t) {
          t.now = Math.round(e);
        }
      }), e.hide().animate(this.showProps, {
        duration: a,
        easing: n,
        complete: c,
        step: function(e, i) {
          i.now = Math.round(e), "height" !== i.prop ? "content-box" === h && (r += i.now) : "content" !== o.options.heightStyle && (i.now = Math.round(s - t.outerHeight() - r), r = 0);
        }
      }), void 0) : t.animate(this.hideProps, a, n, c) : e.animate(this.showProps, a, n, c);
    },
    _toggleComplete: function(e) {
      var t = e.oldPanel;
      t.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"), t.length && (t.parent()[0].className = t.parent()[0].className), this._trigger("activate", null, e);
    }
  }), e.widget("ui.menu", {
    version: "1.11.4",
    defaultElement: "<ul>",
    delay: 300,
    options: {
      icons: {submenu: "ui-icon-carat-1-e"},
      items: "> *",
      menus: "ul",
      position: {
        my: "left-1 top",
        at: "right top"
      },
      role: "menu",
      blur: null,
      focus: null,
      select: null
    },
    _create: function() {
      this.activeMenu = this.element, this.mouseHandled = !1, this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
        role: this.options.role,
        tabIndex: 0
      }), this.options.disabled && this.element.addClass("ui-state-disabled").attr("aria-disabled", "true"), this._on({
        "mousedown .ui-menu-item": function(e) {
          e.preventDefault();
        },
        "click .ui-menu-item": function(t) {
          var i = e(t.target);
          !this.mouseHandled && i.not(".ui-state-disabled").length && (this.select(t), t.isPropagationStopped() || (this.mouseHandled = !0), i.has(".ui-menu").length ? this.expand(t) : !this.element.is(":focus") && e(this.document[0].activeElement).closest(".ui-menu").length && (this.element.trigger("focus", [!0]), this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)));
        },
        "mouseenter .ui-menu-item": function(t) {
          if (!this.previousFilter) {
            var i = e(t.currentTarget);
            i.siblings(".ui-state-active").removeClass("ui-state-active"), this.focus(t, i);
          }
        },
        mouseleave: "collapseAll",
        "mouseleave .ui-menu": "collapseAll",
        focus: function(e, t) {
          var i = this.active || this.element.find(this.options.items).eq(0);
          t || this.focus(e, i);
        },
        blur: function(t) {
          this._delay(function() {
            e.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(t);
          });
        },
        keydown: "_keydown"
      }), this.refresh(), this._on(this.document, {click: function(e) {
          this._closeOnDocumentClick(e) && this.collapseAll(e), this.mouseHandled = !1;
        }});
    },
    _destroy: function() {
      this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-menu-icons ui-front").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(), this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").removeUniqueId().removeClass("ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function() {
        var t = e(this);
        t.data("ui-menu-submenu-carat") && t.remove();
      }), this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content");
    },
    _keydown: function(t) {
      var i,
          s,
          n,
          a,
          o = !0;
      switch (t.keyCode) {
        case e.ui.keyCode.PAGE_UP:
          this.previousPage(t);
          break;
        case e.ui.keyCode.PAGE_DOWN:
          this.nextPage(t);
          break;
        case e.ui.keyCode.HOME:
          this._move("first", "first", t);
          break;
        case e.ui.keyCode.END:
          this._move("last", "last", t);
          break;
        case e.ui.keyCode.UP:
          this.previous(t);
          break;
        case e.ui.keyCode.DOWN:
          this.next(t);
          break;
        case e.ui.keyCode.LEFT:
          this.collapse(t);
          break;
        case e.ui.keyCode.RIGHT:
          this.active && !this.active.is(".ui-state-disabled") && this.expand(t);
          break;
        case e.ui.keyCode.ENTER:
        case e.ui.keyCode.SPACE:
          this._activate(t);
          break;
        case e.ui.keyCode.ESCAPE:
          this.collapse(t);
          break;
        default:
          o = !1, s = this.previousFilter || "", n = String.fromCharCode(t.keyCode), a = !1, clearTimeout(this.filterTimer), n === s ? a = !0 : n = s + n, i = this._filterMenuItems(n), i = a && -1 !== i.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : i, i.length || (n = String.fromCharCode(t.keyCode), i = this._filterMenuItems(n)), i.length ? (this.focus(t, i), this.previousFilter = n, this.filterTimer = this._delay(function() {
            delete this.previousFilter;
          }, 1e3)) : delete this.previousFilter;
      }
      o && t.preventDefault();
    },
    _activate: function(e) {
      this.active.is(".ui-state-disabled") || (this.active.is("[aria-haspopup='true']") ? this.expand(e) : this.select(e));
    },
    refresh: function() {
      var t,
          i,
          s = this,
          n = this.options.icons.submenu,
          a = this.element.find(this.options.menus);
      this.element.toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length), a.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-front").hide().attr({
        role: this.options.role,
        "aria-hidden": "true",
        "aria-expanded": "false"
      }).each(function() {
        var t = e(this),
            i = t.parent(),
            s = e("<span>").addClass("ui-menu-icon ui-icon " + n).data("ui-menu-submenu-carat", !0);
        i.attr("aria-haspopup", "true").prepend(s), t.attr("aria-labelledby", i.attr("id"));
      }), t = a.add(this.element), i = t.find(this.options.items), i.not(".ui-menu-item").each(function() {
        var t = e(this);
        s._isDivider(t) && t.addClass("ui-widget-content ui-menu-divider");
      }), i.not(".ui-menu-item, .ui-menu-divider").addClass("ui-menu-item").uniqueId().attr({
        tabIndex: -1,
        role: this._itemRole()
      }), i.filter(".ui-state-disabled").attr("aria-disabled", "true"), this.active && !e.contains(this.element[0], this.active[0]) && this.blur();
    },
    _itemRole: function() {
      return {
        menu: "menuitem",
        listbox: "option"
      }[this.options.role];
    },
    _setOption: function(e, t) {
      "icons" === e && this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(t.submenu), "disabled" === e && this.element.toggleClass("ui-state-disabled", !!t).attr("aria-disabled", t), this._super(e, t);
    },
    focus: function(e, t) {
      var i,
          s;
      this.blur(e, e && "focus" === e.type), this._scrollIntoView(t), this.active = t.first(), s = this.active.addClass("ui-state-focus").removeClass("ui-state-active"), this.options.role && this.element.attr("aria-activedescendant", s.attr("id")), this.active.parent().closest(".ui-menu-item").addClass("ui-state-active"), e && "keydown" === e.type ? this._close() : this.timer = this._delay(function() {
        this._close();
      }, this.delay), i = t.children(".ui-menu"), i.length && e && /^mouse/.test(e.type) && this._startOpening(i), this.activeMenu = t.parent(), this._trigger("focus", e, {item: t});
    },
    _scrollIntoView: function(t) {
      var i,
          s,
          n,
          a,
          o,
          r;
      this._hasScroll() && (i = parseFloat(e.css(this.activeMenu[0], "borderTopWidth")) || 0, s = parseFloat(e.css(this.activeMenu[0], "paddingTop")) || 0, n = t.offset().top - this.activeMenu.offset().top - i - s, a = this.activeMenu.scrollTop(), o = this.activeMenu.height(), r = t.outerHeight(), 0 > n ? this.activeMenu.scrollTop(a + n) : n + r > o && this.activeMenu.scrollTop(a + n - o + r));
    },
    blur: function(e, t) {
      t || clearTimeout(this.timer), this.active && (this.active.removeClass("ui-state-focus"), this.active = null, this._trigger("blur", e, {item: this.active}));
    },
    _startOpening: function(e) {
      clearTimeout(this.timer), "true" === e.attr("aria-hidden") && (this.timer = this._delay(function() {
        this._close(), this._open(e);
      }, this.delay));
    },
    _open: function(t) {
      var i = e.extend({of: this.active}, this.options.position);
      clearTimeout(this.timer), this.element.find(".ui-menu").not(t.parents(".ui-menu")).hide().attr("aria-hidden", "true"), t.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(i);
    },
    collapseAll: function(t, i) {
      clearTimeout(this.timer), this.timer = this._delay(function() {
        var s = i ? this.element : e(t && t.target).closest(this.element.find(".ui-menu"));
        s.length || (s = this.element), this._close(s), this.blur(t), this.activeMenu = s;
      }, this.delay);
    },
    _close: function(e) {
      e || (e = this.active ? this.active.parent() : this.element), e.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find(".ui-state-active").not(".ui-state-focus").removeClass("ui-state-active");
    },
    _closeOnDocumentClick: function(t) {
      return !e(t.target).closest(".ui-menu").length;
    },
    _isDivider: function(e) {
      return !/[^\-\u2014\u2013\s]/.test(e.text());
    },
    collapse: function(e) {
      var t = this.active && this.active.parent().closest(".ui-menu-item", this.element);
      t && t.length && (this._close(), this.focus(e, t));
    },
    expand: function(e) {
      var t = this.active && this.active.children(".ui-menu ").find(this.options.items).first();
      t && t.length && (this._open(t.parent()), this._delay(function() {
        this.focus(e, t);
      }));
    },
    next: function(e) {
      this._move("next", "first", e);
    },
    previous: function(e) {
      this._move("prev", "last", e);
    },
    isFirstItem: function() {
      return this.active && !this.active.prevAll(".ui-menu-item").length;
    },
    isLastItem: function() {
      return this.active && !this.active.nextAll(".ui-menu-item").length;
    },
    _move: function(e, t, i) {
      var s;
      this.active && (s = "first" === e || "last" === e ? this.active["first" === e ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[e + "All"](".ui-menu-item").eq(0)), s && s.length && this.active || (s = this.activeMenu.find(this.options.items)[t]()), this.focus(i, s);
    },
    nextPage: function(t) {
      var i,
          s,
          n;
      return this.active ? (this.isLastItem() || (this._hasScroll() ? (s = this.active.offset().top, n = this.element.height(), this.active.nextAll(".ui-menu-item").each(function() {
        return i = e(this), 0 > i.offset().top - s - n;
      }), this.focus(t, i)) : this.focus(t, this.activeMenu.find(this.options.items)[this.active ? "last" : "first"]())), void 0) : (this.next(t), void 0);
    },
    previousPage: function(t) {
      var i,
          s,
          n;
      return this.active ? (this.isFirstItem() || (this._hasScroll() ? (s = this.active.offset().top, n = this.element.height(), this.active.prevAll(".ui-menu-item").each(function() {
        return i = e(this), i.offset().top - s + n > 0;
      }), this.focus(t, i)) : this.focus(t, this.activeMenu.find(this.options.items).first())), void 0) : (this.next(t), void 0);
    },
    _hasScroll: function() {
      return this.element.outerHeight() < this.element.prop("scrollHeight");
    },
    select: function(t) {
      this.active = this.active || e(t.target).closest(".ui-menu-item");
      var i = {item: this.active};
      this.active.has(".ui-menu").length || this.collapseAll(t, !0), this._trigger("select", t, i);
    },
    _filterMenuItems: function(t) {
      var i = t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"),
          s = RegExp("^" + i, "i");
      return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function() {
        return s.test(e.trim(e(this).text()));
      });
    }
  }), e.widget("ui.autocomplete", {
    version: "1.11.4",
    defaultElement: "<input>",
    options: {
      appendTo: null,
      autoFocus: !1,
      delay: 300,
      minLength: 1,
      position: {
        my: "left top",
        at: "left bottom",
        collision: "none"
      },
      source: null,
      change: null,
      close: null,
      focus: null,
      open: null,
      response: null,
      search: null,
      select: null
    },
    requestIndex: 0,
    pending: 0,
    _create: function() {
      var t,
          i,
          s,
          n = this.element[0].nodeName.toLowerCase(),
          a = "textarea" === n,
          o = "input" === n;
      this.isMultiLine = a ? !0 : o ? !1 : this.element.prop("isContentEditable"), this.valueMethod = this.element[a || o ? "val" : "text"], this.isNewMenu = !0, this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off"), this._on(this.element, {
        keydown: function(n) {
          if (this.element.prop("readOnly"))
            return t = !0, s = !0, i = !0, void 0;
          t = !1, s = !1, i = !1;
          var a = e.ui.keyCode;
          switch (n.keyCode) {
            case a.PAGE_UP:
              t = !0, this._move("previousPage", n);
              break;
            case a.PAGE_DOWN:
              t = !0, this._move("nextPage", n);
              break;
            case a.UP:
              t = !0, this._keyEvent("previous", n);
              break;
            case a.DOWN:
              t = !0, this._keyEvent("next", n);
              break;
            case a.ENTER:
              this.menu.active && (t = !0, n.preventDefault(), this.menu.select(n));
              break;
            case a.TAB:
              this.menu.active && this.menu.select(n);
              break;
            case a.ESCAPE:
              this.menu.element.is(":visible") && (this.isMultiLine || this._value(this.term), this.close(n), n.preventDefault());
              break;
            default:
              i = !0, this._searchTimeout(n);
          }
        },
        keypress: function(s) {
          if (t)
            return t = !1, (!this.isMultiLine || this.menu.element.is(":visible")) && s.preventDefault(), void 0;
          if (!i) {
            var n = e.ui.keyCode;
            switch (s.keyCode) {
              case n.PAGE_UP:
                this._move("previousPage", s);
                break;
              case n.PAGE_DOWN:
                this._move("nextPage", s);
                break;
              case n.UP:
                this._keyEvent("previous", s);
                break;
              case n.DOWN:
                this._keyEvent("next", s);
            }
          }
        },
        input: function(e) {
          return s ? (s = !1, e.preventDefault(), void 0) : (this._searchTimeout(e), void 0);
        },
        focus: function() {
          this.selectedItem = null, this.previous = this._value();
        },
        blur: function(e) {
          return this.cancelBlur ? (delete this.cancelBlur, void 0) : (clearTimeout(this.searching), this.close(e), this._change(e), void 0);
        }
      }), this._initSource(), this.menu = e("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role: null}).hide().menu("instance"), this._on(this.menu.element, {
        mousedown: function(t) {
          t.preventDefault(), this.cancelBlur = !0, this._delay(function() {
            delete this.cancelBlur;
          });
          var i = this.menu.element[0];
          e(t.target).closest(".ui-menu-item").length || this._delay(function() {
            var t = this;
            this.document.one("mousedown", function(s) {
              s.target === t.element[0] || s.target === i || e.contains(i, s.target) || t.close();
            });
          });
        },
        menufocus: function(t, i) {
          var s,
              n;
          return this.isNewMenu && (this.isNewMenu = !1, t.originalEvent && /^mouse/.test(t.originalEvent.type)) ? (this.menu.blur(), this.document.one("mousemove", function() {
            e(t.target).trigger(t.originalEvent);
          }), void 0) : (n = i.item.data("ui-autocomplete-item"), !1 !== this._trigger("focus", t, {item: n}) && t.originalEvent && /^key/.test(t.originalEvent.type) && this._value(n.value), s = i.item.attr("aria-label") || n.value, s && e.trim(s).length && (this.liveRegion.children().hide(), e("<div>").text(s).appendTo(this.liveRegion)), void 0);
        },
        menuselect: function(e, t) {
          var i = t.item.data("ui-autocomplete-item"),
              s = this.previous;
          this.element[0] !== this.document[0].activeElement && (this.element.focus(), this.previous = s, this._delay(function() {
            this.previous = s, this.selectedItem = i;
          })), !1 !== this._trigger("select", e, {item: i}) && this._value(i.value), this.term = this._value(), this.close(e), this.selectedItem = i;
        }
      }), this.liveRegion = e("<span>", {
        role: "status",
        "aria-live": "assertive",
        "aria-relevant": "additions"
      }).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body), this._on(this.window, {beforeunload: function() {
          this.element.removeAttr("autocomplete");
        }});
    },
    _destroy: function() {
      clearTimeout(this.searching), this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"), this.menu.element.remove(), this.liveRegion.remove();
    },
    _setOption: function(e, t) {
      this._super(e, t), "source" === e && this._initSource(), "appendTo" === e && this.menu.element.appendTo(this._appendTo()), "disabled" === e && t && this.xhr && this.xhr.abort();
    },
    _appendTo: function() {
      var t = this.options.appendTo;
      return t && (t = t.jquery || t.nodeType ? e(t) : this.document.find(t).eq(0)), t && t[0] || (t = this.element.closest(".ui-front")), t.length || (t = this.document[0].body), t;
    },
    _initSource: function() {
      var t,
          i,
          s = this;
      e.isArray(this.options.source) ? (t = this.options.source, this.source = function(i, s) {
        s(e.ui.autocomplete.filter(t, i.term));
      }) : "string" == typeof this.options.source ? (i = this.options.source, this.source = function(t, n) {
        s.xhr && s.xhr.abort(), s.xhr = e.ajax({
          url: i,
          data: t,
          dataType: "json",
          success: function(e) {
            n(e);
          },
          error: function() {
            n([]);
          }
        });
      }) : this.source = this.options.source;
    },
    _searchTimeout: function(e) {
      clearTimeout(this.searching), this.searching = this._delay(function() {
        var t = this.term === this._value(),
            i = this.menu.element.is(":visible"),
            s = e.altKey || e.ctrlKey || e.metaKey || e.shiftKey;
        (!t || t && !i && !s) && (this.selectedItem = null, this.search(null, e));
      }, this.options.delay);
    },
    search: function(e, t) {
      return e = null != e ? e : this._value(), this.term = this._value(), e.length < this.options.minLength ? this.close(t) : this._trigger("search", t) !== !1 ? this._search(e) : void 0;
    },
    _search: function(e) {
      this.pending++, this.element.addClass("ui-autocomplete-loading"), this.cancelSearch = !1, this.source({term: e}, this._response());
    },
    _response: function() {
      var t = ++this.requestIndex;
      return e.proxy(function(e) {
        t === this.requestIndex && this.__response(e), this.pending--, this.pending || this.element.removeClass("ui-autocomplete-loading");
      }, this);
    },
    __response: function(e) {
      e && (e = this._normalize(e)), this._trigger("response", null, {content: e}), !this.options.disabled && e && e.length && !this.cancelSearch ? (this._suggest(e), this._trigger("open")) : this._close();
    },
    close: function(e) {
      this.cancelSearch = !0, this._close(e);
    },
    _close: function(e) {
      this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = !0, this._trigger("close", e));
    },
    _change: function(e) {
      this.previous !== this._value() && this._trigger("change", e, {item: this.selectedItem});
    },
    _normalize: function(t) {
      return t.length && t[0].label && t[0].value ? t : e.map(t, function(t) {
        return "string" == typeof t ? {
          label: t,
          value: t
        } : e.extend({}, t, {
          label: t.label || t.value,
          value: t.value || t.label
        });
      });
    },
    _suggest: function(t) {
      var i = this.menu.element.empty();
      this._renderMenu(i, t), this.isNewMenu = !0, this.menu.refresh(), i.show(), this._resizeMenu(), i.position(e.extend({of: this.element}, this.options.position)), this.options.autoFocus && this.menu.next();
    },
    _resizeMenu: function() {
      var e = this.menu.element;
      e.outerWidth(Math.max(e.width("").outerWidth() + 1, this.element.outerWidth()));
    },
    _renderMenu: function(t, i) {
      var s = this;
      e.each(i, function(e, i) {
        s._renderItemData(t, i);
      });
    },
    _renderItemData: function(e, t) {
      return this._renderItem(e, t).data("ui-autocomplete-item", t);
    },
    _renderItem: function(t, i) {
      return e("<li>").text(i.label).appendTo(t);
    },
    _move: function(e, t) {
      return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(e) || this.menu.isLastItem() && /^next/.test(e) ? (this.isMultiLine || this._value(this.term), this.menu.blur(), void 0) : (this.menu[e](t), void 0) : (this.search(null, t), void 0);
    },
    widget: function() {
      return this.menu.element;
    },
    _value: function() {
      return this.valueMethod.apply(this.element, arguments);
    },
    _keyEvent: function(e, t) {
      (!this.isMultiLine || this.menu.element.is(":visible")) && (this._move(e, t), t.preventDefault());
    }
  }), e.extend(e.ui.autocomplete, {
    escapeRegex: function(e) {
      return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
    },
    filter: function(t, i) {
      var s = RegExp(e.ui.autocomplete.escapeRegex(i), "i");
      return e.grep(t, function(e) {
        return s.test(e.label || e.value || e);
      });
    }
  }), e.widget("ui.autocomplete", e.ui.autocomplete, {
    options: {messages: {
        noResults: "No search results.",
        results: function(e) {
          return e + (e > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate.";
        }
      }},
    __response: function(t) {
      var i;
      this._superApply(arguments), this.options.disabled || this.cancelSearch || (i = t && t.length ? this.options.messages.results(t.length) : this.options.messages.noResults, this.liveRegion.children().hide(), e("<div>").text(i).appendTo(this.liveRegion));
    }
  }), e.ui.autocomplete;
  var c,
      p = "ui-button ui-widget ui-state-default ui-corner-all",
      f = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",
      m = function() {
        var t = e(this);
        setTimeout(function() {
          t.find(":ui-button").button("refresh");
        }, 1);
      },
      g = function(t) {
        var i = t.name,
            s = t.form,
            n = e([]);
        return i && (i = i.replace(/'/g, "\\'"), n = s ? e(s).find("[name='" + i + "'][type=radio]") : e("[name='" + i + "'][type=radio]", t.ownerDocument).filter(function() {
          return !this.form;
        })), n;
      };
  e.widget("ui.button", {
    version: "1.11.4",
    defaultElement: "<button>",
    options: {
      disabled: null,
      text: !0,
      label: null,
      icons: {
        primary: null,
        secondary: null
      }
    },
    _create: function() {
      this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, m), "boolean" != typeof this.options.disabled ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled), this._determineButtonType(), this.hasTitle = !!this.buttonElement.attr("title");
      var t = this,
          i = this.options,
          s = "checkbox" === this.type || "radio" === this.type,
          n = s ? "" : "ui-state-active";
      null === i.label && (i.label = "input" === this.type ? this.buttonElement.val() : this.buttonElement.html()), this._hoverable(this.buttonElement), this.buttonElement.addClass(p).attr("role", "button").bind("mouseenter" + this.eventNamespace, function() {
        i.disabled || this === c && e(this).addClass("ui-state-active");
      }).bind("mouseleave" + this.eventNamespace, function() {
        i.disabled || e(this).removeClass(n);
      }).bind("click" + this.eventNamespace, function(e) {
        i.disabled && (e.preventDefault(), e.stopImmediatePropagation());
      }), this._on({
        focus: function() {
          this.buttonElement.addClass("ui-state-focus");
        },
        blur: function() {
          this.buttonElement.removeClass("ui-state-focus");
        }
      }), s && this.element.bind("change" + this.eventNamespace, function() {
        t.refresh();
      }), "checkbox" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
        return i.disabled ? !1 : void 0;
      }) : "radio" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function() {
        if (i.disabled)
          return !1;
        e(this).addClass("ui-state-active"), t.buttonElement.attr("aria-pressed", "true");
        var s = t.element[0];
        g(s).not(s).map(function() {
          return e(this).button("widget")[0];
        }).removeClass("ui-state-active").attr("aria-pressed", "false");
      }) : (this.buttonElement.bind("mousedown" + this.eventNamespace, function() {
        return i.disabled ? !1 : (e(this).addClass("ui-state-active"), c = this, t.document.one("mouseup", function() {
          c = null;
        }), void 0);
      }).bind("mouseup" + this.eventNamespace, function() {
        return i.disabled ? !1 : (e(this).removeClass("ui-state-active"), void 0);
      }).bind("keydown" + this.eventNamespace, function(t) {
        return i.disabled ? !1 : ((t.keyCode === e.ui.keyCode.SPACE || t.keyCode === e.ui.keyCode.ENTER) && e(this).addClass("ui-state-active"), void 0);
      }).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {
        e(this).removeClass("ui-state-active");
      }), this.buttonElement.is("a") && this.buttonElement.keyup(function(t) {
        t.keyCode === e.ui.keyCode.SPACE && e(this).click();
      })), this._setOption("disabled", i.disabled), this._resetButton();
    },
    _determineButtonType: function() {
      var e,
          t,
          i;
      this.type = this.element.is("[type=checkbox]") ? "checkbox" : this.element.is("[type=radio]") ? "radio" : this.element.is("input") ? "input" : "button", "checkbox" === this.type || "radio" === this.type ? (e = this.element.parents().last(), t = "label[for='" + this.element.attr("id") + "']", this.buttonElement = e.find(t), this.buttonElement.length || (e = e.length ? e.siblings() : this.element.siblings(), this.buttonElement = e.filter(t), this.buttonElement.length || (this.buttonElement = e.find(t))), this.element.addClass("ui-helper-hidden-accessible"), i = this.element.is(":checked"), i && this.buttonElement.addClass("ui-state-active"), this.buttonElement.prop("aria-pressed", i)) : this.buttonElement = this.element;
    },
    widget: function() {
      return this.buttonElement;
    },
    _destroy: function() {
      this.element.removeClass("ui-helper-hidden-accessible"), this.buttonElement.removeClass(p + " ui-state-active " + f).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()), this.hasTitle || this.buttonElement.removeAttr("title");
    },
    _setOption: function(e, t) {
      return this._super(e, t), "disabled" === e ? (this.widget().toggleClass("ui-state-disabled", !!t), this.element.prop("disabled", !!t), t && ("checkbox" === this.type || "radio" === this.type ? this.buttonElement.removeClass("ui-state-focus") : this.buttonElement.removeClass("ui-state-focus ui-state-active")), void 0) : (this._resetButton(), void 0);
    },
    refresh: function() {
      var t = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
      t !== this.options.disabled && this._setOption("disabled", t), "radio" === this.type ? g(this.element[0]).each(function() {
        e(this).is(":checked") ? e(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false");
      }) : "checkbox" === this.type && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"));
    },
    _resetButton: function() {
      if ("input" === this.type)
        return this.options.label && this.element.val(this.options.label), void 0;
      var t = this.buttonElement.removeClass(f),
          i = e("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(t.empty()).text(),
          s = this.options.icons,
          n = s.primary && s.secondary,
          a = [];
      s.primary || s.secondary ? (this.options.text && a.push("ui-button-text-icon" + (n ? "s" : s.primary ? "-primary" : "-secondary")), s.primary && t.prepend("<span class='ui-button-icon-primary ui-icon " + s.primary + "'></span>"), s.secondary && t.append("<span class='ui-button-icon-secondary ui-icon " + s.secondary + "'></span>"), this.options.text || (a.push(n ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || t.attr("title", e.trim(i)))) : a.push("ui-button-text-only"), t.addClass(a.join(" "));
    }
  }), e.widget("ui.buttonset", {
    version: "1.11.4",
    options: {items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"},
    _create: function() {
      this.element.addClass("ui-buttonset");
    },
    _init: function() {
      this.refresh();
    },
    _setOption: function(e, t) {
      "disabled" === e && this.buttons.button("option", e, t), this._super(e, t);
    },
    refresh: function() {
      var t = "rtl" === this.element.css("direction"),
          i = this.element.find(this.options.items),
          s = i.filter(":ui-button");
      i.not(":ui-button").button(), s.button("refresh"), this.buttons = i.map(function() {
        return e(this).button("widget")[0];
      }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(t ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(t ? "ui-corner-left" : "ui-corner-right").end().end();
    },
    _destroy: function() {
      this.element.removeClass("ui-buttonset"), this.buttons.map(function() {
        return e(this).button("widget")[0];
      }).removeClass("ui-corner-left ui-corner-right").end().button("destroy");
    }
  }), e.ui.button, e.extend(e.ui, {datepicker: {version: "1.11.4"}});
  var v;
  e.extend(n.prototype, {
    markerClassName: "hasDatepicker",
    maxRows: 4,
    _widgetDatepicker: function() {
      return this.dpDiv;
    },
    setDefaults: function(e) {
      return r(this._defaults, e || {}), this;
    },
    _attachDatepicker: function(t, i) {
      var s,
          n,
          a;
      s = t.nodeName.toLowerCase(), n = "div" === s || "span" === s, t.id || (this.uuid += 1, t.id = "dp" + this.uuid), a = this._newInst(e(t), n), a.settings = e.extend({}, i || {}), "input" === s ? this._connectDatepicker(t, a) : n && this._inlineDatepicker(t, a);
    },
    _newInst: function(t, i) {
      var s = t[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
      return {
        id: s,
        input: t,
        selectedDay: 0,
        selectedMonth: 0,
        selectedYear: 0,
        drawMonth: 0,
        drawYear: 0,
        inline: i,
        dpDiv: i ? a(e("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv
      };
    },
    _connectDatepicker: function(t, i) {
      var s = e(t);
      i.append = e([]), i.trigger = e([]), s.hasClass(this.markerClassName) || (this._attachments(s, i), s.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp), this._autoSize(i), e.data(t, "datepicker", i), i.settings.disabled && this._disableDatepicker(t));
    },
    _attachments: function(t, i) {
      var s,
          n,
          a,
          o = this._get(i, "appendText"),
          r = this._get(i, "isRTL");
      i.append && i.append.remove(), o && (i.append = e("<span class='" + this._appendClass + "'>" + o + "</span>"), t[r ? "before" : "after"](i.append)), t.unbind("focus", this._showDatepicker), i.trigger && i.trigger.remove(), s = this._get(i, "showOn"), ("focus" === s || "both" === s) && t.focus(this._showDatepicker), ("button" === s || "both" === s) && (n = this._get(i, "buttonText"), a = this._get(i, "buttonImage"), i.trigger = e(this._get(i, "buttonImageOnly") ? e("<img/>").addClass(this._triggerClass).attr({
        src: a,
        alt: n,
        title: n
      }) : e("<button type='button'></button>").addClass(this._triggerClass).html(a ? e("<img/>").attr({
        src: a,
        alt: n,
        title: n
      }) : n)), t[r ? "before" : "after"](i.trigger), i.trigger.click(function() {
        return e.datepicker._datepickerShowing && e.datepicker._lastInput === t[0] ? e.datepicker._hideDatepicker() : e.datepicker._datepickerShowing && e.datepicker._lastInput !== t[0] ? (e.datepicker._hideDatepicker(), e.datepicker._showDatepicker(t[0])) : e.datepicker._showDatepicker(t[0]), !1;
      }));
    },
    _autoSize: function(e) {
      if (this._get(e, "autoSize") && !e.inline) {
        var t,
            i,
            s,
            n,
            a = new Date(2009, 11, 20),
            o = this._get(e, "dateFormat");
        o.match(/[DM]/) && (t = function(e) {
          for (i = 0, s = 0, n = 0; e.length > n; n++)
            e[n].length > i && (i = e[n].length, s = n);
          return s;
        }, a.setMonth(t(this._get(e, o.match(/MM/) ? "monthNames" : "monthNamesShort"))), a.setDate(t(this._get(e, o.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - a.getDay())), e.input.attr("size", this._formatDate(e, a).length);
      }
    },
    _inlineDatepicker: function(t, i) {
      var s = e(t);
      s.hasClass(this.markerClassName) || (s.addClass(this.markerClassName).append(i.dpDiv), e.data(t, "datepicker", i), this._setDate(i, this._getDefaultDate(i), !0), this._updateDatepicker(i), this._updateAlternate(i), i.settings.disabled && this._disableDatepicker(t), i.dpDiv.css("display", "block"));
    },
    _dialogDatepicker: function(t, i, s, n, a) {
      var o,
          h,
          l,
          u,
          d,
          c = this._dialogInst;
      return c || (this.uuid += 1, o = "dp" + this.uuid, this._dialogInput = e("<input type='text' id='" + o + "' style='position: absolute; top: -100px; width: 0px;'/>"), this._dialogInput.keydown(this._doKeyDown), e("body").append(this._dialogInput), c = this._dialogInst = this._newInst(this._dialogInput, !1), c.settings = {}, e.data(this._dialogInput[0], "datepicker", c)), r(c.settings, n || {}), i = i && i.constructor === Date ? this._formatDate(c, i) : i, this._dialogInput.val(i), this._pos = a ? a.length ? a : [a.pageX, a.pageY] : null, this._pos || (h = document.documentElement.clientWidth, l = document.documentElement.clientHeight, u = document.documentElement.scrollLeft || document.body.scrollLeft, d = document.documentElement.scrollTop || document.body.scrollTop, this._pos = [h / 2 - 100 + u, l / 2 - 150 + d]), this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), c.settings.onSelect = s, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), e.blockUI && e.blockUI(this.dpDiv), e.data(this._dialogInput[0], "datepicker", c), this;
    },
    _destroyDatepicker: function(t) {
      var i,
          s = e(t),
          n = e.data(t, "datepicker");
      s.hasClass(this.markerClassName) && (i = t.nodeName.toLowerCase(), e.removeData(t, "datepicker"), "input" === i ? (n.append.remove(), n.trigger.remove(), s.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : ("div" === i || "span" === i) && s.removeClass(this.markerClassName).empty(), v === n && (v = null));
    },
    _enableDatepicker: function(t) {
      var i,
          s,
          n = e(t),
          a = e.data(t, "datepicker");
      n.hasClass(this.markerClassName) && (i = t.nodeName.toLowerCase(), "input" === i ? (t.disabled = !1, a.trigger.filter("button").each(function() {
        this.disabled = !1;
      }).end().filter("img").css({
        opacity: "1.0",
        cursor: ""
      })) : ("div" === i || "span" === i) && (s = n.children("." + this._inlineClass), s.children().removeClass("ui-state-disabled"), s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)), this._disabledInputs = e.map(this._disabledInputs, function(e) {
        return e === t ? null : e;
      }));
    },
    _disableDatepicker: function(t) {
      var i,
          s,
          n = e(t),
          a = e.data(t, "datepicker");
      n.hasClass(this.markerClassName) && (i = t.nodeName.toLowerCase(), "input" === i ? (t.disabled = !0, a.trigger.filter("button").each(function() {
        this.disabled = !0;
      }).end().filter("img").css({
        opacity: "0.5",
        cursor: "default"
      })) : ("div" === i || "span" === i) && (s = n.children("." + this._inlineClass), s.children().addClass("ui-state-disabled"), s.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)), this._disabledInputs = e.map(this._disabledInputs, function(e) {
        return e === t ? null : e;
      }), this._disabledInputs[this._disabledInputs.length] = t);
    },
    _isDisabledDatepicker: function(e) {
      if (!e)
        return !1;
      for (var t = 0; this._disabledInputs.length > t; t++)
        if (this._disabledInputs[t] === e)
          return !0;
      return !1;
    },
    _getInst: function(t) {
      try {
        return e.data(t, "datepicker");
      } catch (i) {
        throw "Missing instance data for this datepicker";
      }
    },
    _optionDatepicker: function(t, i, s) {
      var n,
          a,
          o,
          h,
          l = this._getInst(t);
      return 2 === arguments.length && "string" == typeof i ? "defaults" === i ? e.extend({}, e.datepicker._defaults) : l ? "all" === i ? e.extend({}, l.settings) : this._get(l, i) : null : (n = i || {}, "string" == typeof i && (n = {}, n[i] = s), l && (this._curInst === l && this._hideDatepicker(), a = this._getDateDatepicker(t, !0), o = this._getMinMaxDate(l, "min"), h = this._getMinMaxDate(l, "max"), r(l.settings, n), null !== o && void 0 !== n.dateFormat && void 0 === n.minDate && (l.settings.minDate = this._formatDate(l, o)), null !== h && void 0 !== n.dateFormat && void 0 === n.maxDate && (l.settings.maxDate = this._formatDate(l, h)), "disabled" in n && (n.disabled ? this._disableDatepicker(t) : this._enableDatepicker(t)), this._attachments(e(t), l), this._autoSize(l), this._setDate(l, a), this._updateAlternate(l), this._updateDatepicker(l)), void 0);
    },
    _changeDatepicker: function(e, t, i) {
      this._optionDatepicker(e, t, i);
    },
    _refreshDatepicker: function(e) {
      var t = this._getInst(e);
      t && this._updateDatepicker(t);
    },
    _setDateDatepicker: function(e, t) {
      var i = this._getInst(e);
      i && (this._setDate(i, t), this._updateDatepicker(i), this._updateAlternate(i));
    },
    _getDateDatepicker: function(e, t) {
      var i = this._getInst(e);
      return i && !i.inline && this._setDateFromField(i, t), i ? this._getDate(i) : null;
    },
    _doKeyDown: function(t) {
      var i,
          s,
          n,
          a = e.datepicker._getInst(t.target),
          o = !0,
          r = a.dpDiv.is(".ui-datepicker-rtl");
      if (a._keyEvent = !0, e.datepicker._datepickerShowing)
        switch (t.keyCode) {
          case 9:
            e.datepicker._hideDatepicker(), o = !1;
            break;
          case 13:
            return n = e("td." + e.datepicker._dayOverClass + ":not(." + e.datepicker._currentClass + ")", a.dpDiv), n[0] && e.datepicker._selectDay(t.target, a.selectedMonth, a.selectedYear, n[0]), i = e.datepicker._get(a, "onSelect"), i ? (s = e.datepicker._formatDate(a), i.apply(a.input ? a.input[0] : null, [s, a])) : e.datepicker._hideDatepicker(), !1;
          case 27:
            e.datepicker._hideDatepicker();
            break;
          case 33:
            e.datepicker._adjustDate(t.target, t.ctrlKey ? -e.datepicker._get(a, "stepBigMonths") : -e.datepicker._get(a, "stepMonths"), "M");
            break;
          case 34:
            e.datepicker._adjustDate(t.target, t.ctrlKey ? +e.datepicker._get(a, "stepBigMonths") : +e.datepicker._get(a, "stepMonths"), "M");
            break;
          case 35:
            (t.ctrlKey || t.metaKey) && e.datepicker._clearDate(t.target), o = t.ctrlKey || t.metaKey;
            break;
          case 36:
            (t.ctrlKey || t.metaKey) && e.datepicker._gotoToday(t.target), o = t.ctrlKey || t.metaKey;
            break;
          case 37:
            (t.ctrlKey || t.metaKey) && e.datepicker._adjustDate(t.target, r ? 1 : -1, "D"), o = t.ctrlKey || t.metaKey, t.originalEvent.altKey && e.datepicker._adjustDate(t.target, t.ctrlKey ? -e.datepicker._get(a, "stepBigMonths") : -e.datepicker._get(a, "stepMonths"), "M");
            break;
          case 38:
            (t.ctrlKey || t.metaKey) && e.datepicker._adjustDate(t.target, -7, "D"), o = t.ctrlKey || t.metaKey;
            break;
          case 39:
            (t.ctrlKey || t.metaKey) && e.datepicker._adjustDate(t.target, r ? -1 : 1, "D"), o = t.ctrlKey || t.metaKey, t.originalEvent.altKey && e.datepicker._adjustDate(t.target, t.ctrlKey ? +e.datepicker._get(a, "stepBigMonths") : +e.datepicker._get(a, "stepMonths"), "M");
            break;
          case 40:
            (t.ctrlKey || t.metaKey) && e.datepicker._adjustDate(t.target, 7, "D"), o = t.ctrlKey || t.metaKey;
            break;
          default:
            o = !1;
        }
      else
        36 === t.keyCode && t.ctrlKey ? e.datepicker._showDatepicker(this) : o = !1;
      o && (t.preventDefault(), t.stopPropagation());
    },
    _doKeyPress: function(t) {
      var i,
          s,
          n = e.datepicker._getInst(t.target);
      return e.datepicker._get(n, "constrainInput") ? (i = e.datepicker._possibleChars(e.datepicker._get(n, "dateFormat")), s = String.fromCharCode(null == t.charCode ? t.keyCode : t.charCode), t.ctrlKey || t.metaKey || " " > s || !i || i.indexOf(s) > -1) : void 0;
    },
    _doKeyUp: function(t) {
      var i,
          s = e.datepicker._getInst(t.target);
      if (s.input.val() !== s.lastVal)
        try {
          i = e.datepicker.parseDate(e.datepicker._get(s, "dateFormat"), s.input ? s.input.val() : null, e.datepicker._getFormatConfig(s)), i && (e.datepicker._setDateFromField(s), e.datepicker._updateAlternate(s), e.datepicker._updateDatepicker(s));
        } catch (n) {}
      return !0;
    },
    _showDatepicker: function(t) {
      if (t = t.target || t, "input" !== t.nodeName.toLowerCase() && (t = e("input", t.parentNode)[0]), !e.datepicker._isDisabledDatepicker(t) && e.datepicker._lastInput !== t) {
        var i,
            n,
            a,
            o,
            h,
            l,
            u;
        i = e.datepicker._getInst(t), e.datepicker._curInst && e.datepicker._curInst !== i && (e.datepicker._curInst.dpDiv.stop(!0, !0), i && e.datepicker._datepickerShowing && e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])), n = e.datepicker._get(i, "beforeShow"), a = n ? n.apply(t, [t, i]) : {}, a !== !1 && (r(i.settings, a), i.lastVal = null, e.datepicker._lastInput = t, e.datepicker._setDateFromField(i), e.datepicker._inDialog && (t.value = ""), e.datepicker._pos || (e.datepicker._pos = e.datepicker._findPos(t), e.datepicker._pos[1] += t.offsetHeight), o = !1, e(t).parents().each(function() {
          return o |= "fixed" === e(this).css("position"), !o;
        }), h = {
          left: e.datepicker._pos[0],
          top: e.datepicker._pos[1]
        }, e.datepicker._pos = null, i.dpDiv.empty(), i.dpDiv.css({
          position: "absolute",
          display: "block",
          top: "-1000px"
        }), e.datepicker._updateDatepicker(i), h = e.datepicker._checkOffset(i, h, o), i.dpDiv.css({
          position: e.datepicker._inDialog && e.blockUI ? "static" : o ? "fixed" : "absolute",
          display: "none",
          left: h.left + "px",
          top: h.top + "px"
        }), i.inline || (l = e.datepicker._get(i, "showAnim"), u = e.datepicker._get(i, "duration"), i.dpDiv.css("z-index", s(e(t)) + 1), e.datepicker._datepickerShowing = !0, e.effects && e.effects.effect[l] ? i.dpDiv.show(l, e.datepicker._get(i, "showOptions"), u) : i.dpDiv[l || "show"](l ? u : null), e.datepicker._shouldFocusInput(i) && i.input.focus(), e.datepicker._curInst = i));
      }
    },
    _updateDatepicker: function(t) {
      this.maxRows = 4, v = t, t.dpDiv.empty().append(this._generateHTML(t)), this._attachHandlers(t);
      var i,
          s = this._getNumberOfMonths(t),
          n = s[1],
          a = 17,
          r = t.dpDiv.find("." + this._dayOverClass + " a");
      r.length > 0 && o.apply(r.get(0)), t.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), n > 1 && t.dpDiv.addClass("ui-datepicker-multi-" + n).css("width", a * n + "em"), t.dpDiv[(1 !== s[0] || 1 !== s[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"), t.dpDiv[(this._get(t, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), t === e.datepicker._curInst && e.datepicker._datepickerShowing && e.datepicker._shouldFocusInput(t) && t.input.focus(), t.yearshtml && (i = t.yearshtml, setTimeout(function() {
        i === t.yearshtml && t.yearshtml && t.dpDiv.find("select.ui-datepicker-year:first").replaceWith(t.yearshtml), i = t.yearshtml = null;
      }, 0));
    },
    _shouldFocusInput: function(e) {
      return e.input && e.input.is(":visible") && !e.input.is(":disabled") && !e.input.is(":focus");
    },
    _checkOffset: function(t, i, s) {
      var n = t.dpDiv.outerWidth(),
          a = t.dpDiv.outerHeight(),
          o = t.input ? t.input.outerWidth() : 0,
          r = t.input ? t.input.outerHeight() : 0,
          h = document.documentElement.clientWidth + (s ? 0 : e(document).scrollLeft()),
          l = document.documentElement.clientHeight + (s ? 0 : e(document).scrollTop());
      return i.left -= this._get(t, "isRTL") ? n - o : 0, i.left -= s && i.left === t.input.offset().left ? e(document).scrollLeft() : 0, i.top -= s && i.top === t.input.offset().top + r ? e(document).scrollTop() : 0, i.left -= Math.min(i.left, i.left + n > h && h > n ? Math.abs(i.left + n - h) : 0), i.top -= Math.min(i.top, i.top + a > l && l > a ? Math.abs(a + r) : 0), i;
    },
    _findPos: function(t) {
      for (var i,
          s = this._getInst(t),
          n = this._get(s, "isRTL"); t && ("hidden" === t.type || 1 !== t.nodeType || e.expr.filters.hidden(t)); )
        t = t[n ? "previousSibling" : "nextSibling"];
      return i = e(t).offset(), [i.left, i.top];
    },
    _hideDatepicker: function(t) {
      var i,
          s,
          n,
          a,
          o = this._curInst;
      !o || t && o !== e.data(t, "datepicker") || this._datepickerShowing && (i = this._get(o, "showAnim"), s = this._get(o, "duration"), n = function() {
        e.datepicker._tidyDialog(o);
      }, e.effects && (e.effects.effect[i] || e.effects[i]) ? o.dpDiv.hide(i, e.datepicker._get(o, "showOptions"), s, n) : o.dpDiv["slideDown" === i ? "slideUp" : "fadeIn" === i ? "fadeOut" : "hide"](i ? s : null, n), i || n(), this._datepickerShowing = !1, a = this._get(o, "onClose"), a && a.apply(o.input ? o.input[0] : null, [o.input ? o.input.val() : "", o]), this._lastInput = null, this._inDialog && (this._dialogInput.css({
        position: "absolute",
        left: "0",
        top: "-100px"
      }), e.blockUI && (e.unblockUI(), e("body").append(this.dpDiv))), this._inDialog = !1);
    },
    _tidyDialog: function(e) {
      e.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar");
    },
    _checkExternalClick: function(t) {
      if (e.datepicker._curInst) {
        var i = e(t.target),
            s = e.datepicker._getInst(i[0]);
        (i[0].id !== e.datepicker._mainDivId && 0 === i.parents("#" + e.datepicker._mainDivId).length && !i.hasClass(e.datepicker.markerClassName) && !i.closest("." + e.datepicker._triggerClass).length && e.datepicker._datepickerShowing && (!e.datepicker._inDialog || !e.blockUI) || i.hasClass(e.datepicker.markerClassName) && e.datepicker._curInst !== s) && e.datepicker._hideDatepicker();
      }
    },
    _adjustDate: function(t, i, s) {
      var n = e(t),
          a = this._getInst(n[0]);
      this._isDisabledDatepicker(n[0]) || (this._adjustInstDate(a, i + ("M" === s ? this._get(a, "showCurrentAtPos") : 0), s), this._updateDatepicker(a));
    },
    _gotoToday: function(t) {
      var i,
          s = e(t),
          n = this._getInst(s[0]);
      this._get(n, "gotoCurrent") && n.currentDay ? (n.selectedDay = n.currentDay, n.drawMonth = n.selectedMonth = n.currentMonth, n.drawYear = n.selectedYear = n.currentYear) : (i = new Date, n.selectedDay = i.getDate(), n.drawMonth = n.selectedMonth = i.getMonth(), n.drawYear = n.selectedYear = i.getFullYear()), this._notifyChange(n), this._adjustDate(s);
    },
    _selectMonthYear: function(t, i, s) {
      var n = e(t),
          a = this._getInst(n[0]);
      a["selected" + ("M" === s ? "Month" : "Year")] = a["draw" + ("M" === s ? "Month" : "Year")] = parseInt(i.options[i.selectedIndex].value, 10), this._notifyChange(a), this._adjustDate(n);
    },
    _selectDay: function(t, i, s, n) {
      var a,
          o = e(t);
      e(n).hasClass(this._unselectableClass) || this._isDisabledDatepicker(o[0]) || (a = this._getInst(o[0]), a.selectedDay = a.currentDay = e("a", n).html(), a.selectedMonth = a.currentMonth = i, a.selectedYear = a.currentYear = s, this._selectDate(t, this._formatDate(a, a.currentDay, a.currentMonth, a.currentYear)));
    },
    _clearDate: function(t) {
      var i = e(t);
      this._selectDate(i, "");
    },
    _selectDate: function(t, i) {
      var s,
          n = e(t),
          a = this._getInst(n[0]);
      i = null != i ? i : this._formatDate(a), a.input && a.input.val(i), this._updateAlternate(a), s = this._get(a, "onSelect"), s ? s.apply(a.input ? a.input[0] : null, [i, a]) : a.input && a.input.trigger("change"), a.inline ? this._updateDatepicker(a) : (this._hideDatepicker(), this._lastInput = a.input[0], "object" != typeof a.input[0] && a.input.focus(), this._lastInput = null);
    },
    _updateAlternate: function(t) {
      var i,
          s,
          n,
          a = this._get(t, "altField");
      a && (i = this._get(t, "altFormat") || this._get(t, "dateFormat"), s = this._getDate(t), n = this.formatDate(i, s, this._getFormatConfig(t)), e(a).each(function() {
        e(this).val(n);
      }));
    },
    noWeekends: function(e) {
      var t = e.getDay();
      return [t > 0 && 6 > t, ""];
    },
    iso8601Week: function(e) {
      var t,
          i = new Date(e.getTime());
      return i.setDate(i.getDate() + 4 - (i.getDay() || 7)), t = i.getTime(), i.setMonth(0), i.setDate(1), Math.floor(Math.round((t - i) / 864e5) / 7) + 1;
    },
    parseDate: function(t, i, s) {
      if (null == t || null == i)
        throw "Invalid arguments";
      if (i = "object" == typeof i ? "" + i : i + "", "" === i)
        return null;
      var n,
          a,
          o,
          r,
          h = 0,
          l = (s ? s.shortYearCutoff : null) || this._defaults.shortYearCutoff,
          u = "string" != typeof l ? l : (new Date).getFullYear() % 100 + parseInt(l, 10),
          d = (s ? s.dayNamesShort : null) || this._defaults.dayNamesShort,
          c = (s ? s.dayNames : null) || this._defaults.dayNames,
          p = (s ? s.monthNamesShort : null) || this._defaults.monthNamesShort,
          f = (s ? s.monthNames : null) || this._defaults.monthNames,
          m = -1,
          g = -1,
          v = -1,
          y = -1,
          b = !1,
          _ = function(e) {
            var i = t.length > n + 1 && t.charAt(n + 1) === e;
            return i && n++, i;
          },
          x = function(e) {
            var t = _(e),
                s = "@" === e ? 14 : "!" === e ? 20 : "y" === e && t ? 4 : "o" === e ? 3 : 2,
                n = "y" === e ? s : 1,
                a = RegExp("^\\d{" + n + "," + s + "}"),
                o = i.substring(h).match(a);
            if (!o)
              throw "Missing number at position " + h;
            return h += o[0].length, parseInt(o[0], 10);
          },
          w = function(t, s, n) {
            var a = -1,
                o = e.map(_(t) ? n : s, function(e, t) {
                  return [[t, e]];
                }).sort(function(e, t) {
                  return -(e[1].length - t[1].length);
                });
            if (e.each(o, function(e, t) {
              var s = t[1];
              return i.substr(h, s.length).toLowerCase() === s.toLowerCase() ? (a = t[0], h += s.length, !1) : void 0;
            }), -1 !== a)
              return a + 1;
            throw "Unknown name at position " + h;
          },
          k = function() {
            if (i.charAt(h) !== t.charAt(n))
              throw "Unexpected literal at position " + h;
            h++;
          };
      for (n = 0; t.length > n; n++)
        if (b)
          "'" !== t.charAt(n) || _("'") ? k() : b = !1;
        else
          switch (t.charAt(n)) {
            case "d":
              v = x("d");
              break;
            case "D":
              w("D", d, c);
              break;
            case "o":
              y = x("o");
              break;
            case "m":
              g = x("m");
              break;
            case "M":
              g = w("M", p, f);
              break;
            case "y":
              m = x("y");
              break;
            case "@":
              r = new Date(x("@")), m = r.getFullYear(), g = r.getMonth() + 1, v = r.getDate();
              break;
            case "!":
              r = new Date((x("!") - this._ticksTo1970) / 1e4), m = r.getFullYear(), g = r.getMonth() + 1, v = r.getDate();
              break;
            case "'":
              _("'") ? k() : b = !0;
              break;
            default:
              k();
          }
      if (i.length > h && (o = i.substr(h), !/^\s+/.test(o)))
        throw "Extra/unparsed characters found in date: " + o;
      if (-1 === m ? m = (new Date).getFullYear() : 100 > m && (m += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (u >= m ? 0 : -100)), y > -1)
        for (g = 1, v = y; ; ) {
          if (a = this._getDaysInMonth(m, g - 1), a >= v)
            break;
          g++, v -= a;
        }
      if (r = this._daylightSavingAdjust(new Date(m, g - 1, v)), r.getFullYear() !== m || r.getMonth() + 1 !== g || r.getDate() !== v)
        throw "Invalid date";
      return r;
    },
    ATOM: "yy-mm-dd",
    COOKIE: "D, dd M yy",
    ISO_8601: "yy-mm-dd",
    RFC_822: "D, d M y",
    RFC_850: "DD, dd-M-y",
    RFC_1036: "D, d M y",
    RFC_1123: "D, d M yy",
    RFC_2822: "D, d M yy",
    RSS: "D, d M y",
    TICKS: "!",
    TIMESTAMP: "@",
    W3C: "yy-mm-dd",
    _ticksTo1970: 1e7 * 60 * 60 * 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)),
    formatDate: function(e, t, i) {
      if (!t)
        return "";
      var s,
          n = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort,
          a = (i ? i.dayNames : null) || this._defaults.dayNames,
          o = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort,
          r = (i ? i.monthNames : null) || this._defaults.monthNames,
          h = function(t) {
            var i = e.length > s + 1 && e.charAt(s + 1) === t;
            return i && s++, i;
          },
          l = function(e, t, i) {
            var s = "" + t;
            if (h(e))
              for (; i > s.length; )
                s = "0" + s;
            return s;
          },
          u = function(e, t, i, s) {
            return h(e) ? s[t] : i[t];
          },
          d = "",
          c = !1;
      if (t)
        for (s = 0; e.length > s; s++)
          if (c)
            "'" !== e.charAt(s) || h("'") ? d += e.charAt(s) : c = !1;
          else
            switch (e.charAt(s)) {
              case "d":
                d += l("d", t.getDate(), 2);
                break;
              case "D":
                d += u("D", t.getDay(), n, a);
                break;
              case "o":
                d += l("o", Math.round((new Date(t.getFullYear(), t.getMonth(), t.getDate()).getTime() - new Date(t.getFullYear(), 0, 0).getTime()) / 864e5), 3);
                break;
              case "m":
                d += l("m", t.getMonth() + 1, 2);
                break;
              case "M":
                d += u("M", t.getMonth(), o, r);
                break;
              case "y":
                d += h("y") ? t.getFullYear() : (10 > t.getYear() % 100 ? "0" : "") + t.getYear() % 100;
                break;
              case "@":
                d += t.getTime();
                break;
              case "!":
                d += 1e4 * t.getTime() + this._ticksTo1970;
                break;
              case "'":
                h("'") ? d += "'" : c = !0;
                break;
              default:
                d += e.charAt(s);
            }
      return d;
    },
    _possibleChars: function(e) {
      var t,
          i = "",
          s = !1,
          n = function(i) {
            var s = e.length > t + 1 && e.charAt(t + 1) === i;
            return s && t++, s;
          };
      for (t = 0; e.length > t; t++)
        if (s)
          "'" !== e.charAt(t) || n("'") ? i += e.charAt(t) : s = !1;
        else
          switch (e.charAt(t)) {
            case "d":
            case "m":
            case "y":
            case "@":
              i += "0123456789";
              break;
            case "D":
            case "M":
              return null;
            case "'":
              n("'") ? i += "'" : s = !0;
              break;
            default:
              i += e.charAt(t);
          }
      return i;
    },
    _get: function(e, t) {
      return void 0 !== e.settings[t] ? e.settings[t] : this._defaults[t];
    },
    _setDateFromField: function(e, t) {
      if (e.input.val() !== e.lastVal) {
        var i = this._get(e, "dateFormat"),
            s = e.lastVal = e.input ? e.input.val() : null,
            n = this._getDefaultDate(e),
            a = n,
            o = this._getFormatConfig(e);
        try {
          a = this.parseDate(i, s, o) || n;
        } catch (r) {
          s = t ? "" : s;
        }
        e.selectedDay = a.getDate(), e.drawMonth = e.selectedMonth = a.getMonth(), e.drawYear = e.selectedYear = a.getFullYear(), e.currentDay = s ? a.getDate() : 0, e.currentMonth = s ? a.getMonth() : 0, e.currentYear = s ? a.getFullYear() : 0, this._adjustInstDate(e);
      }
    },
    _getDefaultDate: function(e) {
      return this._restrictMinMax(e, this._determineDate(e, this._get(e, "defaultDate"), new Date));
    },
    _determineDate: function(t, i, s) {
      var n = function(e) {
        var t = new Date;
        return t.setDate(t.getDate() + e), t;
      },
          a = function(i) {
            try {
              return e.datepicker.parseDate(e.datepicker._get(t, "dateFormat"), i, e.datepicker._getFormatConfig(t));
            } catch (s) {}
            for (var n = (i.toLowerCase().match(/^c/) ? e.datepicker._getDate(t) : null) || new Date,
                a = n.getFullYear(),
                o = n.getMonth(),
                r = n.getDate(),
                h = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g,
                l = h.exec(i); l; ) {
              switch (l[2] || "d") {
                case "d":
                case "D":
                  r += parseInt(l[1], 10);
                  break;
                case "w":
                case "W":
                  r += 7 * parseInt(l[1], 10);
                  break;
                case "m":
                case "M":
                  o += parseInt(l[1], 10), r = Math.min(r, e.datepicker._getDaysInMonth(a, o));
                  break;
                case "y":
                case "Y":
                  a += parseInt(l[1], 10), r = Math.min(r, e.datepicker._getDaysInMonth(a, o));
              }
              l = h.exec(i);
            }
            return new Date(a, o, r);
          },
          o = null == i || "" === i ? s : "string" == typeof i ? a(i) : "number" == typeof i ? isNaN(i) ? s : n(i) : new Date(i.getTime());
      return o = o && "Invalid Date" == "" + o ? s : o, o && (o.setHours(0), o.setMinutes(0), o.setSeconds(0), o.setMilliseconds(0)), this._daylightSavingAdjust(o);
    },
    _daylightSavingAdjust: function(e) {
      return e ? (e.setHours(e.getHours() > 12 ? e.getHours() + 2 : 0), e) : null;
    },
    _setDate: function(e, t, i) {
      var s = !t,
          n = e.selectedMonth,
          a = e.selectedYear,
          o = this._restrictMinMax(e, this._determineDate(e, t, new Date));
      e.selectedDay = e.currentDay = o.getDate(), e.drawMonth = e.selectedMonth = e.currentMonth = o.getMonth(), e.drawYear = e.selectedYear = e.currentYear = o.getFullYear(), n === e.selectedMonth && a === e.selectedYear || i || this._notifyChange(e), this._adjustInstDate(e), e.input && e.input.val(s ? "" : this._formatDate(e));
    },
    _getDate: function(e) {
      var t = !e.currentYear || e.input && "" === e.input.val() ? null : this._daylightSavingAdjust(new Date(e.currentYear, e.currentMonth, e.currentDay));
      return t;
    },
    _attachHandlers: function(t) {
      var i = this._get(t, "stepMonths"),
          s = "#" + t.id.replace(/\\\\/g, "\\");
      t.dpDiv.find("[data-handler]").map(function() {
        var t = {
          prev: function() {
            e.datepicker._adjustDate(s, -i, "M");
          },
          next: function() {
            e.datepicker._adjustDate(s, +i, "M");
          },
          hide: function() {
            e.datepicker._hideDatepicker();
          },
          today: function() {
            e.datepicker._gotoToday(s);
          },
          selectDay: function() {
            return e.datepicker._selectDay(s, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), !1;
          },
          selectMonth: function() {
            return e.datepicker._selectMonthYear(s, this, "M"), !1;
          },
          selectYear: function() {
            return e.datepicker._selectMonthYear(s, this, "Y"), !1;
          }
        };
        e(this).bind(this.getAttribute("data-event"), t[this.getAttribute("data-handler")]);
      });
    },
    _generateHTML: function(e) {
      var t,
          i,
          s,
          n,
          a,
          o,
          r,
          h,
          l,
          u,
          d,
          c,
          p,
          f,
          m,
          g,
          v,
          y,
          b,
          _,
          x,
          w,
          k,
          T,
          D,
          S,
          M,
          C,
          N,
          A,
          P,
          I,
          H,
          z,
          F,
          E,
          O,
          j,
          W,
          L = new Date,
          R = this._daylightSavingAdjust(new Date(L.getFullYear(), L.getMonth(), L.getDate())),
          Y = this._get(e, "isRTL"),
          B = this._get(e, "showButtonPanel"),
          J = this._get(e, "hideIfNoPrevNext"),
          q = this._get(e, "navigationAsDateFormat"),
          K = this._getNumberOfMonths(e),
          V = this._get(e, "showCurrentAtPos"),
          U = this._get(e, "stepMonths"),
          Q = 1 !== K[0] || 1 !== K[1],
          G = this._daylightSavingAdjust(e.currentDay ? new Date(e.currentYear, e.currentMonth, e.currentDay) : new Date(9999, 9, 9)),
          X = this._getMinMaxDate(e, "min"),
          $ = this._getMinMaxDate(e, "max"),
          Z = e.drawMonth - V,
          et = e.drawYear;
      if (0 > Z && (Z += 12, et--), $)
        for (t = this._daylightSavingAdjust(new Date($.getFullYear(), $.getMonth() - K[0] * K[1] + 1, $.getDate())), t = X && X > t ? X : t; this._daylightSavingAdjust(new Date(et, Z, 1)) > t; )
          Z--, 0 > Z && (Z = 11, et--);
      for (e.drawMonth = Z, e.drawYear = et, i = this._get(e, "prevText"), i = q ? this.formatDate(i, this._daylightSavingAdjust(new Date(et, Z - U, 1)), this._getFormatConfig(e)) : i, s = this._canAdjustMonth(e, -1, et, Z) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + i + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "e" : "w") + "'>" + i + "</span></a>" : J ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + i + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "e" : "w") + "'>" + i + "</span></a>", n = this._get(e, "nextText"), n = q ? this.formatDate(n, this._daylightSavingAdjust(new Date(et, Z + U, 1)), this._getFormatConfig(e)) : n, a = this._canAdjustMonth(e, 1, et, Z) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + n + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "w" : "e") + "'>" + n + "</span></a>" : J ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + n + "'><span class='ui-icon ui-icon-circle-triangle-" + (Y ? "w" : "e") + "'>" + n + "</span></a>", o = this._get(e, "currentText"), r = this._get(e, "gotoCurrent") && e.currentDay ? G : R, o = q ? this.formatDate(o, r, this._getFormatConfig(e)) : o, h = e.inline ? "" : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(e, "closeText") + "</button>", l = B ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (Y ? h : "") + (this._isInRange(e, r) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + o + "</button>" : "") + (Y ? "" : h) + "</div>" : "", u = parseInt(this._get(e, "firstDay"), 10), u = isNaN(u) ? 0 : u, d = this._get(e, "showWeek"), c = this._get(e, "dayNames"), p = this._get(e, "dayNamesMin"), f = this._get(e, "monthNames"), m = this._get(e, "monthNamesShort"), g = this._get(e, "beforeShowDay"), v = this._get(e, "showOtherMonths"), y = this._get(e, "selectOtherMonths"), b = this._getDefaultDate(e), _ = "", w = 0; K[0] > w; w++) {
        for (k = "", this.maxRows = 4, T = 0; K[1] > T; T++) {
          if (D = this._daylightSavingAdjust(new Date(et, Z, e.selectedDay)), S = " ui-corner-all", M = "", Q) {
            if (M += "<div class='ui-datepicker-group", K[1] > 1)
              switch (T) {
                case 0:
                  M += " ui-datepicker-group-first", S = " ui-corner-" + (Y ? "right" : "left");
                  break;
                case K[1] - 1:
                  M += " ui-datepicker-group-last", S = " ui-corner-" + (Y ? "left" : "right");
                  break;
                default:
                  M += " ui-datepicker-group-middle", S = "";
              }
            M += "'>";
          }
          for (M += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + S + "'>" + (/all|left/.test(S) && 0 === w ? Y ? a : s : "") + (/all|right/.test(S) && 0 === w ? Y ? s : a : "") + this._generateMonthYearHeader(e, Z, et, X, $, w > 0 || T > 0, f, m) + "</div><table class='ui-datepicker-calendar'><thead>" + "<tr>", C = d ? "<th class='ui-datepicker-week-col'>" + this._get(e, "weekHeader") + "</th>" : "", x = 0; 7 > x; x++)
            N = (x + u) % 7, C += "<th scope='col'" + ((x + u + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + ">" + "<span title='" + c[N] + "'>" + p[N] + "</span></th>";
          for (M += C + "</tr></thead><tbody>", A = this._getDaysInMonth(et, Z), et === e.selectedYear && Z === e.selectedMonth && (e.selectedDay = Math.min(e.selectedDay, A)), P = (this._getFirstDayOfMonth(et, Z) - u + 7) % 7, I = Math.ceil((P + A) / 7), H = Q ? this.maxRows > I ? this.maxRows : I : I, this.maxRows = H, z = this._daylightSavingAdjust(new Date(et, Z, 1 - P)), F = 0; H > F; F++) {
            for (M += "<tr>", E = d ? "<td class='ui-datepicker-week-col'>" + this._get(e, "calculateWeek")(z) + "</td>" : "", x = 0; 7 > x; x++)
              O = g ? g.apply(e.input ? e.input[0] : null, [z]) : [!0, ""], j = z.getMonth() !== Z, W = j && !y || !O[0] || X && X > z || $ && z > $, E += "<td class='" + ((x + u + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (j ? " ui-datepicker-other-month" : "") + (z.getTime() === D.getTime() && Z === e.selectedMonth && e._keyEvent || b.getTime() === z.getTime() && b.getTime() === D.getTime() ? " " + this._dayOverClass : "") + (W ? " " + this._unselectableClass + " ui-state-disabled" : "") + (j && !v ? "" : " " + O[1] + (z.getTime() === G.getTime() ? " " + this._currentClass : "") + (z.getTime() === R.getTime() ? " ui-datepicker-today" : "")) + "'" + (j && !v || !O[2] ? "" : " title='" + O[2].replace(/'/g, "&#39;") + "'") + (W ? "" : " data-handler='selectDay' data-event='click' data-month='" + z.getMonth() + "' data-year='" + z.getFullYear() + "'") + ">" + (j && !v ? "&#xa0;" : W ? "<span class='ui-state-default'>" + z.getDate() + "</span>" : "<a class='ui-state-default" + (z.getTime() === R.getTime() ? " ui-state-highlight" : "") + (z.getTime() === G.getTime() ? " ui-state-active" : "") + (j ? " ui-priority-secondary" : "") + "' href='#'>" + z.getDate() + "</a>") + "</td>", z.setDate(z.getDate() + 1), z = this._daylightSavingAdjust(z);
            M += E + "</tr>";
          }
          Z++, Z > 11 && (Z = 0, et++), M += "</tbody></table>" + (Q ? "</div>" + (K[0] > 0 && T === K[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : ""), k += M;
        }
        _ += k;
      }
      return _ += l, e._keyEvent = !1, _;
    },
    _generateMonthYearHeader: function(e, t, i, s, n, a, o, r) {
      var h,
          l,
          u,
          d,
          c,
          p,
          f,
          m,
          g = this._get(e, "changeMonth"),
          v = this._get(e, "changeYear"),
          y = this._get(e, "showMonthAfterYear"),
          b = "<div class='ui-datepicker-title'>",
          _ = "";
      if (a || !g)
        _ += "<span class='ui-datepicker-month'>" + o[t] + "</span>";
      else {
        for (h = s && s.getFullYear() === i, l = n && n.getFullYear() === i, _ += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>", u = 0; 12 > u; u++)
          (!h || u >= s.getMonth()) && (!l || n.getMonth() >= u) && (_ += "<option value='" + u + "'" + (u === t ? " selected='selected'" : "") + ">" + r[u] + "</option>");
        _ += "</select>";
      }
      if (y || (b += _ + (!a && g && v ? "" : "&#xa0;")), !e.yearshtml)
        if (e.yearshtml = "", a || !v)
          b += "<span class='ui-datepicker-year'>" + i + "</span>";
        else {
          for (d = this._get(e, "yearRange").split(":"), c = (new Date).getFullYear(), p = function(e) {
            var t = e.match(/c[+\-].*/) ? i + parseInt(e.substring(1), 10) : e.match(/[+\-].*/) ? c + parseInt(e, 10) : parseInt(e, 10);
            return isNaN(t) ? c : t;
          }, f = p(d[0]), m = Math.max(f, p(d[1] || "")), f = s ? Math.max(f, s.getFullYear()) : f, m = n ? Math.min(m, n.getFullYear()) : m, e.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>"; m >= f; f++)
            e.yearshtml += "<option value='" + f + "'" + (f === i ? " selected='selected'" : "") + ">" + f + "</option>";
          e.yearshtml += "</select>", b += e.yearshtml, e.yearshtml = null;
        }
      return b += this._get(e, "yearSuffix"), y && (b += (!a && g && v ? "" : "&#xa0;") + _), b += "</div>";
    },
    _adjustInstDate: function(e, t, i) {
      var s = e.drawYear + ("Y" === i ? t : 0),
          n = e.drawMonth + ("M" === i ? t : 0),
          a = Math.min(e.selectedDay, this._getDaysInMonth(s, n)) + ("D" === i ? t : 0),
          o = this._restrictMinMax(e, this._daylightSavingAdjust(new Date(s, n, a)));
      e.selectedDay = o.getDate(), e.drawMonth = e.selectedMonth = o.getMonth(), e.drawYear = e.selectedYear = o.getFullYear(), ("M" === i || "Y" === i) && this._notifyChange(e);
    },
    _restrictMinMax: function(e, t) {
      var i = this._getMinMaxDate(e, "min"),
          s = this._getMinMaxDate(e, "max"),
          n = i && i > t ? i : t;
      return s && n > s ? s : n;
    },
    _notifyChange: function(e) {
      var t = this._get(e, "onChangeMonthYear");
      t && t.apply(e.input ? e.input[0] : null, [e.selectedYear, e.selectedMonth + 1, e]);
    },
    _getNumberOfMonths: function(e) {
      var t = this._get(e, "numberOfMonths");
      return null == t ? [1, 1] : "number" == typeof t ? [1, t] : t;
    },
    _getMinMaxDate: function(e, t) {
      return this._determineDate(e, this._get(e, t + "Date"), null);
    },
    _getDaysInMonth: function(e, t) {
      return 32 - this._daylightSavingAdjust(new Date(e, t, 32)).getDate();
    },
    _getFirstDayOfMonth: function(e, t) {
      return new Date(e, t, 1).getDay();
    },
    _canAdjustMonth: function(e, t, i, s) {
      var n = this._getNumberOfMonths(e),
          a = this._daylightSavingAdjust(new Date(i, s + (0 > t ? t : n[0] * n[1]), 1));
      return 0 > t && a.setDate(this._getDaysInMonth(a.getFullYear(), a.getMonth())), this._isInRange(e, a);
    },
    _isInRange: function(e, t) {
      var i,
          s,
          n = this._getMinMaxDate(e, "min"),
          a = this._getMinMaxDate(e, "max"),
          o = null,
          r = null,
          h = this._get(e, "yearRange");
      return h && (i = h.split(":"), s = (new Date).getFullYear(), o = parseInt(i[0], 10), r = parseInt(i[1], 10), i[0].match(/[+\-].*/) && (o += s), i[1].match(/[+\-].*/) && (r += s)), (!n || t.getTime() >= n.getTime()) && (!a || t.getTime() <= a.getTime()) && (!o || t.getFullYear() >= o) && (!r || r >= t.getFullYear());
    },
    _getFormatConfig: function(e) {
      var t = this._get(e, "shortYearCutoff");
      return t = "string" != typeof t ? t : (new Date).getFullYear() % 100 + parseInt(t, 10), {
        shortYearCutoff: t,
        dayNamesShort: this._get(e, "dayNamesShort"),
        dayNames: this._get(e, "dayNames"),
        monthNamesShort: this._get(e, "monthNamesShort"),
        monthNames: this._get(e, "monthNames")
      };
    },
    _formatDate: function(e, t, i, s) {
      t || (e.currentDay = e.selectedDay, e.currentMonth = e.selectedMonth, e.currentYear = e.selectedYear);
      var n = t ? "object" == typeof t ? t : this._daylightSavingAdjust(new Date(s, i, t)) : this._daylightSavingAdjust(new Date(e.currentYear, e.currentMonth, e.currentDay));
      return this.formatDate(this._get(e, "dateFormat"), n, this._getFormatConfig(e));
    }
  }), e.fn.datepicker = function(t) {
    if (!this.length)
      return this;
    e.datepicker.initialized || (e(document).mousedown(e.datepicker._checkExternalClick), e.datepicker.initialized = !0), 0 === e("#" + e.datepicker._mainDivId).length && e("body").append(e.datepicker.dpDiv);
    var i = Array.prototype.slice.call(arguments, 1);
    return "string" != typeof t || "isDisabled" !== t && "getDate" !== t && "widget" !== t ? "option" === t && 2 === arguments.length && "string" == typeof arguments[1] ? e.datepicker["_" + t + "Datepicker"].apply(e.datepicker, [this[0]].concat(i)) : this.each(function() {
      "string" == typeof t ? e.datepicker["_" + t + "Datepicker"].apply(e.datepicker, [this].concat(i)) : e.datepicker._attachDatepicker(this, t);
    }) : e.datepicker["_" + t + "Datepicker"].apply(e.datepicker, [this[0]].concat(i));
  }, e.datepicker = new n, e.datepicker.initialized = !1, e.datepicker.uuid = (new Date).getTime(), e.datepicker.version = "1.11.4", e.datepicker, e.widget("ui.draggable", e.ui.mouse, {
    version: "1.11.4",
    widgetEventPrefix: "drag",
    options: {
      addClasses: !0,
      appendTo: "parent",
      axis: !1,
      connectToSortable: !1,
      containment: !1,
      cursor: "auto",
      cursorAt: !1,
      grid: !1,
      handle: !1,
      helper: "original",
      iframeFix: !1,
      opacity: !1,
      refreshPositions: !1,
      revert: !1,
      revertDuration: 500,
      scope: "default",
      scroll: !0,
      scrollSensitivity: 20,
      scrollSpeed: 20,
      snap: !1,
      snapMode: "both",
      snapTolerance: 20,
      stack: !1,
      zIndex: !1,
      drag: null,
      start: null,
      stop: null
    },
    _create: function() {
      "original" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._setHandleClassName(), this._mouseInit();
    },
    _setOption: function(e, t) {
      this._super(e, t), "handle" === e && (this._removeHandleClassName(), this._setHandleClassName());
    },
    _destroy: function() {
      return (this.helper || this.element).is(".ui-draggable-dragging") ? (this.destroyOnClear = !0, void 0) : (this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._removeHandleClassName(), this._mouseDestroy(), void 0);
    },
    _mouseCapture: function(t) {
      var i = this.options;
      return this._blurActiveElement(t), this.helper || i.disabled || e(t.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(t), this.handle ? (this._blockFrames(i.iframeFix === !0 ? "iframe" : i.iframeFix), !0) : !1);
    },
    _blockFrames: function(t) {
      this.iframeBlocks = this.document.find(t).map(function() {
        var t = e(this);
        return e("<div>").css("position", "absolute").appendTo(t.parent()).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).offset(t.offset())[0];
      });
    },
    _unblockFrames: function() {
      this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
    },
    _blurActiveElement: function(t) {
      var i = this.document[0];
      if (this.handleElement.is(t.target))
        try {
          i.activeElement && "body" !== i.activeElement.nodeName.toLowerCase() && e(i.activeElement).blur();
        } catch (s) {}
    },
    _mouseStart: function(t) {
      var i = this.options;
      return this.helper = this._createHelper(t), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), e.ui.ddmanager && (e.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(!0), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = this.helper.parents().filter(function() {
        return "fixed" === e(this).css("position");
      }).length > 0, this.positionAbs = this.element.offset(), this._refreshOffsets(t), this.originalPosition = this.position = this._generatePosition(t, !1), this.originalPageX = t.pageX, this.originalPageY = t.pageY, i.cursorAt && this._adjustOffsetFromHelper(i.cursorAt), this._setContainment(), this._trigger("start", t) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), e.ui.ddmanager && !i.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t), this._normalizeRightBottom(), this._mouseDrag(t, !0), e.ui.ddmanager && e.ui.ddmanager.dragStart(this, t), !0);
    },
    _refreshOffsets: function(e) {
      this.offset = {
        top: this.positionAbs.top - this.margins.top,
        left: this.positionAbs.left - this.margins.left,
        scroll: !1,
        parent: this._getParentOffset(),
        relative: this._getRelativeOffset()
      }, this.offset.click = {
        left: e.pageX - this.offset.left,
        top: e.pageY - this.offset.top
      };
    },
    _mouseDrag: function(t, i) {
      if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(t, !0), this.positionAbs = this._convertPositionTo("absolute"), !i) {
        var s = this._uiHash();
        if (this._trigger("drag", t, s) === !1)
          return this._mouseUp({}), !1;
        this.position = s.position;
      }
      return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", e.ui.ddmanager && e.ui.ddmanager.drag(this, t), !1;
    },
    _mouseStop: function(t) {
      var i = this,
          s = !1;
      return e.ui.ddmanager && !this.options.dropBehaviour && (s = e.ui.ddmanager.drop(this, t)), this.dropped && (s = this.dropped, this.dropped = !1), "invalid" === this.options.revert && !s || "valid" === this.options.revert && s || this.options.revert === !0 || e.isFunction(this.options.revert) && this.options.revert.call(this.element, s) ? e(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
        i._trigger("stop", t) !== !1 && i._clear();
      }) : this._trigger("stop", t) !== !1 && this._clear(), !1;
    },
    _mouseUp: function(t) {
      return this._unblockFrames(), e.ui.ddmanager && e.ui.ddmanager.dragStop(this, t), this.handleElement.is(t.target) && this.element.focus(), e.ui.mouse.prototype._mouseUp.call(this, t);
    },
    cancel: function() {
      return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this;
    },
    _getHandle: function(t) {
      return this.options.handle ? !!e(t.target).closest(this.element.find(this.options.handle)).length : !0;
    },
    _setHandleClassName: function() {
      this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, this.handleElement.addClass("ui-draggable-handle");
    },
    _removeHandleClassName: function() {
      this.handleElement.removeClass("ui-draggable-handle");
    },
    _createHelper: function(t) {
      var i = this.options,
          s = e.isFunction(i.helper),
          n = s ? e(i.helper.apply(this.element[0], [t])) : "clone" === i.helper ? this.element.clone().removeAttr("id") : this.element;
      return n.parents("body").length || n.appendTo("parent" === i.appendTo ? this.element[0].parentNode : i.appendTo), s && n[0] === this.element[0] && this._setPositionRelative(), n[0] === this.element[0] || /(fixed|absolute)/.test(n.css("position")) || n.css("position", "absolute"), n;
    },
    _setPositionRelative: function() {
      /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative");
    },
    _adjustOffsetFromHelper: function(t) {
      "string" == typeof t && (t = t.split(" ")), e.isArray(t) && (t = {
        left: +t[0],
        top: +t[1] || 0
      }), "left" in t && (this.offset.click.left = t.left + this.margins.left), "right" in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left), "top" in t && (this.offset.click.top = t.top + this.margins.top), "bottom" in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top);
    },
    _isRootNode: function(e) {
      return /(html|body)/i.test(e.tagName) || e === this.document[0];
    },
    _getParentOffset: function() {
      var t = this.offsetParent.offset(),
          i = this.document[0];
      return "absolute" === this.cssPosition && this.scrollParent[0] !== i && e.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(), t.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (t = {
        top: 0,
        left: 0
      }), {
        top: t.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
        left: t.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
      };
    },
    _getRelativeOffset: function() {
      if ("relative" !== this.cssPosition)
        return {
          top: 0,
          left: 0
        };
      var e = this.element.position(),
          t = this._isRootNode(this.scrollParent[0]);
      return {
        top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + (t ? 0 : this.scrollParent.scrollTop()),
        left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + (t ? 0 : this.scrollParent.scrollLeft())
      };
    },
    _cacheMargins: function() {
      this.margins = {
        left: parseInt(this.element.css("marginLeft"), 10) || 0,
        top: parseInt(this.element.css("marginTop"), 10) || 0,
        right: parseInt(this.element.css("marginRight"), 10) || 0,
        bottom: parseInt(this.element.css("marginBottom"), 10) || 0
      };
    },
    _cacheHelperProportions: function() {
      this.helperProportions = {
        width: this.helper.outerWidth(),
        height: this.helper.outerHeight()
      };
    },
    _setContainment: function() {
      var t,
          i,
          s,
          n = this.options,
          a = this.document[0];
      return this.relativeContainer = null, n.containment ? "window" === n.containment ? (this.containment = [e(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, e(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, e(window).scrollLeft() + e(window).width() - this.helperProportions.width - this.margins.left, e(window).scrollTop() + (e(window).height() || a.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : "document" === n.containment ? (this.containment = [0, 0, e(a).width() - this.helperProportions.width - this.margins.left, (e(a).height() || a.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : n.containment.constructor === Array ? (this.containment = n.containment, void 0) : ("parent" === n.containment && (n.containment = this.helper[0].parentNode), i = e(n.containment), s = i[0], s && (t = /(scroll|auto)/.test(i.css("overflow")), this.containment = [(parseInt(i.css("borderLeftWidth"), 10) || 0) + (parseInt(i.css("paddingLeft"), 10) || 0), (parseInt(i.css("borderTopWidth"), 10) || 0) + (parseInt(i.css("paddingTop"), 10) || 0), (t ? Math.max(s.scrollWidth, s.offsetWidth) : s.offsetWidth) - (parseInt(i.css("borderRightWidth"), 10) || 0) - (parseInt(i.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (t ? Math.max(s.scrollHeight, s.offsetHeight) : s.offsetHeight) - (parseInt(i.css("borderBottomWidth"), 10) || 0) - (parseInt(i.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relativeContainer = i), void 0) : (this.containment = null, void 0);
    },
    _convertPositionTo: function(e, t) {
      t || (t = this.position);
      var i = "absolute" === e ? 1 : -1,
          s = this._isRootNode(this.scrollParent[0]);
      return {
        top: t.top + this.offset.relative.top * i + this.offset.parent.top * i - ("fixed" === this.cssPosition ? -this.offset.scroll.top : s ? 0 : this.offset.scroll.top) * i,
        left: t.left + this.offset.relative.left * i + this.offset.parent.left * i - ("fixed" === this.cssPosition ? -this.offset.scroll.left : s ? 0 : this.offset.scroll.left) * i
      };
    },
    _generatePosition: function(e, t) {
      var i,
          s,
          n,
          a,
          o = this.options,
          r = this._isRootNode(this.scrollParent[0]),
          h = e.pageX,
          l = e.pageY;
      return r && this.offset.scroll || (this.offset.scroll = {
        top: this.scrollParent.scrollTop(),
        left: this.scrollParent.scrollLeft()
      }), t && (this.containment && (this.relativeContainer ? (s = this.relativeContainer.offset(), i = [this.containment[0] + s.left, this.containment[1] + s.top, this.containment[2] + s.left, this.containment[3] + s.top]) : i = this.containment, e.pageX - this.offset.click.left < i[0] && (h = i[0] + this.offset.click.left), e.pageY - this.offset.click.top < i[1] && (l = i[1] + this.offset.click.top), e.pageX - this.offset.click.left > i[2] && (h = i[2] + this.offset.click.left), e.pageY - this.offset.click.top > i[3] && (l = i[3] + this.offset.click.top)), o.grid && (n = o.grid[1] ? this.originalPageY + Math.round((l - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY, l = i ? n - this.offset.click.top >= i[1] || n - this.offset.click.top > i[3] ? n : n - this.offset.click.top >= i[1] ? n - o.grid[1] : n + o.grid[1] : n, a = o.grid[0] ? this.originalPageX + Math.round((h - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX, h = i ? a - this.offset.click.left >= i[0] || a - this.offset.click.left > i[2] ? a : a - this.offset.click.left >= i[0] ? a - o.grid[0] : a + o.grid[0] : a), "y" === o.axis && (h = this.originalPageX), "x" === o.axis && (l = this.originalPageY)), {
        top: l - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : r ? 0 : this.offset.scroll.top),
        left: h - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : r ? 0 : this.offset.scroll.left)
      };
    },
    _clear: function() {
      this.helper.removeClass("ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy();
    },
    _normalizeRightBottom: function() {
      "y" !== this.options.axis && "auto" !== this.helper.css("right") && (this.helper.width(this.helper.width()), this.helper.css("right", "auto")), "x" !== this.options.axis && "auto" !== this.helper.css("bottom") && (this.helper.height(this.helper.height()), this.helper.css("bottom", "auto"));
    },
    _trigger: function(t, i, s) {
      return s = s || this._uiHash(), e.ui.plugin.call(this, t, [i, s, this], !0), /^(drag|start|stop)/.test(t) && (this.positionAbs = this._convertPositionTo("absolute"), s.offset = this.positionAbs), e.Widget.prototype._trigger.call(this, t, i, s);
    },
    plugins: {},
    _uiHash: function() {
      return {
        helper: this.helper,
        position: this.position,
        originalPosition: this.originalPosition,
        offset: this.positionAbs
      };
    }
  }), e.ui.plugin.add("draggable", "connectToSortable", {
    start: function(t, i, s) {
      var n = e.extend({}, i, {item: s.element});
      s.sortables = [], e(s.options.connectToSortable).each(function() {
        var i = e(this).sortable("instance");
        i && !i.options.disabled && (s.sortables.push(i), i.refreshPositions(), i._trigger("activate", t, n));
      });
    },
    stop: function(t, i, s) {
      var n = e.extend({}, i, {item: s.element});
      s.cancelHelperRemoval = !1, e.each(s.sortables, function() {
        var e = this;
        e.isOver ? (e.isOver = 0, s.cancelHelperRemoval = !0, e.cancelHelperRemoval = !1, e._storedCSS = {
          position: e.placeholder.css("position"),
          top: e.placeholder.css("top"),
          left: e.placeholder.css("left")
        }, e._mouseStop(t), e.options.helper = e.options._helper) : (e.cancelHelperRemoval = !0, e._trigger("deactivate", t, n));
      });
    },
    drag: function(t, i, s) {
      e.each(s.sortables, function() {
        var n = !1,
            a = this;
        a.positionAbs = s.positionAbs, a.helperProportions = s.helperProportions, a.offset.click = s.offset.click, a._intersectsWith(a.containerCache) && (n = !0, e.each(s.sortables, function() {
          return this.positionAbs = s.positionAbs, this.helperProportions = s.helperProportions, this.offset.click = s.offset.click, this !== a && this._intersectsWith(this.containerCache) && e.contains(a.element[0], this.element[0]) && (n = !1), n;
        })), n ? (a.isOver || (a.isOver = 1, s._parent = i.helper.parent(), a.currentItem = i.helper.appendTo(a.element).data("ui-sortable-item", !0), a.options._helper = a.options.helper, a.options.helper = function() {
          return i.helper[0];
        }, t.target = a.currentItem[0], a._mouseCapture(t, !0), a._mouseStart(t, !0, !0), a.offset.click.top = s.offset.click.top, a.offset.click.left = s.offset.click.left, a.offset.parent.left -= s.offset.parent.left - a.offset.parent.left, a.offset.parent.top -= s.offset.parent.top - a.offset.parent.top, s._trigger("toSortable", t), s.dropped = a.element, e.each(s.sortables, function() {
          this.refreshPositions();
        }), s.currentItem = s.element, a.fromOutside = s), a.currentItem && (a._mouseDrag(t), i.position = a.position)) : a.isOver && (a.isOver = 0, a.cancelHelperRemoval = !0, a.options._revert = a.options.revert, a.options.revert = !1, a._trigger("out", t, a._uiHash(a)), a._mouseStop(t, !0), a.options.revert = a.options._revert, a.options.helper = a.options._helper, a.placeholder && a.placeholder.remove(), i.helper.appendTo(s._parent), s._refreshOffsets(t), i.position = s._generatePosition(t, !0), s._trigger("fromSortable", t), s.dropped = !1, e.each(s.sortables, function() {
          this.refreshPositions();
        }));
      });
    }
  }), e.ui.plugin.add("draggable", "cursor", {
    start: function(t, i, s) {
      var n = e("body"),
          a = s.options;
      n.css("cursor") && (a._cursor = n.css("cursor")), n.css("cursor", a.cursor);
    },
    stop: function(t, i, s) {
      var n = s.options;
      n._cursor && e("body").css("cursor", n._cursor);
    }
  }), e.ui.plugin.add("draggable", "opacity", {
    start: function(t, i, s) {
      var n = e(i.helper),
          a = s.options;
      n.css("opacity") && (a._opacity = n.css("opacity")), n.css("opacity", a.opacity);
    },
    stop: function(t, i, s) {
      var n = s.options;
      n._opacity && e(i.helper).css("opacity", n._opacity);
    }
  }), e.ui.plugin.add("draggable", "scroll", {
    start: function(e, t, i) {
      i.scrollParentNotHidden || (i.scrollParentNotHidden = i.helper.scrollParent(!1)), i.scrollParentNotHidden[0] !== i.document[0] && "HTML" !== i.scrollParentNotHidden[0].tagName && (i.overflowOffset = i.scrollParentNotHidden.offset());
    },
    drag: function(t, i, s) {
      var n = s.options,
          a = !1,
          o = s.scrollParentNotHidden[0],
          r = s.document[0];
      o !== r && "HTML" !== o.tagName ? (n.axis && "x" === n.axis || (s.overflowOffset.top + o.offsetHeight - t.pageY < n.scrollSensitivity ? o.scrollTop = a = o.scrollTop + n.scrollSpeed : t.pageY - s.overflowOffset.top < n.scrollSensitivity && (o.scrollTop = a = o.scrollTop - n.scrollSpeed)), n.axis && "y" === n.axis || (s.overflowOffset.left + o.offsetWidth - t.pageX < n.scrollSensitivity ? o.scrollLeft = a = o.scrollLeft + n.scrollSpeed : t.pageX - s.overflowOffset.left < n.scrollSensitivity && (o.scrollLeft = a = o.scrollLeft - n.scrollSpeed))) : (n.axis && "x" === n.axis || (t.pageY - e(r).scrollTop() < n.scrollSensitivity ? a = e(r).scrollTop(e(r).scrollTop() - n.scrollSpeed) : e(window).height() - (t.pageY - e(r).scrollTop()) < n.scrollSensitivity && (a = e(r).scrollTop(e(r).scrollTop() + n.scrollSpeed))), n.axis && "y" === n.axis || (t.pageX - e(r).scrollLeft() < n.scrollSensitivity ? a = e(r).scrollLeft(e(r).scrollLeft() - n.scrollSpeed) : e(window).width() - (t.pageX - e(r).scrollLeft()) < n.scrollSensitivity && (a = e(r).scrollLeft(e(r).scrollLeft() + n.scrollSpeed)))), a !== !1 && e.ui.ddmanager && !n.dropBehaviour && e.ui.ddmanager.prepareOffsets(s, t);
    }
  }), e.ui.plugin.add("draggable", "snap", {
    start: function(t, i, s) {
      var n = s.options;
      s.snapElements = [], e(n.snap.constructor !== String ? n.snap.items || ":data(ui-draggable)" : n.snap).each(function() {
        var t = e(this),
            i = t.offset();
        this !== s.element[0] && s.snapElements.push({
          item: this,
          width: t.outerWidth(),
          height: t.outerHeight(),
          top: i.top,
          left: i.left
        });
      });
    },
    drag: function(t, i, s) {
      var n,
          a,
          o,
          r,
          h,
          l,
          u,
          d,
          c,
          p,
          f = s.options,
          m = f.snapTolerance,
          g = i.offset.left,
          v = g + s.helperProportions.width,
          y = i.offset.top,
          b = y + s.helperProportions.height;
      for (c = s.snapElements.length - 1; c >= 0; c--)
        h = s.snapElements[c].left - s.margins.left, l = h + s.snapElements[c].width, u = s.snapElements[c].top - s.margins.top, d = u + s.snapElements[c].height, h - m > v || g > l + m || u - m > b || y > d + m || !e.contains(s.snapElements[c].item.ownerDocument, s.snapElements[c].item) ? (s.snapElements[c].snapping && s.options.snap.release && s.options.snap.release.call(s.element, t, e.extend(s._uiHash(), {snapItem: s.snapElements[c].item})), s.snapElements[c].snapping = !1) : ("inner" !== f.snapMode && (n = m >= Math.abs(u - b), a = m >= Math.abs(d - y), o = m >= Math.abs(h - v), r = m >= Math.abs(l - g), n && (i.position.top = s._convertPositionTo("relative", {
          top: u - s.helperProportions.height,
          left: 0
        }).top), a && (i.position.top = s._convertPositionTo("relative", {
          top: d,
          left: 0
        }).top), o && (i.position.left = s._convertPositionTo("relative", {
          top: 0,
          left: h - s.helperProportions.width
        }).left), r && (i.position.left = s._convertPositionTo("relative", {
          top: 0,
          left: l
        }).left)), p = n || a || o || r, "outer" !== f.snapMode && (n = m >= Math.abs(u - y), a = m >= Math.abs(d - b), o = m >= Math.abs(h - g), r = m >= Math.abs(l - v), n && (i.position.top = s._convertPositionTo("relative", {
          top: u,
          left: 0
        }).top), a && (i.position.top = s._convertPositionTo("relative", {
          top: d - s.helperProportions.height,
          left: 0
        }).top), o && (i.position.left = s._convertPositionTo("relative", {
          top: 0,
          left: h
        }).left), r && (i.position.left = s._convertPositionTo("relative", {
          top: 0,
          left: l - s.helperProportions.width
        }).left)), !s.snapElements[c].snapping && (n || a || o || r || p) && s.options.snap.snap && s.options.snap.snap.call(s.element, t, e.extend(s._uiHash(), {snapItem: s.snapElements[c].item})), s.snapElements[c].snapping = n || a || o || r || p);
    }
  }), e.ui.plugin.add("draggable", "stack", {start: function(t, i, s) {
      var n,
          a = s.options,
          o = e.makeArray(e(a.stack)).sort(function(t, i) {
            return (parseInt(e(t).css("zIndex"), 10) || 0) - (parseInt(e(i).css("zIndex"), 10) || 0);
          });
      o.length && (n = parseInt(e(o[0]).css("zIndex"), 10) || 0, e(o).each(function(t) {
        e(this).css("zIndex", n + t);
      }), this.css("zIndex", n + o.length));
    }}), e.ui.plugin.add("draggable", "zIndex", {
    start: function(t, i, s) {
      var n = e(i.helper),
          a = s.options;
      n.css("zIndex") && (a._zIndex = n.css("zIndex")), n.css("zIndex", a.zIndex);
    },
    stop: function(t, i, s) {
      var n = s.options;
      n._zIndex && e(i.helper).css("zIndex", n._zIndex);
    }
  }), e.ui.draggable, e.widget("ui.resizable", e.ui.mouse, {
    version: "1.11.4",
    widgetEventPrefix: "resize",
    options: {
      alsoResize: !1,
      animate: !1,
      animateDuration: "slow",
      animateEasing: "swing",
      aspectRatio: !1,
      autoHide: !1,
      containment: !1,
      ghost: !1,
      grid: !1,
      handles: "e,s,se",
      helper: !1,
      maxHeight: null,
      maxWidth: null,
      minHeight: 10,
      minWidth: 10,
      zIndex: 90,
      resize: null,
      start: null,
      stop: null
    },
    _num: function(e) {
      return parseInt(e, 10) || 0;
    },
    _isNumber: function(e) {
      return !isNaN(parseInt(e, 10));
    },
    _hasScroll: function(t, i) {
      if ("hidden" === e(t).css("overflow"))
        return !1;
      var s = i && "left" === i ? "scrollLeft" : "scrollTop",
          n = !1;
      return t[s] > 0 ? !0 : (t[s] = 1, n = t[s] > 0, t[s] = 0, n);
    },
    _create: function() {
      var t,
          i,
          s,
          n,
          a,
          o = this,
          r = this.options;
      if (this.element.addClass("ui-resizable"), e.extend(this, {
        _aspectRatio: !!r.aspectRatio,
        aspectRatio: r.aspectRatio,
        originalElement: this.element,
        _proportionallyResizeElements: [],
        _helper: r.helper || r.ghost || r.animate ? r.helper || "ui-resizable-helper" : null
      }), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
        position: this.element.css("position"),
        width: this.element.outerWidth(),
        height: this.element.outerHeight(),
        top: this.element.css("top"),
        left: this.element.css("left")
      })), this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance")), this.elementIsWrapper = !0, this.element.css({
        marginLeft: this.originalElement.css("marginLeft"),
        marginTop: this.originalElement.css("marginTop"),
        marginRight: this.originalElement.css("marginRight"),
        marginBottom: this.originalElement.css("marginBottom")
      }), this.originalElement.css({
        marginLeft: 0,
        marginTop: 0,
        marginRight: 0,
        marginBottom: 0
      }), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({
        position: "static",
        zoom: 1,
        display: "block"
      })), this.originalElement.css({margin: this.originalElement.css("margin")}), this._proportionallyResize()), this.handles = r.handles || (e(".ui-resizable-handle", this.element).length ? {
        n: ".ui-resizable-n",
        e: ".ui-resizable-e",
        s: ".ui-resizable-s",
        w: ".ui-resizable-w",
        se: ".ui-resizable-se",
        sw: ".ui-resizable-sw",
        ne: ".ui-resizable-ne",
        nw: ".ui-resizable-nw"
      } : "e,s,se"), this._handles = e(), this.handles.constructor === String)
        for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), t = this.handles.split(","), this.handles = {}, i = 0; t.length > i; i++)
          s = e.trim(t[i]), a = "ui-resizable-" + s, n = e("<div class='ui-resizable-handle " + a + "'></div>"), n.css({zIndex: r.zIndex}), "se" === s && n.addClass("ui-icon ui-icon-gripsmall-diagonal-se"), this.handles[s] = ".ui-resizable-" + s, this.element.append(n);
      this._renderAxis = function(t) {
        var i,
            s,
            n,
            a;
        t = t || this.element;
        for (i in this.handles)
          this.handles[i].constructor === String ? this.handles[i] = this.element.children(this.handles[i]).first().show() : (this.handles[i].jquery || this.handles[i].nodeType) && (this.handles[i] = e(this.handles[i]), this._on(this.handles[i], {mousedown: o._mouseDown})), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (s = e(this.handles[i], this.element), a = /sw|ne|nw|se|n|s/.test(i) ? s.outerHeight() : s.outerWidth(), n = ["padding", /ne|nw|n/.test(i) ? "Top" : /se|sw|s/.test(i) ? "Bottom" : /^e$/.test(i) ? "Right" : "Left"].join(""), t.css(n, a), this._proportionallyResize()), this._handles = this._handles.add(this.handles[i]);
      }, this._renderAxis(this.element), this._handles = this._handles.add(this.element.find(".ui-resizable-handle")), this._handles.disableSelection(), this._handles.mouseover(function() {
        o.resizing || (this.className && (n = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), o.axis = n && n[1] ? n[1] : "se");
      }), r.autoHide && (this._handles.hide(), e(this.element).addClass("ui-resizable-autohide").mouseenter(function() {
        r.disabled || (e(this).removeClass("ui-resizable-autohide"), o._handles.show());
      }).mouseleave(function() {
        r.disabled || o.resizing || (e(this).addClass("ui-resizable-autohide"), o._handles.hide());
      })), this._mouseInit();
    },
    _destroy: function() {
      this._mouseDestroy();
      var t,
          i = function(t) {
            e(t).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove();
          };
      return this.elementIsWrapper && (i(this.element), t = this.element, this.originalElement.css({
        position: t.css("position"),
        width: t.outerWidth(),
        height: t.outerHeight(),
        top: t.css("top"),
        left: t.css("left")
      }).insertAfter(t), t.remove()), this.originalElement.css("resize", this.originalResizeStyle), i(this.originalElement), this;
    },
    _mouseCapture: function(t) {
      var i,
          s,
          n = !1;
      for (i in this.handles)
        s = e(this.handles[i])[0], (s === t.target || e.contains(s, t.target)) && (n = !0);
      return !this.options.disabled && n;
    },
    _mouseStart: function(t) {
      var i,
          s,
          n,
          a = this.options,
          o = this.element;
      return this.resizing = !0, this._renderProxy(), i = this._num(this.helper.css("left")), s = this._num(this.helper.css("top")), a.containment && (i += e(a.containment).scrollLeft() || 0, s += e(a.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {
        left: i,
        top: s
      }, this.size = this._helper ? {
        width: this.helper.width(),
        height: this.helper.height()
      } : {
        width: o.width(),
        height: o.height()
      }, this.originalSize = this._helper ? {
        width: o.outerWidth(),
        height: o.outerHeight()
      } : {
        width: o.width(),
        height: o.height()
      }, this.sizeDiff = {
        width: o.outerWidth() - o.width(),
        height: o.outerHeight() - o.height()
      }, this.originalPosition = {
        left: i,
        top: s
      }, this.originalMousePosition = {
        left: t.pageX,
        top: t.pageY
      }, this.aspectRatio = "number" == typeof a.aspectRatio ? a.aspectRatio : this.originalSize.width / this.originalSize.height || 1, n = e(".ui-resizable-" + this.axis).css("cursor"), e("body").css("cursor", "auto" === n ? this.axis + "-resize" : n), o.addClass("ui-resizable-resizing"), this._propagate("start", t), !0;
    },
    _mouseDrag: function(t) {
      var i,
          s,
          n = this.originalMousePosition,
          a = this.axis,
          o = t.pageX - n.left || 0,
          r = t.pageY - n.top || 0,
          h = this._change[a];
      return this._updatePrevProperties(), h ? (i = h.apply(this, [t, o, r]), this._updateVirtualBoundaries(t.shiftKey), (this._aspectRatio || t.shiftKey) && (i = this._updateRatio(i, t)), i = this._respectSize(i, t), this._updateCache(i), this._propagate("resize", t), s = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), e.isEmptyObject(s) || (this._updatePrevProperties(), this._trigger("resize", t, this.ui()), this._applyChanges()), !1) : !1;
    },
    _mouseStop: function(t) {
      this.resizing = !1;
      var i,
          s,
          n,
          a,
          o,
          r,
          h,
          l = this.options,
          u = this;
      return this._helper && (i = this._proportionallyResizeElements, s = i.length && /textarea/i.test(i[0].nodeName), n = s && this._hasScroll(i[0], "left") ? 0 : u.sizeDiff.height, a = s ? 0 : u.sizeDiff.width, o = {
        width: u.helper.width() - a,
        height: u.helper.height() - n
      }, r = parseInt(u.element.css("left"), 10) + (u.position.left - u.originalPosition.left) || null, h = parseInt(u.element.css("top"), 10) + (u.position.top - u.originalPosition.top) || null, l.animate || this.element.css(e.extend(o, {
        top: h,
        left: r
      })), u.helper.height(u.size.height), u.helper.width(u.size.width), this._helper && !l.animate && this._proportionallyResize()), e("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", t), this._helper && this.helper.remove(), !1;
    },
    _updatePrevProperties: function() {
      this.prevPosition = {
        top: this.position.top,
        left: this.position.left
      }, this.prevSize = {
        width: this.size.width,
        height: this.size.height
      };
    },
    _applyChanges: function() {
      var e = {};
      return this.position.top !== this.prevPosition.top && (e.top = this.position.top + "px"), this.position.left !== this.prevPosition.left && (e.left = this.position.left + "px"), this.size.width !== this.prevSize.width && (e.width = this.size.width + "px"), this.size.height !== this.prevSize.height && (e.height = this.size.height + "px"), this.helper.css(e), e;
    },
    _updateVirtualBoundaries: function(e) {
      var t,
          i,
          s,
          n,
          a,
          o = this.options;
      a = {
        minWidth: this._isNumber(o.minWidth) ? o.minWidth : 0,
        maxWidth: this._isNumber(o.maxWidth) ? o.maxWidth : 1 / 0,
        minHeight: this._isNumber(o.minHeight) ? o.minHeight : 0,
        maxHeight: this._isNumber(o.maxHeight) ? o.maxHeight : 1 / 0
      }, (this._aspectRatio || e) && (t = a.minHeight * this.aspectRatio, s = a.minWidth / this.aspectRatio, i = a.maxHeight * this.aspectRatio, n = a.maxWidth / this.aspectRatio, t > a.minWidth && (a.minWidth = t), s > a.minHeight && (a.minHeight = s), a.maxWidth > i && (a.maxWidth = i), a.maxHeight > n && (a.maxHeight = n)), this._vBoundaries = a;
    },
    _updateCache: function(e) {
      this.offset = this.helper.offset(), this._isNumber(e.left) && (this.position.left = e.left), this._isNumber(e.top) && (this.position.top = e.top), this._isNumber(e.height) && (this.size.height = e.height), this._isNumber(e.width) && (this.size.width = e.width);
    },
    _updateRatio: function(e) {
      var t = this.position,
          i = this.size,
          s = this.axis;
      return this._isNumber(e.height) ? e.width = e.height * this.aspectRatio : this._isNumber(e.width) && (e.height = e.width / this.aspectRatio), "sw" === s && (e.left = t.left + (i.width - e.width), e.top = null), "nw" === s && (e.top = t.top + (i.height - e.height), e.left = t.left + (i.width - e.width)), e;
    },
    _respectSize: function(e) {
      var t = this._vBoundaries,
          i = this.axis,
          s = this._isNumber(e.width) && t.maxWidth && t.maxWidth < e.width,
          n = this._isNumber(e.height) && t.maxHeight && t.maxHeight < e.height,
          a = this._isNumber(e.width) && t.minWidth && t.minWidth > e.width,
          o = this._isNumber(e.height) && t.minHeight && t.minHeight > e.height,
          r = this.originalPosition.left + this.originalSize.width,
          h = this.position.top + this.size.height,
          l = /sw|nw|w/.test(i),
          u = /nw|ne|n/.test(i);
      return a && (e.width = t.minWidth), o && (e.height = t.minHeight), s && (e.width = t.maxWidth), n && (e.height = t.maxHeight), a && l && (e.left = r - t.minWidth), s && l && (e.left = r - t.maxWidth), o && u && (e.top = h - t.minHeight), n && u && (e.top = h - t.maxHeight), e.width || e.height || e.left || !e.top ? e.width || e.height || e.top || !e.left || (e.left = null) : e.top = null, e;
    },
    _getPaddingPlusBorderDimensions: function(e) {
      for (var t = 0,
          i = [],
          s = [e.css("borderTopWidth"), e.css("borderRightWidth"), e.css("borderBottomWidth"), e.css("borderLeftWidth")],
          n = [e.css("paddingTop"), e.css("paddingRight"), e.css("paddingBottom"), e.css("paddingLeft")]; 4 > t; t++)
        i[t] = parseInt(s[t], 10) || 0, i[t] += parseInt(n[t], 10) || 0;
      return {
        height: i[0] + i[2],
        width: i[1] + i[3]
      };
    },
    _proportionallyResize: function() {
      if (this._proportionallyResizeElements.length)
        for (var e,
            t = 0,
            i = this.helper || this.element; this._proportionallyResizeElements.length > t; t++)
          e = this._proportionallyResizeElements[t], this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(e)), e.css({
            height: i.height() - this.outerDimensions.height || 0,
            width: i.width() - this.outerDimensions.width || 0
          });
    },
    _renderProxy: function() {
      var t = this.element,
          i = this.options;
      this.elementOffset = t.offset(), this._helper ? (this.helper = this.helper || e("<div style='overflow:hidden;'></div>"), this.helper.addClass(this._helper).css({
        width: this.element.outerWidth() - 1,
        height: this.element.outerHeight() - 1,
        position: "absolute",
        left: this.elementOffset.left + "px",
        top: this.elementOffset.top + "px",
        zIndex: ++i.zIndex
      }), this.helper.appendTo("body").disableSelection()) : this.helper = this.element;
    },
    _change: {
      e: function(e, t) {
        return {width: this.originalSize.width + t};
      },
      w: function(e, t) {
        var i = this.originalSize,
            s = this.originalPosition;
        return {
          left: s.left + t,
          width: i.width - t
        };
      },
      n: function(e, t, i) {
        var s = this.originalSize,
            n = this.originalPosition;
        return {
          top: n.top + i,
          height: s.height - i
        };
      },
      s: function(e, t, i) {
        return {height: this.originalSize.height + i};
      },
      se: function(t, i, s) {
        return e.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [t, i, s]));
      },
      sw: function(t, i, s) {
        return e.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [t, i, s]));
      },
      ne: function(t, i, s) {
        return e.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [t, i, s]));
      },
      nw: function(t, i, s) {
        return e.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [t, i, s]));
      }
    },
    _propagate: function(t, i) {
      e.ui.plugin.call(this, t, [i, this.ui()]), "resize" !== t && this._trigger(t, i, this.ui());
    },
    plugins: {},
    ui: function() {
      return {
        originalElement: this.originalElement,
        element: this.element,
        helper: this.helper,
        position: this.position,
        size: this.size,
        originalSize: this.originalSize,
        originalPosition: this.originalPosition
      };
    }
  }), e.ui.plugin.add("resizable", "animate", {stop: function(t) {
      var i = e(this).resizable("instance"),
          s = i.options,
          n = i._proportionallyResizeElements,
          a = n.length && /textarea/i.test(n[0].nodeName),
          o = a && i._hasScroll(n[0], "left") ? 0 : i.sizeDiff.height,
          r = a ? 0 : i.sizeDiff.width,
          h = {
            width: i.size.width - r,
            height: i.size.height - o
          },
          l = parseInt(i.element.css("left"), 10) + (i.position.left - i.originalPosition.left) || null,
          u = parseInt(i.element.css("top"), 10) + (i.position.top - i.originalPosition.top) || null;
      i.element.animate(e.extend(h, u && l ? {
        top: u,
        left: l
      } : {}), {
        duration: s.animateDuration,
        easing: s.animateEasing,
        step: function() {
          var s = {
            width: parseInt(i.element.css("width"), 10),
            height: parseInt(i.element.css("height"), 10),
            top: parseInt(i.element.css("top"), 10),
            left: parseInt(i.element.css("left"), 10)
          };
          n && n.length && e(n[0]).css({
            width: s.width,
            height: s.height
          }), i._updateCache(s), i._propagate("resize", t);
        }
      });
    }}), e.ui.plugin.add("resizable", "containment", {
    start: function() {
      var t,
          i,
          s,
          n,
          a,
          o,
          r,
          h = e(this).resizable("instance"),
          l = h.options,
          u = h.element,
          d = l.containment,
          c = d instanceof e ? d.get(0) : /parent/.test(d) ? u.parent().get(0) : d;
      c && (h.containerElement = e(c), /document/.test(d) || d === document ? (h.containerOffset = {
        left: 0,
        top: 0
      }, h.containerPosition = {
        left: 0,
        top: 0
      }, h.parentData = {
        element: e(document),
        left: 0,
        top: 0,
        width: e(document).width(),
        height: e(document).height() || document.body.parentNode.scrollHeight
      }) : (t = e(c), i = [], e(["Top", "Right", "Left", "Bottom"]).each(function(e, s) {
        i[e] = h._num(t.css("padding" + s));
      }), h.containerOffset = t.offset(), h.containerPosition = t.position(), h.containerSize = {
        height: t.innerHeight() - i[3],
        width: t.innerWidth() - i[1]
      }, s = h.containerOffset, n = h.containerSize.height, a = h.containerSize.width, o = h._hasScroll(c, "left") ? c.scrollWidth : a, r = h._hasScroll(c) ? c.scrollHeight : n, h.parentData = {
        element: c,
        left: s.left,
        top: s.top,
        width: o,
        height: r
      }));
    },
    resize: function(t) {
      var i,
          s,
          n,
          a,
          o = e(this).resizable("instance"),
          r = o.options,
          h = o.containerOffset,
          l = o.position,
          u = o._aspectRatio || t.shiftKey,
          d = {
            top: 0,
            left: 0
          },
          c = o.containerElement,
          p = !0;
      c[0] !== document && /static/.test(c.css("position")) && (d = h), l.left < (o._helper ? h.left : 0) && (o.size.width = o.size.width + (o._helper ? o.position.left - h.left : o.position.left - d.left), u && (o.size.height = o.size.width / o.aspectRatio, p = !1), o.position.left = r.helper ? h.left : 0), l.top < (o._helper ? h.top : 0) && (o.size.height = o.size.height + (o._helper ? o.position.top - h.top : o.position.top), u && (o.size.width = o.size.height * o.aspectRatio, p = !1), o.position.top = o._helper ? h.top : 0), n = o.containerElement.get(0) === o.element.parent().get(0), a = /relative|absolute/.test(o.containerElement.css("position")), n && a ? (o.offset.left = o.parentData.left + o.position.left, o.offset.top = o.parentData.top + o.position.top) : (o.offset.left = o.element.offset().left, o.offset.top = o.element.offset().top), i = Math.abs(o.sizeDiff.width + (o._helper ? o.offset.left - d.left : o.offset.left - h.left)), s = Math.abs(o.sizeDiff.height + (o._helper ? o.offset.top - d.top : o.offset.top - h.top)), i + o.size.width >= o.parentData.width && (o.size.width = o.parentData.width - i, u && (o.size.height = o.size.width / o.aspectRatio, p = !1)), s + o.size.height >= o.parentData.height && (o.size.height = o.parentData.height - s, u && (o.size.width = o.size.height * o.aspectRatio, p = !1)), p || (o.position.left = o.prevPosition.left, o.position.top = o.prevPosition.top, o.size.width = o.prevSize.width, o.size.height = o.prevSize.height);
    },
    stop: function() {
      var t = e(this).resizable("instance"),
          i = t.options,
          s = t.containerOffset,
          n = t.containerPosition,
          a = t.containerElement,
          o = e(t.helper),
          r = o.offset(),
          h = o.outerWidth() - t.sizeDiff.width,
          l = o.outerHeight() - t.sizeDiff.height;
      t._helper && !i.animate && /relative/.test(a.css("position")) && e(this).css({
        left: r.left - n.left - s.left,
        width: h,
        height: l
      }), t._helper && !i.animate && /static/.test(a.css("position")) && e(this).css({
        left: r.left - n.left - s.left,
        width: h,
        height: l
      });
    }
  }), e.ui.plugin.add("resizable", "alsoResize", {
    start: function() {
      var t = e(this).resizable("instance"),
          i = t.options;
      e(i.alsoResize).each(function() {
        var t = e(this);
        t.data("ui-resizable-alsoresize", {
          width: parseInt(t.width(), 10),
          height: parseInt(t.height(), 10),
          left: parseInt(t.css("left"), 10),
          top: parseInt(t.css("top"), 10)
        });
      });
    },
    resize: function(t, i) {
      var s = e(this).resizable("instance"),
          n = s.options,
          a = s.originalSize,
          o = s.originalPosition,
          r = {
            height: s.size.height - a.height || 0,
            width: s.size.width - a.width || 0,
            top: s.position.top - o.top || 0,
            left: s.position.left - o.left || 0
          };
      e(n.alsoResize).each(function() {
        var t = e(this),
            s = e(this).data("ui-resizable-alsoresize"),
            n = {},
            a = t.parents(i.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
        e.each(a, function(e, t) {
          var i = (s[t] || 0) + (r[t] || 0);
          i && i >= 0 && (n[t] = i || null);
        }), t.css(n);
      });
    },
    stop: function() {
      e(this).removeData("resizable-alsoresize");
    }
  }), e.ui.plugin.add("resizable", "ghost", {
    start: function() {
      var t = e(this).resizable("instance"),
          i = t.options,
          s = t.size;
      t.ghost = t.originalElement.clone(), t.ghost.css({
        opacity: .25,
        display: "block",
        position: "relative",
        height: s.height,
        width: s.width,
        margin: 0,
        left: 0,
        top: 0
      }).addClass("ui-resizable-ghost").addClass("string" == typeof i.ghost ? i.ghost : ""), t.ghost.appendTo(t.helper);
    },
    resize: function() {
      var t = e(this).resizable("instance");
      t.ghost && t.ghost.css({
        position: "relative",
        height: t.size.height,
        width: t.size.width
      });
    },
    stop: function() {
      var t = e(this).resizable("instance");
      t.ghost && t.helper && t.helper.get(0).removeChild(t.ghost.get(0));
    }
  }), e.ui.plugin.add("resizable", "grid", {resize: function() {
      var t,
          i = e(this).resizable("instance"),
          s = i.options,
          n = i.size,
          a = i.originalSize,
          o = i.originalPosition,
          r = i.axis,
          h = "number" == typeof s.grid ? [s.grid, s.grid] : s.grid,
          l = h[0] || 1,
          u = h[1] || 1,
          d = Math.round((n.width - a.width) / l) * l,
          c = Math.round((n.height - a.height) / u) * u,
          p = a.width + d,
          f = a.height + c,
          m = s.maxWidth && p > s.maxWidth,
          g = s.maxHeight && f > s.maxHeight,
          v = s.minWidth && s.minWidth > p,
          y = s.minHeight && s.minHeight > f;
      s.grid = h, v && (p += l), y && (f += u), m && (p -= l), g && (f -= u), /^(se|s|e)$/.test(r) ? (i.size.width = p, i.size.height = f) : /^(ne)$/.test(r) ? (i.size.width = p, i.size.height = f, i.position.top = o.top - c) : /^(sw)$/.test(r) ? (i.size.width = p, i.size.height = f, i.position.left = o.left - d) : ((0 >= f - u || 0 >= p - l) && (t = i._getPaddingPlusBorderDimensions(this)), f - u > 0 ? (i.size.height = f, i.position.top = o.top - c) : (f = u - t.height, i.size.height = f, i.position.top = o.top + a.height - f), p - l > 0 ? (i.size.width = p, i.position.left = o.left - d) : (p = l - t.width, i.size.width = p, i.position.left = o.left + a.width - p));
    }}), e.ui.resizable, e.widget("ui.dialog", {
    version: "1.11.4",
    options: {
      appendTo: "body",
      autoOpen: !0,
      buttons: [],
      closeOnEscape: !0,
      closeText: "Close",
      dialogClass: "",
      draggable: !0,
      hide: null,
      height: "auto",
      maxHeight: null,
      maxWidth: null,
      minHeight: 150,
      minWidth: 150,
      modal: !1,
      position: {
        my: "center",
        at: "center",
        of: window,
        collision: "fit",
        using: function(t) {
          var i = e(this).css(t).offset().top;
          0 > i && e(this).css("top", t.top - i);
        }
      },
      resizable: !0,
      show: null,
      title: null,
      width: 300,
      beforeClose: null,
      close: null,
      drag: null,
      dragStart: null,
      dragStop: null,
      focus: null,
      open: null,
      resize: null,
      resizeStart: null,
      resizeStop: null
    },
    sizeRelatedOptions: {
      buttons: !0,
      height: !0,
      maxHeight: !0,
      maxWidth: !0,
      minHeight: !0,
      minWidth: !0,
      width: !0
    },
    resizableRelatedOptions: {
      maxHeight: !0,
      maxWidth: !0,
      minHeight: !0,
      minWidth: !0
    },
    _create: function() {
      this.originalCss = {
        display: this.element[0].style.display,
        width: this.element[0].style.width,
        minHeight: this.element[0].style.minHeight,
        maxHeight: this.element[0].style.maxHeight,
        height: this.element[0].style.height
      }, this.originalPosition = {
        parent: this.element.parent(),
        index: this.element.parent().children().index(this.element)
      }, this.originalTitle = this.element.attr("title"), this.options.title = this.options.title || this.originalTitle, this._createWrapper(), this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog), this._createTitlebar(), this._createButtonPane(), this.options.draggable && e.fn.draggable && this._makeDraggable(), this.options.resizable && e.fn.resizable && this._makeResizable(), this._isOpen = !1, this._trackFocus();
    },
    _init: function() {
      this.options.autoOpen && this.open();
    },
    _appendTo: function() {
      var t = this.options.appendTo;
      return t && (t.jquery || t.nodeType) ? e(t) : this.document.find(t || "body").eq(0);
    },
    _destroy: function() {
      var e,
          t = this.originalPosition;
      this._untrackInstance(), this._destroyOverlay(), this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(), this.uiDialog.stop(!0, !0).remove(), this.originalTitle && this.element.attr("title", this.originalTitle), e = t.parent.children().eq(t.index), e.length && e[0] !== this.element[0] ? e.before(this.element) : t.parent.append(this.element);
    },
    widget: function() {
      return this.uiDialog;
    },
    disable: e.noop,
    enable: e.noop,
    close: function(t) {
      var i,
          s = this;
      if (this._isOpen && this._trigger("beforeClose", t) !== !1) {
        if (this._isOpen = !1, this._focusedElement = null, this._destroyOverlay(), this._untrackInstance(), !this.opener.filter(":focusable").focus().length)
          try {
            i = this.document[0].activeElement, i && "body" !== i.nodeName.toLowerCase() && e(i).blur();
          } catch (n) {}
        this._hide(this.uiDialog, this.options.hide, function() {
          s._trigger("close", t);
        });
      }
    },
    isOpen: function() {
      return this._isOpen;
    },
    moveToTop: function() {
      this._moveToTop();
    },
    _moveToTop: function(t, i) {
      var s = !1,
          n = this.uiDialog.siblings(".ui-front:visible").map(function() {
            return +e(this).css("z-index");
          }).get(),
          a = Math.max.apply(null, n);
      return a >= +this.uiDialog.css("z-index") && (this.uiDialog.css("z-index", a + 1), s = !0), s && !i && this._trigger("focus", t), s;
    },
    open: function() {
      var t = this;
      return this._isOpen ? (this._moveToTop() && this._focusTabbable(), void 0) : (this._isOpen = !0, this.opener = e(this.document[0].activeElement), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this.overlay && this.overlay.css("z-index", this.uiDialog.css("z-index") - 1), this._show(this.uiDialog, this.options.show, function() {
        t._focusTabbable(), t._trigger("focus");
      }), this._makeFocusTarget(), this._trigger("open"), void 0);
    },
    _focusTabbable: function() {
      var e = this._focusedElement;
      e || (e = this.element.find("[autofocus]")), e.length || (e = this.element.find(":tabbable")), e.length || (e = this.uiDialogButtonPane.find(":tabbable")), e.length || (e = this.uiDialogTitlebarClose.filter(":tabbable")), e.length || (e = this.uiDialog), e.eq(0).focus();
    },
    _keepFocus: function(t) {
      function i() {
        var t = this.document[0].activeElement,
            i = this.uiDialog[0] === t || e.contains(this.uiDialog[0], t);
        i || this._focusTabbable();
      }
      t.preventDefault(), i.call(this), this._delay(i);
    },
    _createWrapper: function() {
      this.uiDialog = e("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " + this.options.dialogClass).hide().attr({
        tabIndex: -1,
        role: "dialog"
      }).appendTo(this._appendTo()), this._on(this.uiDialog, {
        keydown: function(t) {
          if (this.options.closeOnEscape && !t.isDefaultPrevented() && t.keyCode && t.keyCode === e.ui.keyCode.ESCAPE)
            return t.preventDefault(), this.close(t), void 0;
          if (t.keyCode === e.ui.keyCode.TAB && !t.isDefaultPrevented()) {
            var i = this.uiDialog.find(":tabbable"),
                s = i.filter(":first"),
                n = i.filter(":last");
            t.target !== n[0] && t.target !== this.uiDialog[0] || t.shiftKey ? t.target !== s[0] && t.target !== this.uiDialog[0] || !t.shiftKey || (this._delay(function() {
              n.focus();
            }), t.preventDefault()) : (this._delay(function() {
              s.focus();
            }), t.preventDefault());
          }
        },
        mousedown: function(e) {
          this._moveToTop(e) && this._focusTabbable();
        }
      }), this.element.find("[aria-describedby]").length || this.uiDialog.attr({"aria-describedby": this.element.uniqueId().attr("id")});
    },
    _createTitlebar: function() {
      var t;
      this.uiDialogTitlebar = e("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog), this._on(this.uiDialogTitlebar, {mousedown: function(t) {
          e(t.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.focus();
        }}), this.uiDialogTitlebarClose = e("<button type='button'></button>").button({
        label: this.options.closeText,
        icons: {primary: "ui-icon-closethick"},
        text: !1
      }).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar), this._on(this.uiDialogTitlebarClose, {click: function(e) {
          e.preventDefault(), this.close(e);
        }}), t = e("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar), this._title(t), this.uiDialog.attr({"aria-labelledby": t.attr("id")});
    },
    _title: function(e) {
      this.options.title || e.html("&#160;"), e.text(this.options.title);
    },
    _createButtonPane: function() {
      this.uiDialogButtonPane = e("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"), this.uiButtonSet = e("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane), this._createButtons();
    },
    _createButtons: function() {
      var t = this,
          i = this.options.buttons;
      return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), e.isEmptyObject(i) || e.isArray(i) && !i.length ? (this.uiDialog.removeClass("ui-dialog-buttons"), void 0) : (e.each(i, function(i, s) {
        var n,
            a;
        s = e.isFunction(s) ? {
          click: s,
          text: i
        } : s, s = e.extend({type: "button"}, s), n = s.click, s.click = function() {
          n.apply(t.element[0], arguments);
        }, a = {
          icons: s.icons,
          text: s.showText
        }, delete s.icons, delete s.showText, e("<button></button>", s).button(a).appendTo(t.uiButtonSet);
      }), this.uiDialog.addClass("ui-dialog-buttons"), this.uiDialogButtonPane.appendTo(this.uiDialog), void 0);
    },
    _makeDraggable: function() {
      function t(e) {
        return {
          position: e.position,
          offset: e.offset
        };
      }
      var i = this,
          s = this.options;
      this.uiDialog.draggable({
        cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
        handle: ".ui-dialog-titlebar",
        containment: "document",
        start: function(s, n) {
          e(this).addClass("ui-dialog-dragging"), i._blockFrames(), i._trigger("dragStart", s, t(n));
        },
        drag: function(e, s) {
          i._trigger("drag", e, t(s));
        },
        stop: function(n, a) {
          var o = a.offset.left - i.document.scrollLeft(),
              r = a.offset.top - i.document.scrollTop();
          s.position = {
            my: "left top",
            at: "left" + (o >= 0 ? "+" : "") + o + " " + "top" + (r >= 0 ? "+" : "") + r,
            of: i.window
          }, e(this).removeClass("ui-dialog-dragging"), i._unblockFrames(), i._trigger("dragStop", n, t(a));
        }
      });
    },
    _makeResizable: function() {
      function t(e) {
        return {
          originalPosition: e.originalPosition,
          originalSize: e.originalSize,
          position: e.position,
          size: e.size
        };
      }
      var i = this,
          s = this.options,
          n = s.resizable,
          a = this.uiDialog.css("position"),
          o = "string" == typeof n ? n : "n,e,s,w,se,sw,ne,nw";
      this.uiDialog.resizable({
        cancel: ".ui-dialog-content",
        containment: "document",
        alsoResize: this.element,
        maxWidth: s.maxWidth,
        maxHeight: s.maxHeight,
        minWidth: s.minWidth,
        minHeight: this._minHeight(),
        handles: o,
        start: function(s, n) {
          e(this).addClass("ui-dialog-resizing"), i._blockFrames(), i._trigger("resizeStart", s, t(n));
        },
        resize: function(e, s) {
          i._trigger("resize", e, t(s));
        },
        stop: function(n, a) {
          var o = i.uiDialog.offset(),
              r = o.left - i.document.scrollLeft(),
              h = o.top - i.document.scrollTop();
          s.height = i.uiDialog.height(), s.width = i.uiDialog.width(), s.position = {
            my: "left top",
            at: "left" + (r >= 0 ? "+" : "") + r + " " + "top" + (h >= 0 ? "+" : "") + h,
            of: i.window
          }, e(this).removeClass("ui-dialog-resizing"), i._unblockFrames(), i._trigger("resizeStop", n, t(a));
        }
      }).css("position", a);
    },
    _trackFocus: function() {
      this._on(this.widget(), {focusin: function(t) {
          this._makeFocusTarget(), this._focusedElement = e(t.target);
        }});
    },
    _makeFocusTarget: function() {
      this._untrackInstance(), this._trackingInstances().unshift(this);
    },
    _untrackInstance: function() {
      var t = this._trackingInstances(),
          i = e.inArray(this, t);
      -1 !== i && t.splice(i, 1);
    },
    _trackingInstances: function() {
      var e = this.document.data("ui-dialog-instances");
      return e || (e = [], this.document.data("ui-dialog-instances", e)), e;
    },
    _minHeight: function() {
      var e = this.options;
      return "auto" === e.height ? e.minHeight : Math.min(e.minHeight, e.height);
    },
    _position: function() {
      var e = this.uiDialog.is(":visible");
      e || this.uiDialog.show(), this.uiDialog.position(this.options.position), e || this.uiDialog.hide();
    },
    _setOptions: function(t) {
      var i = this,
          s = !1,
          n = {};
      e.each(t, function(e, t) {
        i._setOption(e, t), e in i.sizeRelatedOptions && (s = !0), e in i.resizableRelatedOptions && (n[e] = t);
      }), s && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", n);
    },
    _setOption: function(e, t) {
      var i,
          s,
          n = this.uiDialog;
      "dialogClass" === e && n.removeClass(this.options.dialogClass).addClass(t), "disabled" !== e && (this._super(e, t), "appendTo" === e && this.uiDialog.appendTo(this._appendTo()), "buttons" === e && this._createButtons(), "closeText" === e && this.uiDialogTitlebarClose.button({label: "" + t}), "draggable" === e && (i = n.is(":data(ui-draggable)"), i && !t && n.draggable("destroy"), !i && t && this._makeDraggable()), "position" === e && this._position(), "resizable" === e && (s = n.is(":data(ui-resizable)"), s && !t && n.resizable("destroy"), s && "string" == typeof t && n.resizable("option", "handles", t), s || t === !1 || this._makeResizable()), "title" === e && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")));
    },
    _size: function() {
      var e,
          t,
          i,
          s = this.options;
      this.element.show().css({
        width: "auto",
        minHeight: 0,
        maxHeight: "none",
        height: 0
      }), s.minWidth > s.width && (s.width = s.minWidth), e = this.uiDialog.css({
        height: "auto",
        width: s.width
      }).outerHeight(), t = Math.max(0, s.minHeight - e), i = "number" == typeof s.maxHeight ? Math.max(0, s.maxHeight - e) : "none", "auto" === s.height ? this.element.css({
        minHeight: t,
        maxHeight: i,
        height: "auto"
      }) : this.element.height(Math.max(0, s.height - e)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight());
    },
    _blockFrames: function() {
      this.iframeBlocks = this.document.find("iframe").map(function() {
        var t = e(this);
        return e("<div>").css({
          position: "absolute",
          width: t.outerWidth(),
          height: t.outerHeight()
        }).appendTo(t.parent()).offset(t.offset())[0];
      });
    },
    _unblockFrames: function() {
      this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);
    },
    _allowInteraction: function(t) {
      return e(t.target).closest(".ui-dialog").length ? !0 : !!e(t.target).closest(".ui-datepicker").length;
    },
    _createOverlay: function() {
      if (this.options.modal) {
        var t = !0;
        this._delay(function() {
          t = !1;
        }), this.document.data("ui-dialog-overlays") || this._on(this.document, {focusin: function(e) {
            t || this._allowInteraction(e) || (e.preventDefault(), this._trackingInstances()[0]._focusTabbable());
          }}), this.overlay = e("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()), this._on(this.overlay, {mousedown: "_keepFocus"}), this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1);
      }
    },
    _destroyOverlay: function() {
      if (this.options.modal && this.overlay) {
        var e = this.document.data("ui-dialog-overlays") - 1;
        e ? this.document.data("ui-dialog-overlays", e) : this.document.unbind("focusin").removeData("ui-dialog-overlays"), this.overlay.remove(), this.overlay = null;
      }
    }
  }), e.widget("ui.droppable", {
    version: "1.11.4",
    widgetEventPrefix: "drop",
    options: {
      accept: "*",
      activeClass: !1,
      addClasses: !0,
      greedy: !1,
      hoverClass: !1,
      scope: "default",
      tolerance: "intersect",
      activate: null,
      deactivate: null,
      drop: null,
      out: null,
      over: null
    },
    _create: function() {
      var t,
          i = this.options,
          s = i.accept;
      this.isover = !1, this.isout = !0, this.accept = e.isFunction(s) ? s : function(e) {
        return e.is(s);
      }, this.proportions = function() {
        return arguments.length ? (t = arguments[0], void 0) : t ? t : t = {
          width: this.element[0].offsetWidth,
          height: this.element[0].offsetHeight
        };
      }, this._addToManager(i.scope), i.addClasses && this.element.addClass("ui-droppable");
    },
    _addToManager: function(t) {
      e.ui.ddmanager.droppables[t] = e.ui.ddmanager.droppables[t] || [], e.ui.ddmanager.droppables[t].push(this);
    },
    _splice: function(e) {
      for (var t = 0; e.length > t; t++)
        e[t] === this && e.splice(t, 1);
    },
    _destroy: function() {
      var t = e.ui.ddmanager.droppables[this.options.scope];
      this._splice(t), this.element.removeClass("ui-droppable ui-droppable-disabled");
    },
    _setOption: function(t, i) {
      if ("accept" === t)
        this.accept = e.isFunction(i) ? i : function(e) {
          return e.is(i);
        };
      else if ("scope" === t) {
        var s = e.ui.ddmanager.droppables[this.options.scope];
        this._splice(s), this._addToManager(i);
      }
      this._super(t, i);
    },
    _activate: function(t) {
      var i = e.ui.ddmanager.current;
      this.options.activeClass && this.element.addClass(this.options.activeClass), i && this._trigger("activate", t, this.ui(i));
    },
    _deactivate: function(t) {
      var i = e.ui.ddmanager.current;
      this.options.activeClass && this.element.removeClass(this.options.activeClass), i && this._trigger("deactivate", t, this.ui(i));
    },
    _over: function(t) {
      var i = e.ui.ddmanager.current;
      i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", t, this.ui(i)));
    },
    _out: function(t) {
      var i = e.ui.ddmanager.current;
      i && (i.currentItem || i.element)[0] !== this.element[0] && this.accept.call(this.element[0], i.currentItem || i.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", t, this.ui(i)));
    },
    _drop: function(t, i) {
      var s = i || e.ui.ddmanager.current,
          n = !1;
      return s && (s.currentItem || s.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function() {
        var i = e(this).droppable("instance");
        return i.options.greedy && !i.options.disabled && i.options.scope === s.options.scope && i.accept.call(i.element[0], s.currentItem || s.element) && e.ui.intersect(s, e.extend(i, {offset: i.element.offset()}), i.options.tolerance, t) ? (n = !0, !1) : void 0;
      }), n ? !1 : this.accept.call(this.element[0], s.currentItem || s.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", t, this.ui(s)), this.element) : !1) : !1;
    },
    ui: function(e) {
      return {
        draggable: e.currentItem || e.element,
        helper: e.helper,
        position: e.position,
        offset: e.positionAbs
      };
    }
  }), e.ui.intersect = function() {
    function e(e, t, i) {
      return e >= t && t + i > e;
    }
    return function(t, i, s, n) {
      if (!i.offset)
        return !1;
      var a = (t.positionAbs || t.position.absolute).left + t.margins.left,
          o = (t.positionAbs || t.position.absolute).top + t.margins.top,
          r = a + t.helperProportions.width,
          h = o + t.helperProportions.height,
          l = i.offset.left,
          u = i.offset.top,
          d = l + i.proportions().width,
          c = u + i.proportions().height;
      switch (s) {
        case "fit":
          return a >= l && d >= r && o >= u && c >= h;
        case "intersect":
          return a + t.helperProportions.width / 2 > l && d > r - t.helperProportions.width / 2 && o + t.helperProportions.height / 2 > u && c > h - t.helperProportions.height / 2;
        case "pointer":
          return e(n.pageY, u, i.proportions().height) && e(n.pageX, l, i.proportions().width);
        case "touch":
          return (o >= u && c >= o || h >= u && c >= h || u > o && h > c) && (a >= l && d >= a || r >= l && d >= r || l > a && r > d);
        default:
          return !1;
      }
    };
  }(), e.ui.ddmanager = {
    current: null,
    droppables: {"default": []},
    prepareOffsets: function(t, i) {
      var s,
          n,
          a = e.ui.ddmanager.droppables[t.options.scope] || [],
          o = i ? i.type : null,
          r = (t.currentItem || t.element).find(":data(ui-droppable)").addBack();
      e: for (s = 0; a.length > s; s++)
        if (!(a[s].options.disabled || t && !a[s].accept.call(a[s].element[0], t.currentItem || t.element))) {
          for (n = 0; r.length > n; n++)
            if (r[n] === a[s].element[0]) {
              a[s].proportions().height = 0;
              continue e;
            }
          a[s].visible = "none" !== a[s].element.css("display"), a[s].visible && ("mousedown" === o && a[s]._activate.call(a[s], i), a[s].offset = a[s].element.offset(), a[s].proportions({
            width: a[s].element[0].offsetWidth,
            height: a[s].element[0].offsetHeight
          }));
        }
    },
    drop: function(t, i) {
      var s = !1;
      return e.each((e.ui.ddmanager.droppables[t.options.scope] || []).slice(), function() {
        this.options && (!this.options.disabled && this.visible && e.ui.intersect(t, this, this.options.tolerance, i) && (s = this._drop.call(this, i) || s), !this.options.disabled && this.visible && this.accept.call(this.element[0], t.currentItem || t.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, i)));
      }), s;
    },
    dragStart: function(t, i) {
      t.element.parentsUntil("body").bind("scroll.droppable", function() {
        t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i);
      });
    },
    drag: function(t, i) {
      t.options.refreshPositions && e.ui.ddmanager.prepareOffsets(t, i), e.each(e.ui.ddmanager.droppables[t.options.scope] || [], function() {
        if (!this.options.disabled && !this.greedyChild && this.visible) {
          var s,
              n,
              a,
              o = e.ui.intersect(t, this, this.options.tolerance, i),
              r = !o && this.isover ? "isout" : o && !this.isover ? "isover" : null;
          r && (this.options.greedy && (n = this.options.scope, a = this.element.parents(":data(ui-droppable)").filter(function() {
            return e(this).droppable("instance").options.scope === n;
          }), a.length && (s = e(a[0]).droppable("instance"), s.greedyChild = "isover" === r)), s && "isover" === r && (s.isover = !1, s.isout = !0, s._out.call(s, i)), this[r] = !0, this["isout" === r ? "isover" : "isout"] = !1, this["isover" === r ? "_over" : "_out"].call(this, i), s && "isout" === r && (s.isout = !1, s.isover = !0, s._over.call(s, i)));
        }
      });
    },
    dragStop: function(t, i) {
      t.element.parentsUntil("body").unbind("scroll.droppable"), t.options.refreshPositions || e.ui.ddmanager.prepareOffsets(t, i);
    }
  }, e.ui.droppable;
  var y = "ui-effects-",
      b = e;
  e.effects = {effect: {}}, function(e, t) {
    function i(e, t, i) {
      var s = d[t.type] || {};
      return null == e ? i || !t.def ? null : t.def : (e = s.floor ? ~~e : parseFloat(e), isNaN(e) ? t.def : s.mod ? (e + s.mod) % s.mod : 0 > e ? 0 : e > s.max ? s.max : e);
    }
    function s(i) {
      var s = l(),
          n = s._rgba = [];
      return i = i.toLowerCase(), f(h, function(e, a) {
        var o,
            r = a.re.exec(i),
            h = r && a.parse(r),
            l = a.space || "rgba";
        return h ? (o = s[l](h), s[u[l].cache] = o[u[l].cache], n = s._rgba = o._rgba, !1) : t;
      }), n.length ? ("0,0,0,0" === n.join() && e.extend(n, a.transparent), s) : a[i];
    }
    function n(e, t, i) {
      return i = (i + 1) % 1, 1 > 6 * i ? e + 6 * (t - e) * i : 1 > 2 * i ? t : 2 > 3 * i ? e + 6 * (t - e) * (2 / 3 - i) : e;
    }
    var a,
        o = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor",
        r = /^([\-+])=\s*(\d+\.?\d*)/,
        h = [{
          re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
          parse: function(e) {
            return [e[1], e[2], e[3], e[4]];
          }
        }, {
          re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
          parse: function(e) {
            return [2.55 * e[1], 2.55 * e[2], 2.55 * e[3], e[4]];
          }
        }, {
          re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
          parse: function(e) {
            return [parseInt(e[1], 16), parseInt(e[2], 16), parseInt(e[3], 16)];
          }
        }, {
          re: /#([a-f0-9])([a-f0-9])([a-f0-9])/,
          parse: function(e) {
            return [parseInt(e[1] + e[1], 16), parseInt(e[2] + e[2], 16), parseInt(e[3] + e[3], 16)];
          }
        }, {
          re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
          space: "hsla",
          parse: function(e) {
            return [e[1], e[2] / 100, e[3] / 100, e[4]];
          }
        }],
        l = e.Color = function(t, i, s, n) {
          return new e.Color.fn.parse(t, i, s, n);
        },
        u = {
          rgba: {props: {
              red: {
                idx: 0,
                type: "byte"
              },
              green: {
                idx: 1,
                type: "byte"
              },
              blue: {
                idx: 2,
                type: "byte"
              }
            }},
          hsla: {props: {
              hue: {
                idx: 0,
                type: "degrees"
              },
              saturation: {
                idx: 1,
                type: "percent"
              },
              lightness: {
                idx: 2,
                type: "percent"
              }
            }}
        },
        d = {
          "byte": {
            floor: !0,
            max: 255
          },
          percent: {max: 1},
          degrees: {
            mod: 360,
            floor: !0
          }
        },
        c = l.support = {},
        p = e("<p>")[0],
        f = e.each;
    p.style.cssText = "background-color:rgba(1,1,1,.5)", c.rgba = p.style.backgroundColor.indexOf("rgba") > -1, f(u, function(e, t) {
      t.cache = "_" + e, t.props.alpha = {
        idx: 3,
        type: "percent",
        def: 1
      };
    }), l.fn = e.extend(l.prototype, {
      parse: function(n, o, r, h) {
        if (n === t)
          return this._rgba = [null, null, null, null], this;
        (n.jquery || n.nodeType) && (n = e(n).css(o), o = t);
        var d = this,
            c = e.type(n),
            p = this._rgba = [];
        return o !== t && (n = [n, o, r, h], c = "array"), "string" === c ? this.parse(s(n) || a._default) : "array" === c ? (f(u.rgba.props, function(e, t) {
          p[t.idx] = i(n[t.idx], t);
        }), this) : "object" === c ? (n instanceof l ? f(u, function(e, t) {
          n[t.cache] && (d[t.cache] = n[t.cache].slice());
        }) : f(u, function(t, s) {
          var a = s.cache;
          f(s.props, function(e, t) {
            if (!d[a] && s.to) {
              if ("alpha" === e || null == n[e])
                return;
              d[a] = s.to(d._rgba);
            }
            d[a][t.idx] = i(n[e], t, !0);
          }), d[a] && 0 > e.inArray(null, d[a].slice(0, 3)) && (d[a][3] = 1, s.from && (d._rgba = s.from(d[a])));
        }), this) : t;
      },
      is: function(e) {
        var i = l(e),
            s = !0,
            n = this;
        return f(u, function(e, a) {
          var o,
              r = i[a.cache];
          return r && (o = n[a.cache] || a.to && a.to(n._rgba) || [], f(a.props, function(e, i) {
            return null != r[i.idx] ? s = r[i.idx] === o[i.idx] : t;
          })), s;
        }), s;
      },
      _space: function() {
        var e = [],
            t = this;
        return f(u, function(i, s) {
          t[s.cache] && e.push(i);
        }), e.pop();
      },
      transition: function(e, t) {
        var s = l(e),
            n = s._space(),
            a = u[n],
            o = 0 === this.alpha() ? l("transparent") : this,
            r = o[a.cache] || a.to(o._rgba),
            h = r.slice();
        return s = s[a.cache], f(a.props, function(e, n) {
          var a = n.idx,
              o = r[a],
              l = s[a],
              u = d[n.type] || {};
          null !== l && (null === o ? h[a] = l : (u.mod && (l - o > u.mod / 2 ? o += u.mod : o - l > u.mod / 2 && (o -= u.mod)), h[a] = i((l - o) * t + o, n)));
        }), this[n](h);
      },
      blend: function(t) {
        if (1 === this._rgba[3])
          return this;
        var i = this._rgba.slice(),
            s = i.pop(),
            n = l(t)._rgba;
        return l(e.map(i, function(e, t) {
          return (1 - s) * n[t] + s * e;
        }));
      },
      toRgbaString: function() {
        var t = "rgba(",
            i = e.map(this._rgba, function(e, t) {
              return null == e ? t > 2 ? 1 : 0 : e;
            });
        return 1 === i[3] && (i.pop(), t = "rgb("), t + i.join() + ")";
      },
      toHslaString: function() {
        var t = "hsla(",
            i = e.map(this.hsla(), function(e, t) {
              return null == e && (e = t > 2 ? 1 : 0), t && 3 > t && (e = Math.round(100 * e) + "%"), e;
            });
        return 1 === i[3] && (i.pop(), t = "hsl("), t + i.join() + ")";
      },
      toHexString: function(t) {
        var i = this._rgba.slice(),
            s = i.pop();
        return t && i.push(~~(255 * s)), "#" + e.map(i, function(e) {
          return e = (e || 0).toString(16), 1 === e.length ? "0" + e : e;
        }).join("");
      },
      toString: function() {
        return 0 === this._rgba[3] ? "transparent" : this.toRgbaString();
      }
    }), l.fn.parse.prototype = l.fn, u.hsla.to = function(e) {
      if (null == e[0] || null == e[1] || null == e[2])
        return [null, null, null, e[3]];
      var t,
          i,
          s = e[0] / 255,
          n = e[1] / 255,
          a = e[2] / 255,
          o = e[3],
          r = Math.max(s, n, a),
          h = Math.min(s, n, a),
          l = r - h,
          u = r + h,
          d = .5 * u;
      return t = h === r ? 0 : s === r ? 60 * (n - a) / l + 360 : n === r ? 60 * (a - s) / l + 120 : 60 * (s - n) / l + 240, i = 0 === l ? 0 : .5 >= d ? l / u : l / (2 - u), [Math.round(t) % 360, i, d, null == o ? 1 : o];
    }, u.hsla.from = function(e) {
      if (null == e[0] || null == e[1] || null == e[2])
        return [null, null, null, e[3]];
      var t = e[0] / 360,
          i = e[1],
          s = e[2],
          a = e[3],
          o = .5 >= s ? s * (1 + i) : s + i - s * i,
          r = 2 * s - o;
      return [Math.round(255 * n(r, o, t + 1 / 3)), Math.round(255 * n(r, o, t)), Math.round(255 * n(r, o, t - 1 / 3)), a];
    }, f(u, function(s, n) {
      var a = n.props,
          o = n.cache,
          h = n.to,
          u = n.from;
      l.fn[s] = function(s) {
        if (h && !this[o] && (this[o] = h(this._rgba)), s === t)
          return this[o].slice();
        var n,
            r = e.type(s),
            d = "array" === r || "object" === r ? s : arguments,
            c = this[o].slice();
        return f(a, function(e, t) {
          var s = d["object" === r ? e : t.idx];
          null == s && (s = c[t.idx]), c[t.idx] = i(s, t);
        }), u ? (n = l(u(c)), n[o] = c, n) : l(c);
      }, f(a, function(t, i) {
        l.fn[t] || (l.fn[t] = function(n) {
          var a,
              o = e.type(n),
              h = "alpha" === t ? this._hsla ? "hsla" : "rgba" : s,
              l = this[h](),
              u = l[i.idx];
          return "undefined" === o ? u : ("function" === o && (n = n.call(this, u), o = e.type(n)), null == n && i.empty ? this : ("string" === o && (a = r.exec(n), a && (n = u + parseFloat(a[2]) * ("+" === a[1] ? 1 : -1))), l[i.idx] = n, this[h](l)));
        });
      });
    }), l.hook = function(t) {
      var i = t.split(" ");
      f(i, function(t, i) {
        e.cssHooks[i] = {set: function(t, n) {
            var a,
                o,
                r = "";
            if ("transparent" !== n && ("string" !== e.type(n) || (a = s(n)))) {
              if (n = l(a || n), !c.rgba && 1 !== n._rgba[3]) {
                for (o = "backgroundColor" === i ? t.parentNode : t; ("" === r || "transparent" === r) && o && o.style; )
                  try {
                    r = e.css(o, "backgroundColor"), o = o.parentNode;
                  } catch (h) {}
                n = n.blend(r && "transparent" !== r ? r : "_default");
              }
              n = n.toRgbaString();
            }
            try {
              t.style[i] = n;
            } catch (h) {}
          }}, e.fx.step[i] = function(t) {
          t.colorInit || (t.start = l(t.elem, i), t.end = l(t.end), t.colorInit = !0), e.cssHooks[i].set(t.elem, t.start.transition(t.end, t.pos));
        };
      });
    }, l.hook(o), e.cssHooks.borderColor = {expand: function(e) {
        var t = {};
        return f(["Top", "Right", "Bottom", "Left"], function(i, s) {
          t["border" + s + "Color"] = e;
        }), t;
      }}, a = e.Color.names = {
      aqua: "#00ffff",
      black: "#000000",
      blue: "#0000ff",
      fuchsia: "#ff00ff",
      gray: "#808080",
      green: "#008000",
      lime: "#00ff00",
      maroon: "#800000",
      navy: "#000080",
      olive: "#808000",
      purple: "#800080",
      red: "#ff0000",
      silver: "#c0c0c0",
      teal: "#008080",
      white: "#ffffff",
      yellow: "#ffff00",
      transparent: [null, null, null, 0],
      _default: "#ffffff"
    };
  }(b), function() {
    function t(t) {
      var i,
          s,
          n = t.ownerDocument.defaultView ? t.ownerDocument.defaultView.getComputedStyle(t, null) : t.currentStyle,
          a = {};
      if (n && n.length && n[0] && n[n[0]])
        for (s = n.length; s--; )
          i = n[s], "string" == typeof n[i] && (a[e.camelCase(i)] = n[i]);
      else
        for (i in n)
          "string" == typeof n[i] && (a[i] = n[i]);
      return a;
    }
    function i(t, i) {
      var s,
          a,
          o = {};
      for (s in i)
        a = i[s], t[s] !== a && (n[s] || (e.fx.step[s] || !isNaN(parseFloat(a))) && (o[s] = a));
      return o;
    }
    var s = ["add", "remove", "toggle"],
        n = {
          border: 1,
          borderBottom: 1,
          borderColor: 1,
          borderLeft: 1,
          borderRight: 1,
          borderTop: 1,
          borderWidth: 1,
          margin: 1,
          padding: 1
        };
    e.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function(t, i) {
      e.fx.step[i] = function(e) {
        ("none" !== e.end && !e.setAttr || 1 === e.pos && !e.setAttr) && (b.style(e.elem, i, e.end), e.setAttr = !0);
      };
    }), e.fn.addBack || (e.fn.addBack = function(e) {
      return this.add(null == e ? this.prevObject : this.prevObject.filter(e));
    }), e.effects.animateClass = function(n, a, o, r) {
      var h = e.speed(a, o, r);
      return this.queue(function() {
        var a,
            o = e(this),
            r = o.attr("class") || "",
            l = h.children ? o.find("*").addBack() : o;
        l = l.map(function() {
          var i = e(this);
          return {
            el: i,
            start: t(this)
          };
        }), a = function() {
          e.each(s, function(e, t) {
            n[t] && o[t + "Class"](n[t]);
          });
        }, a(), l = l.map(function() {
          return this.end = t(this.el[0]), this.diff = i(this.start, this.end), this;
        }), o.attr("class", r), l = l.map(function() {
          var t = this,
              i = e.Deferred(),
              s = e.extend({}, h, {
                queue: !1,
                complete: function() {
                  i.resolve(t);
                }
              });
          return this.el.animate(this.diff, s), i.promise();
        }), e.when.apply(e, l.get()).done(function() {
          a(), e.each(arguments, function() {
            var t = this.el;
            e.each(this.diff, function(e) {
              t.css(e, "");
            });
          }), h.complete.call(o[0]);
        });
      });
    }, e.fn.extend({
      addClass: function(t) {
        return function(i, s, n, a) {
          return s ? e.effects.animateClass.call(this, {add: i}, s, n, a) : t.apply(this, arguments);
        };
      }(e.fn.addClass),
      removeClass: function(t) {
        return function(i, s, n, a) {
          return arguments.length > 1 ? e.effects.animateClass.call(this, {remove: i}, s, n, a) : t.apply(this, arguments);
        };
      }(e.fn.removeClass),
      toggleClass: function(t) {
        return function(i, s, n, a, o) {
          return "boolean" == typeof s || void 0 === s ? n ? e.effects.animateClass.call(this, s ? {add: i} : {remove: i}, n, a, o) : t.apply(this, arguments) : e.effects.animateClass.call(this, {toggle: i}, s, n, a);
        };
      }(e.fn.toggleClass),
      switchClass: function(t, i, s, n, a) {
        return e.effects.animateClass.call(this, {
          add: i,
          remove: t
        }, s, n, a);
      }
    });
  }(), function() {
    function t(t, i, s, n) {
      return e.isPlainObject(t) && (i = t, t = t.effect), t = {effect: t}, null == i && (i = {}), e.isFunction(i) && (n = i, s = null, i = {}), ("number" == typeof i || e.fx.speeds[i]) && (n = s, s = i, i = {}), e.isFunction(s) && (n = s, s = null), i && e.extend(t, i), s = s || i.duration, t.duration = e.fx.off ? 0 : "number" == typeof s ? s : s in e.fx.speeds ? e.fx.speeds[s] : e.fx.speeds._default, t.complete = n || i.complete, t;
    }
    function i(t) {
      return !t || "number" == typeof t || e.fx.speeds[t] ? !0 : "string" != typeof t || e.effects.effect[t] ? e.isFunction(t) ? !0 : "object" != typeof t || t.effect ? !1 : !0 : !0;
    }
    e.extend(e.effects, {
      version: "1.11.4",
      save: function(e, t) {
        for (var i = 0; t.length > i; i++)
          null !== t[i] && e.data(y + t[i], e[0].style[t[i]]);
      },
      restore: function(e, t) {
        var i,
            s;
        for (s = 0; t.length > s; s++)
          null !== t[s] && (i = e.data(y + t[s]), void 0 === i && (i = ""), e.css(t[s], i));
      },
      setMode: function(e, t) {
        return "toggle" === t && (t = e.is(":hidden") ? "show" : "hide"), t;
      },
      getBaseline: function(e, t) {
        var i,
            s;
        switch (e[0]) {
          case "top":
            i = 0;
            break;
          case "middle":
            i = .5;
            break;
          case "bottom":
            i = 1;
            break;
          default:
            i = e[0] / t.height;
        }
        switch (e[1]) {
          case "left":
            s = 0;
            break;
          case "center":
            s = .5;
            break;
          case "right":
            s = 1;
            break;
          default:
            s = e[1] / t.width;
        }
        return {
          x: s,
          y: i
        };
      },
      createWrapper: function(t) {
        if (t.parent().is(".ui-effects-wrapper"))
          return t.parent();
        var i = {
          width: t.outerWidth(!0),
          height: t.outerHeight(!0),
          "float": t.css("float")
        },
            s = e("<div></div>").addClass("ui-effects-wrapper").css({
              fontSize: "100%",
              background: "transparent",
              border: "none",
              margin: 0,
              padding: 0
            }),
            n = {
              width: t.width(),
              height: t.height()
            },
            a = document.activeElement;
        try {
          a.id;
        } catch (o) {
          a = document.body;
        }
        return t.wrap(s), (t[0] === a || e.contains(t[0], a)) && e(a).focus(), s = t.parent(), "static" === t.css("position") ? (s.css({position: "relative"}), t.css({position: "relative"})) : (e.extend(i, {
          position: t.css("position"),
          zIndex: t.css("z-index")
        }), e.each(["top", "left", "bottom", "right"], function(e, s) {
          i[s] = t.css(s), isNaN(parseInt(i[s], 10)) && (i[s] = "auto");
        }), t.css({
          position: "relative",
          top: 0,
          left: 0,
          right: "auto",
          bottom: "auto"
        })), t.css(n), s.css(i).show();
      },
      removeWrapper: function(t) {
        var i = document.activeElement;
        return t.parent().is(".ui-effects-wrapper") && (t.parent().replaceWith(t), (t[0] === i || e.contains(t[0], i)) && e(i).focus()), t;
      },
      setTransition: function(t, i, s, n) {
        return n = n || {}, e.each(i, function(e, i) {
          var a = t.cssUnit(i);
          a[0] > 0 && (n[i] = a[0] * s + a[1]);
        }), n;
      }
    }), e.fn.extend({
      effect: function() {
        function i(t) {
          function i() {
            e.isFunction(a) && a.call(n[0]), e.isFunction(t) && t();
          }
          var n = e(this),
              a = s.complete,
              r = s.mode;
          (n.is(":hidden") ? "hide" === r : "show" === r) ? (n[r](), i()) : o.call(n[0], s, i);
        }
        var s = t.apply(this, arguments),
            n = s.mode,
            a = s.queue,
            o = e.effects.effect[s.effect];
        return e.fx.off || !o ? n ? this[n](s.duration, s.complete) : this.each(function() {
          s.complete && s.complete.call(this);
        }) : a === !1 ? this.each(i) : this.queue(a || "fx", i);
      },
      show: function(e) {
        return function(s) {
          if (i(s))
            return e.apply(this, arguments);
          var n = t.apply(this, arguments);
          return n.mode = "show", this.effect.call(this, n);
        };
      }(e.fn.show),
      hide: function(e) {
        return function(s) {
          if (i(s))
            return e.apply(this, arguments);
          var n = t.apply(this, arguments);
          return n.mode = "hide", this.effect.call(this, n);
        };
      }(e.fn.hide),
      toggle: function(e) {
        return function(s) {
          if (i(s) || "boolean" == typeof s)
            return e.apply(this, arguments);
          var n = t.apply(this, arguments);
          return n.mode = "toggle", this.effect.call(this, n);
        };
      }(e.fn.toggle),
      cssUnit: function(t) {
        var i = this.css(t),
            s = [];
        return e.each(["em", "px", "%", "pt"], function(e, t) {
          i.indexOf(t) > 0 && (s = [parseFloat(i), t]);
        }), s;
      }
    });
  }(), function() {
    var t = {};
    e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function(e, i) {
      t[i] = function(t) {
        return Math.pow(t, e + 2);
      };
    }), e.extend(t, {
      Sine: function(e) {
        return 1 - Math.cos(e * Math.PI / 2);
      },
      Circ: function(e) {
        return 1 - Math.sqrt(1 - e * e);
      },
      Elastic: function(e) {
        return 0 === e || 1 === e ? e : -Math.pow(2, 8 * (e - 1)) * Math.sin((80 * (e - 1) - 7.5) * Math.PI / 15);
      },
      Back: function(e) {
        return e * e * (3 * e - 2);
      },
      Bounce: function(e) {
        for (var t,
            i = 4; ((t = Math.pow(2, --i)) - 1) / 11 > e; )
          ;
        return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * t - 2) / 22 - e, 2);
      }
    }), e.each(t, function(t, i) {
      e.easing["easeIn" + t] = i, e.easing["easeOut" + t] = function(e) {
        return 1 - i(1 - e);
      }, e.easing["easeInOut" + t] = function(e) {
        return .5 > e ? i(2 * e) / 2 : 1 - i(-2 * e + 2) / 2;
      };
    });
  }(), e.effects, e.effects.effect.blind = function(t, i) {
    var s,
        n,
        a,
        o = e(this),
        r = /up|down|vertical/,
        h = /up|left|vertical|horizontal/,
        l = ["position", "top", "bottom", "left", "right", "height", "width"],
        u = e.effects.setMode(o, t.mode || "hide"),
        d = t.direction || "up",
        c = r.test(d),
        p = c ? "height" : "width",
        f = c ? "top" : "left",
        m = h.test(d),
        g = {},
        v = "show" === u;
    o.parent().is(".ui-effects-wrapper") ? e.effects.save(o.parent(), l) : e.effects.save(o, l), o.show(), s = e.effects.createWrapper(o).css({overflow: "hidden"}), n = s[p](), a = parseFloat(s.css(f)) || 0, g[p] = v ? n : 0, m || (o.css(c ? "bottom" : "right", 0).css(c ? "top" : "left", "auto").css({position: "absolute"}), g[f] = v ? a : n + a), v && (s.css(p, 0), m || s.css(f, a + n)), s.animate(g, {
      duration: t.duration,
      easing: t.easing,
      queue: !1,
      complete: function() {
        "hide" === u && o.hide(), e.effects.restore(o, l), e.effects.removeWrapper(o), i();
      }
    });
  }, e.effects.effect.bounce = function(t, i) {
    var s,
        n,
        a,
        o = e(this),
        r = ["position", "top", "bottom", "left", "right", "height", "width"],
        h = e.effects.setMode(o, t.mode || "effect"),
        l = "hide" === h,
        u = "show" === h,
        d = t.direction || "up",
        c = t.distance,
        p = t.times || 5,
        f = 2 * p + (u || l ? 1 : 0),
        m = t.duration / f,
        g = t.easing,
        v = "up" === d || "down" === d ? "top" : "left",
        y = "up" === d || "left" === d,
        b = o.queue(),
        _ = b.length;
    for ((u || l) && r.push("opacity"), e.effects.save(o, r), o.show(), e.effects.createWrapper(o), c || (c = o["top" === v ? "outerHeight" : "outerWidth"]() / 3), u && (a = {opacity: 1}, a[v] = 0, o.css("opacity", 0).css(v, y ? 2 * -c : 2 * c).animate(a, m, g)), l && (c /= Math.pow(2, p - 1)), a = {}, a[v] = 0, s = 0; p > s; s++)
      n = {}, n[v] = (y ? "-=" : "+=") + c, o.animate(n, m, g).animate(a, m, g), c = l ? 2 * c : c / 2;
    l && (n = {opacity: 0}, n[v] = (y ? "-=" : "+=") + c, o.animate(n, m, g)), o.queue(function() {
      l && o.hide(), e.effects.restore(o, r), e.effects.removeWrapper(o), i();
    }), _ > 1 && b.splice.apply(b, [1, 0].concat(b.splice(_, f + 1))), o.dequeue();
  }, e.effects.effect.clip = function(t, i) {
    var s,
        n,
        a,
        o = e(this),
        r = ["position", "top", "bottom", "left", "right", "height", "width"],
        h = e.effects.setMode(o, t.mode || "hide"),
        l = "show" === h,
        u = t.direction || "vertical",
        d = "vertical" === u,
        c = d ? "height" : "width",
        p = d ? "top" : "left",
        f = {};
    e.effects.save(o, r), o.show(), s = e.effects.createWrapper(o).css({overflow: "hidden"}), n = "IMG" === o[0].tagName ? s : o, a = n[c](), l && (n.css(c, 0), n.css(p, a / 2)), f[c] = l ? a : 0, f[p] = l ? 0 : a / 2, n.animate(f, {
      queue: !1,
      duration: t.duration,
      easing: t.easing,
      complete: function() {
        l || o.hide(), e.effects.restore(o, r), e.effects.removeWrapper(o), i();
      }
    });
  }, e.effects.effect.drop = function(t, i) {
    var s,
        n = e(this),
        a = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"],
        o = e.effects.setMode(n, t.mode || "hide"),
        r = "show" === o,
        h = t.direction || "left",
        l = "up" === h || "down" === h ? "top" : "left",
        u = "up" === h || "left" === h ? "pos" : "neg",
        d = {opacity: r ? 1 : 0};
    e.effects.save(n, a), n.show(), e.effects.createWrapper(n), s = t.distance || n["top" === l ? "outerHeight" : "outerWidth"](!0) / 2, r && n.css("opacity", 0).css(l, "pos" === u ? -s : s), d[l] = (r ? "pos" === u ? "+=" : "-=" : "pos" === u ? "-=" : "+=") + s, n.animate(d, {
      queue: !1,
      duration: t.duration,
      easing: t.easing,
      complete: function() {
        "hide" === o && n.hide(), e.effects.restore(n, a), e.effects.removeWrapper(n), i();
      }
    });
  }, e.effects.effect.explode = function(t, i) {
    function s() {
      b.push(this), b.length === d * c && n();
    }
    function n() {
      p.css({visibility: "visible"}), e(b).remove(), m || p.hide(), i();
    }
    var a,
        o,
        r,
        h,
        l,
        u,
        d = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3,
        c = d,
        p = e(this),
        f = e.effects.setMode(p, t.mode || "hide"),
        m = "show" === f,
        g = p.show().css("visibility", "hidden").offset(),
        v = Math.ceil(p.outerWidth() / c),
        y = Math.ceil(p.outerHeight() / d),
        b = [];
    for (a = 0; d > a; a++)
      for (h = g.top + a * y, u = a - (d - 1) / 2, o = 0; c > o; o++)
        r = g.left + o * v, l = o - (c - 1) / 2, p.clone().appendTo("body").wrap("<div></div>").css({
          position: "absolute",
          visibility: "visible",
          left: -o * v,
          top: -a * y
        }).parent().addClass("ui-effects-explode").css({
          position: "absolute",
          overflow: "hidden",
          width: v,
          height: y,
          left: r + (m ? l * v : 0),
          top: h + (m ? u * y : 0),
          opacity: m ? 0 : 1
        }).animate({
          left: r + (m ? 0 : l * v),
          top: h + (m ? 0 : u * y),
          opacity: m ? 1 : 0
        }, t.duration || 500, t.easing, s);
  }, e.effects.effect.fade = function(t, i) {
    var s = e(this),
        n = e.effects.setMode(s, t.mode || "toggle");
    s.animate({opacity: n}, {
      queue: !1,
      duration: t.duration,
      easing: t.easing,
      complete: i
    });
  }, e.effects.effect.fold = function(t, i) {
    var s,
        n,
        a = e(this),
        o = ["position", "top", "bottom", "left", "right", "height", "width"],
        r = e.effects.setMode(a, t.mode || "hide"),
        h = "show" === r,
        l = "hide" === r,
        u = t.size || 15,
        d = /([0-9]+)%/.exec(u),
        c = !!t.horizFirst,
        p = h !== c,
        f = p ? ["width", "height"] : ["height", "width"],
        m = t.duration / 2,
        g = {},
        v = {};
    e.effects.save(a, o), a.show(), s = e.effects.createWrapper(a).css({overflow: "hidden"}), n = p ? [s.width(), s.height()] : [s.height(), s.width()], d && (u = parseInt(d[1], 10) / 100 * n[l ? 0 : 1]), h && s.css(c ? {
      height: 0,
      width: u
    } : {
      height: u,
      width: 0
    }), g[f[0]] = h ? n[0] : u, v[f[1]] = h ? n[1] : 0, s.animate(g, m, t.easing).animate(v, m, t.easing, function() {
      l && a.hide(), e.effects.restore(a, o), e.effects.removeWrapper(a), i();
    });
  }, e.effects.effect.highlight = function(t, i) {
    var s = e(this),
        n = ["backgroundImage", "backgroundColor", "opacity"],
        a = e.effects.setMode(s, t.mode || "show"),
        o = {backgroundColor: s.css("backgroundColor")};
    "hide" === a && (o.opacity = 0), e.effects.save(s, n), s.show().css({
      backgroundImage: "none",
      backgroundColor: t.color || "#ffff99"
    }).animate(o, {
      queue: !1,
      duration: t.duration,
      easing: t.easing,
      complete: function() {
        "hide" === a && s.hide(), e.effects.restore(s, n), i();
      }
    });
  }, e.effects.effect.size = function(t, i) {
    var s,
        n,
        a,
        o = e(this),
        r = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"],
        h = ["position", "top", "bottom", "left", "right", "overflow", "opacity"],
        l = ["width", "height", "overflow"],
        u = ["fontSize"],
        d = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"],
        c = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"],
        p = e.effects.setMode(o, t.mode || "effect"),
        f = t.restore || "effect" !== p,
        m = t.scale || "both",
        g = t.origin || ["middle", "center"],
        v = o.css("position"),
        y = f ? r : h,
        b = {
          height: 0,
          width: 0,
          outerHeight: 0,
          outerWidth: 0
        };
    "show" === p && o.show(), s = {
      height: o.height(),
      width: o.width(),
      outerHeight: o.outerHeight(),
      outerWidth: o.outerWidth()
    }, "toggle" === t.mode && "show" === p ? (o.from = t.to || b, o.to = t.from || s) : (o.from = t.from || ("show" === p ? b : s), o.to = t.to || ("hide" === p ? b : s)), a = {
      from: {
        y: o.from.height / s.height,
        x: o.from.width / s.width
      },
      to: {
        y: o.to.height / s.height,
        x: o.to.width / s.width
      }
    }, ("box" === m || "both" === m) && (a.from.y !== a.to.y && (y = y.concat(d), o.from = e.effects.setTransition(o, d, a.from.y, o.from), o.to = e.effects.setTransition(o, d, a.to.y, o.to)), a.from.x !== a.to.x && (y = y.concat(c), o.from = e.effects.setTransition(o, c, a.from.x, o.from), o.to = e.effects.setTransition(o, c, a.to.x, o.to))), ("content" === m || "both" === m) && a.from.y !== a.to.y && (y = y.concat(u).concat(l), o.from = e.effects.setTransition(o, u, a.from.y, o.from), o.to = e.effects.setTransition(o, u, a.to.y, o.to)), e.effects.save(o, y), o.show(), e.effects.createWrapper(o), o.css("overflow", "hidden").css(o.from), g && (n = e.effects.getBaseline(g, s), o.from.top = (s.outerHeight - o.outerHeight()) * n.y, o.from.left = (s.outerWidth - o.outerWidth()) * n.x, o.to.top = (s.outerHeight - o.to.outerHeight) * n.y, o.to.left = (s.outerWidth - o.to.outerWidth) * n.x), o.css(o.from), ("content" === m || "both" === m) && (d = d.concat(["marginTop", "marginBottom"]).concat(u), c = c.concat(["marginLeft", "marginRight"]), l = r.concat(d).concat(c), o.find("*[width]").each(function() {
      var i = e(this),
          s = {
            height: i.height(),
            width: i.width(),
            outerHeight: i.outerHeight(),
            outerWidth: i.outerWidth()
          };
      f && e.effects.save(i, l), i.from = {
        height: s.height * a.from.y,
        width: s.width * a.from.x,
        outerHeight: s.outerHeight * a.from.y,
        outerWidth: s.outerWidth * a.from.x
      }, i.to = {
        height: s.height * a.to.y,
        width: s.width * a.to.x,
        outerHeight: s.height * a.to.y,
        outerWidth: s.width * a.to.x
      }, a.from.y !== a.to.y && (i.from = e.effects.setTransition(i, d, a.from.y, i.from), i.to = e.effects.setTransition(i, d, a.to.y, i.to)), a.from.x !== a.to.x && (i.from = e.effects.setTransition(i, c, a.from.x, i.from), i.to = e.effects.setTransition(i, c, a.to.x, i.to)), i.css(i.from), i.animate(i.to, t.duration, t.easing, function() {
        f && e.effects.restore(i, l);
      });
    })), o.animate(o.to, {
      queue: !1,
      duration: t.duration,
      easing: t.easing,
      complete: function() {
        0 === o.to.opacity && o.css("opacity", o.from.opacity), "hide" === p && o.hide(), e.effects.restore(o, y), f || ("static" === v ? o.css({
          position: "relative",
          top: o.to.top,
          left: o.to.left
        }) : e.each(["top", "left"], function(e, t) {
          o.css(t, function(t, i) {
            var s = parseInt(i, 10),
                n = e ? o.to.left : o.to.top;
            return "auto" === i ? n + "px" : s + n + "px";
          });
        })), e.effects.removeWrapper(o), i();
      }
    });
  }, e.effects.effect.scale = function(t, i) {
    var s = e(this),
        n = e.extend(!0, {}, t),
        a = e.effects.setMode(s, t.mode || "effect"),
        o = parseInt(t.percent, 10) || (0 === parseInt(t.percent, 10) ? 0 : "hide" === a ? 0 : 100),
        r = t.direction || "both",
        h = t.origin,
        l = {
          height: s.height(),
          width: s.width(),
          outerHeight: s.outerHeight(),
          outerWidth: s.outerWidth()
        },
        u = {
          y: "horizontal" !== r ? o / 100 : 1,
          x: "vertical" !== r ? o / 100 : 1
        };
    n.effect = "size", n.queue = !1, n.complete = i, "effect" !== a && (n.origin = h || ["middle", "center"], n.restore = !0), n.from = t.from || ("show" === a ? {
      height: 0,
      width: 0,
      outerHeight: 0,
      outerWidth: 0
    } : l), n.to = {
      height: l.height * u.y,
      width: l.width * u.x,
      outerHeight: l.outerHeight * u.y,
      outerWidth: l.outerWidth * u.x
    }, n.fade && ("show" === a && (n.from.opacity = 0, n.to.opacity = 1), "hide" === a && (n.from.opacity = 1, n.to.opacity = 0)), s.effect(n);
  }, e.effects.effect.puff = function(t, i) {
    var s = e(this),
        n = e.effects.setMode(s, t.mode || "hide"),
        a = "hide" === n,
        o = parseInt(t.percent, 10) || 150,
        r = o / 100,
        h = {
          height: s.height(),
          width: s.width(),
          outerHeight: s.outerHeight(),
          outerWidth: s.outerWidth()
        };
    e.extend(t, {
      effect: "scale",
      queue: !1,
      fade: !0,
      mode: n,
      complete: i,
      percent: a ? o : 100,
      from: a ? h : {
        height: h.height * r,
        width: h.width * r,
        outerHeight: h.outerHeight * r,
        outerWidth: h.outerWidth * r
      }
    }), s.effect(t);
  }, e.effects.effect.pulsate = function(t, i) {
    var s,
        n = e(this),
        a = e.effects.setMode(n, t.mode || "show"),
        o = "show" === a,
        r = "hide" === a,
        h = o || "hide" === a,
        l = 2 * (t.times || 5) + (h ? 1 : 0),
        u = t.duration / l,
        d = 0,
        c = n.queue(),
        p = c.length;
    for ((o || !n.is(":visible")) && (n.css("opacity", 0).show(), d = 1), s = 1; l > s; s++)
      n.animate({opacity: d}, u, t.easing), d = 1 - d;
    n.animate({opacity: d}, u, t.easing), n.queue(function() {
      r && n.hide(), i();
    }), p > 1 && c.splice.apply(c, [1, 0].concat(c.splice(p, l + 1))), n.dequeue();
  }, e.effects.effect.shake = function(t, i) {
    var s,
        n = e(this),
        a = ["position", "top", "bottom", "left", "right", "height", "width"],
        o = e.effects.setMode(n, t.mode || "effect"),
        r = t.direction || "left",
        h = t.distance || 20,
        l = t.times || 3,
        u = 2 * l + 1,
        d = Math.round(t.duration / u),
        c = "up" === r || "down" === r ? "top" : "left",
        p = "up" === r || "left" === r,
        f = {},
        m = {},
        g = {},
        v = n.queue(),
        y = v.length;
    for (e.effects.save(n, a), n.show(), e.effects.createWrapper(n), f[c] = (p ? "-=" : "+=") + h, m[c] = (p ? "+=" : "-=") + 2 * h, g[c] = (p ? "-=" : "+=") + 2 * h, n.animate(f, d, t.easing), s = 1; l > s; s++)
      n.animate(m, d, t.easing).animate(g, d, t.easing);
    n.animate(m, d, t.easing).animate(f, d / 2, t.easing).queue(function() {
      "hide" === o && n.hide(), e.effects.restore(n, a), e.effects.removeWrapper(n), i();
    }), y > 1 && v.splice.apply(v, [1, 0].concat(v.splice(y, u + 1))), n.dequeue();
  }, e.effects.effect.slide = function(t, i) {
    var s,
        n = e(this),
        a = ["position", "top", "bottom", "left", "right", "width", "height"],
        o = e.effects.setMode(n, t.mode || "show"),
        r = "show" === o,
        h = t.direction || "left",
        l = "up" === h || "down" === h ? "top" : "left",
        u = "up" === h || "left" === h,
        d = {};
    e.effects.save(n, a), n.show(), s = t.distance || n["top" === l ? "outerHeight" : "outerWidth"](!0), e.effects.createWrapper(n).css({overflow: "hidden"}), r && n.css(l, u ? isNaN(s) ? "-" + s : -s : s), d[l] = (r ? u ? "+=" : "-=" : u ? "-=" : "+=") + s, n.animate(d, {
      queue: !1,
      duration: t.duration,
      easing: t.easing,
      complete: function() {
        "hide" === o && n.hide(), e.effects.restore(n, a), e.effects.removeWrapper(n), i();
      }
    });
  }, e.effects.effect.transfer = function(t, i) {
    var s = e(this),
        n = e(t.to),
        a = "fixed" === n.css("position"),
        o = e("body"),
        r = a ? o.scrollTop() : 0,
        h = a ? o.scrollLeft() : 0,
        l = n.offset(),
        u = {
          top: l.top - r,
          left: l.left - h,
          height: n.innerHeight(),
          width: n.innerWidth()
        },
        d = s.offset(),
        c = e("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(t.className).css({
          top: d.top - r,
          left: d.left - h,
          height: s.innerHeight(),
          width: s.innerWidth(),
          position: a ? "fixed" : "absolute"
        }).animate(u, t.duration, t.easing, function() {
          c.remove(), i();
        });
  }, e.widget("ui.progressbar", {
    version: "1.11.4",
    options: {
      max: 100,
      value: 0,
      change: null,
      complete: null
    },
    min: 0,
    _create: function() {
      this.oldValue = this.options.value = this._constrainedValue(), this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
        role: "progressbar",
        "aria-valuemin": this.min
      }), this.valueDiv = e("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element), this._refreshValue();
    },
    _destroy: function() {
      this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.valueDiv.remove();
    },
    value: function(e) {
      return void 0 === e ? this.options.value : (this.options.value = this._constrainedValue(e), this._refreshValue(), void 0);
    },
    _constrainedValue: function(e) {
      return void 0 === e && (e = this.options.value), this.indeterminate = e === !1, "number" != typeof e && (e = 0), this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, e));
    },
    _setOptions: function(e) {
      var t = e.value;
      delete e.value, this._super(e), this.options.value = this._constrainedValue(t), this._refreshValue();
    },
    _setOption: function(e, t) {
      "max" === e && (t = Math.max(this.min, t)), "disabled" === e && this.element.toggleClass("ui-state-disabled", !!t).attr("aria-disabled", t), this._super(e, t);
    },
    _percentage: function() {
      return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min);
    },
    _refreshValue: function() {
      var t = this.options.value,
          i = this._percentage();
      this.valueDiv.toggle(this.indeterminate || t > this.min).toggleClass("ui-corner-right", t === this.options.max).width(i.toFixed(0) + "%"), this.element.toggleClass("ui-progressbar-indeterminate", this.indeterminate), this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = e("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv))) : (this.element.attr({
        "aria-valuemax": this.options.max,
        "aria-valuenow": t
      }), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== t && (this.oldValue = t, this._trigger("change")), t === this.options.max && this._trigger("complete");
    }
  }), e.widget("ui.selectable", e.ui.mouse, {
    version: "1.11.4",
    options: {
      appendTo: "body",
      autoRefresh: !0,
      distance: 0,
      filter: "*",
      tolerance: "touch",
      selected: null,
      selecting: null,
      start: null,
      stop: null,
      unselected: null,
      unselecting: null
    },
    _create: function() {
      var t,
          i = this;
      this.element.addClass("ui-selectable"), this.dragged = !1, this.refresh = function() {
        t = e(i.options.filter, i.element[0]), t.addClass("ui-selectee"), t.each(function() {
          var t = e(this),
              i = t.offset();
          e.data(this, "selectable-item", {
            element: this,
            $element: t,
            left: i.left,
            top: i.top,
            right: i.left + t.outerWidth(),
            bottom: i.top + t.outerHeight(),
            startselected: !1,
            selected: t.hasClass("ui-selected"),
            selecting: t.hasClass("ui-selecting"),
            unselecting: t.hasClass("ui-unselecting")
          });
        });
      }, this.refresh(), this.selectees = t.addClass("ui-selectee"), this._mouseInit(), this.helper = e("<div class='ui-selectable-helper'></div>");
    },
    _destroy: function() {
      this.selectees.removeClass("ui-selectee").removeData("selectable-item"), this.element.removeClass("ui-selectable ui-selectable-disabled"), this._mouseDestroy();
    },
    _mouseStart: function(t) {
      var i = this,
          s = this.options;
      this.opos = [t.pageX, t.pageY], this.options.disabled || (this.selectees = e(s.filter, this.element[0]), this._trigger("start", t), e(s.appendTo).append(this.helper), this.helper.css({
        left: t.pageX,
        top: t.pageY,
        width: 0,
        height: 0
      }), s.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function() {
        var s = e.data(this, "selectable-item");
        s.startselected = !0, t.metaKey || t.ctrlKey || (s.$element.removeClass("ui-selected"), s.selected = !1, s.$element.addClass("ui-unselecting"), s.unselecting = !0, i._trigger("unselecting", t, {unselecting: s.element}));
      }), e(t.target).parents().addBack().each(function() {
        var s,
            n = e.data(this, "selectable-item");
        return n ? (s = !t.metaKey && !t.ctrlKey || !n.$element.hasClass("ui-selected"), n.$element.removeClass(s ? "ui-unselecting" : "ui-selected").addClass(s ? "ui-selecting" : "ui-unselecting"), n.unselecting = !s, n.selecting = s, n.selected = s, s ? i._trigger("selecting", t, {selecting: n.element}) : i._trigger("unselecting", t, {unselecting: n.element}), !1) : void 0;
      }));
    },
    _mouseDrag: function(t) {
      if (this.dragged = !0, !this.options.disabled) {
        var i,
            s = this,
            n = this.options,
            a = this.opos[0],
            o = this.opos[1],
            r = t.pageX,
            h = t.pageY;
        return a > r && (i = r, r = a, a = i), o > h && (i = h, h = o, o = i), this.helper.css({
          left: a,
          top: o,
          width: r - a,
          height: h - o
        }), this.selectees.each(function() {
          var i = e.data(this, "selectable-item"),
              l = !1;
          i && i.element !== s.element[0] && ("touch" === n.tolerance ? l = !(i.left > r || a > i.right || i.top > h || o > i.bottom) : "fit" === n.tolerance && (l = i.left > a && r > i.right && i.top > o && h > i.bottom), l ? (i.selected && (i.$element.removeClass("ui-selected"), i.selected = !1), i.unselecting && (i.$element.removeClass("ui-unselecting"), i.unselecting = !1), i.selecting || (i.$element.addClass("ui-selecting"), i.selecting = !0, s._trigger("selecting", t, {selecting: i.element}))) : (i.selecting && ((t.metaKey || t.ctrlKey) && i.startselected ? (i.$element.removeClass("ui-selecting"), i.selecting = !1, i.$element.addClass("ui-selected"), i.selected = !0) : (i.$element.removeClass("ui-selecting"), i.selecting = !1, i.startselected && (i.$element.addClass("ui-unselecting"), i.unselecting = !0), s._trigger("unselecting", t, {unselecting: i.element}))), i.selected && (t.metaKey || t.ctrlKey || i.startselected || (i.$element.removeClass("ui-selected"), i.selected = !1, i.$element.addClass("ui-unselecting"), i.unselecting = !0, s._trigger("unselecting", t, {unselecting: i.element})))));
        }), !1;
      }
    },
    _mouseStop: function(t) {
      var i = this;
      return this.dragged = !1, e(".ui-unselecting", this.element[0]).each(function() {
        var s = e.data(this, "selectable-item");
        s.$element.removeClass("ui-unselecting"), s.unselecting = !1, s.startselected = !1, i._trigger("unselected", t, {unselected: s.element});
      }), e(".ui-selecting", this.element[0]).each(function() {
        var s = e.data(this, "selectable-item");
        s.$element.removeClass("ui-selecting").addClass("ui-selected"), s.selecting = !1, s.selected = !0, s.startselected = !0, i._trigger("selected", t, {selected: s.element});
      }), this._trigger("stop", t), this.helper.remove(), !1;
    }
  }), e.widget("ui.selectmenu", {
    version: "1.11.4",
    defaultElement: "<select>",
    options: {
      appendTo: null,
      disabled: null,
      icons: {button: "ui-icon-triangle-1-s"},
      position: {
        my: "left top",
        at: "left bottom",
        collision: "none"
      },
      width: null,
      change: null,
      close: null,
      focus: null,
      open: null,
      select: null
    },
    _create: function() {
      var e = this.element.uniqueId().attr("id");
      this.ids = {
        element: e,
        button: e + "-button",
        menu: e + "-menu"
      }, this._drawButton(), this._drawMenu(), this.options.disabled && this.disable();
    },
    _drawButton: function() {
      var t = this;
      this.label = e("label[for='" + this.ids.element + "']").attr("for", this.ids.button), this._on(this.label, {click: function(e) {
          this.button.focus(), e.preventDefault();
        }}), this.element.hide(), this.button = e("<span>", {
        "class": "ui-selectmenu-button ui-widget ui-state-default ui-corner-all",
        tabindex: this.options.disabled ? -1 : 0,
        id: this.ids.button,
        role: "combobox",
        "aria-expanded": "false",
        "aria-autocomplete": "list",
        "aria-owns": this.ids.menu,
        "aria-haspopup": "true"
      }).insertAfter(this.element), e("<span>", {"class": "ui-icon " + this.options.icons.button}).prependTo(this.button), this.buttonText = e("<span>", {"class": "ui-selectmenu-text"}).appendTo(this.button), this._setText(this.buttonText, this.element.find("option:selected").text()), this._resizeButton(), this._on(this.button, this._buttonEvents), this.button.one("focusin", function() {
        t.menuItems || t._refreshMenu();
      }), this._hoverable(this.button), this._focusable(this.button);
    },
    _drawMenu: function() {
      var t = this;
      this.menu = e("<ul>", {
        "aria-hidden": "true",
        "aria-labelledby": this.ids.button,
        id: this.ids.menu
      }), this.menuWrap = e("<div>", {"class": "ui-selectmenu-menu ui-front"}).append(this.menu).appendTo(this._appendTo()), this.menuInstance = this.menu.menu({
        role: "listbox",
        select: function(e, i) {
          e.preventDefault(), t._setSelection(), t._select(i.item.data("ui-selectmenu-item"), e);
        },
        focus: function(e, i) {
          var s = i.item.data("ui-selectmenu-item");
          null != t.focusIndex && s.index !== t.focusIndex && (t._trigger("focus", e, {item: s}), t.isOpen || t._select(s, e)), t.focusIndex = s.index, t.button.attr("aria-activedescendant", t.menuItems.eq(s.index).attr("id"));
        }
      }).menu("instance"), this.menu.addClass("ui-corner-bottom").removeClass("ui-corner-all"), this.menuInstance._off(this.menu, "mouseleave"), this.menuInstance._closeOnDocumentClick = function() {
        return !1;
      }, this.menuInstance._isDivider = function() {
        return !1;
      };
    },
    refresh: function() {
      this._refreshMenu(), this._setText(this.buttonText, this._getSelectedItem().text()), this.options.width || this._resizeButton();
    },
    _refreshMenu: function() {
      this.menu.empty();
      var e,
          t = this.element.find("option");
      t.length && (this._parseOptions(t), this._renderMenu(this.menu, this.items), this.menuInstance.refresh(), this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup"), e = this._getSelectedItem(), this.menuInstance.focus(null, e), this._setAria(e.data("ui-selectmenu-item")), this._setOption("disabled", this.element.prop("disabled")));
    },
    open: function(e) {
      this.options.disabled || (this.menuItems ? (this.menu.find(".ui-state-focus").removeClass("ui-state-focus"), this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(), this.isOpen = !0, this._toggleAttr(), this._resizeMenu(), this._position(), this._on(this.document, this._documentClick), this._trigger("open", e));
    },
    _position: function() {
      this.menuWrap.position(e.extend({of: this.button}, this.options.position));
    },
    close: function(e) {
      this.isOpen && (this.isOpen = !1, this._toggleAttr(), this.range = null, this._off(this.document), this._trigger("close", e));
    },
    widget: function() {
      return this.button;
    },
    menuWidget: function() {
      return this.menu;
    },
    _renderMenu: function(t, i) {
      var s = this,
          n = "";
      e.each(i, function(i, a) {
        a.optgroup !== n && (e("<li>", {
          "class": "ui-selectmenu-optgroup ui-menu-divider" + (a.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : ""),
          text: a.optgroup
        }).appendTo(t), n = a.optgroup), s._renderItemData(t, a);
      });
    },
    _renderItemData: function(e, t) {
      return this._renderItem(e, t).data("ui-selectmenu-item", t);
    },
    _renderItem: function(t, i) {
      var s = e("<li>");
      return i.disabled && s.addClass("ui-state-disabled"), this._setText(s, i.label), s.appendTo(t);
    },
    _setText: function(e, t) {
      t ? e.text(t) : e.html("&#160;");
    },
    _move: function(e, t) {
      var i,
          s,
          n = ".ui-menu-item";
      this.isOpen ? i = this.menuItems.eq(this.focusIndex) : (i = this.menuItems.eq(this.element[0].selectedIndex), n += ":not(.ui-state-disabled)"), s = "first" === e || "last" === e ? i["first" === e ? "prevAll" : "nextAll"](n).eq(-1) : i[e + "All"](n).eq(0), s.length && this.menuInstance.focus(t, s);
    },
    _getSelectedItem: function() {
      return this.menuItems.eq(this.element[0].selectedIndex);
    },
    _toggle: function(e) {
      this[this.isOpen ? "close" : "open"](e);
    },
    _setSelection: function() {
      var e;
      this.range && (window.getSelection ? (e = window.getSelection(), e.removeAllRanges(), e.addRange(this.range)) : this.range.select(), this.button.focus());
    },
    _documentClick: {mousedown: function(t) {
        this.isOpen && (e(t.target).closest(".ui-selectmenu-menu, #" + this.ids.button).length || this.close(t));
      }},
    _buttonEvents: {
      mousedown: function() {
        var e;
        window.getSelection ? (e = window.getSelection(), e.rangeCount && (this.range = e.getRangeAt(0))) : this.range = document.selection.createRange();
      },
      click: function(e) {
        this._setSelection(), this._toggle(e);
      },
      keydown: function(t) {
        var i = !0;
        switch (t.keyCode) {
          case e.ui.keyCode.TAB:
          case e.ui.keyCode.ESCAPE:
            this.close(t), i = !1;
            break;
          case e.ui.keyCode.ENTER:
            this.isOpen && this._selectFocusedItem(t);
            break;
          case e.ui.keyCode.UP:
            t.altKey ? this._toggle(t) : this._move("prev", t);
            break;
          case e.ui.keyCode.DOWN:
            t.altKey ? this._toggle(t) : this._move("next", t);
            break;
          case e.ui.keyCode.SPACE:
            this.isOpen ? this._selectFocusedItem(t) : this._toggle(t);
            break;
          case e.ui.keyCode.LEFT:
            this._move("prev", t);
            break;
          case e.ui.keyCode.RIGHT:
            this._move("next", t);
            break;
          case e.ui.keyCode.HOME:
          case e.ui.keyCode.PAGE_UP:
            this._move("first", t);
            break;
          case e.ui.keyCode.END:
          case e.ui.keyCode.PAGE_DOWN:
            this._move("last", t);
            break;
          default:
            this.menu.trigger(t), i = !1;
        }
        i && t.preventDefault();
      }
    },
    _selectFocusedItem: function(e) {
      var t = this.menuItems.eq(this.focusIndex);
      t.hasClass("ui-state-disabled") || this._select(t.data("ui-selectmenu-item"), e);
    },
    _select: function(e, t) {
      var i = this.element[0].selectedIndex;
      this.element[0].selectedIndex = e.index, this._setText(this.buttonText, e.label), this._setAria(e), this._trigger("select", t, {item: e}), e.index !== i && this._trigger("change", t, {item: e}), this.close(t);
    },
    _setAria: function(e) {
      var t = this.menuItems.eq(e.index).attr("id");
      this.button.attr({
        "aria-labelledby": t,
        "aria-activedescendant": t
      }), this.menu.attr("aria-activedescendant", t);
    },
    _setOption: function(e, t) {
      "icons" === e && this.button.find("span.ui-icon").removeClass(this.options.icons.button).addClass(t.button), this._super(e, t), "appendTo" === e && this.menuWrap.appendTo(this._appendTo()), "disabled" === e && (this.menuInstance.option("disabled", t), this.button.toggleClass("ui-state-disabled", t).attr("aria-disabled", t), this.element.prop("disabled", t), t ? (this.button.attr("tabindex", -1), this.close()) : this.button.attr("tabindex", 0)), "width" === e && this._resizeButton();
    },
    _appendTo: function() {
      var t = this.options.appendTo;
      return t && (t = t.jquery || t.nodeType ? e(t) : this.document.find(t).eq(0)), t && t[0] || (t = this.element.closest(".ui-front")), t.length || (t = this.document[0].body), t;
    },
    _toggleAttr: function() {
      this.button.toggleClass("ui-corner-top", this.isOpen).toggleClass("ui-corner-all", !this.isOpen).attr("aria-expanded", this.isOpen), this.menuWrap.toggleClass("ui-selectmenu-open", this.isOpen), this.menu.attr("aria-hidden", !this.isOpen);
    },
    _resizeButton: function() {
      var e = this.options.width;
      e || (e = this.element.show().outerWidth(), this.element.hide()), this.button.outerWidth(e);
    },
    _resizeMenu: function() {
      this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1));
    },
    _getCreateOptions: function() {
      return {disabled: this.element.prop("disabled")};
    },
    _parseOptions: function(t) {
      var i = [];
      t.each(function(t, s) {
        var n = e(s),
            a = n.parent("optgroup");
        i.push({
          element: n,
          index: t,
          value: n.val(),
          label: n.text(),
          optgroup: a.attr("label") || "",
          disabled: a.prop("disabled") || n.prop("disabled")
        });
      }), this.items = i;
    },
    _destroy: function() {
      this.menuWrap.remove(), this.button.remove(), this.element.show(), this.element.removeUniqueId(), this.label.attr("for", this.ids.element);
    }
  }), e.widget("ui.slider", e.ui.mouse, {
    version: "1.11.4",
    widgetEventPrefix: "slide",
    options: {
      animate: !1,
      distance: 0,
      max: 100,
      min: 0,
      orientation: "horizontal",
      range: !1,
      step: 1,
      value: 0,
      values: null,
      change: null,
      slide: null,
      start: null,
      stop: null
    },
    numPages: 5,
    _create: function() {
      this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this._calculateNewMax(), this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget" + " ui-widget-content" + " ui-corner-all"), this._refresh(), this._setOption("disabled", this.options.disabled), this._animateOff = !1;
    },
    _refresh: function() {
      this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue();
    },
    _createHandles: function() {
      var t,
          i,
          s = this.options,
          n = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),
          a = "<span class='ui-slider-handle ui-state-default ui-corner-all' tabindex='0'></span>",
          o = [];
      for (i = s.values && s.values.length || 1, n.length > i && (n.slice(i).remove(), n = n.slice(0, i)), t = n.length; i > t; t++)
        o.push(a);
      this.handles = n.add(e(o.join("")).appendTo(this.element)), this.handle = this.handles.eq(0), this.handles.each(function(t) {
        e(this).data("ui-slider-handle-index", t);
      });
    },
    _createRange: function() {
      var t = this.options,
          i = "";
      t.range ? (t.range === !0 && (t.values ? t.values.length && 2 !== t.values.length ? t.values = [t.values[0], t.values[0]] : e.isArray(t.values) && (t.values = t.values.slice(0)) : t.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({
        left: "",
        bottom: ""
      }) : (this.range = e("<div></div>").appendTo(this.element), i = "ui-slider-range ui-widget-header ui-corner-all"), this.range.addClass(i + ("min" === t.range || "max" === t.range ? " ui-slider-range-" + t.range : ""))) : (this.range && this.range.remove(), this.range = null);
    },
    _setupEvents: function() {
      this._off(this.handles), this._on(this.handles, this._handleEvents), this._hoverable(this.handles), this._focusable(this.handles);
    },
    _destroy: function() {
      this.handles.remove(), this.range && this.range.remove(), this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"), this._mouseDestroy();
    },
    _mouseCapture: function(t) {
      var i,
          s,
          n,
          a,
          o,
          r,
          h,
          l,
          u = this,
          d = this.options;
      return d.disabled ? !1 : (this.elementSize = {
        width: this.element.outerWidth(),
        height: this.element.outerHeight()
      }, this.elementOffset = this.element.offset(), i = {
        x: t.pageX,
        y: t.pageY
      }, s = this._normValueFromMouse(i), n = this._valueMax() - this._valueMin() + 1, this.handles.each(function(t) {
        var i = Math.abs(s - u.values(t));
        (n > i || n === i && (t === u._lastChangedValue || u.values(t) === d.min)) && (n = i, a = e(this), o = t);
      }), r = this._start(t, o), r === !1 ? !1 : (this._mouseSliding = !0, this._handleIndex = o, a.addClass("ui-state-active").focus(), h = a.offset(), l = !e(t.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = l ? {
        left: 0,
        top: 0
      } : {
        left: t.pageX - h.left - a.width() / 2,
        top: t.pageY - h.top - a.height() / 2 - (parseInt(a.css("borderTopWidth"), 10) || 0) - (parseInt(a.css("borderBottomWidth"), 10) || 0) + (parseInt(a.css("marginTop"), 10) || 0)
      }, this.handles.hasClass("ui-state-hover") || this._slide(t, o, s), this._animateOff = !0, !0));
    },
    _mouseStart: function() {
      return !0;
    },
    _mouseDrag: function(e) {
      var t = {
        x: e.pageX,
        y: e.pageY
      },
          i = this._normValueFromMouse(t);
      return this._slide(e, this._handleIndex, i), !1;
    },
    _mouseStop: function(e) {
      return this.handles.removeClass("ui-state-active"), this._mouseSliding = !1, this._stop(e, this._handleIndex), this._change(e, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1;
    },
    _detectOrientation: function() {
      this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal";
    },
    _normValueFromMouse: function(e) {
      var t,
          i,
          s,
          n,
          a;
      return "horizontal" === this.orientation ? (t = this.elementSize.width, i = e.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (t = this.elementSize.height, i = e.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), s = i / t, s > 1 && (s = 1), 0 > s && (s = 0), "vertical" === this.orientation && (s = 1 - s), n = this._valueMax() - this._valueMin(), a = this._valueMin() + s * n, this._trimAlignValue(a);
    },
    _start: function(e, t) {
      var i = {
        handle: this.handles[t],
        value: this.value()
      };
      return this.options.values && this.options.values.length && (i.value = this.values(t), i.values = this.values()), this._trigger("start", e, i);
    },
    _slide: function(e, t, i) {
      var s,
          n,
          a;
      this.options.values && this.options.values.length ? (s = this.values(t ? 0 : 1), 2 === this.options.values.length && this.options.range === !0 && (0 === t && i > s || 1 === t && s > i) && (i = s), i !== this.values(t) && (n = this.values(), n[t] = i, a = this._trigger("slide", e, {
        handle: this.handles[t],
        value: i,
        values: n
      }), s = this.values(t ? 0 : 1), a !== !1 && this.values(t, i))) : i !== this.value() && (a = this._trigger("slide", e, {
        handle: this.handles[t],
        value: i
      }), a !== !1 && this.value(i));
    },
    _stop: function(e, t) {
      var i = {
        handle: this.handles[t],
        value: this.value()
      };
      this.options.values && this.options.values.length && (i.value = this.values(t), i.values = this.values()), this._trigger("stop", e, i);
    },
    _change: function(e, t) {
      if (!this._keySliding && !this._mouseSliding) {
        var i = {
          handle: this.handles[t],
          value: this.value()
        };
        this.options.values && this.options.values.length && (i.value = this.values(t), i.values = this.values()), this._lastChangedValue = t, this._trigger("change", e, i);
      }
    },
    value: function(e) {
      return arguments.length ? (this.options.value = this._trimAlignValue(e), this._refreshValue(), this._change(null, 0), void 0) : this._value();
    },
    values: function(t, i) {
      var s,
          n,
          a;
      if (arguments.length > 1)
        return this.options.values[t] = this._trimAlignValue(i), this._refreshValue(), this._change(null, t), void 0;
      if (!arguments.length)
        return this._values();
      if (!e.isArray(arguments[0]))
        return this.options.values && this.options.values.length ? this._values(t) : this.value();
      for (s = this.options.values, n = arguments[0], a = 0; s.length > a; a += 1)
        s[a] = this._trimAlignValue(n[a]), this._change(null, a);
      this._refreshValue();
    },
    _setOption: function(t, i) {
      var s,
          n = 0;
      switch ("range" === t && this.options.range === !0 && ("min" === i ? (this.options.value = this._values(0), this.options.values = null) : "max" === i && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), e.isArray(this.options.values) && (n = this.options.values.length), "disabled" === t && this.element.toggleClass("ui-state-disabled", !!i), this._super(t, i), t) {
        case "orientation":
          this._detectOrientation(), this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation), this._refreshValue(), this.handles.css("horizontal" === i ? "bottom" : "left", "");
          break;
        case "value":
          this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1;
          break;
        case "values":
          for (this._animateOff = !0, this._refreshValue(), s = 0; n > s; s += 1)
            this._change(null, s);
          this._animateOff = !1;
          break;
        case "step":
        case "min":
        case "max":
          this._animateOff = !0, this._calculateNewMax(), this._refreshValue(), this._animateOff = !1;
          break;
        case "range":
          this._animateOff = !0, this._refresh(), this._animateOff = !1;
      }
    },
    _value: function() {
      var e = this.options.value;
      return e = this._trimAlignValue(e);
    },
    _values: function(e) {
      var t,
          i,
          s;
      if (arguments.length)
        return t = this.options.values[e], t = this._trimAlignValue(t);
      if (this.options.values && this.options.values.length) {
        for (i = this.options.values.slice(), s = 0; i.length > s; s += 1)
          i[s] = this._trimAlignValue(i[s]);
        return i;
      }
      return [];
    },
    _trimAlignValue: function(e) {
      if (this._valueMin() >= e)
        return this._valueMin();
      if (e >= this._valueMax())
        return this._valueMax();
      var t = this.options.step > 0 ? this.options.step : 1,
          i = (e - this._valueMin()) % t,
          s = e - i;
      return 2 * Math.abs(i) >= t && (s += i > 0 ? t : -t), parseFloat(s.toFixed(5));
    },
    _calculateNewMax: function() {
      var e = this.options.max,
          t = this._valueMin(),
          i = this.options.step,
          s = Math.floor(+(e - t).toFixed(this._precision()) / i) * i;
      e = s + t, this.max = parseFloat(e.toFixed(this._precision()));
    },
    _precision: function() {
      var e = this._precisionOf(this.options.step);
      return null !== this.options.min && (e = Math.max(e, this._precisionOf(this.options.min))), e;
    },
    _precisionOf: function(e) {
      var t = "" + e,
          i = t.indexOf(".");
      return -1 === i ? 0 : t.length - i - 1;
    },
    _valueMin: function() {
      return this.options.min;
    },
    _valueMax: function() {
      return this.max;
    },
    _refreshValue: function() {
      var t,
          i,
          s,
          n,
          a,
          o = this.options.range,
          r = this.options,
          h = this,
          l = this._animateOff ? !1 : r.animate,
          u = {};
      this.options.values && this.options.values.length ? this.handles.each(function(s) {
        i = 100 * ((h.values(s) - h._valueMin()) / (h._valueMax() - h._valueMin())), u["horizontal" === h.orientation ? "left" : "bottom"] = i + "%", e(this).stop(1, 1)[l ? "animate" : "css"](u, r.animate), h.options.range === !0 && ("horizontal" === h.orientation ? (0 === s && h.range.stop(1, 1)[l ? "animate" : "css"]({left: i + "%"}, r.animate), 1 === s && h.range[l ? "animate" : "css"]({width: i - t + "%"}, {
          queue: !1,
          duration: r.animate
        })) : (0 === s && h.range.stop(1, 1)[l ? "animate" : "css"]({bottom: i + "%"}, r.animate), 1 === s && h.range[l ? "animate" : "css"]({height: i - t + "%"}, {
          queue: !1,
          duration: r.animate
        }))), t = i;
      }) : (s = this.value(), n = this._valueMin(), a = this._valueMax(), i = a !== n ? 100 * ((s - n) / (a - n)) : 0, u["horizontal" === this.orientation ? "left" : "bottom"] = i + "%", this.handle.stop(1, 1)[l ? "animate" : "css"](u, r.animate), "min" === o && "horizontal" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({width: i + "%"}, r.animate), "max" === o && "horizontal" === this.orientation && this.range[l ? "animate" : "css"]({width: 100 - i + "%"}, {
        queue: !1,
        duration: r.animate
      }), "min" === o && "vertical" === this.orientation && this.range.stop(1, 1)[l ? "animate" : "css"]({height: i + "%"}, r.animate), "max" === o && "vertical" === this.orientation && this.range[l ? "animate" : "css"]({height: 100 - i + "%"}, {
        queue: !1,
        duration: r.animate
      }));
    },
    _handleEvents: {
      keydown: function(t) {
        var i,
            s,
            n,
            a,
            o = e(t.target).data("ui-slider-handle-index");
        switch (t.keyCode) {
          case e.ui.keyCode.HOME:
          case e.ui.keyCode.END:
          case e.ui.keyCode.PAGE_UP:
          case e.ui.keyCode.PAGE_DOWN:
          case e.ui.keyCode.UP:
          case e.ui.keyCode.RIGHT:
          case e.ui.keyCode.DOWN:
          case e.ui.keyCode.LEFT:
            if (t.preventDefault(), !this._keySliding && (this._keySliding = !0, e(t.target).addClass("ui-state-active"), i = this._start(t, o), i === !1))
              return;
        }
        switch (a = this.options.step, s = n = this.options.values && this.options.values.length ? this.values(o) : this.value(), t.keyCode) {
          case e.ui.keyCode.HOME:
            n = this._valueMin();
            break;
          case e.ui.keyCode.END:
            n = this._valueMax();
            break;
          case e.ui.keyCode.PAGE_UP:
            n = this._trimAlignValue(s + (this._valueMax() - this._valueMin()) / this.numPages);
            break;
          case e.ui.keyCode.PAGE_DOWN:
            n = this._trimAlignValue(s - (this._valueMax() - this._valueMin()) / this.numPages);
            break;
          case e.ui.keyCode.UP:
          case e.ui.keyCode.RIGHT:
            if (s === this._valueMax())
              return;
            n = this._trimAlignValue(s + a);
            break;
          case e.ui.keyCode.DOWN:
          case e.ui.keyCode.LEFT:
            if (s === this._valueMin())
              return;
            n = this._trimAlignValue(s - a);
        }
        this._slide(t, o, n);
      },
      keyup: function(t) {
        var i = e(t.target).data("ui-slider-handle-index");
        this._keySliding && (this._keySliding = !1, this._stop(t, i), this._change(t, i), e(t.target).removeClass("ui-state-active"));
      }
    }
  }), e.widget("ui.sortable", e.ui.mouse, {
    version: "1.11.4",
    widgetEventPrefix: "sort",
    ready: !1,
    options: {
      appendTo: "parent",
      axis: !1,
      connectWith: !1,
      containment: !1,
      cursor: "auto",
      cursorAt: !1,
      dropOnEmpty: !0,
      forcePlaceholderSize: !1,
      forceHelperSize: !1,
      grid: !1,
      handle: !1,
      helper: "original",
      items: "> *",
      opacity: !1,
      placeholder: !1,
      revert: !1,
      scroll: !0,
      scrollSensitivity: 20,
      scrollSpeed: 20,
      scope: "default",
      tolerance: "intersect",
      zIndex: 1e3,
      activate: null,
      beforeStop: null,
      change: null,
      deactivate: null,
      out: null,
      over: null,
      receive: null,
      remove: null,
      sort: null,
      start: null,
      stop: null,
      update: null
    },
    _isOverAxis: function(e, t, i) {
      return e >= t && t + i > e;
    },
    _isFloating: function(e) {
      return /left|right/.test(e.css("float")) || /inline|table-cell/.test(e.css("display"));
    },
    _create: function() {
      this.containerCache = {}, this.element.addClass("ui-sortable"), this.refresh(), this.offset = this.element.offset(), this._mouseInit(), this._setHandleClassName(), this.ready = !0;
    },
    _setOption: function(e, t) {
      this._super(e, t), "handle" === e && this._setHandleClassName();
    },
    _setHandleClassName: function() {
      this.element.find(".ui-sortable-handle").removeClass("ui-sortable-handle"), e.each(this.items, function() {
        (this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item).addClass("ui-sortable-handle");
      });
    },
    _destroy: function() {
      this.element.removeClass("ui-sortable ui-sortable-disabled").find(".ui-sortable-handle").removeClass("ui-sortable-handle"), this._mouseDestroy();
      for (var e = this.items.length - 1; e >= 0; e--)
        this.items[e].item.removeData(this.widgetName + "-item");
      return this;
    },
    _mouseCapture: function(t, i) {
      var s = null,
          n = !1,
          a = this;
      return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(t), e(t.target).parents().each(function() {
        return e.data(this, a.widgetName + "-item") === a ? (s = e(this), !1) : void 0;
      }), e.data(t.target, a.widgetName + "-item") === a && (s = e(t.target)), s ? !this.options.handle || i || (e(this.options.handle, s).find("*").addBack().each(function() {
        this === t.target && (n = !0);
      }), n) ? (this.currentItem = s, this._removeCurrentsFromItems(), !0) : !1 : !1);
    },
    _mouseStart: function(t, i, s) {
      var n,
          a,
          o = this.options;
      if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(t), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {
        top: this.offset.top - this.margins.top,
        left: this.offset.left - this.margins.left
      }, e.extend(this.offset, {
        click: {
          left: t.pageX - this.offset.left,
          top: t.pageY - this.offset.top
        },
        parent: this._getParentOffset(),
        relative: this._getRelativeOffset()
      }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(t), this.originalPageX = t.pageX, this.originalPageY = t.pageY, o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt), this.domPosition = {
        prev: this.currentItem.prev()[0],
        parent: this.currentItem.parent()[0]
      }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), o.containment && this._setContainment(), o.cursor && "auto" !== o.cursor && (a = this.document.find("body"), this.storedCursor = a.css("cursor"), a.css("cursor", o.cursor), this.storedStylesheet = e("<style>*{ cursor: " + o.cursor + " !important; }</style>").appendTo(a)), o.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", o.opacity)), o.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", o.zIndex)), this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", t, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !s)
        for (n = this.containers.length - 1; n >= 0; n--)
          this.containers[n]._trigger("activate", t, this._uiHash(this));
      return e.ui.ddmanager && (e.ui.ddmanager.current = this), e.ui.ddmanager && !o.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(t), !0;
    },
    _mouseDrag: function(t) {
      var i,
          s,
          n,
          a,
          o = this.options,
          r = !1;
      for (this.position = this._generatePosition(t), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - t.pageY < o.scrollSensitivity ? this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop + o.scrollSpeed : t.pageY - this.overflowOffset.top < o.scrollSensitivity && (this.scrollParent[0].scrollTop = r = this.scrollParent[0].scrollTop - o.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - t.pageX < o.scrollSensitivity ? this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft + o.scrollSpeed : t.pageX - this.overflowOffset.left < o.scrollSensitivity && (this.scrollParent[0].scrollLeft = r = this.scrollParent[0].scrollLeft - o.scrollSpeed)) : (t.pageY - this.document.scrollTop() < o.scrollSensitivity ? r = this.document.scrollTop(this.document.scrollTop() - o.scrollSpeed) : this.window.height() - (t.pageY - this.document.scrollTop()) < o.scrollSensitivity && (r = this.document.scrollTop(this.document.scrollTop() + o.scrollSpeed)), t.pageX - this.document.scrollLeft() < o.scrollSensitivity ? r = this.document.scrollLeft(this.document.scrollLeft() - o.scrollSpeed) : this.window.width() - (t.pageX - this.document.scrollLeft()) < o.scrollSensitivity && (r = this.document.scrollLeft(this.document.scrollLeft() + o.scrollSpeed))), r !== !1 && e.ui.ddmanager && !o.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, t)), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), i = this.items.length - 1; i >= 0; i--)
        if (s = this.items[i], n = s.item[0], a = this._intersectsWithPointer(s), a && s.instance === this.currentContainer && n !== this.currentItem[0] && this.placeholder[1 === a ? "next" : "prev"]()[0] !== n && !e.contains(this.placeholder[0], n) && ("semi-dynamic" === this.options.type ? !e.contains(this.element[0], n) : !0)) {
          if (this.direction = 1 === a ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(s))
            break;
          this._rearrange(t, s), this._trigger("change", t, this._uiHash());
          break;
        }
      return this._contactContainers(t), e.ui.ddmanager && e.ui.ddmanager.drag(this, t), this._trigger("sort", t, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1;
    },
    _mouseStop: function(t, i) {
      if (t) {
        if (e.ui.ddmanager && !this.options.dropBehaviour && e.ui.ddmanager.drop(this, t), this.options.revert) {
          var s = this,
              n = this.placeholder.offset(),
              a = this.options.axis,
              o = {};
          a && "x" !== a || (o.left = n.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)), a && "y" !== a || (o.top = n.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, e(this.helper).animate(o, parseInt(this.options.revert, 10) || 500, function() {
            s._clear(t);
          });
        } else
          this._clear(t, i);
        return !1;
      }
    },
    cancel: function() {
      if (this.dragging) {
        this._mouseUp({target: null}), "original" === this.options.helper ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
        for (var t = this.containers.length - 1; t >= 0; t--)
          this.containers[t]._trigger("deactivate", null, this._uiHash(this)), this.containers[t].containerCache.over && (this.containers[t]._trigger("out", null, this._uiHash(this)), this.containers[t].containerCache.over = 0);
      }
      return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), e.extend(this, {
        helper: null,
        dragging: !1,
        reverting: !1,
        _noFinalSort: null
      }), this.domPosition.prev ? e(this.domPosition.prev).after(this.currentItem) : e(this.domPosition.parent).prepend(this.currentItem)), this;
    },
    serialize: function(t) {
      var i = this._getItemsAsjQuery(t && t.connected),
          s = [];
      return t = t || {}, e(i).each(function() {
        var i = (e(t.item || this).attr(t.attribute || "id") || "").match(t.expression || /(.+)[\-=_](.+)/);
        i && s.push((t.key || i[1] + "[]") + "=" + (t.key && t.expression ? i[1] : i[2]));
      }), !s.length && t.key && s.push(t.key + "="), s.join("&");
    },
    toArray: function(t) {
      var i = this._getItemsAsjQuery(t && t.connected),
          s = [];
      return t = t || {}, i.each(function() {
        s.push(e(t.item || this).attr(t.attribute || "id") || "");
      }), s;
    },
    _intersectsWith: function(e) {
      var t = this.positionAbs.left,
          i = t + this.helperProportions.width,
          s = this.positionAbs.top,
          n = s + this.helperProportions.height,
          a = e.left,
          o = a + e.width,
          r = e.top,
          h = r + e.height,
          l = this.offset.click.top,
          u = this.offset.click.left,
          d = "x" === this.options.axis || s + l > r && h > s + l,
          c = "y" === this.options.axis || t + u > a && o > t + u,
          p = d && c;
      return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > e[this.floating ? "width" : "height"] ? p : t + this.helperProportions.width / 2 > a && o > i - this.helperProportions.width / 2 && s + this.helperProportions.height / 2 > r && h > n - this.helperProportions.height / 2;
    },
    _intersectsWithPointer: function(e) {
      var t = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, e.top, e.height),
          i = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, e.left, e.width),
          s = t && i,
          n = this._getDragVerticalDirection(),
          a = this._getDragHorizontalDirection();
      return s ? this.floating ? a && "right" === a || "down" === n ? 2 : 1 : n && ("down" === n ? 2 : 1) : !1;
    },
    _intersectsWithSides: function(e) {
      var t = this._isOverAxis(this.positionAbs.top + this.offset.click.top, e.top + e.height / 2, e.height),
          i = this._isOverAxis(this.positionAbs.left + this.offset.click.left, e.left + e.width / 2, e.width),
          s = this._getDragVerticalDirection(),
          n = this._getDragHorizontalDirection();
      return this.floating && n ? "right" === n && i || "left" === n && !i : s && ("down" === s && t || "up" === s && !t);
    },
    _getDragVerticalDirection: function() {
      var e = this.positionAbs.top - this.lastPositionAbs.top;
      return 0 !== e && (e > 0 ? "down" : "up");
    },
    _getDragHorizontalDirection: function() {
      var e = this.positionAbs.left - this.lastPositionAbs.left;
      return 0 !== e && (e > 0 ? "right" : "left");
    },
    refresh: function(e) {
      return this._refreshItems(e), this._setHandleClassName(), this.refreshPositions(), this;
    },
    _connectWith: function() {
      var e = this.options;
      return e.connectWith.constructor === String ? [e.connectWith] : e.connectWith;
    },
    _getItemsAsjQuery: function(t) {
      function i() {
        r.push(this);
      }
      var s,
          n,
          a,
          o,
          r = [],
          h = [],
          l = this._connectWith();
      if (l && t)
        for (s = l.length - 1; s >= 0; s--)
          for (a = e(l[s], this.document[0]), n = a.length - 1; n >= 0; n--)
            o = e.data(a[n], this.widgetFullName), o && o !== this && !o.options.disabled && h.push([e.isFunction(o.options.items) ? o.options.items.call(o.element) : e(o.options.items, o.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), o]);
      for (h.push([e.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
        options: this.options,
        item: this.currentItem
      }) : e(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), s = h.length - 1; s >= 0; s--)
        h[s][0].each(i);
      return e(r);
    },
    _removeCurrentsFromItems: function() {
      var t = this.currentItem.find(":data(" + this.widgetName + "-item)");
      this.items = e.grep(this.items, function(e) {
        for (var i = 0; t.length > i; i++)
          if (t[i] === e.item[0])
            return !1;
        return !0;
      });
    },
    _refreshItems: function(t) {
      this.items = [], this.containers = [this];
      var i,
          s,
          n,
          a,
          o,
          r,
          h,
          l,
          u = this.items,
          d = [[e.isFunction(this.options.items) ? this.options.items.call(this.element[0], t, {item: this.currentItem}) : e(this.options.items, this.element), this]],
          c = this._connectWith();
      if (c && this.ready)
        for (i = c.length - 1; i >= 0; i--)
          for (n = e(c[i], this.document[0]), s = n.length - 1; s >= 0; s--)
            a = e.data(n[s], this.widgetFullName), a && a !== this && !a.options.disabled && (d.push([e.isFunction(a.options.items) ? a.options.items.call(a.element[0], t, {item: this.currentItem}) : e(a.options.items, a.element), a]), this.containers.push(a));
      for (i = d.length - 1; i >= 0; i--)
        for (o = d[i][1], r = d[i][0], s = 0, l = r.length; l > s; s++)
          h = e(r[s]), h.data(this.widgetName + "-item", o), u.push({
            item: h,
            instance: o,
            width: 0,
            height: 0,
            left: 0,
            top: 0
          });
    },
    refreshPositions: function(t) {
      this.floating = this.items.length ? "x" === this.options.axis || this._isFloating(this.items[0].item) : !1, this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
      var i,
          s,
          n,
          a;
      for (i = this.items.length - 1; i >= 0; i--)
        s = this.items[i], s.instance !== this.currentContainer && this.currentContainer && s.item[0] !== this.currentItem[0] || (n = this.options.toleranceElement ? e(this.options.toleranceElement, s.item) : s.item, t || (s.width = n.outerWidth(), s.height = n.outerHeight()), a = n.offset(), s.left = a.left, s.top = a.top);
      if (this.options.custom && this.options.custom.refreshContainers)
        this.options.custom.refreshContainers.call(this);
      else
        for (i = this.containers.length - 1; i >= 0; i--)
          a = this.containers[i].element.offset(), this.containers[i].containerCache.left = a.left, this.containers[i].containerCache.top = a.top, this.containers[i].containerCache.width = this.containers[i].element.outerWidth(), this.containers[i].containerCache.height = this.containers[i].element.outerHeight();
      return this;
    },
    _createPlaceholder: function(t) {
      t = t || this;
      var i,
          s = t.options;
      s.placeholder && s.placeholder.constructor !== String || (i = s.placeholder, s.placeholder = {
        element: function() {
          var s = t.currentItem[0].nodeName.toLowerCase(),
              n = e("<" + s + ">", t.document[0]).addClass(i || t.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
          return "tbody" === s ? t._createTrPlaceholder(t.currentItem.find("tr").eq(0), e("<tr>", t.document[0]).appendTo(n)) : "tr" === s ? t._createTrPlaceholder(t.currentItem, n) : "img" === s && n.attr("src", t.currentItem.attr("src")), i || n.css("visibility", "hidden"), n;
        },
        update: function(e, n) {
          (!i || s.forcePlaceholderSize) && (n.height() || n.height(t.currentItem.innerHeight() - parseInt(t.currentItem.css("paddingTop") || 0, 10) - parseInt(t.currentItem.css("paddingBottom") || 0, 10)), n.width() || n.width(t.currentItem.innerWidth() - parseInt(t.currentItem.css("paddingLeft") || 0, 10) - parseInt(t.currentItem.css("paddingRight") || 0, 10)));
        }
      }), t.placeholder = e(s.placeholder.element.call(t.element, t.currentItem)), t.currentItem.after(t.placeholder), s.placeholder.update(t, t.placeholder);
    },
    _createTrPlaceholder: function(t, i) {
      var s = this;
      t.children().each(function() {
        e("<td>&#160;</td>", s.document[0]).attr("colspan", e(this).attr("colspan") || 1).appendTo(i);
      });
    },
    _contactContainers: function(t) {
      var i,
          s,
          n,
          a,
          o,
          r,
          h,
          l,
          u,
          d,
          c = null,
          p = null;
      for (i = this.containers.length - 1; i >= 0; i--)
        if (!e.contains(this.currentItem[0], this.containers[i].element[0]))
          if (this._intersectsWith(this.containers[i].containerCache)) {
            if (c && e.contains(this.containers[i].element[0], c.element[0]))
              continue;
            c = this.containers[i], p = i;
          } else
            this.containers[i].containerCache.over && (this.containers[i]._trigger("out", t, this._uiHash(this)), this.containers[i].containerCache.over = 0);
      if (c)
        if (1 === this.containers.length)
          this.containers[p].containerCache.over || (this.containers[p]._trigger("over", t, this._uiHash(this)), this.containers[p].containerCache.over = 1);
        else {
          for (n = 1e4, a = null, u = c.floating || this._isFloating(this.currentItem), o = u ? "left" : "top", r = u ? "width" : "height", d = u ? "clientX" : "clientY", s = this.items.length - 1; s >= 0; s--)
            e.contains(this.containers[p].element[0], this.items[s].item[0]) && this.items[s].item[0] !== this.currentItem[0] && (h = this.items[s].item.offset()[o], l = !1, t[d] - h > this.items[s][r] / 2 && (l = !0), n > Math.abs(t[d] - h) && (n = Math.abs(t[d] - h), a = this.items[s], this.direction = l ? "up" : "down"));
          if (!a && !this.options.dropOnEmpty)
            return;
          if (this.currentContainer === this.containers[p])
            return this.currentContainer.containerCache.over || (this.containers[p]._trigger("over", t, this._uiHash()), this.currentContainer.containerCache.over = 1), void 0;
          a ? this._rearrange(t, a, null, !0) : this._rearrange(t, null, this.containers[p].element, !0), this._trigger("change", t, this._uiHash()), this.containers[p]._trigger("change", t, this._uiHash(this)), this.currentContainer = this.containers[p], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[p]._trigger("over", t, this._uiHash(this)), this.containers[p].containerCache.over = 1;
        }
    },
    _createHelper: function(t) {
      var i = this.options,
          s = e.isFunction(i.helper) ? e(i.helper.apply(this.element[0], [t, this.currentItem])) : "clone" === i.helper ? this.currentItem.clone() : this.currentItem;
      return s.parents("body").length || e("parent" !== i.appendTo ? i.appendTo : this.currentItem[0].parentNode)[0].appendChild(s[0]), s[0] === this.currentItem[0] && (this._storedCSS = {
        width: this.currentItem[0].style.width,
        height: this.currentItem[0].style.height,
        position: this.currentItem.css("position"),
        top: this.currentItem.css("top"),
        left: this.currentItem.css("left")
      }), (!s[0].style.width || i.forceHelperSize) && s.width(this.currentItem.width()), (!s[0].style.height || i.forceHelperSize) && s.height(this.currentItem.height()), s;
    },
    _adjustOffsetFromHelper: function(t) {
      "string" == typeof t && (t = t.split(" ")), e.isArray(t) && (t = {
        left: +t[0],
        top: +t[1] || 0
      }), "left" in t && (this.offset.click.left = t.left + this.margins.left), "right" in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left), "top" in t && (this.offset.click.top = t.top + this.margins.top), "bottom" in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top);
    },
    _getParentOffset: function() {
      this.offsetParent = this.helper.offsetParent();
      var t = this.offsetParent.offset();
      return "absolute" === this.cssPosition && this.scrollParent[0] !== this.document[0] && e.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(), t.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && e.ui.ie) && (t = {
        top: 0,
        left: 0
      }), {
        top: t.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
        left: t.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
      };
    },
    _getRelativeOffset: function() {
      if ("relative" === this.cssPosition) {
        var e = this.currentItem.position();
        return {
          top: e.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
          left: e.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
        };
      }
      return {
        top: 0,
        left: 0
      };
    },
    _cacheMargins: function() {
      this.margins = {
        left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
        top: parseInt(this.currentItem.css("marginTop"), 10) || 0
      };
    },
    _cacheHelperProportions: function() {
      this.helperProportions = {
        width: this.helper.outerWidth(),
        height: this.helper.outerHeight()
      };
    },
    _setContainment: function() {
      var t,
          i,
          s,
          n = this.options;
      "parent" === n.containment && (n.containment = this.helper[0].parentNode), ("document" === n.containment || "window" === n.containment) && (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, "document" === n.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ("document" === n.containment ? this.document.width() : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(n.containment) || (t = e(n.containment)[0], i = e(n.containment).offset(), s = "hidden" !== e(t).css("overflow"), this.containment = [i.left + (parseInt(e(t).css("borderLeftWidth"), 10) || 0) + (parseInt(e(t).css("paddingLeft"), 10) || 0) - this.margins.left, i.top + (parseInt(e(t).css("borderTopWidth"), 10) || 0) + (parseInt(e(t).css("paddingTop"), 10) || 0) - this.margins.top, i.left + (s ? Math.max(t.scrollWidth, t.offsetWidth) : t.offsetWidth) - (parseInt(e(t).css("borderLeftWidth"), 10) || 0) - (parseInt(e(t).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, i.top + (s ? Math.max(t.scrollHeight, t.offsetHeight) : t.offsetHeight) - (parseInt(e(t).css("borderTopWidth"), 10) || 0) - (parseInt(e(t).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]);
    },
    _convertPositionTo: function(t, i) {
      i || (i = this.position);
      var s = "absolute" === t ? 1 : -1,
          n = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
          a = /(html|body)/i.test(n[0].tagName);
      return {
        top: i.top + this.offset.relative.top * s + this.offset.parent.top * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : a ? 0 : n.scrollTop()) * s,
        left: i.left + this.offset.relative.left * s + this.offset.parent.left * s - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : a ? 0 : n.scrollLeft()) * s
      };
    },
    _generatePosition: function(t) {
      var i,
          s,
          n = this.options,
          a = t.pageX,
          o = t.pageY,
          r = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,
          h = /(html|body)/i.test(r[0].tagName);
      return "relative" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (t.pageX - this.offset.click.left < this.containment[0] && (a = this.containment[0] + this.offset.click.left), t.pageY - this.offset.click.top < this.containment[1] && (o = this.containment[1] + this.offset.click.top), t.pageX - this.offset.click.left > this.containment[2] && (a = this.containment[2] + this.offset.click.left), t.pageY - this.offset.click.top > this.containment[3] && (o = this.containment[3] + this.offset.click.top)), n.grid && (i = this.originalPageY + Math.round((o - this.originalPageY) / n.grid[1]) * n.grid[1], o = this.containment ? i - this.offset.click.top >= this.containment[1] && i - this.offset.click.top <= this.containment[3] ? i : i - this.offset.click.top >= this.containment[1] ? i - n.grid[1] : i + n.grid[1] : i, s = this.originalPageX + Math.round((a - this.originalPageX) / n.grid[0]) * n.grid[0], a = this.containment ? s - this.offset.click.left >= this.containment[0] && s - this.offset.click.left <= this.containment[2] ? s : s - this.offset.click.left >= this.containment[0] ? s - n.grid[0] : s + n.grid[0] : s)), {
        top: o - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : h ? 0 : r.scrollTop()),
        left: a - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : h ? 0 : r.scrollLeft())
      };
    },
    _rearrange: function(e, t, i, s) {
      i ? i[0].appendChild(this.placeholder[0]) : t.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? t.item[0] : t.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
      var n = this.counter;
      this._delay(function() {
        n === this.counter && this.refreshPositions(!s);
      });
    },
    _clear: function(e, t) {
      function i(e, t, i) {
        return function(s) {
          i._trigger(e, s, t._uiHash(t));
        };
      }
      this.reverting = !1;
      var s,
          n = [];
      if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
        for (s in this._storedCSS)
          ("auto" === this._storedCSS[s] || "static" === this._storedCSS[s]) && (this._storedCSS[s] = "");
        this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper");
      } else
        this.currentItem.show();
      for (this.fromOutside && !t && n.push(function(e) {
        this._trigger("receive", e, this._uiHash(this.fromOutside));
      }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || t || n.push(function(e) {
        this._trigger("update", e, this._uiHash());
      }), this !== this.currentContainer && (t || (n.push(function(e) {
        this._trigger("remove", e, this._uiHash());
      }), n.push(function(e) {
        return function(t) {
          e._trigger("receive", t, this._uiHash(this));
        };
      }.call(this, this.currentContainer)), n.push(function(e) {
        return function(t) {
          e._trigger("update", t, this._uiHash(this));
        };
      }.call(this, this.currentContainer)))), s = this.containers.length - 1; s >= 0; s--)
        t || n.push(i("deactivate", this, this.containers[s])), this.containers[s].containerCache.over && (n.push(i("out", this, this.containers[s])), this.containers[s].containerCache.over = 0);
      if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, t || this._trigger("beforeStop", e, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null), !t) {
        for (s = 0; n.length > s; s++)
          n[s].call(this, e);
        this._trigger("stop", e, this._uiHash());
      }
      return this.fromOutside = !1, !this.cancelHelperRemoval;
    },
    _trigger: function() {
      e.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel();
    },
    _uiHash: function(t) {
      var i = t || this;
      return {
        helper: i.helper,
        placeholder: i.placeholder || e([]),
        position: i.position,
        originalPosition: i.originalPosition,
        offset: i.positionAbs,
        item: i.currentItem,
        sender: t ? t.element : null
      };
    }
  }), e.widget("ui.spinner", {
    version: "1.11.4",
    defaultElement: "<input>",
    widgetEventPrefix: "spin",
    options: {
      culture: null,
      icons: {
        down: "ui-icon-triangle-1-s",
        up: "ui-icon-triangle-1-n"
      },
      incremental: !0,
      max: null,
      min: null,
      numberFormat: null,
      page: 10,
      step: 1,
      change: null,
      spin: null,
      start: null,
      stop: null
    },
    _create: function() {
      this._setOption("max", this.options.max), this._setOption("min", this.options.min), this._setOption("step", this.options.step), "" !== this.value() && this._value(this.element.val(), !0), this._draw(), this._on(this._events), this._refresh(), this._on(this.window, {beforeunload: function() {
          this.element.removeAttr("autocomplete");
        }});
    },
    _getCreateOptions: function() {
      var t = {},
          i = this.element;
      return e.each(["min", "max", "step"], function(e, s) {
        var n = i.attr(s);
        void 0 !== n && n.length && (t[s] = n);
      }), t;
    },
    _events: {
      keydown: function(e) {
        this._start(e) && this._keydown(e) && e.preventDefault();
      },
      keyup: "_stop",
      focus: function() {
        this.previous = this.element.val();
      },
      blur: function(e) {
        return this.cancelBlur ? (delete this.cancelBlur, void 0) : (this._stop(), this._refresh(), this.previous !== this.element.val() && this._trigger("change", e), void 0);
      },
      mousewheel: function(e, t) {
        if (t) {
          if (!this.spinning && !this._start(e))
            return !1;
          this._spin((t > 0 ? 1 : -1) * this.options.step, e), clearTimeout(this.mousewheelTimer), this.mousewheelTimer = this._delay(function() {
            this.spinning && this._stop(e);
          }, 100), e.preventDefault();
        }
      },
      "mousedown .ui-spinner-button": function(t) {
        function i() {
          var e = this.element[0] === this.document[0].activeElement;
          e || (this.element.focus(), this.previous = s, this._delay(function() {
            this.previous = s;
          }));
        }
        var s;
        s = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val(), t.preventDefault(), i.call(this), this.cancelBlur = !0, this._delay(function() {
          delete this.cancelBlur, i.call(this);
        }), this._start(t) !== !1 && this._repeat(null, e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, t);
      },
      "mouseup .ui-spinner-button": "_stop",
      "mouseenter .ui-spinner-button": function(t) {
        return e(t.currentTarget).hasClass("ui-state-active") ? this._start(t) === !1 ? !1 : (this._repeat(null, e(t.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, t), void 0) : void 0;
      },
      "mouseleave .ui-spinner-button": "_stop"
    },
    _draw: function() {
      var e = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
      this.element.attr("role", "spinbutton"), this.buttons = e.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all"), this.buttons.height() > Math.ceil(.5 * e.height()) && e.height() > 0 && e.height(e.height()), this.options.disabled && this.disable();
    },
    _keydown: function(t) {
      var i = this.options,
          s = e.ui.keyCode;
      switch (t.keyCode) {
        case s.UP:
          return this._repeat(null, 1, t), !0;
        case s.DOWN:
          return this._repeat(null, -1, t), !0;
        case s.PAGE_UP:
          return this._repeat(null, i.page, t), !0;
        case s.PAGE_DOWN:
          return this._repeat(null, -i.page, t), !0;
      }
      return !1;
    },
    _uiSpinnerHtml: function() {
      return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>";
    },
    _buttonHtml: function() {
      return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span>" + "</a>" + "<a class='ui-spinner-button ui-spinner-down ui-corner-br'>" + "<span class='ui-icon " + this.options.icons.down + "'>&#9660;</span>" + "</a>";
    },
    _start: function(e) {
      return this.spinning || this._trigger("start", e) !== !1 ? (this.counter || (this.counter = 1), this.spinning = !0, !0) : !1;
    },
    _repeat: function(e, t, i) {
      e = e || 500, clearTimeout(this.timer), this.timer = this._delay(function() {
        this._repeat(40, t, i);
      }, e), this._spin(t * this.options.step, i);
    },
    _spin: function(e, t) {
      var i = this.value() || 0;
      this.counter || (this.counter = 1), i = this._adjustValue(i + e * this._increment(this.counter)), this.spinning && this._trigger("spin", t, {value: i}) === !1 || (this._value(i), this.counter++);
    },
    _increment: function(t) {
      var i = this.options.incremental;
      return i ? e.isFunction(i) ? i(t) : Math.floor(t * t * t / 5e4 - t * t / 500 + 17 * t / 200 + 1) : 1;
    },
    _precision: function() {
      var e = this._precisionOf(this.options.step);
      return null !== this.options.min && (e = Math.max(e, this._precisionOf(this.options.min))), e;
    },
    _precisionOf: function(e) {
      var t = "" + e,
          i = t.indexOf(".");
      return -1 === i ? 0 : t.length - i - 1;
    },
    _adjustValue: function(e) {
      var t,
          i,
          s = this.options;
      return t = null !== s.min ? s.min : 0, i = e - t, i = Math.round(i / s.step) * s.step, e = t + i, e = parseFloat(e.toFixed(this._precision())), null !== s.max && e > s.max ? s.max : null !== s.min && s.min > e ? s.min : e;
    },
    _stop: function(e) {
      this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = !1, this._trigger("stop", e));
    },
    _setOption: function(e, t) {
      if ("culture" === e || "numberFormat" === e) {
        var i = this._parse(this.element.val());
        return this.options[e] = t, this.element.val(this._format(i)), void 0;
      }
      ("max" === e || "min" === e || "step" === e) && "string" == typeof t && (t = this._parse(t)), "icons" === e && (this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(t.up), this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(t.down)), this._super(e, t), "disabled" === e && (this.widget().toggleClass("ui-state-disabled", !!t), this.element.prop("disabled", !!t), this.buttons.button(t ? "disable" : "enable"));
    },
    _setOptions: h(function(e) {
      this._super(e);
    }),
    _parse: function(e) {
      return "string" == typeof e && "" !== e && (e = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(e, 10, this.options.culture) : +e), "" === e || isNaN(e) ? null : e;
    },
    _format: function(e) {
      return "" === e ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(e, this.options.numberFormat, this.options.culture) : e;
    },
    _refresh: function() {
      this.element.attr({
        "aria-valuemin": this.options.min,
        "aria-valuemax": this.options.max,
        "aria-valuenow": this._parse(this.element.val())
      });
    },
    isValid: function() {
      var e = this.value();
      return null === e ? !1 : e === this._adjustValue(e);
    },
    _value: function(e, t) {
      var i;
      "" !== e && (i = this._parse(e), null !== i && (t || (i = this._adjustValue(i)), e = this._format(i))), this.element.val(e), this._refresh();
    },
    _destroy: function() {
      this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.uiSpinner.replaceWith(this.element);
    },
    stepUp: h(function(e) {
      this._stepUp(e);
    }),
    _stepUp: function(e) {
      this._start() && (this._spin((e || 1) * this.options.step), this._stop());
    },
    stepDown: h(function(e) {
      this._stepDown(e);
    }),
    _stepDown: function(e) {
      this._start() && (this._spin((e || 1) * -this.options.step), this._stop());
    },
    pageUp: h(function(e) {
      this._stepUp((e || 1) * this.options.page);
    }),
    pageDown: h(function(e) {
      this._stepDown((e || 1) * this.options.page);
    }),
    value: function(e) {
      return arguments.length ? (h(this._value).call(this, e), void 0) : this._parse(this.element.val());
    },
    widget: function() {
      return this.uiSpinner;
    }
  }), e.widget("ui.tabs", {
    version: "1.11.4",
    delay: 300,
    options: {
      active: null,
      collapsible: !1,
      event: "click",
      heightStyle: "content",
      hide: null,
      show: null,
      activate: null,
      beforeActivate: null,
      beforeLoad: null,
      load: null
    },
    _isLocal: function() {
      var e = /#.*$/;
      return function(t) {
        var i,
            s;
        t = t.cloneNode(!1), i = t.href.replace(e, ""), s = location.href.replace(e, "");
        try {
          i = decodeURIComponent(i);
        } catch (n) {}
        try {
          s = decodeURIComponent(s);
        } catch (n) {}
        return t.hash.length > 1 && i === s;
      };
    }(),
    _create: function() {
      var t = this,
          i = this.options;
      this.running = !1, this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", i.collapsible), this._processTabs(), i.active = this._initialActive(), e.isArray(i.disabled) && (i.disabled = e.unique(i.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"), function(e) {
        return t.tabs.index(e);
      }))).sort()), this.active = this.options.active !== !1 && this.anchors.length ? this._findActive(i.active) : e(), this._refresh(), this.active.length && this.load(i.active);
    },
    _initialActive: function() {
      var t = this.options.active,
          i = this.options.collapsible,
          s = location.hash.substring(1);
      return null === t && (s && this.tabs.each(function(i, n) {
        return e(n).attr("aria-controls") === s ? (t = i, !1) : void 0;
      }), null === t && (t = this.tabs.index(this.tabs.filter(".ui-tabs-active"))), (null === t || -1 === t) && (t = this.tabs.length ? 0 : !1)), t !== !1 && (t = this.tabs.index(this.tabs.eq(t)), -1 === t && (t = i ? !1 : 0)), !i && t === !1 && this.anchors.length && (t = 0), t;
    },
    _getCreateEventData: function() {
      return {
        tab: this.active,
        panel: this.active.length ? this._getPanelForTab(this.active) : e()
      };
    },
    _tabKeydown: function(t) {
      var i = e(this.document[0].activeElement).closest("li"),
          s = this.tabs.index(i),
          n = !0;
      if (!this._handlePageNav(t)) {
        switch (t.keyCode) {
          case e.ui.keyCode.RIGHT:
          case e.ui.keyCode.DOWN:
            s++;
            break;
          case e.ui.keyCode.UP:
          case e.ui.keyCode.LEFT:
            n = !1, s--;
            break;
          case e.ui.keyCode.END:
            s = this.anchors.length - 1;
            break;
          case e.ui.keyCode.HOME:
            s = 0;
            break;
          case e.ui.keyCode.SPACE:
            return t.preventDefault(), clearTimeout(this.activating), this._activate(s), void 0;
          case e.ui.keyCode.ENTER:
            return t.preventDefault(), clearTimeout(this.activating), this._activate(s === this.options.active ? !1 : s), void 0;
          default:
            return;
        }
        t.preventDefault(), clearTimeout(this.activating), s = this._focusNextTab(s, n), t.ctrlKey || t.metaKey || (i.attr("aria-selected", "false"), this.tabs.eq(s).attr("aria-selected", "true"), this.activating = this._delay(function() {
          this.option("active", s);
        }, this.delay));
      }
    },
    _panelKeydown: function(t) {
      this._handlePageNav(t) || t.ctrlKey && t.keyCode === e.ui.keyCode.UP && (t.preventDefault(), this.active.focus());
    },
    _handlePageNav: function(t) {
      return t.altKey && t.keyCode === e.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0) : t.altKey && t.keyCode === e.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0) : void 0;
    },
    _findNextTab: function(t, i) {
      function s() {
        return t > n && (t = 0), 0 > t && (t = n), t;
      }
      for (var n = this.tabs.length - 1; -1 !== e.inArray(s(), this.options.disabled); )
        t = i ? t + 1 : t - 1;
      return t;
    },
    _focusNextTab: function(e, t) {
      return e = this._findNextTab(e, t), this.tabs.eq(e).focus(), e;
    },
    _setOption: function(e, t) {
      return "active" === e ? (this._activate(t), void 0) : "disabled" === e ? (this._setupDisabled(t), void 0) : (this._super(e, t), "collapsible" === e && (this.element.toggleClass("ui-tabs-collapsible", t), t || this.options.active !== !1 || this._activate(0)), "event" === e && this._setupEvents(t), "heightStyle" === e && this._setupHeightStyle(t), void 0);
    },
    _sanitizeSelector: function(e) {
      return e ? e.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : "";
    },
    refresh: function() {
      var t = this.options,
          i = this.tablist.children(":has(a[href])");
      t.disabled = e.map(i.filter(".ui-state-disabled"), function(e) {
        return i.index(e);
      }), this._processTabs(), t.active !== !1 && this.anchors.length ? this.active.length && !e.contains(this.tablist[0], this.active[0]) ? this.tabs.length === t.disabled.length ? (t.active = !1, this.active = e()) : this._activate(this._findNextTab(Math.max(0, t.active - 1), !1)) : t.active = this.tabs.index(this.active) : (t.active = !1, this.active = e()), this._refresh();
    },
    _refresh: function() {
      this._setupDisabled(this.options.disabled), this._setupEvents(this.options.event), this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({
        "aria-selected": "false",
        "aria-expanded": "false",
        tabIndex: -1
      }), this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden": "true"}), this.active.length ? (this.active.addClass("ui-tabs-active ui-state-active").attr({
        "aria-selected": "true",
        "aria-expanded": "true",
        tabIndex: 0
      }), this._getPanelForTab(this.active).show().attr({"aria-hidden": "false"})) : this.tabs.eq(0).attr("tabIndex", 0);
    },
    _processTabs: function() {
      var t = this,
          i = this.tabs,
          s = this.anchors,
          n = this.panels;
      this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist").delegate("> li", "mousedown" + this.eventNamespace, function(t) {
        e(this).is(".ui-state-disabled") && t.preventDefault();
      }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function() {
        e(this).closest("li").is(".ui-state-disabled") && this.blur();
      }), this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
        role: "tab",
        tabIndex: -1
      }), this.anchors = this.tabs.map(function() {
        return e("a", this)[0];
      }).addClass("ui-tabs-anchor").attr({
        role: "presentation",
        tabIndex: -1
      }), this.panels = e(), this.anchors.each(function(i, s) {
        var n,
            a,
            o,
            r = e(s).uniqueId().attr("id"),
            h = e(s).closest("li"),
            l = h.attr("aria-controls");
        t._isLocal(s) ? (n = s.hash, o = n.substring(1), a = t.element.find(t._sanitizeSelector(n))) : (o = h.attr("aria-controls") || e({}).uniqueId()[0].id, n = "#" + o, a = t.element.find(n), a.length || (a = t._createPanel(o), a.insertAfter(t.panels[i - 1] || t.tablist)), a.attr("aria-live", "polite")), a.length && (t.panels = t.panels.add(a)), l && h.data("ui-tabs-aria-controls", l), h.attr({
          "aria-controls": o,
          "aria-labelledby": r
        }), a.attr("aria-labelledby", r);
      }), this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel"), i && (this._off(i.not(this.tabs)), this._off(s.not(this.anchors)), this._off(n.not(this.panels)));
    },
    _getList: function() {
      return this.tablist || this.element.find("ol,ul").eq(0);
    },
    _createPanel: function(t) {
      return e("<div>").attr("id", t).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0);
    },
    _setupDisabled: function(t) {
      e.isArray(t) && (t.length ? t.length === this.anchors.length && (t = !0) : t = !1);
      for (var i,
          s = 0; i = this.tabs[s]; s++)
        t === !0 || -1 !== e.inArray(s, t) ? e(i).addClass("ui-state-disabled").attr("aria-disabled", "true") : e(i).removeClass("ui-state-disabled").removeAttr("aria-disabled");
      this.options.disabled = t;
    },
    _setupEvents: function(t) {
      var i = {};
      t && e.each(t.split(" "), function(e, t) {
        i[t] = "_eventHandler";
      }), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(!0, this.anchors, {click: function(e) {
          e.preventDefault();
        }}), this._on(this.anchors, i), this._on(this.tabs, {keydown: "_tabKeydown"}), this._on(this.panels, {keydown: "_panelKeydown"}), this._focusable(this.tabs), this._hoverable(this.tabs);
    },
    _setupHeightStyle: function(t) {
      var i,
          s = this.element.parent();
      "fill" === t ? (i = s.height(), i -= this.element.outerHeight() - this.element.height(), this.element.siblings(":visible").each(function() {
        var t = e(this),
            s = t.css("position");
        "absolute" !== s && "fixed" !== s && (i -= t.outerHeight(!0));
      }), this.element.children().not(this.panels).each(function() {
        i -= e(this).outerHeight(!0);
      }), this.panels.each(function() {
        e(this).height(Math.max(0, i - e(this).innerHeight() + e(this).height()));
      }).css("overflow", "auto")) : "auto" === t && (i = 0, this.panels.each(function() {
        i = Math.max(i, e(this).height("").height());
      }).height(i));
    },
    _eventHandler: function(t) {
      var i = this.options,
          s = this.active,
          n = e(t.currentTarget),
          a = n.closest("li"),
          o = a[0] === s[0],
          r = o && i.collapsible,
          h = r ? e() : this._getPanelForTab(a),
          l = s.length ? this._getPanelForTab(s) : e(),
          u = {
            oldTab: s,
            oldPanel: l,
            newTab: r ? e() : a,
            newPanel: h
          };
      t.preventDefault(), a.hasClass("ui-state-disabled") || a.hasClass("ui-tabs-loading") || this.running || o && !i.collapsible || this._trigger("beforeActivate", t, u) === !1 || (i.active = r ? !1 : this.tabs.index(a), this.active = o ? e() : a, this.xhr && this.xhr.abort(), l.length || h.length || e.error("jQuery UI Tabs: Mismatching fragment identifier."), h.length && this.load(this.tabs.index(a), t), this._toggle(t, u));
    },
    _toggle: function(t, i) {
      function s() {
        a.running = !1, a._trigger("activate", t, i);
      }
      function n() {
        i.newTab.closest("li").addClass("ui-tabs-active ui-state-active"), o.length && a.options.show ? a._show(o, a.options.show, s) : (o.show(), s());
      }
      var a = this,
          o = i.newPanel,
          r = i.oldPanel;
      this.running = !0, r.length && this.options.hide ? this._hide(r, this.options.hide, function() {
        i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), n();
      }) : (i.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), r.hide(), n()), r.attr("aria-hidden", "true"), i.oldTab.attr({
        "aria-selected": "false",
        "aria-expanded": "false"
      }), o.length && r.length ? i.oldTab.attr("tabIndex", -1) : o.length && this.tabs.filter(function() {
        return 0 === e(this).attr("tabIndex");
      }).attr("tabIndex", -1), o.attr("aria-hidden", "false"), i.newTab.attr({
        "aria-selected": "true",
        "aria-expanded": "true",
        tabIndex: 0
      });
    },
    _activate: function(t) {
      var i,
          s = this._findActive(t);
      s[0] !== this.active[0] && (s.length || (s = this.active), i = s.find(".ui-tabs-anchor")[0], this._eventHandler({
        target: i,
        currentTarget: i,
        preventDefault: e.noop
      }));
    },
    _findActive: function(t) {
      return t === !1 ? e() : this.tabs.eq(t);
    },
    _getIndex: function(e) {
      return "string" == typeof e && (e = this.anchors.index(this.anchors.filter("[href$='" + e + "']"))), e;
    },
    _destroy: function() {
      this.xhr && this.xhr.abort(), this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"), this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"), this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId(), this.tablist.unbind(this.eventNamespace), this.tabs.add(this.panels).each(function() {
        e.data(this, "ui-tabs-destroy") ? e(this).remove() : e(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role");
      }), this.tabs.each(function() {
        var t = e(this),
            i = t.data("ui-tabs-aria-controls");
        i ? t.attr("aria-controls", i).removeData("ui-tabs-aria-controls") : t.removeAttr("aria-controls");
      }), this.panels.show(), "content" !== this.options.heightStyle && this.panels.css("height", "");
    },
    enable: function(t) {
      var i = this.options.disabled;
      i !== !1 && (void 0 === t ? i = !1 : (t = this._getIndex(t), i = e.isArray(i) ? e.map(i, function(e) {
        return e !== t ? e : null;
      }) : e.map(this.tabs, function(e, i) {
        return i !== t ? i : null;
      })), this._setupDisabled(i));
    },
    disable: function(t) {
      var i = this.options.disabled;
      if (i !== !0) {
        if (void 0 === t)
          i = !0;
        else {
          if (t = this._getIndex(t), -1 !== e.inArray(t, i))
            return;
          i = e.isArray(i) ? e.merge([t], i).sort() : [t];
        }
        this._setupDisabled(i);
      }
    },
    load: function(t, i) {
      t = this._getIndex(t);
      var s = this,
          n = this.tabs.eq(t),
          a = n.find(".ui-tabs-anchor"),
          o = this._getPanelForTab(n),
          r = {
            tab: n,
            panel: o
          },
          h = function(e, t) {
            "abort" === t && s.panels.stop(!1, !0), n.removeClass("ui-tabs-loading"), o.removeAttr("aria-busy"), e === s.xhr && delete s.xhr;
          };
      this._isLocal(a[0]) || (this.xhr = e.ajax(this._ajaxSettings(a, i, r)), this.xhr && "canceled" !== this.xhr.statusText && (n.addClass("ui-tabs-loading"), o.attr("aria-busy", "true"), this.xhr.done(function(e, t, n) {
        setTimeout(function() {
          o.html(e), s._trigger("load", i, r), h(n, t);
        }, 1);
      }).fail(function(e, t) {
        setTimeout(function() {
          h(e, t);
        }, 1);
      })));
    },
    _ajaxSettings: function(t, i, s) {
      var n = this;
      return {
        url: t.attr("href"),
        beforeSend: function(t, a) {
          return n._trigger("beforeLoad", i, e.extend({
            jqXHR: t,
            ajaxSettings: a
          }, s));
        }
      };
    },
    _getPanelForTab: function(t) {
      var i = e(t).attr("aria-controls");
      return this.element.find(this._sanitizeSelector("#" + i));
    }
  }), e.widget("ui.tooltip", {
    version: "1.11.4",
    options: {
      content: function() {
        var t = e(this).attr("title") || "";
        return e("<a>").text(t).html();
      },
      hide: !0,
      items: "[title]:not([disabled])",
      position: {
        my: "left top+15",
        at: "left bottom",
        collision: "flipfit flip"
      },
      show: !0,
      tooltipClass: null,
      track: !1,
      close: null,
      open: null
    },
    _addDescribedBy: function(t, i) {
      var s = (t.attr("aria-describedby") || "").split(/\s+/);
      s.push(i), t.data("ui-tooltip-id", i).attr("aria-describedby", e.trim(s.join(" ")));
    },
    _removeDescribedBy: function(t) {
      var i = t.data("ui-tooltip-id"),
          s = (t.attr("aria-describedby") || "").split(/\s+/),
          n = e.inArray(i, s);
      -1 !== n && s.splice(n, 1), t.removeData("ui-tooltip-id"), s = e.trim(s.join(" ")), s ? t.attr("aria-describedby", s) : t.removeAttr("aria-describedby");
    },
    _create: function() {
      this._on({
        mouseover: "open",
        focusin: "open"
      }), this.tooltips = {}, this.parents = {}, this.options.disabled && this._disable(), this.liveRegion = e("<div>").attr({
        role: "log",
        "aria-live": "assertive",
        "aria-relevant": "additions"
      }).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body);
    },
    _setOption: function(t, i) {
      var s = this;
      return "disabled" === t ? (this[i ? "_disable" : "_enable"](), this.options[t] = i, void 0) : (this._super(t, i), "content" === t && e.each(this.tooltips, function(e, t) {
        s._updateContent(t.element);
      }), void 0);
    },
    _disable: function() {
      var t = this;
      e.each(this.tooltips, function(i, s) {
        var n = e.Event("blur");
        n.target = n.currentTarget = s.element[0], t.close(n, !0);
      }), this.element.find(this.options.items).addBack().each(function() {
        var t = e(this);
        t.is("[title]") && t.data("ui-tooltip-title", t.attr("title")).removeAttr("title");
      });
    },
    _enable: function() {
      this.element.find(this.options.items).addBack().each(function() {
        var t = e(this);
        t.data("ui-tooltip-title") && t.attr("title", t.data("ui-tooltip-title"));
      });
    },
    open: function(t) {
      var i = this,
          s = e(t ? t.target : this.element).closest(this.options.items);
      s.length && !s.data("ui-tooltip-id") && (s.attr("title") && s.data("ui-tooltip-title", s.attr("title")), s.data("ui-tooltip-open", !0), t && "mouseover" === t.type && s.parents().each(function() {
        var t,
            s = e(this);
        s.data("ui-tooltip-open") && (t = e.Event("blur"), t.target = t.currentTarget = this, i.close(t, !0)), s.attr("title") && (s.uniqueId(), i.parents[this.id] = {
          element: this,
          title: s.attr("title")
        }, s.attr("title", ""));
      }), this._registerCloseHandlers(t, s), this._updateContent(s, t));
    },
    _updateContent: function(e, t) {
      var i,
          s = this.options.content,
          n = this,
          a = t ? t.type : null;
      return "string" == typeof s ? this._open(t, e, s) : (i = s.call(e[0], function(i) {
        n._delay(function() {
          e.data("ui-tooltip-open") && (t && (t.type = a), this._open(t, e, i));
        });
      }), i && this._open(t, e, i), void 0);
    },
    _open: function(t, i, s) {
      function n(e) {
        l.of = e, o.is(":hidden") || o.position(l);
      }
      var a,
          o,
          r,
          h,
          l = e.extend({}, this.options.position);
      if (s) {
        if (a = this._find(i))
          return a.tooltip.find(".ui-tooltip-content").html(s), void 0;
        i.is("[title]") && (t && "mouseover" === t.type ? i.attr("title", "") : i.removeAttr("title")), a = this._tooltip(i), o = a.tooltip, this._addDescribedBy(i, o.attr("id")), o.find(".ui-tooltip-content").html(s), this.liveRegion.children().hide(), s.clone ? (h = s.clone(), h.removeAttr("id").find("[id]").removeAttr("id")) : h = s, e("<div>").html(h).appendTo(this.liveRegion), this.options.track && t && /^mouse/.test(t.type) ? (this._on(this.document, {mousemove: n}), n(t)) : o.position(e.extend({of: i}, this.options.position)), o.hide(), this._show(o, this.options.show), this.options.show && this.options.show.delay && (r = this.delayedShow = setInterval(function() {
          o.is(":visible") && (n(l.of), clearInterval(r));
        }, e.fx.interval)), this._trigger("open", t, {tooltip: o});
      }
    },
    _registerCloseHandlers: function(t, i) {
      var s = {keyup: function(t) {
          if (t.keyCode === e.ui.keyCode.ESCAPE) {
            var s = e.Event(t);
            s.currentTarget = i[0], this.close(s, !0);
          }
        }};
      i[0] !== this.element[0] && (s.remove = function() {
        this._removeTooltip(this._find(i).tooltip);
      }), t && "mouseover" !== t.type || (s.mouseleave = "close"), t && "focusin" !== t.type || (s.focusout = "close"), this._on(!0, i, s);
    },
    close: function(t) {
      var i,
          s = this,
          n = e(t ? t.currentTarget : this.element),
          a = this._find(n);
      return a ? (i = a.tooltip, a.closing || (clearInterval(this.delayedShow), n.data("ui-tooltip-title") && !n.attr("title") && n.attr("title", n.data("ui-tooltip-title")), this._removeDescribedBy(n), a.hiding = !0, i.stop(!0), this._hide(i, this.options.hide, function() {
        s._removeTooltip(e(this));
      }), n.removeData("ui-tooltip-open"), this._off(n, "mouseleave focusout keyup"), n[0] !== this.element[0] && this._off(n, "remove"), this._off(this.document, "mousemove"), t && "mouseleave" === t.type && e.each(this.parents, function(t, i) {
        e(i.element).attr("title", i.title), delete s.parents[t];
      }), a.closing = !0, this._trigger("close", t, {tooltip: i}), a.hiding || (a.closing = !1)), void 0) : (n.removeData("ui-tooltip-open"), void 0);
    },
    _tooltip: function(t) {
      var i = e("<div>").attr("role", "tooltip").addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || "")),
          s = i.uniqueId().attr("id");
      return e("<div>").addClass("ui-tooltip-content").appendTo(i), i.appendTo(this.document[0].body), this.tooltips[s] = {
        element: t,
        tooltip: i
      };
    },
    _find: function(e) {
      var t = e.data("ui-tooltip-id");
      return t ? this.tooltips[t] : null;
    },
    _removeTooltip: function(e) {
      e.remove(), delete this.tooltips[e.attr("id")];
    },
    _destroy: function() {
      var t = this;
      e.each(this.tooltips, function(i, s) {
        var n = e.Event("blur"),
            a = s.element;
        n.target = n.currentTarget = a[0], t.close(n, !0), e("#" + i).remove(), a.data("ui-tooltip-title") && (a.attr("title") || a.attr("title", a.data("ui-tooltip-title")), a.removeData("ui-tooltip-title"));
      }), this.liveRegion.remove();
    }
  });
});

_removeDefine();
})();
(function() {
var _removeDefine = $__System.get("@@amd-helpers").createDefine();
!function(a, b) {
  "object" == typeof module && "object" == typeof module.exports ? module.exports = a.document ? b(a, !0) : function(a) {
    if (!a.document)
      throw new Error("jQuery requires a window with a document");
    return b(a);
  } : b(a);
}("undefined" != typeof window ? window : this, function(a, b) {
  var c = [],
      d = c.slice,
      e = c.concat,
      f = c.push,
      g = c.indexOf,
      h = {},
      i = h.toString,
      j = h.hasOwnProperty,
      k = {},
      l = a.document,
      m = "2.1.4",
      n = function(a, b) {
        return new n.fn.init(a, b);
      },
      o = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,
      p = /^-ms-/,
      q = /-([\da-z])/gi,
      r = function(a, b) {
        return b.toUpperCase();
      };
  n.fn = n.prototype = {
    jquery: m,
    constructor: n,
    selector: "",
    length: 0,
    toArray: function() {
      return d.call(this);
    },
    get: function(a) {
      return null != a ? 0 > a ? this[a + this.length] : this[a] : d.call(this);
    },
    pushStack: function(a) {
      var b = n.merge(this.constructor(), a);
      return b.prevObject = this, b.context = this.context, b;
    },
    each: function(a, b) {
      return n.each(this, a, b);
    },
    map: function(a) {
      return this.pushStack(n.map(this, function(b, c) {
        return a.call(b, c, b);
      }));
    },
    slice: function() {
      return this.pushStack(d.apply(this, arguments));
    },
    first: function() {
      return this.eq(0);
    },
    last: function() {
      return this.eq(-1);
    },
    eq: function(a) {
      var b = this.length,
          c = +a + (0 > a ? b : 0);
      return this.pushStack(c >= 0 && b > c ? [this[c]] : []);
    },
    end: function() {
      return this.prevObject || this.constructor(null);
    },
    push: f,
    sort: c.sort,
    splice: c.splice
  }, n.extend = n.fn.extend = function() {
    var a,
        b,
        c,
        d,
        e,
        f,
        g = arguments[0] || {},
        h = 1,
        i = arguments.length,
        j = !1;
    for ("boolean" == typeof g && (j = g, g = arguments[h] || {}, h++), "object" == typeof g || n.isFunction(g) || (g = {}), h === i && (g = this, h--); i > h; h++)
      if (null != (a = arguments[h]))
        for (b in a)
          c = g[b], d = a[b], g !== d && (j && d && (n.isPlainObject(d) || (e = n.isArray(d))) ? (e ? (e = !1, f = c && n.isArray(c) ? c : []) : f = c && n.isPlainObject(c) ? c : {}, g[b] = n.extend(j, f, d)) : void 0 !== d && (g[b] = d));
    return g;
  }, n.extend({
    expando: "jQuery" + (m + Math.random()).replace(/\D/g, ""),
    isReady: !0,
    error: function(a) {
      throw new Error(a);
    },
    noop: function() {},
    isFunction: function(a) {
      return "function" === n.type(a);
    },
    isArray: Array.isArray,
    isWindow: function(a) {
      return null != a && a === a.window;
    },
    isNumeric: function(a) {
      return !n.isArray(a) && a - parseFloat(a) + 1 >= 0;
    },
    isPlainObject: function(a) {
      return "object" !== n.type(a) || a.nodeType || n.isWindow(a) ? !1 : a.constructor && !j.call(a.constructor.prototype, "isPrototypeOf") ? !1 : !0;
    },
    isEmptyObject: function(a) {
      var b;
      for (b in a)
        return !1;
      return !0;
    },
    type: function(a) {
      return null == a ? a + "" : "object" == typeof a || "function" == typeof a ? h[i.call(a)] || "object" : typeof a;
    },
    globalEval: function(a) {
      var b,
          c = eval;
      a = n.trim(a), a && (1 === a.indexOf("use strict") ? (b = l.createElement("script"), b.text = a, l.head.appendChild(b).parentNode.removeChild(b)) : c(a));
    },
    camelCase: function(a) {
      return a.replace(p, "ms-").replace(q, r);
    },
    nodeName: function(a, b) {
      return a.nodeName && a.nodeName.toLowerCase() === b.toLowerCase();
    },
    each: function(a, b, c) {
      var d,
          e = 0,
          f = a.length,
          g = s(a);
      if (c) {
        if (g) {
          for (; f > e; e++)
            if (d = b.apply(a[e], c), d === !1)
              break;
        } else
          for (e in a)
            if (d = b.apply(a[e], c), d === !1)
              break;
      } else if (g) {
        for (; f > e; e++)
          if (d = b.call(a[e], e, a[e]), d === !1)
            break;
      } else
        for (e in a)
          if (d = b.call(a[e], e, a[e]), d === !1)
            break;
      return a;
    },
    trim: function(a) {
      return null == a ? "" : (a + "").replace(o, "");
    },
    makeArray: function(a, b) {
      var c = b || [];
      return null != a && (s(Object(a)) ? n.merge(c, "string" == typeof a ? [a] : a) : f.call(c, a)), c;
    },
    inArray: function(a, b, c) {
      return null == b ? -1 : g.call(b, a, c);
    },
    merge: function(a, b) {
      for (var c = +b.length,
          d = 0,
          e = a.length; c > d; d++)
        a[e++] = b[d];
      return a.length = e, a;
    },
    grep: function(a, b, c) {
      for (var d,
          e = [],
          f = 0,
          g = a.length,
          h = !c; g > f; f++)
        d = !b(a[f], f), d !== h && e.push(a[f]);
      return e;
    },
    map: function(a, b, c) {
      var d,
          f = 0,
          g = a.length,
          h = s(a),
          i = [];
      if (h)
        for (; g > f; f++)
          d = b(a[f], f, c), null != d && i.push(d);
      else
        for (f in a)
          d = b(a[f], f, c), null != d && i.push(d);
      return e.apply([], i);
    },
    guid: 1,
    proxy: function(a, b) {
      var c,
          e,
          f;
      return "string" == typeof b && (c = a[b], b = a, a = c), n.isFunction(a) ? (e = d.call(arguments, 2), f = function() {
        return a.apply(b || this, e.concat(d.call(arguments)));
      }, f.guid = a.guid = a.guid || n.guid++, f) : void 0;
    },
    now: Date.now,
    support: k
  }), n.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(a, b) {
    h["[object " + b + "]"] = b.toLowerCase();
  });
  function s(a) {
    var b = "length" in a && a.length,
        c = n.type(a);
    return "function" === c || n.isWindow(a) ? !1 : 1 === a.nodeType && b ? !0 : "array" === c || 0 === b || "number" == typeof b && b > 0 && b - 1 in a;
  }
  var t = function(a) {
    var b,
        c,
        d,
        e,
        f,
        g,
        h,
        i,
        j,
        k,
        l,
        m,
        n,
        o,
        p,
        q,
        r,
        s,
        t,
        u = "sizzle" + 1 * new Date,
        v = a.document,
        w = 0,
        x = 0,
        y = ha(),
        z = ha(),
        A = ha(),
        B = function(a, b) {
          return a === b && (l = !0), 0;
        },
        C = 1 << 31,
        D = {}.hasOwnProperty,
        E = [],
        F = E.pop,
        G = E.push,
        H = E.push,
        I = E.slice,
        J = function(a, b) {
          for (var c = 0,
              d = a.length; d > c; c++)
            if (a[c] === b)
              return c;
          return -1;
        },
        K = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",
        L = "[\\x20\\t\\r\\n\\f]",
        M = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",
        N = M.replace("w", "w#"),
        O = "\\[" + L + "*(" + M + ")(?:" + L + "*([*^$|!~]?=)" + L + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + N + "))|)" + L + "*\\]",
        P = ":(" + M + ")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|" + O + ")*)|.*)\\)|)",
        Q = new RegExp(L + "+", "g"),
        R = new RegExp("^" + L + "+|((?:^|[^\\\\])(?:\\\\.)*)" + L + "+$", "g"),
        S = new RegExp("^" + L + "*," + L + "*"),
        T = new RegExp("^" + L + "*([>+~]|" + L + ")" + L + "*"),
        U = new RegExp("=" + L + "*([^\\]'\"]*?)" + L + "*\\]", "g"),
        V = new RegExp(P),
        W = new RegExp("^" + N + "$"),
        X = {
          ID: new RegExp("^#(" + M + ")"),
          CLASS: new RegExp("^\\.(" + M + ")"),
          TAG: new RegExp("^(" + M.replace("w", "w*") + ")"),
          ATTR: new RegExp("^" + O),
          PSEUDO: new RegExp("^" + P),
          CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + L + "*(even|odd|(([+-]|)(\\d*)n|)" + L + "*(?:([+-]|)" + L + "*(\\d+)|))" + L + "*\\)|)", "i"),
          bool: new RegExp("^(?:" + K + ")$", "i"),
          needsContext: new RegExp("^" + L + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + L + "*((?:-\\d)?\\d*)" + L + "*\\)|)(?=[^-]|$)", "i")
        },
        Y = /^(?:input|select|textarea|button)$/i,
        Z = /^h\d$/i,
        $ = /^[^{]+\{\s*\[native \w/,
        _ = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,
        aa = /[+~]/,
        ba = /'|\\/g,
        ca = new RegExp("\\\\([\\da-f]{1,6}" + L + "?|(" + L + ")|.)", "ig"),
        da = function(a, b, c) {
          var d = "0x" + b - 65536;
          return d !== d || c ? b : 0 > d ? String.fromCharCode(d + 65536) : String.fromCharCode(d >> 10 | 55296, 1023 & d | 56320);
        },
        ea = function() {
          m();
        };
    try {
      H.apply(E = I.call(v.childNodes), v.childNodes), E[v.childNodes.length].nodeType;
    } catch (fa) {
      H = {apply: E.length ? function(a, b) {
          G.apply(a, I.call(b));
        } : function(a, b) {
          var c = a.length,
              d = 0;
          while (a[c++] = b[d++])
            ;
          a.length = c - 1;
        }};
    }
    function ga(a, b, d, e) {
      var f,
          h,
          j,
          k,
          l,
          o,
          r,
          s,
          w,
          x;
      if ((b ? b.ownerDocument || b : v) !== n && m(b), b = b || n, d = d || [], k = b.nodeType, "string" != typeof a || !a || 1 !== k && 9 !== k && 11 !== k)
        return d;
      if (!e && p) {
        if (11 !== k && (f = _.exec(a)))
          if (j = f[1]) {
            if (9 === k) {
              if (h = b.getElementById(j), !h || !h.parentNode)
                return d;
              if (h.id === j)
                return d.push(h), d;
            } else if (b.ownerDocument && (h = b.ownerDocument.getElementById(j)) && t(b, h) && h.id === j)
              return d.push(h), d;
          } else {
            if (f[2])
              return H.apply(d, b.getElementsByTagName(a)), d;
            if ((j = f[3]) && c.getElementsByClassName)
              return H.apply(d, b.getElementsByClassName(j)), d;
          }
        if (c.qsa && (!q || !q.test(a))) {
          if (s = r = u, w = b, x = 1 !== k && a, 1 === k && "object" !== b.nodeName.toLowerCase()) {
            o = g(a), (r = b.getAttribute("id")) ? s = r.replace(ba, "\\$&") : b.setAttribute("id", s), s = "[id='" + s + "'] ", l = o.length;
            while (l--)
              o[l] = s + ra(o[l]);
            w = aa.test(a) && pa(b.parentNode) || b, x = o.join(",");
          }
          if (x)
            try {
              return H.apply(d, w.querySelectorAll(x)), d;
            } catch (y) {} finally {
              r || b.removeAttribute("id");
            }
        }
      }
      return i(a.replace(R, "$1"), b, d, e);
    }
    function ha() {
      var a = [];
      function b(c, e) {
        return a.push(c + " ") > d.cacheLength && delete b[a.shift()], b[c + " "] = e;
      }
      return b;
    }
    function ia(a) {
      return a[u] = !0, a;
    }
    function ja(a) {
      var b = n.createElement("div");
      try {
        return !!a(b);
      } catch (c) {
        return !1;
      } finally {
        b.parentNode && b.parentNode.removeChild(b), b = null;
      }
    }
    function ka(a, b) {
      var c = a.split("|"),
          e = a.length;
      while (e--)
        d.attrHandle[c[e]] = b;
    }
    function la(a, b) {
      var c = b && a,
          d = c && 1 === a.nodeType && 1 === b.nodeType && (~b.sourceIndex || C) - (~a.sourceIndex || C);
      if (d)
        return d;
      if (c)
        while (c = c.nextSibling)
          if (c === b)
            return -1;
      return a ? 1 : -1;
    }
    function ma(a) {
      return function(b) {
        var c = b.nodeName.toLowerCase();
        return "input" === c && b.type === a;
      };
    }
    function na(a) {
      return function(b) {
        var c = b.nodeName.toLowerCase();
        return ("input" === c || "button" === c) && b.type === a;
      };
    }
    function oa(a) {
      return ia(function(b) {
        return b = +b, ia(function(c, d) {
          var e,
              f = a([], c.length, b),
              g = f.length;
          while (g--)
            c[e = f[g]] && (c[e] = !(d[e] = c[e]));
        });
      });
    }
    function pa(a) {
      return a && "undefined" != typeof a.getElementsByTagName && a;
    }
    c = ga.support = {}, f = ga.isXML = function(a) {
      var b = a && (a.ownerDocument || a).documentElement;
      return b ? "HTML" !== b.nodeName : !1;
    }, m = ga.setDocument = function(a) {
      var b,
          e,
          g = a ? a.ownerDocument || a : v;
      return g !== n && 9 === g.nodeType && g.documentElement ? (n = g, o = g.documentElement, e = g.defaultView, e && e !== e.top && (e.addEventListener ? e.addEventListener("unload", ea, !1) : e.attachEvent && e.attachEvent("onunload", ea)), p = !f(g), c.attributes = ja(function(a) {
        return a.className = "i", !a.getAttribute("className");
      }), c.getElementsByTagName = ja(function(a) {
        return a.appendChild(g.createComment("")), !a.getElementsByTagName("*").length;
      }), c.getElementsByClassName = $.test(g.getElementsByClassName), c.getById = ja(function(a) {
        return o.appendChild(a).id = u, !g.getElementsByName || !g.getElementsByName(u).length;
      }), c.getById ? (d.find.ID = function(a, b) {
        if ("undefined" != typeof b.getElementById && p) {
          var c = b.getElementById(a);
          return c && c.parentNode ? [c] : [];
        }
      }, d.filter.ID = function(a) {
        var b = a.replace(ca, da);
        return function(a) {
          return a.getAttribute("id") === b;
        };
      }) : (delete d.find.ID, d.filter.ID = function(a) {
        var b = a.replace(ca, da);
        return function(a) {
          var c = "undefined" != typeof a.getAttributeNode && a.getAttributeNode("id");
          return c && c.value === b;
        };
      }), d.find.TAG = c.getElementsByTagName ? function(a, b) {
        return "undefined" != typeof b.getElementsByTagName ? b.getElementsByTagName(a) : c.qsa ? b.querySelectorAll(a) : void 0;
      } : function(a, b) {
        var c,
            d = [],
            e = 0,
            f = b.getElementsByTagName(a);
        if ("*" === a) {
          while (c = f[e++])
            1 === c.nodeType && d.push(c);
          return d;
        }
        return f;
      }, d.find.CLASS = c.getElementsByClassName && function(a, b) {
        return p ? b.getElementsByClassName(a) : void 0;
      }, r = [], q = [], (c.qsa = $.test(g.querySelectorAll)) && (ja(function(a) {
        o.appendChild(a).innerHTML = "<a id='" + u + "'></a><select id='" + u + "-\f]' msallowcapture=''><option selected=''></option></select>", a.querySelectorAll("[msallowcapture^='']").length && q.push("[*^$]=" + L + "*(?:''|\"\")"), a.querySelectorAll("[selected]").length || q.push("\\[" + L + "*(?:value|" + K + ")"), a.querySelectorAll("[id~=" + u + "-]").length || q.push("~="), a.querySelectorAll(":checked").length || q.push(":checked"), a.querySelectorAll("a#" + u + "+*").length || q.push(".#.+[+~]");
      }), ja(function(a) {
        var b = g.createElement("input");
        b.setAttribute("type", "hidden"), a.appendChild(b).setAttribute("name", "D"), a.querySelectorAll("[name=d]").length && q.push("name" + L + "*[*^$|!~]?="), a.querySelectorAll(":enabled").length || q.push(":enabled", ":disabled"), a.querySelectorAll("*,:x"), q.push(",.*:");
      })), (c.matchesSelector = $.test(s = o.matches || o.webkitMatchesSelector || o.mozMatchesSelector || o.oMatchesSelector || o.msMatchesSelector)) && ja(function(a) {
        c.disconnectedMatch = s.call(a, "div"), s.call(a, "[s!='']:x"), r.push("!=", P);
      }), q = q.length && new RegExp(q.join("|")), r = r.length && new RegExp(r.join("|")), b = $.test(o.compareDocumentPosition), t = b || $.test(o.contains) ? function(a, b) {
        var c = 9 === a.nodeType ? a.documentElement : a,
            d = b && b.parentNode;
        return a === d || !(!d || 1 !== d.nodeType || !(c.contains ? c.contains(d) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(d)));
      } : function(a, b) {
        if (b)
          while (b = b.parentNode)
            if (b === a)
              return !0;
        return !1;
      }, B = b ? function(a, b) {
        if (a === b)
          return l = !0, 0;
        var d = !a.compareDocumentPosition - !b.compareDocumentPosition;
        return d ? d : (d = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : 1, 1 & d || !c.sortDetached && b.compareDocumentPosition(a) === d ? a === g || a.ownerDocument === v && t(v, a) ? -1 : b === g || b.ownerDocument === v && t(v, b) ? 1 : k ? J(k, a) - J(k, b) : 0 : 4 & d ? -1 : 1);
      } : function(a, b) {
        if (a === b)
          return l = !0, 0;
        var c,
            d = 0,
            e = a.parentNode,
            f = b.parentNode,
            h = [a],
            i = [b];
        if (!e || !f)
          return a === g ? -1 : b === g ? 1 : e ? -1 : f ? 1 : k ? J(k, a) - J(k, b) : 0;
        if (e === f)
          return la(a, b);
        c = a;
        while (c = c.parentNode)
          h.unshift(c);
        c = b;
        while (c = c.parentNode)
          i.unshift(c);
        while (h[d] === i[d])
          d++;
        return d ? la(h[d], i[d]) : h[d] === v ? -1 : i[d] === v ? 1 : 0;
      }, g) : n;
    }, ga.matches = function(a, b) {
      return ga(a, null, null, b);
    }, ga.matchesSelector = function(a, b) {
      if ((a.ownerDocument || a) !== n && m(a), b = b.replace(U, "='$1']"), !(!c.matchesSelector || !p || r && r.test(b) || q && q.test(b)))
        try {
          var d = s.call(a, b);
          if (d || c.disconnectedMatch || a.document && 11 !== a.document.nodeType)
            return d;
        } catch (e) {}
      return ga(b, n, null, [a]).length > 0;
    }, ga.contains = function(a, b) {
      return (a.ownerDocument || a) !== n && m(a), t(a, b);
    }, ga.attr = function(a, b) {
      (a.ownerDocument || a) !== n && m(a);
      var e = d.attrHandle[b.toLowerCase()],
          f = e && D.call(d.attrHandle, b.toLowerCase()) ? e(a, b, !p) : void 0;
      return void 0 !== f ? f : c.attributes || !p ? a.getAttribute(b) : (f = a.getAttributeNode(b)) && f.specified ? f.value : null;
    }, ga.error = function(a) {
      throw new Error("Syntax error, unrecognized expression: " + a);
    }, ga.uniqueSort = function(a) {
      var b,
          d = [],
          e = 0,
          f = 0;
      if (l = !c.detectDuplicates, k = !c.sortStable && a.slice(0), a.sort(B), l) {
        while (b = a[f++])
          b === a[f] && (e = d.push(f));
        while (e--)
          a.splice(d[e], 1);
      }
      return k = null, a;
    }, e = ga.getText = function(a) {
      var b,
          c = "",
          d = 0,
          f = a.nodeType;
      if (f) {
        if (1 === f || 9 === f || 11 === f) {
          if ("string" == typeof a.textContent)
            return a.textContent;
          for (a = a.firstChild; a; a = a.nextSibling)
            c += e(a);
        } else if (3 === f || 4 === f)
          return a.nodeValue;
      } else
        while (b = a[d++])
          c += e(b);
      return c;
    }, d = ga.selectors = {
      cacheLength: 50,
      createPseudo: ia,
      match: X,
      attrHandle: {},
      find: {},
      relative: {
        ">": {
          dir: "parentNode",
          first: !0
        },
        " ": {dir: "parentNode"},
        "+": {
          dir: "previousSibling",
          first: !0
        },
        "~": {dir: "previousSibling"}
      },
      preFilter: {
        ATTR: function(a) {
          return a[1] = a[1].replace(ca, da), a[3] = (a[3] || a[4] || a[5] || "").replace(ca, da), "~=" === a[2] && (a[3] = " " + a[3] + " "), a.slice(0, 4);
        },
        CHILD: function(a) {
          return a[1] = a[1].toLowerCase(), "nth" === a[1].slice(0, 3) ? (a[3] || ga.error(a[0]), a[4] = +(a[4] ? a[5] + (a[6] || 1) : 2 * ("even" === a[3] || "odd" === a[3])), a[5] = +(a[7] + a[8] || "odd" === a[3])) : a[3] && ga.error(a[0]), a;
        },
        PSEUDO: function(a) {
          var b,
              c = !a[6] && a[2];
          return X.CHILD.test(a[0]) ? null : (a[3] ? a[2] = a[4] || a[5] || "" : c && V.test(c) && (b = g(c, !0)) && (b = c.indexOf(")", c.length - b) - c.length) && (a[0] = a[0].slice(0, b), a[2] = c.slice(0, b)), a.slice(0, 3));
        }
      },
      filter: {
        TAG: function(a) {
          var b = a.replace(ca, da).toLowerCase();
          return "*" === a ? function() {
            return !0;
          } : function(a) {
            return a.nodeName && a.nodeName.toLowerCase() === b;
          };
        },
        CLASS: function(a) {
          var b = y[a + " "];
          return b || (b = new RegExp("(^|" + L + ")" + a + "(" + L + "|$)")) && y(a, function(a) {
            return b.test("string" == typeof a.className && a.className || "undefined" != typeof a.getAttribute && a.getAttribute("class") || "");
          });
        },
        ATTR: function(a, b, c) {
          return function(d) {
            var e = ga.attr(d, a);
            return null == e ? "!=" === b : b ? (e += "", "=" === b ? e === c : "!=" === b ? e !== c : "^=" === b ? c && 0 === e.indexOf(c) : "*=" === b ? c && e.indexOf(c) > -1 : "$=" === b ? c && e.slice(-c.length) === c : "~=" === b ? (" " + e.replace(Q, " ") + " ").indexOf(c) > -1 : "|=" === b ? e === c || e.slice(0, c.length + 1) === c + "-" : !1) : !0;
          };
        },
        CHILD: function(a, b, c, d, e) {
          var f = "nth" !== a.slice(0, 3),
              g = "last" !== a.slice(-4),
              h = "of-type" === b;
          return 1 === d && 0 === e ? function(a) {
            return !!a.parentNode;
          } : function(b, c, i) {
            var j,
                k,
                l,
                m,
                n,
                o,
                p = f !== g ? "nextSibling" : "previousSibling",
                q = b.parentNode,
                r = h && b.nodeName.toLowerCase(),
                s = !i && !h;
            if (q) {
              if (f) {
                while (p) {
                  l = b;
                  while (l = l[p])
                    if (h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType)
                      return !1;
                  o = p = "only" === a && !o && "nextSibling";
                }
                return !0;
              }
              if (o = [g ? q.firstChild : q.lastChild], g && s) {
                k = q[u] || (q[u] = {}), j = k[a] || [], n = j[0] === w && j[1], m = j[0] === w && j[2], l = n && q.childNodes[n];
                while (l = ++n && l && l[p] || (m = n = 0) || o.pop())
                  if (1 === l.nodeType && ++m && l === b) {
                    k[a] = [w, n, m];
                    break;
                  }
              } else if (s && (j = (b[u] || (b[u] = {}))[a]) && j[0] === w)
                m = j[1];
              else
                while (l = ++n && l && l[p] || (m = n = 0) || o.pop())
                  if ((h ? l.nodeName.toLowerCase() === r : 1 === l.nodeType) && ++m && (s && ((l[u] || (l[u] = {}))[a] = [w, m]), l === b))
                    break;
              return m -= e, m === d || m % d === 0 && m / d >= 0;
            }
          };
        },
        PSEUDO: function(a, b) {
          var c,
              e = d.pseudos[a] || d.setFilters[a.toLowerCase()] || ga.error("unsupported pseudo: " + a);
          return e[u] ? e(b) : e.length > 1 ? (c = [a, a, "", b], d.setFilters.hasOwnProperty(a.toLowerCase()) ? ia(function(a, c) {
            var d,
                f = e(a, b),
                g = f.length;
            while (g--)
              d = J(a, f[g]), a[d] = !(c[d] = f[g]);
          }) : function(a) {
            return e(a, 0, c);
          }) : e;
        }
      },
      pseudos: {
        not: ia(function(a) {
          var b = [],
              c = [],
              d = h(a.replace(R, "$1"));
          return d[u] ? ia(function(a, b, c, e) {
            var f,
                g = d(a, null, e, []),
                h = a.length;
            while (h--)
              (f = g[h]) && (a[h] = !(b[h] = f));
          }) : function(a, e, f) {
            return b[0] = a, d(b, null, f, c), b[0] = null, !c.pop();
          };
        }),
        has: ia(function(a) {
          return function(b) {
            return ga(a, b).length > 0;
          };
        }),
        contains: ia(function(a) {
          return a = a.replace(ca, da), function(b) {
            return (b.textContent || b.innerText || e(b)).indexOf(a) > -1;
          };
        }),
        lang: ia(function(a) {
          return W.test(a || "") || ga.error("unsupported lang: " + a), a = a.replace(ca, da).toLowerCase(), function(b) {
            var c;
            do
              if (c = p ? b.lang : b.getAttribute("xml:lang") || b.getAttribute("lang"))
                return c = c.toLowerCase(), c === a || 0 === c.indexOf(a + "-");
 while ((b = b.parentNode) && 1 === b.nodeType);
            return !1;
          };
        }),
        target: function(b) {
          var c = a.location && a.location.hash;
          return c && c.slice(1) === b.id;
        },
        root: function(a) {
          return a === o;
        },
        focus: function(a) {
          return a === n.activeElement && (!n.hasFocus || n.hasFocus()) && !!(a.type || a.href || ~a.tabIndex);
        },
        enabled: function(a) {
          return a.disabled === !1;
        },
        disabled: function(a) {
          return a.disabled === !0;
        },
        checked: function(a) {
          var b = a.nodeName.toLowerCase();
          return "input" === b && !!a.checked || "option" === b && !!a.selected;
        },
        selected: function(a) {
          return a.parentNode && a.parentNode.selectedIndex, a.selected === !0;
        },
        empty: function(a) {
          for (a = a.firstChild; a; a = a.nextSibling)
            if (a.nodeType < 6)
              return !1;
          return !0;
        },
        parent: function(a) {
          return !d.pseudos.empty(a);
        },
        header: function(a) {
          return Z.test(a.nodeName);
        },
        input: function(a) {
          return Y.test(a.nodeName);
        },
        button: function(a) {
          var b = a.nodeName.toLowerCase();
          return "input" === b && "button" === a.type || "button" === b;
        },
        text: function(a) {
          var b;
          return "input" === a.nodeName.toLowerCase() && "text" === a.type && (null == (b = a.getAttribute("type")) || "text" === b.toLowerCase());
        },
        first: oa(function() {
          return [0];
        }),
        last: oa(function(a, b) {
          return [b - 1];
        }),
        eq: oa(function(a, b, c) {
          return [0 > c ? c + b : c];
        }),
        even: oa(function(a, b) {
          for (var c = 0; b > c; c += 2)
            a.push(c);
          return a;
        }),
        odd: oa(function(a, b) {
          for (var c = 1; b > c; c += 2)
            a.push(c);
          return a;
        }),
        lt: oa(function(a, b, c) {
          for (var d = 0 > c ? c + b : c; --d >= 0; )
            a.push(d);
          return a;
        }),
        gt: oa(function(a, b, c) {
          for (var d = 0 > c ? c + b : c; ++d < b; )
            a.push(d);
          return a;
        })
      }
    }, d.pseudos.nth = d.pseudos.eq;
    for (b in {
      radio: !0,
      checkbox: !0,
      file: !0,
      password: !0,
      image: !0
    })
      d.pseudos[b] = ma(b);
    for (b in {
      submit: !0,
      reset: !0
    })
      d.pseudos[b] = na(b);
    function qa() {}
    qa.prototype = d.filters = d.pseudos, d.setFilters = new qa, g = ga.tokenize = function(a, b) {
      var c,
          e,
          f,
          g,
          h,
          i,
          j,
          k = z[a + " "];
      if (k)
        return b ? 0 : k.slice(0);
      h = a, i = [], j = d.preFilter;
      while (h) {
        (!c || (e = S.exec(h))) && (e && (h = h.slice(e[0].length) || h), i.push(f = [])), c = !1, (e = T.exec(h)) && (c = e.shift(), f.push({
          value: c,
          type: e[0].replace(R, " ")
        }), h = h.slice(c.length));
        for (g in d.filter)
          !(e = X[g].exec(h)) || j[g] && !(e = j[g](e)) || (c = e.shift(), f.push({
            value: c,
            type: g,
            matches: e
          }), h = h.slice(c.length));
        if (!c)
          break;
      }
      return b ? h.length : h ? ga.error(a) : z(a, i).slice(0);
    };
    function ra(a) {
      for (var b = 0,
          c = a.length,
          d = ""; c > b; b++)
        d += a[b].value;
      return d;
    }
    function sa(a, b, c) {
      var d = b.dir,
          e = c && "parentNode" === d,
          f = x++;
      return b.first ? function(b, c, f) {
        while (b = b[d])
          if (1 === b.nodeType || e)
            return a(b, c, f);
      } : function(b, c, g) {
        var h,
            i,
            j = [w, f];
        if (g) {
          while (b = b[d])
            if ((1 === b.nodeType || e) && a(b, c, g))
              return !0;
        } else
          while (b = b[d])
            if (1 === b.nodeType || e) {
              if (i = b[u] || (b[u] = {}), (h = i[d]) && h[0] === w && h[1] === f)
                return j[2] = h[2];
              if (i[d] = j, j[2] = a(b, c, g))
                return !0;
            }
      };
    }
    function ta(a) {
      return a.length > 1 ? function(b, c, d) {
        var e = a.length;
        while (e--)
          if (!a[e](b, c, d))
            return !1;
        return !0;
      } : a[0];
    }
    function ua(a, b, c) {
      for (var d = 0,
          e = b.length; e > d; d++)
        ga(a, b[d], c);
      return c;
    }
    function va(a, b, c, d, e) {
      for (var f,
          g = [],
          h = 0,
          i = a.length,
          j = null != b; i > h; h++)
        (f = a[h]) && (!c || c(f, d, e)) && (g.push(f), j && b.push(h));
      return g;
    }
    function wa(a, b, c, d, e, f) {
      return d && !d[u] && (d = wa(d)), e && !e[u] && (e = wa(e, f)), ia(function(f, g, h, i) {
        var j,
            k,
            l,
            m = [],
            n = [],
            o = g.length,
            p = f || ua(b || "*", h.nodeType ? [h] : h, []),
            q = !a || !f && b ? p : va(p, m, a, h, i),
            r = c ? e || (f ? a : o || d) ? [] : g : q;
        if (c && c(q, r, h, i), d) {
          j = va(r, n), d(j, [], h, i), k = j.length;
          while (k--)
            (l = j[k]) && (r[n[k]] = !(q[n[k]] = l));
        }
        if (f) {
          if (e || a) {
            if (e) {
              j = [], k = r.length;
              while (k--)
                (l = r[k]) && j.push(q[k] = l);
              e(null, r = [], j, i);
            }
            k = r.length;
            while (k--)
              (l = r[k]) && (j = e ? J(f, l) : m[k]) > -1 && (f[j] = !(g[j] = l));
          }
        } else
          r = va(r === g ? r.splice(o, r.length) : r), e ? e(null, g, r, i) : H.apply(g, r);
      });
    }
    function xa(a) {
      for (var b,
          c,
          e,
          f = a.length,
          g = d.relative[a[0].type],
          h = g || d.relative[" "],
          i = g ? 1 : 0,
          k = sa(function(a) {
            return a === b;
          }, h, !0),
          l = sa(function(a) {
            return J(b, a) > -1;
          }, h, !0),
          m = [function(a, c, d) {
            var e = !g && (d || c !== j) || ((b = c).nodeType ? k(a, c, d) : l(a, c, d));
            return b = null, e;
          }]; f > i; i++)
        if (c = d.relative[a[i].type])
          m = [sa(ta(m), c)];
        else {
          if (c = d.filter[a[i].type].apply(null, a[i].matches), c[u]) {
            for (e = ++i; f > e; e++)
              if (d.relative[a[e].type])
                break;
            return wa(i > 1 && ta(m), i > 1 && ra(a.slice(0, i - 1).concat({value: " " === a[i - 2].type ? "*" : ""})).replace(R, "$1"), c, e > i && xa(a.slice(i, e)), f > e && xa(a = a.slice(e)), f > e && ra(a));
          }
          m.push(c);
        }
      return ta(m);
    }
    function ya(a, b) {
      var c = b.length > 0,
          e = a.length > 0,
          f = function(f, g, h, i, k) {
            var l,
                m,
                o,
                p = 0,
                q = "0",
                r = f && [],
                s = [],
                t = j,
                u = f || e && d.find.TAG("*", k),
                v = w += null == t ? 1 : Math.random() || .1,
                x = u.length;
            for (k && (j = g !== n && g); q !== x && null != (l = u[q]); q++) {
              if (e && l) {
                m = 0;
                while (o = a[m++])
                  if (o(l, g, h)) {
                    i.push(l);
                    break;
                  }
                k && (w = v);
              }
              c && ((l = !o && l) && p--, f && r.push(l));
            }
            if (p += q, c && q !== p) {
              m = 0;
              while (o = b[m++])
                o(r, s, g, h);
              if (f) {
                if (p > 0)
                  while (q--)
                    r[q] || s[q] || (s[q] = F.call(i));
                s = va(s);
              }
              H.apply(i, s), k && !f && s.length > 0 && p + b.length > 1 && ga.uniqueSort(i);
            }
            return k && (w = v, j = t), r;
          };
      return c ? ia(f) : f;
    }
    return h = ga.compile = function(a, b) {
      var c,
          d = [],
          e = [],
          f = A[a + " "];
      if (!f) {
        b || (b = g(a)), c = b.length;
        while (c--)
          f = xa(b[c]), f[u] ? d.push(f) : e.push(f);
        f = A(a, ya(e, d)), f.selector = a;
      }
      return f;
    }, i = ga.select = function(a, b, e, f) {
      var i,
          j,
          k,
          l,
          m,
          n = "function" == typeof a && a,
          o = !f && g(a = n.selector || a);
      if (e = e || [], 1 === o.length) {
        if (j = o[0] = o[0].slice(0), j.length > 2 && "ID" === (k = j[0]).type && c.getById && 9 === b.nodeType && p && d.relative[j[1].type]) {
          if (b = (d.find.ID(k.matches[0].replace(ca, da), b) || [])[0], !b)
            return e;
          n && (b = b.parentNode), a = a.slice(j.shift().value.length);
        }
        i = X.needsContext.test(a) ? 0 : j.length;
        while (i--) {
          if (k = j[i], d.relative[l = k.type])
            break;
          if ((m = d.find[l]) && (f = m(k.matches[0].replace(ca, da), aa.test(j[0].type) && pa(b.parentNode) || b))) {
            if (j.splice(i, 1), a = f.length && ra(j), !a)
              return H.apply(e, f), e;
            break;
          }
        }
      }
      return (n || h(a, o))(f, b, !p, e, aa.test(a) && pa(b.parentNode) || b), e;
    }, c.sortStable = u.split("").sort(B).join("") === u, c.detectDuplicates = !!l, m(), c.sortDetached = ja(function(a) {
      return 1 & a.compareDocumentPosition(n.createElement("div"));
    }), ja(function(a) {
      return a.innerHTML = "<a href='#'></a>", "#" === a.firstChild.getAttribute("href");
    }) || ka("type|href|height|width", function(a, b, c) {
      return c ? void 0 : a.getAttribute(b, "type" === b.toLowerCase() ? 1 : 2);
    }), c.attributes && ja(function(a) {
      return a.innerHTML = "<input/>", a.firstChild.setAttribute("value", ""), "" === a.firstChild.getAttribute("value");
    }) || ka("value", function(a, b, c) {
      return c || "input" !== a.nodeName.toLowerCase() ? void 0 : a.defaultValue;
    }), ja(function(a) {
      return null == a.getAttribute("disabled");
    }) || ka(K, function(a, b, c) {
      var d;
      return c ? void 0 : a[b] === !0 ? b.toLowerCase() : (d = a.getAttributeNode(b)) && d.specified ? d.value : null;
    }), ga;
  }(a);
  n.find = t, n.expr = t.selectors, n.expr[":"] = n.expr.pseudos, n.unique = t.uniqueSort, n.text = t.getText, n.isXMLDoc = t.isXML, n.contains = t.contains;
  var u = n.expr.match.needsContext,
      v = /^<(\w+)\s*\/?>(?:<\/\1>|)$/,
      w = /^.[^:#\[\.,]*$/;
  function x(a, b, c) {
    if (n.isFunction(b))
      return n.grep(a, function(a, d) {
        return !!b.call(a, d, a) !== c;
      });
    if (b.nodeType)
      return n.grep(a, function(a) {
        return a === b !== c;
      });
    if ("string" == typeof b) {
      if (w.test(b))
        return n.filter(b, a, c);
      b = n.filter(b, a);
    }
    return n.grep(a, function(a) {
      return g.call(b, a) >= 0 !== c;
    });
  }
  n.filter = function(a, b, c) {
    var d = b[0];
    return c && (a = ":not(" + a + ")"), 1 === b.length && 1 === d.nodeType ? n.find.matchesSelector(d, a) ? [d] : [] : n.find.matches(a, n.grep(b, function(a) {
      return 1 === a.nodeType;
    }));
  }, n.fn.extend({
    find: function(a) {
      var b,
          c = this.length,
          d = [],
          e = this;
      if ("string" != typeof a)
        return this.pushStack(n(a).filter(function() {
          for (b = 0; c > b; b++)
            if (n.contains(e[b], this))
              return !0;
        }));
      for (b = 0; c > b; b++)
        n.find(a, e[b], d);
      return d = this.pushStack(c > 1 ? n.unique(d) : d), d.selector = this.selector ? this.selector + " " + a : a, d;
    },
    filter: function(a) {
      return this.pushStack(x(this, a || [], !1));
    },
    not: function(a) {
      return this.pushStack(x(this, a || [], !0));
    },
    is: function(a) {
      return !!x(this, "string" == typeof a && u.test(a) ? n(a) : a || [], !1).length;
    }
  });
  var y,
      z = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,
      A = n.fn.init = function(a, b) {
        var c,
            d;
        if (!a)
          return this;
        if ("string" == typeof a) {
          if (c = "<" === a[0] && ">" === a[a.length - 1] && a.length >= 3 ? [null, a, null] : z.exec(a), !c || !c[1] && b)
            return !b || b.jquery ? (b || y).find(a) : this.constructor(b).find(a);
          if (c[1]) {
            if (b = b instanceof n ? b[0] : b, n.merge(this, n.parseHTML(c[1], b && b.nodeType ? b.ownerDocument || b : l, !0)), v.test(c[1]) && n.isPlainObject(b))
              for (c in b)
                n.isFunction(this[c]) ? this[c](b[c]) : this.attr(c, b[c]);
            return this;
          }
          return d = l.getElementById(c[2]), d && d.parentNode && (this.length = 1, this[0] = d), this.context = l, this.selector = a, this;
        }
        return a.nodeType ? (this.context = this[0] = a, this.length = 1, this) : n.isFunction(a) ? "undefined" != typeof y.ready ? y.ready(a) : a(n) : (void 0 !== a.selector && (this.selector = a.selector, this.context = a.context), n.makeArray(a, this));
      };
  A.prototype = n.fn, y = n(l);
  var B = /^(?:parents|prev(?:Until|All))/,
      C = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
      };
  n.extend({
    dir: function(a, b, c) {
      var d = [],
          e = void 0 !== c;
      while ((a = a[b]) && 9 !== a.nodeType)
        if (1 === a.nodeType) {
          if (e && n(a).is(c))
            break;
          d.push(a);
        }
      return d;
    },
    sibling: function(a, b) {
      for (var c = []; a; a = a.nextSibling)
        1 === a.nodeType && a !== b && c.push(a);
      return c;
    }
  }), n.fn.extend({
    has: function(a) {
      var b = n(a, this),
          c = b.length;
      return this.filter(function() {
        for (var a = 0; c > a; a++)
          if (n.contains(this, b[a]))
            return !0;
      });
    },
    closest: function(a, b) {
      for (var c,
          d = 0,
          e = this.length,
          f = [],
          g = u.test(a) || "string" != typeof a ? n(a, b || this.context) : 0; e > d; d++)
        for (c = this[d]; c && c !== b; c = c.parentNode)
          if (c.nodeType < 11 && (g ? g.index(c) > -1 : 1 === c.nodeType && n.find.matchesSelector(c, a))) {
            f.push(c);
            break;
          }
      return this.pushStack(f.length > 1 ? n.unique(f) : f);
    },
    index: function(a) {
      return a ? "string" == typeof a ? g.call(n(a), this[0]) : g.call(this, a.jquery ? a[0] : a) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
    },
    add: function(a, b) {
      return this.pushStack(n.unique(n.merge(this.get(), n(a, b))));
    },
    addBack: function(a) {
      return this.add(null == a ? this.prevObject : this.prevObject.filter(a));
    }
  });
  function D(a, b) {
    while ((a = a[b]) && 1 !== a.nodeType)
      ;
    return a;
  }
  n.each({
    parent: function(a) {
      var b = a.parentNode;
      return b && 11 !== b.nodeType ? b : null;
    },
    parents: function(a) {
      return n.dir(a, "parentNode");
    },
    parentsUntil: function(a, b, c) {
      return n.dir(a, "parentNode", c);
    },
    next: function(a) {
      return D(a, "nextSibling");
    },
    prev: function(a) {
      return D(a, "previousSibling");
    },
    nextAll: function(a) {
      return n.dir(a, "nextSibling");
    },
    prevAll: function(a) {
      return n.dir(a, "previousSibling");
    },
    nextUntil: function(a, b, c) {
      return n.dir(a, "nextSibling", c);
    },
    prevUntil: function(a, b, c) {
      return n.dir(a, "previousSibling", c);
    },
    siblings: function(a) {
      return n.sibling((a.parentNode || {}).firstChild, a);
    },
    children: function(a) {
      return n.sibling(a.firstChild);
    },
    contents: function(a) {
      return a.contentDocument || n.merge([], a.childNodes);
    }
  }, function(a, b) {
    n.fn[a] = function(c, d) {
      var e = n.map(this, b, c);
      return "Until" !== a.slice(-5) && (d = c), d && "string" == typeof d && (e = n.filter(d, e)), this.length > 1 && (C[a] || n.unique(e), B.test(a) && e.reverse()), this.pushStack(e);
    };
  });
  var E = /\S+/g,
      F = {};
  function G(a) {
    var b = F[a] = {};
    return n.each(a.match(E) || [], function(a, c) {
      b[c] = !0;
    }), b;
  }
  n.Callbacks = function(a) {
    a = "string" == typeof a ? F[a] || G(a) : n.extend({}, a);
    var b,
        c,
        d,
        e,
        f,
        g,
        h = [],
        i = !a.once && [],
        j = function(l) {
          for (b = a.memory && l, c = !0, g = e || 0, e = 0, f = h.length, d = !0; h && f > g; g++)
            if (h[g].apply(l[0], l[1]) === !1 && a.stopOnFalse) {
              b = !1;
              break;
            }
          d = !1, h && (i ? i.length && j(i.shift()) : b ? h = [] : k.disable());
        },
        k = {
          add: function() {
            if (h) {
              var c = h.length;
              !function g(b) {
                n.each(b, function(b, c) {
                  var d = n.type(c);
                  "function" === d ? a.unique && k.has(c) || h.push(c) : c && c.length && "string" !== d && g(c);
                });
              }(arguments), d ? f = h.length : b && (e = c, j(b));
            }
            return this;
          },
          remove: function() {
            return h && n.each(arguments, function(a, b) {
              var c;
              while ((c = n.inArray(b, h, c)) > -1)
                h.splice(c, 1), d && (f >= c && f--, g >= c && g--);
            }), this;
          },
          has: function(a) {
            return a ? n.inArray(a, h) > -1 : !(!h || !h.length);
          },
          empty: function() {
            return h = [], f = 0, this;
          },
          disable: function() {
            return h = i = b = void 0, this;
          },
          disabled: function() {
            return !h;
          },
          lock: function() {
            return i = void 0, b || k.disable(), this;
          },
          locked: function() {
            return !i;
          },
          fireWith: function(a, b) {
            return !h || c && !i || (b = b || [], b = [a, b.slice ? b.slice() : b], d ? i.push(b) : j(b)), this;
          },
          fire: function() {
            return k.fireWith(this, arguments), this;
          },
          fired: function() {
            return !!c;
          }
        };
    return k;
  }, n.extend({
    Deferred: function(a) {
      var b = [["resolve", "done", n.Callbacks("once memory"), "resolved"], ["reject", "fail", n.Callbacks("once memory"), "rejected"], ["notify", "progress", n.Callbacks("memory")]],
          c = "pending",
          d = {
            state: function() {
              return c;
            },
            always: function() {
              return e.done(arguments).fail(arguments), this;
            },
            then: function() {
              var a = arguments;
              return n.Deferred(function(c) {
                n.each(b, function(b, f) {
                  var g = n.isFunction(a[b]) && a[b];
                  e[f[1]](function() {
                    var a = g && g.apply(this, arguments);
                    a && n.isFunction(a.promise) ? a.promise().done(c.resolve).fail(c.reject).progress(c.notify) : c[f[0] + "With"](this === d ? c.promise() : this, g ? [a] : arguments);
                  });
                }), a = null;
              }).promise();
            },
            promise: function(a) {
              return null != a ? n.extend(a, d) : d;
            }
          },
          e = {};
      return d.pipe = d.then, n.each(b, function(a, f) {
        var g = f[2],
            h = f[3];
        d[f[1]] = g.add, h && g.add(function() {
          c = h;
        }, b[1 ^ a][2].disable, b[2][2].lock), e[f[0]] = function() {
          return e[f[0] + "With"](this === e ? d : this, arguments), this;
        }, e[f[0] + "With"] = g.fireWith;
      }), d.promise(e), a && a.call(e, e), e;
    },
    when: function(a) {
      var b = 0,
          c = d.call(arguments),
          e = c.length,
          f = 1 !== e || a && n.isFunction(a.promise) ? e : 0,
          g = 1 === f ? a : n.Deferred(),
          h = function(a, b, c) {
            return function(e) {
              b[a] = this, c[a] = arguments.length > 1 ? d.call(arguments) : e, c === i ? g.notifyWith(b, c) : --f || g.resolveWith(b, c);
            };
          },
          i,
          j,
          k;
      if (e > 1)
        for (i = new Array(e), j = new Array(e), k = new Array(e); e > b; b++)
          c[b] && n.isFunction(c[b].promise) ? c[b].promise().done(h(b, k, c)).fail(g.reject).progress(h(b, j, i)) : --f;
      return f || g.resolveWith(k, c), g.promise();
    }
  });
  var H;
  n.fn.ready = function(a) {
    return n.ready.promise().done(a), this;
  }, n.extend({
    isReady: !1,
    readyWait: 1,
    holdReady: function(a) {
      a ? n.readyWait++ : n.ready(!0);
    },
    ready: function(a) {
      (a === !0 ? --n.readyWait : n.isReady) || (n.isReady = !0, a !== !0 && --n.readyWait > 0 || (H.resolveWith(l, [n]), n.fn.triggerHandler && (n(l).triggerHandler("ready"), n(l).off("ready"))));
    }
  });
  function I() {
    l.removeEventListener("DOMContentLoaded", I, !1), a.removeEventListener("load", I, !1), n.ready();
  }
  n.ready.promise = function(b) {
    return H || (H = n.Deferred(), "complete" === l.readyState ? setTimeout(n.ready) : (l.addEventListener("DOMContentLoaded", I, !1), a.addEventListener("load", I, !1))), H.promise(b);
  }, n.ready.promise();
  var J = n.access = function(a, b, c, d, e, f, g) {
    var h = 0,
        i = a.length,
        j = null == c;
    if ("object" === n.type(c)) {
      e = !0;
      for (h in c)
        n.access(a, b, h, c[h], !0, f, g);
    } else if (void 0 !== d && (e = !0, n.isFunction(d) || (g = !0), j && (g ? (b.call(a, d), b = null) : (j = b, b = function(a, b, c) {
      return j.call(n(a), c);
    })), b))
      for (; i > h; h++)
        b(a[h], c, g ? d : d.call(a[h], h, b(a[h], c)));
    return e ? a : j ? b.call(a) : i ? b(a[0], c) : f;
  };
  n.acceptData = function(a) {
    return 1 === a.nodeType || 9 === a.nodeType || !+a.nodeType;
  };
  function K() {
    Object.defineProperty(this.cache = {}, 0, {get: function() {
        return {};
      }}), this.expando = n.expando + K.uid++;
  }
  K.uid = 1, K.accepts = n.acceptData, K.prototype = {
    key: function(a) {
      if (!K.accepts(a))
        return 0;
      var b = {},
          c = a[this.expando];
      if (!c) {
        c = K.uid++;
        try {
          b[this.expando] = {value: c}, Object.defineProperties(a, b);
        } catch (d) {
          b[this.expando] = c, n.extend(a, b);
        }
      }
      return this.cache[c] || (this.cache[c] = {}), c;
    },
    set: function(a, b, c) {
      var d,
          e = this.key(a),
          f = this.cache[e];
      if ("string" == typeof b)
        f[b] = c;
      else if (n.isEmptyObject(f))
        n.extend(this.cache[e], b);
      else
        for (d in b)
          f[d] = b[d];
      return f;
    },
    get: function(a, b) {
      var c = this.cache[this.key(a)];
      return void 0 === b ? c : c[b];
    },
    access: function(a, b, c) {
      var d;
      return void 0 === b || b && "string" == typeof b && void 0 === c ? (d = this.get(a, b), void 0 !== d ? d : this.get(a, n.camelCase(b))) : (this.set(a, b, c), void 0 !== c ? c : b);
    },
    remove: function(a, b) {
      var c,
          d,
          e,
          f = this.key(a),
          g = this.cache[f];
      if (void 0 === b)
        this.cache[f] = {};
      else {
        n.isArray(b) ? d = b.concat(b.map(n.camelCase)) : (e = n.camelCase(b), b in g ? d = [b, e] : (d = e, d = d in g ? [d] : d.match(E) || [])), c = d.length;
        while (c--)
          delete g[d[c]];
      }
    },
    hasData: function(a) {
      return !n.isEmptyObject(this.cache[a[this.expando]] || {});
    },
    discard: function(a) {
      a[this.expando] && delete this.cache[a[this.expando]];
    }
  };
  var L = new K,
      M = new K,
      N = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
      O = /([A-Z])/g;
  function P(a, b, c) {
    var d;
    if (void 0 === c && 1 === a.nodeType)
      if (d = "data-" + b.replace(O, "-$1").toLowerCase(), c = a.getAttribute(d), "string" == typeof c) {
        try {
          c = "true" === c ? !0 : "false" === c ? !1 : "null" === c ? null : +c + "" === c ? +c : N.test(c) ? n.parseJSON(c) : c;
        } catch (e) {}
        M.set(a, b, c);
      } else
        c = void 0;
    return c;
  }
  n.extend({
    hasData: function(a) {
      return M.hasData(a) || L.hasData(a);
    },
    data: function(a, b, c) {
      return M.access(a, b, c);
    },
    removeData: function(a, b) {
      M.remove(a, b);
    },
    _data: function(a, b, c) {
      return L.access(a, b, c);
    },
    _removeData: function(a, b) {
      L.remove(a, b);
    }
  }), n.fn.extend({
    data: function(a, b) {
      var c,
          d,
          e,
          f = this[0],
          g = f && f.attributes;
      if (void 0 === a) {
        if (this.length && (e = M.get(f), 1 === f.nodeType && !L.get(f, "hasDataAttrs"))) {
          c = g.length;
          while (c--)
            g[c] && (d = g[c].name, 0 === d.indexOf("data-") && (d = n.camelCase(d.slice(5)), P(f, d, e[d])));
          L.set(f, "hasDataAttrs", !0);
        }
        return e;
      }
      return "object" == typeof a ? this.each(function() {
        M.set(this, a);
      }) : J(this, function(b) {
        var c,
            d = n.camelCase(a);
        if (f && void 0 === b) {
          if (c = M.get(f, a), void 0 !== c)
            return c;
          if (c = M.get(f, d), void 0 !== c)
            return c;
          if (c = P(f, d, void 0), void 0 !== c)
            return c;
        } else
          this.each(function() {
            var c = M.get(this, d);
            M.set(this, d, b), -1 !== a.indexOf("-") && void 0 !== c && M.set(this, a, b);
          });
      }, null, b, arguments.length > 1, null, !0);
    },
    removeData: function(a) {
      return this.each(function() {
        M.remove(this, a);
      });
    }
  }), n.extend({
    queue: function(a, b, c) {
      var d;
      return a ? (b = (b || "fx") + "queue", d = L.get(a, b), c && (!d || n.isArray(c) ? d = L.access(a, b, n.makeArray(c)) : d.push(c)), d || []) : void 0;
    },
    dequeue: function(a, b) {
      b = b || "fx";
      var c = n.queue(a, b),
          d = c.length,
          e = c.shift(),
          f = n._queueHooks(a, b),
          g = function() {
            n.dequeue(a, b);
          };
      "inprogress" === e && (e = c.shift(), d--), e && ("fx" === b && c.unshift("inprogress"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire();
    },
    _queueHooks: function(a, b) {
      var c = b + "queueHooks";
      return L.get(a, c) || L.access(a, c, {empty: n.Callbacks("once memory").add(function() {
          L.remove(a, [b + "queue", c]);
        })});
    }
  }), n.fn.extend({
    queue: function(a, b) {
      var c = 2;
      return "string" != typeof a && (b = a, a = "fx", c--), arguments.length < c ? n.queue(this[0], a) : void 0 === b ? this : this.each(function() {
        var c = n.queue(this, a, b);
        n._queueHooks(this, a), "fx" === a && "inprogress" !== c[0] && n.dequeue(this, a);
      });
    },
    dequeue: function(a) {
      return this.each(function() {
        n.dequeue(this, a);
      });
    },
    clearQueue: function(a) {
      return this.queue(a || "fx", []);
    },
    promise: function(a, b) {
      var c,
          d = 1,
          e = n.Deferred(),
          f = this,
          g = this.length,
          h = function() {
            --d || e.resolveWith(f, [f]);
          };
      "string" != typeof a && (b = a, a = void 0), a = a || "fx";
      while (g--)
        c = L.get(f[g], a + "queueHooks"), c && c.empty && (d++, c.empty.add(h));
      return h(), e.promise(b);
    }
  });
  var Q = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,
      R = ["Top", "Right", "Bottom", "Left"],
      S = function(a, b) {
        return a = b || a, "none" === n.css(a, "display") || !n.contains(a.ownerDocument, a);
      },
      T = /^(?:checkbox|radio)$/i;
  !function() {
    var a = l.createDocumentFragment(),
        b = a.appendChild(l.createElement("div")),
        c = l.createElement("input");
    c.setAttribute("type", "radio"), c.setAttribute("checked", "checked"), c.setAttribute("name", "t"), b.appendChild(c), k.checkClone = b.cloneNode(!0).cloneNode(!0).lastChild.checked, b.innerHTML = "<textarea>x</textarea>", k.noCloneChecked = !!b.cloneNode(!0).lastChild.defaultValue;
  }();
  var U = "undefined";
  k.focusinBubbles = "onfocusin" in a;
  var V = /^key/,
      W = /^(?:mouse|pointer|contextmenu)|click/,
      X = /^(?:focusinfocus|focusoutblur)$/,
      Y = /^([^.]*)(?:\.(.+)|)$/;
  function Z() {
    return !0;
  }
  function $() {
    return !1;
  }
  function _() {
    try {
      return l.activeElement;
    } catch (a) {}
  }
  n.event = {
    global: {},
    add: function(a, b, c, d, e) {
      var f,
          g,
          h,
          i,
          j,
          k,
          l,
          m,
          o,
          p,
          q,
          r = L.get(a);
      if (r) {
        c.handler && (f = c, c = f.handler, e = f.selector), c.guid || (c.guid = n.guid++), (i = r.events) || (i = r.events = {}), (g = r.handle) || (g = r.handle = function(b) {
          return typeof n !== U && n.event.triggered !== b.type ? n.event.dispatch.apply(a, arguments) : void 0;
        }), b = (b || "").match(E) || [""], j = b.length;
        while (j--)
          h = Y.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), o && (l = n.event.special[o] || {}, o = (e ? l.delegateType : l.bindType) || o, l = n.event.special[o] || {}, k = n.extend({
            type: o,
            origType: q,
            data: d,
            handler: c,
            guid: c.guid,
            selector: e,
            needsContext: e && n.expr.match.needsContext.test(e),
            namespace: p.join(".")
          }, f), (m = i[o]) || (m = i[o] = [], m.delegateCount = 0, l.setup && l.setup.call(a, d, p, g) !== !1 || a.addEventListener && a.addEventListener(o, g, !1)), l.add && (l.add.call(a, k), k.handler.guid || (k.handler.guid = c.guid)), e ? m.splice(m.delegateCount++, 0, k) : m.push(k), n.event.global[o] = !0);
      }
    },
    remove: function(a, b, c, d, e) {
      var f,
          g,
          h,
          i,
          j,
          k,
          l,
          m,
          o,
          p,
          q,
          r = L.hasData(a) && L.get(a);
      if (r && (i = r.events)) {
        b = (b || "").match(E) || [""], j = b.length;
        while (j--)
          if (h = Y.exec(b[j]) || [], o = q = h[1], p = (h[2] || "").split(".").sort(), o) {
            l = n.event.special[o] || {}, o = (d ? l.delegateType : l.bindType) || o, m = i[o] || [], h = h[2] && new RegExp("(^|\\.)" + p.join("\\.(?:.*\\.|)") + "(\\.|$)"), g = f = m.length;
            while (f--)
              k = m[f], !e && q !== k.origType || c && c.guid !== k.guid || h && !h.test(k.namespace) || d && d !== k.selector && ("**" !== d || !k.selector) || (m.splice(f, 1), k.selector && m.delegateCount--, l.remove && l.remove.call(a, k));
            g && !m.length && (l.teardown && l.teardown.call(a, p, r.handle) !== !1 || n.removeEvent(a, o, r.handle), delete i[o]);
          } else
            for (o in i)
              n.event.remove(a, o + b[j], c, d, !0);
        n.isEmptyObject(i) && (delete r.handle, L.remove(a, "events"));
      }
    },
    trigger: function(b, c, d, e) {
      var f,
          g,
          h,
          i,
          k,
          m,
          o,
          p = [d || l],
          q = j.call(b, "type") ? b.type : b,
          r = j.call(b, "namespace") ? b.namespace.split(".") : [];
      if (g = h = d = d || l, 3 !== d.nodeType && 8 !== d.nodeType && !X.test(q + n.event.triggered) && (q.indexOf(".") >= 0 && (r = q.split("."), q = r.shift(), r.sort()), k = q.indexOf(":") < 0 && "on" + q, b = b[n.expando] ? b : new n.Event(q, "object" == typeof b && b), b.isTrigger = e ? 2 : 3, b.namespace = r.join("."), b.namespace_re = b.namespace ? new RegExp("(^|\\.)" + r.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, b.result = void 0, b.target || (b.target = d), c = null == c ? [b] : n.makeArray(c, [b]), o = n.event.special[q] || {}, e || !o.trigger || o.trigger.apply(d, c) !== !1)) {
        if (!e && !o.noBubble && !n.isWindow(d)) {
          for (i = o.delegateType || q, X.test(i + q) || (g = g.parentNode); g; g = g.parentNode)
            p.push(g), h = g;
          h === (d.ownerDocument || l) && p.push(h.defaultView || h.parentWindow || a);
        }
        f = 0;
        while ((g = p[f++]) && !b.isPropagationStopped())
          b.type = f > 1 ? i : o.bindType || q, m = (L.get(g, "events") || {})[b.type] && L.get(g, "handle"), m && m.apply(g, c), m = k && g[k], m && m.apply && n.acceptData(g) && (b.result = m.apply(g, c), b.result === !1 && b.preventDefault());
        return b.type = q, e || b.isDefaultPrevented() || o._default && o._default.apply(p.pop(), c) !== !1 || !n.acceptData(d) || k && n.isFunction(d[q]) && !n.isWindow(d) && (h = d[k], h && (d[k] = null), n.event.triggered = q, d[q](), n.event.triggered = void 0, h && (d[k] = h)), b.result;
      }
    },
    dispatch: function(a) {
      a = n.event.fix(a);
      var b,
          c,
          e,
          f,
          g,
          h = [],
          i = d.call(arguments),
          j = (L.get(this, "events") || {})[a.type] || [],
          k = n.event.special[a.type] || {};
      if (i[0] = a, a.delegateTarget = this, !k.preDispatch || k.preDispatch.call(this, a) !== !1) {
        h = n.event.handlers.call(this, a, j), b = 0;
        while ((f = h[b++]) && !a.isPropagationStopped()) {
          a.currentTarget = f.elem, c = 0;
          while ((g = f.handlers[c++]) && !a.isImmediatePropagationStopped())
            (!a.namespace_re || a.namespace_re.test(g.namespace)) && (a.handleObj = g, a.data = g.data, e = ((n.event.special[g.origType] || {}).handle || g.handler).apply(f.elem, i), void 0 !== e && (a.result = e) === !1 && (a.preventDefault(), a.stopPropagation()));
        }
        return k.postDispatch && k.postDispatch.call(this, a), a.result;
      }
    },
    handlers: function(a, b) {
      var c,
          d,
          e,
          f,
          g = [],
          h = b.delegateCount,
          i = a.target;
      if (h && i.nodeType && (!a.button || "click" !== a.type))
        for (; i !== this; i = i.parentNode || this)
          if (i.disabled !== !0 || "click" !== a.type) {
            for (d = [], c = 0; h > c; c++)
              f = b[c], e = f.selector + " ", void 0 === d[e] && (d[e] = f.needsContext ? n(e, this).index(i) >= 0 : n.find(e, this, null, [i]).length), d[e] && d.push(f);
            d.length && g.push({
              elem: i,
              handlers: d
            });
          }
      return h < b.length && g.push({
        elem: this,
        handlers: b.slice(h)
      }), g;
    },
    props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
    fixHooks: {},
    keyHooks: {
      props: "char charCode key keyCode".split(" "),
      filter: function(a, b) {
        return null == a.which && (a.which = null != b.charCode ? b.charCode : b.keyCode), a;
      }
    },
    mouseHooks: {
      props: "button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
      filter: function(a, b) {
        var c,
            d,
            e,
            f = b.button;
        return null == a.pageX && null != b.clientX && (c = a.target.ownerDocument || l, d = c.documentElement, e = c.body, a.pageX = b.clientX + (d && d.scrollLeft || e && e.scrollLeft || 0) - (d && d.clientLeft || e && e.clientLeft || 0), a.pageY = b.clientY + (d && d.scrollTop || e && e.scrollTop || 0) - (d && d.clientTop || e && e.clientTop || 0)), a.which || void 0 === f || (a.which = 1 & f ? 1 : 2 & f ? 3 : 4 & f ? 2 : 0), a;
      }
    },
    fix: function(a) {
      if (a[n.expando])
        return a;
      var b,
          c,
          d,
          e = a.type,
          f = a,
          g = this.fixHooks[e];
      g || (this.fixHooks[e] = g = W.test(e) ? this.mouseHooks : V.test(e) ? this.keyHooks : {}), d = g.props ? this.props.concat(g.props) : this.props, a = new n.Event(f), b = d.length;
      while (b--)
        c = d[b], a[c] = f[c];
      return a.target || (a.target = l), 3 === a.target.nodeType && (a.target = a.target.parentNode), g.filter ? g.filter(a, f) : a;
    },
    special: {
      load: {noBubble: !0},
      focus: {
        trigger: function() {
          return this !== _() && this.focus ? (this.focus(), !1) : void 0;
        },
        delegateType: "focusin"
      },
      blur: {
        trigger: function() {
          return this === _() && this.blur ? (this.blur(), !1) : void 0;
        },
        delegateType: "focusout"
      },
      click: {
        trigger: function() {
          return "checkbox" === this.type && this.click && n.nodeName(this, "input") ? (this.click(), !1) : void 0;
        },
        _default: function(a) {
          return n.nodeName(a.target, "a");
        }
      },
      beforeunload: {postDispatch: function(a) {
          void 0 !== a.result && a.originalEvent && (a.originalEvent.returnValue = a.result);
        }}
    },
    simulate: function(a, b, c, d) {
      var e = n.extend(new n.Event, c, {
        type: a,
        isSimulated: !0,
        originalEvent: {}
      });
      d ? n.event.trigger(e, null, b) : n.event.dispatch.call(b, e), e.isDefaultPrevented() && c.preventDefault();
    }
  }, n.removeEvent = function(a, b, c) {
    a.removeEventListener && a.removeEventListener(b, c, !1);
  }, n.Event = function(a, b) {
    return this instanceof n.Event ? (a && a.type ? (this.originalEvent = a, this.type = a.type, this.isDefaultPrevented = a.defaultPrevented || void 0 === a.defaultPrevented && a.returnValue === !1 ? Z : $) : this.type = a, b && n.extend(this, b), this.timeStamp = a && a.timeStamp || n.now(), void(this[n.expando] = !0)) : new n.Event(a, b);
  }, n.Event.prototype = {
    isDefaultPrevented: $,
    isPropagationStopped: $,
    isImmediatePropagationStopped: $,
    preventDefault: function() {
      var a = this.originalEvent;
      this.isDefaultPrevented = Z, a && a.preventDefault && a.preventDefault();
    },
    stopPropagation: function() {
      var a = this.originalEvent;
      this.isPropagationStopped = Z, a && a.stopPropagation && a.stopPropagation();
    },
    stopImmediatePropagation: function() {
      var a = this.originalEvent;
      this.isImmediatePropagationStopped = Z, a && a.stopImmediatePropagation && a.stopImmediatePropagation(), this.stopPropagation();
    }
  }, n.each({
    mouseenter: "mouseover",
    mouseleave: "mouseout",
    pointerenter: "pointerover",
    pointerleave: "pointerout"
  }, function(a, b) {
    n.event.special[a] = {
      delegateType: b,
      bindType: b,
      handle: function(a) {
        var c,
            d = this,
            e = a.relatedTarget,
            f = a.handleObj;
        return (!e || e !== d && !n.contains(d, e)) && (a.type = f.origType, c = f.handler.apply(this, arguments), a.type = b), c;
      }
    };
  }), k.focusinBubbles || n.each({
    focus: "focusin",
    blur: "focusout"
  }, function(a, b) {
    var c = function(a) {
      n.event.simulate(b, a.target, n.event.fix(a), !0);
    };
    n.event.special[b] = {
      setup: function() {
        var d = this.ownerDocument || this,
            e = L.access(d, b);
        e || d.addEventListener(a, c, !0), L.access(d, b, (e || 0) + 1);
      },
      teardown: function() {
        var d = this.ownerDocument || this,
            e = L.access(d, b) - 1;
        e ? L.access(d, b, e) : (d.removeEventListener(a, c, !0), L.remove(d, b));
      }
    };
  }), n.fn.extend({
    on: function(a, b, c, d, e) {
      var f,
          g;
      if ("object" == typeof a) {
        "string" != typeof b && (c = c || b, b = void 0);
        for (g in a)
          this.on(g, b, c, a[g], e);
        return this;
      }
      if (null == c && null == d ? (d = b, c = b = void 0) : null == d && ("string" == typeof b ? (d = c, c = void 0) : (d = c, c = b, b = void 0)), d === !1)
        d = $;
      else if (!d)
        return this;
      return 1 === e && (f = d, d = function(a) {
        return n().off(a), f.apply(this, arguments);
      }, d.guid = f.guid || (f.guid = n.guid++)), this.each(function() {
        n.event.add(this, a, d, c, b);
      });
    },
    one: function(a, b, c, d) {
      return this.on(a, b, c, d, 1);
    },
    off: function(a, b, c) {
      var d,
          e;
      if (a && a.preventDefault && a.handleObj)
        return d = a.handleObj, n(a.delegateTarget).off(d.namespace ? d.origType + "." + d.namespace : d.origType, d.selector, d.handler), this;
      if ("object" == typeof a) {
        for (e in a)
          this.off(e, b, a[e]);
        return this;
      }
      return (b === !1 || "function" == typeof b) && (c = b, b = void 0), c === !1 && (c = $), this.each(function() {
        n.event.remove(this, a, c, b);
      });
    },
    trigger: function(a, b) {
      return this.each(function() {
        n.event.trigger(a, b, this);
      });
    },
    triggerHandler: function(a, b) {
      var c = this[0];
      return c ? n.event.trigger(a, b, c, !0) : void 0;
    }
  });
  var aa = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
      ba = /<([\w:]+)/,
      ca = /<|&#?\w+;/,
      da = /<(?:script|style|link)/i,
      ea = /checked\s*(?:[^=]|=\s*.checked.)/i,
      fa = /^$|\/(?:java|ecma)script/i,
      ga = /^true\/(.*)/,
      ha = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
      ia = {
        option: [1, "<select multiple='multiple'>", "</select>"],
        thead: [1, "<table>", "</table>"],
        col: [2, "<table><colgroup>", "</colgroup></table>"],
        tr: [2, "<table><tbody>", "</tbody></table>"],
        td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
        _default: [0, "", ""]
      };
  ia.optgroup = ia.option, ia.tbody = ia.tfoot = ia.colgroup = ia.caption = ia.thead, ia.th = ia.td;
  function ja(a, b) {
    return n.nodeName(a, "table") && n.nodeName(11 !== b.nodeType ? b : b.firstChild, "tr") ? a.getElementsByTagName("tbody")[0] || a.appendChild(a.ownerDocument.createElement("tbody")) : a;
  }
  function ka(a) {
    return a.type = (null !== a.getAttribute("type")) + "/" + a.type, a;
  }
  function la(a) {
    var b = ga.exec(a.type);
    return b ? a.type = b[1] : a.removeAttribute("type"), a;
  }
  function ma(a, b) {
    for (var c = 0,
        d = a.length; d > c; c++)
      L.set(a[c], "globalEval", !b || L.get(b[c], "globalEval"));
  }
  function na(a, b) {
    var c,
        d,
        e,
        f,
        g,
        h,
        i,
        j;
    if (1 === b.nodeType) {
      if (L.hasData(a) && (f = L.access(a), g = L.set(b, f), j = f.events)) {
        delete g.handle, g.events = {};
        for (e in j)
          for (c = 0, d = j[e].length; d > c; c++)
            n.event.add(b, e, j[e][c]);
      }
      M.hasData(a) && (h = M.access(a), i = n.extend({}, h), M.set(b, i));
    }
  }
  function oa(a, b) {
    var c = a.getElementsByTagName ? a.getElementsByTagName(b || "*") : a.querySelectorAll ? a.querySelectorAll(b || "*") : [];
    return void 0 === b || b && n.nodeName(a, b) ? n.merge([a], c) : c;
  }
  function pa(a, b) {
    var c = b.nodeName.toLowerCase();
    "input" === c && T.test(a.type) ? b.checked = a.checked : ("input" === c || "textarea" === c) && (b.defaultValue = a.defaultValue);
  }
  n.extend({
    clone: function(a, b, c) {
      var d,
          e,
          f,
          g,
          h = a.cloneNode(!0),
          i = n.contains(a.ownerDocument, a);
      if (!(k.noCloneChecked || 1 !== a.nodeType && 11 !== a.nodeType || n.isXMLDoc(a)))
        for (g = oa(h), f = oa(a), d = 0, e = f.length; e > d; d++)
          pa(f[d], g[d]);
      if (b)
        if (c)
          for (f = f || oa(a), g = g || oa(h), d = 0, e = f.length; e > d; d++)
            na(f[d], g[d]);
        else
          na(a, h);
      return g = oa(h, "script"), g.length > 0 && ma(g, !i && oa(a, "script")), h;
    },
    buildFragment: function(a, b, c, d) {
      for (var e,
          f,
          g,
          h,
          i,
          j,
          k = b.createDocumentFragment(),
          l = [],
          m = 0,
          o = a.length; o > m; m++)
        if (e = a[m], e || 0 === e)
          if ("object" === n.type(e))
            n.merge(l, e.nodeType ? [e] : e);
          else if (ca.test(e)) {
            f = f || k.appendChild(b.createElement("div")), g = (ba.exec(e) || ["", ""])[1].toLowerCase(), h = ia[g] || ia._default, f.innerHTML = h[1] + e.replace(aa, "<$1></$2>") + h[2], j = h[0];
            while (j--)
              f = f.lastChild;
            n.merge(l, f.childNodes), f = k.firstChild, f.textContent = "";
          } else
            l.push(b.createTextNode(e));
      k.textContent = "", m = 0;
      while (e = l[m++])
        if ((!d || -1 === n.inArray(e, d)) && (i = n.contains(e.ownerDocument, e), f = oa(k.appendChild(e), "script"), i && ma(f), c)) {
          j = 0;
          while (e = f[j++])
            fa.test(e.type || "") && c.push(e);
        }
      return k;
    },
    cleanData: function(a) {
      for (var b,
          c,
          d,
          e,
          f = n.event.special,
          g = 0; void 0 !== (c = a[g]); g++) {
        if (n.acceptData(c) && (e = c[L.expando], e && (b = L.cache[e]))) {
          if (b.events)
            for (d in b.events)
              f[d] ? n.event.remove(c, d) : n.removeEvent(c, d, b.handle);
          L.cache[e] && delete L.cache[e];
        }
        delete M.cache[c[M.expando]];
      }
    }
  }), n.fn.extend({
    text: function(a) {
      return J(this, function(a) {
        return void 0 === a ? n.text(this) : this.empty().each(function() {
          (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && (this.textContent = a);
        });
      }, null, a, arguments.length);
    },
    append: function() {
      return this.domManip(arguments, function(a) {
        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
          var b = ja(this, a);
          b.appendChild(a);
        }
      });
    },
    prepend: function() {
      return this.domManip(arguments, function(a) {
        if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {
          var b = ja(this, a);
          b.insertBefore(a, b.firstChild);
        }
      });
    },
    before: function() {
      return this.domManip(arguments, function(a) {
        this.parentNode && this.parentNode.insertBefore(a, this);
      });
    },
    after: function() {
      return this.domManip(arguments, function(a) {
        this.parentNode && this.parentNode.insertBefore(a, this.nextSibling);
      });
    },
    remove: function(a, b) {
      for (var c,
          d = a ? n.filter(a, this) : this,
          e = 0; null != (c = d[e]); e++)
        b || 1 !== c.nodeType || n.cleanData(oa(c)), c.parentNode && (b && n.contains(c.ownerDocument, c) && ma(oa(c, "script")), c.parentNode.removeChild(c));
      return this;
    },
    empty: function() {
      for (var a,
          b = 0; null != (a = this[b]); b++)
        1 === a.nodeType && (n.cleanData(oa(a, !1)), a.textContent = "");
      return this;
    },
    clone: function(a, b) {
      return a = null == a ? !1 : a, b = null == b ? a : b, this.map(function() {
        return n.clone(this, a, b);
      });
    },
    html: function(a) {
      return J(this, function(a) {
        var b = this[0] || {},
            c = 0,
            d = this.length;
        if (void 0 === a && 1 === b.nodeType)
          return b.innerHTML;
        if ("string" == typeof a && !da.test(a) && !ia[(ba.exec(a) || ["", ""])[1].toLowerCase()]) {
          a = a.replace(aa, "<$1></$2>");
          try {
            for (; d > c; c++)
              b = this[c] || {}, 1 === b.nodeType && (n.cleanData(oa(b, !1)), b.innerHTML = a);
            b = 0;
          } catch (e) {}
        }
        b && this.empty().append(a);
      }, null, a, arguments.length);
    },
    replaceWith: function() {
      var a = arguments[0];
      return this.domManip(arguments, function(b) {
        a = this.parentNode, n.cleanData(oa(this)), a && a.replaceChild(b, this);
      }), a && (a.length || a.nodeType) ? this : this.remove();
    },
    detach: function(a) {
      return this.remove(a, !0);
    },
    domManip: function(a, b) {
      a = e.apply([], a);
      var c,
          d,
          f,
          g,
          h,
          i,
          j = 0,
          l = this.length,
          m = this,
          o = l - 1,
          p = a[0],
          q = n.isFunction(p);
      if (q || l > 1 && "string" == typeof p && !k.checkClone && ea.test(p))
        return this.each(function(c) {
          var d = m.eq(c);
          q && (a[0] = p.call(this, c, d.html())), d.domManip(a, b);
        });
      if (l && (c = n.buildFragment(a, this[0].ownerDocument, !1, this), d = c.firstChild, 1 === c.childNodes.length && (c = d), d)) {
        for (f = n.map(oa(c, "script"), ka), g = f.length; l > j; j++)
          h = c, j !== o && (h = n.clone(h, !0, !0), g && n.merge(f, oa(h, "script"))), b.call(this[j], h, j);
        if (g)
          for (i = f[f.length - 1].ownerDocument, n.map(f, la), j = 0; g > j; j++)
            h = f[j], fa.test(h.type || "") && !L.access(h, "globalEval") && n.contains(i, h) && (h.src ? n._evalUrl && n._evalUrl(h.src) : n.globalEval(h.textContent.replace(ha, "")));
      }
      return this;
    }
  }), n.each({
    appendTo: "append",
    prependTo: "prepend",
    insertBefore: "before",
    insertAfter: "after",
    replaceAll: "replaceWith"
  }, function(a, b) {
    n.fn[a] = function(a) {
      for (var c,
          d = [],
          e = n(a),
          g = e.length - 1,
          h = 0; g >= h; h++)
        c = h === g ? this : this.clone(!0), n(e[h])[b](c), f.apply(d, c.get());
      return this.pushStack(d);
    };
  });
  var qa,
      ra = {};
  function sa(b, c) {
    var d,
        e = n(c.createElement(b)).appendTo(c.body),
        f = a.getDefaultComputedStyle && (d = a.getDefaultComputedStyle(e[0])) ? d.display : n.css(e[0], "display");
    return e.detach(), f;
  }
  function ta(a) {
    var b = l,
        c = ra[a];
    return c || (c = sa(a, b), "none" !== c && c || (qa = (qa || n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement), b = qa[0].contentDocument, b.write(), b.close(), c = sa(a, b), qa.detach()), ra[a] = c), c;
  }
  var ua = /^margin/,
      va = new RegExp("^(" + Q + ")(?!px)[a-z%]+$", "i"),
      wa = function(b) {
        return b.ownerDocument.defaultView.opener ? b.ownerDocument.defaultView.getComputedStyle(b, null) : a.getComputedStyle(b, null);
      };
  function xa(a, b, c) {
    var d,
        e,
        f,
        g,
        h = a.style;
    return c = c || wa(a), c && (g = c.getPropertyValue(b) || c[b]), c && ("" !== g || n.contains(a.ownerDocument, a) || (g = n.style(a, b)), va.test(g) && ua.test(b) && (d = h.width, e = h.minWidth, f = h.maxWidth, h.minWidth = h.maxWidth = h.width = g, g = c.width, h.width = d, h.minWidth = e, h.maxWidth = f)), void 0 !== g ? g + "" : g;
  }
  function ya(a, b) {
    return {get: function() {
        return a() ? void delete this.get : (this.get = b).apply(this, arguments);
      }};
  }
  !function() {
    var b,
        c,
        d = l.documentElement,
        e = l.createElement("div"),
        f = l.createElement("div");
    if (f.style) {
      f.style.backgroundClip = "content-box", f.cloneNode(!0).style.backgroundClip = "", k.clearCloneStyle = "content-box" === f.style.backgroundClip, e.style.cssText = "border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute", e.appendChild(f);
      function g() {
        f.style.cssText = "-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute", f.innerHTML = "", d.appendChild(e);
        var g = a.getComputedStyle(f, null);
        b = "1%" !== g.top, c = "4px" === g.width, d.removeChild(e);
      }
      a.getComputedStyle && n.extend(k, {
        pixelPosition: function() {
          return g(), b;
        },
        boxSizingReliable: function() {
          return null == c && g(), c;
        },
        reliableMarginRight: function() {
          var b,
              c = f.appendChild(l.createElement("div"));
          return c.style.cssText = f.style.cssText = "-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0", c.style.marginRight = c.style.width = "0", f.style.width = "1px", d.appendChild(e), b = !parseFloat(a.getComputedStyle(c, null).marginRight), d.removeChild(e), f.removeChild(c), b;
        }
      });
    }
  }(), n.swap = function(a, b, c, d) {
    var e,
        f,
        g = {};
    for (f in b)
      g[f] = a.style[f], a.style[f] = b[f];
    e = c.apply(a, d || []);
    for (f in b)
      a.style[f] = g[f];
    return e;
  };
  var za = /^(none|table(?!-c[ea]).+)/,
      Aa = new RegExp("^(" + Q + ")(.*)$", "i"),
      Ba = new RegExp("^([+-])=(" + Q + ")", "i"),
      Ca = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
      },
      Da = {
        letterSpacing: "0",
        fontWeight: "400"
      },
      Ea = ["Webkit", "O", "Moz", "ms"];
  function Fa(a, b) {
    if (b in a)
      return b;
    var c = b[0].toUpperCase() + b.slice(1),
        d = b,
        e = Ea.length;
    while (e--)
      if (b = Ea[e] + c, b in a)
        return b;
    return d;
  }
  function Ga(a, b, c) {
    var d = Aa.exec(b);
    return d ? Math.max(0, d[1] - (c || 0)) + (d[2] || "px") : b;
  }
  function Ha(a, b, c, d, e) {
    for (var f = c === (d ? "border" : "content") ? 4 : "width" === b ? 1 : 0,
        g = 0; 4 > f; f += 2)
      "margin" === c && (g += n.css(a, c + R[f], !0, e)), d ? ("content" === c && (g -= n.css(a, "padding" + R[f], !0, e)), "margin" !== c && (g -= n.css(a, "border" + R[f] + "Width", !0, e))) : (g += n.css(a, "padding" + R[f], !0, e), "padding" !== c && (g += n.css(a, "border" + R[f] + "Width", !0, e)));
    return g;
  }
  function Ia(a, b, c) {
    var d = !0,
        e = "width" === b ? a.offsetWidth : a.offsetHeight,
        f = wa(a),
        g = "border-box" === n.css(a, "boxSizing", !1, f);
    if (0 >= e || null == e) {
      if (e = xa(a, b, f), (0 > e || null == e) && (e = a.style[b]), va.test(e))
        return e;
      d = g && (k.boxSizingReliable() || e === a.style[b]), e = parseFloat(e) || 0;
    }
    return e + Ha(a, b, c || (g ? "border" : "content"), d, f) + "px";
  }
  function Ja(a, b) {
    for (var c,
        d,
        e,
        f = [],
        g = 0,
        h = a.length; h > g; g++)
      d = a[g], d.style && (f[g] = L.get(d, "olddisplay"), c = d.style.display, b ? (f[g] || "none" !== c || (d.style.display = ""), "" === d.style.display && S(d) && (f[g] = L.access(d, "olddisplay", ta(d.nodeName)))) : (e = S(d), "none" === c && e || L.set(d, "olddisplay", e ? c : n.css(d, "display"))));
    for (g = 0; h > g; g++)
      d = a[g], d.style && (b && "none" !== d.style.display && "" !== d.style.display || (d.style.display = b ? f[g] || "" : "none"));
    return a;
  }
  n.extend({
    cssHooks: {opacity: {get: function(a, b) {
          if (b) {
            var c = xa(a, "opacity");
            return "" === c ? "1" : c;
          }
        }}},
    cssNumber: {
      columnCount: !0,
      fillOpacity: !0,
      flexGrow: !0,
      flexShrink: !0,
      fontWeight: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0
    },
    cssProps: {"float": "cssFloat"},
    style: function(a, b, c, d) {
      if (a && 3 !== a.nodeType && 8 !== a.nodeType && a.style) {
        var e,
            f,
            g,
            h = n.camelCase(b),
            i = a.style;
        return b = n.cssProps[h] || (n.cssProps[h] = Fa(i, h)), g = n.cssHooks[b] || n.cssHooks[h], void 0 === c ? g && "get" in g && void 0 !== (e = g.get(a, !1, d)) ? e : i[b] : (f = typeof c, "string" === f && (e = Ba.exec(c)) && (c = (e[1] + 1) * e[2] + parseFloat(n.css(a, b)), f = "number"), null != c && c === c && ("number" !== f || n.cssNumber[h] || (c += "px"), k.clearCloneStyle || "" !== c || 0 !== b.indexOf("background") || (i[b] = "inherit"), g && "set" in g && void 0 === (c = g.set(a, c, d)) || (i[b] = c)), void 0);
      }
    },
    css: function(a, b, c, d) {
      var e,
          f,
          g,
          h = n.camelCase(b);
      return b = n.cssProps[h] || (n.cssProps[h] = Fa(a.style, h)), g = n.cssHooks[b] || n.cssHooks[h], g && "get" in g && (e = g.get(a, !0, c)), void 0 === e && (e = xa(a, b, d)), "normal" === e && b in Da && (e = Da[b]), "" === c || c ? (f = parseFloat(e), c === !0 || n.isNumeric(f) ? f || 0 : e) : e;
    }
  }), n.each(["height", "width"], function(a, b) {
    n.cssHooks[b] = {
      get: function(a, c, d) {
        return c ? za.test(n.css(a, "display")) && 0 === a.offsetWidth ? n.swap(a, Ca, function() {
          return Ia(a, b, d);
        }) : Ia(a, b, d) : void 0;
      },
      set: function(a, c, d) {
        var e = d && wa(a);
        return Ga(a, c, d ? Ha(a, b, d, "border-box" === n.css(a, "boxSizing", !1, e), e) : 0);
      }
    };
  }), n.cssHooks.marginRight = ya(k.reliableMarginRight, function(a, b) {
    return b ? n.swap(a, {display: "inline-block"}, xa, [a, "marginRight"]) : void 0;
  }), n.each({
    margin: "",
    padding: "",
    border: "Width"
  }, function(a, b) {
    n.cssHooks[a + b] = {expand: function(c) {
        for (var d = 0,
            e = {},
            f = "string" == typeof c ? c.split(" ") : [c]; 4 > d; d++)
          e[a + R[d] + b] = f[d] || f[d - 2] || f[0];
        return e;
      }}, ua.test(a) || (n.cssHooks[a + b].set = Ga);
  }), n.fn.extend({
    css: function(a, b) {
      return J(this, function(a, b, c) {
        var d,
            e,
            f = {},
            g = 0;
        if (n.isArray(b)) {
          for (d = wa(a), e = b.length; e > g; g++)
            f[b[g]] = n.css(a, b[g], !1, d);
          return f;
        }
        return void 0 !== c ? n.style(a, b, c) : n.css(a, b);
      }, a, b, arguments.length > 1);
    },
    show: function() {
      return Ja(this, !0);
    },
    hide: function() {
      return Ja(this);
    },
    toggle: function(a) {
      return "boolean" == typeof a ? a ? this.show() : this.hide() : this.each(function() {
        S(this) ? n(this).show() : n(this).hide();
      });
    }
  });
  function Ka(a, b, c, d, e) {
    return new Ka.prototype.init(a, b, c, d, e);
  }
  n.Tween = Ka, Ka.prototype = {
    constructor: Ka,
    init: function(a, b, c, d, e, f) {
      this.elem = a, this.prop = c, this.easing = e || "swing", this.options = b, this.start = this.now = this.cur(), this.end = d, this.unit = f || (n.cssNumber[c] ? "" : "px");
    },
    cur: function() {
      var a = Ka.propHooks[this.prop];
      return a && a.get ? a.get(this) : Ka.propHooks._default.get(this);
    },
    run: function(a) {
      var b,
          c = Ka.propHooks[this.prop];
      return this.options.duration ? this.pos = b = n.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a, this.now = (this.end - this.start) * b + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), c && c.set ? c.set(this) : Ka.propHooks._default.set(this), this;
    }
  }, Ka.prototype.init.prototype = Ka.prototype, Ka.propHooks = {_default: {
      get: function(a) {
        var b;
        return null == a.elem[a.prop] || a.elem.style && null != a.elem.style[a.prop] ? (b = n.css(a.elem, a.prop, ""), b && "auto" !== b ? b : 0) : a.elem[a.prop];
      },
      set: function(a) {
        n.fx.step[a.prop] ? n.fx.step[a.prop](a) : a.elem.style && (null != a.elem.style[n.cssProps[a.prop]] || n.cssHooks[a.prop]) ? n.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now;
      }
    }}, Ka.propHooks.scrollTop = Ka.propHooks.scrollLeft = {set: function(a) {
      a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now);
    }}, n.easing = {
    linear: function(a) {
      return a;
    },
    swing: function(a) {
      return .5 - Math.cos(a * Math.PI) / 2;
    }
  }, n.fx = Ka.prototype.init, n.fx.step = {};
  var La,
      Ma,
      Na = /^(?:toggle|show|hide)$/,
      Oa = new RegExp("^(?:([+-])=|)(" + Q + ")([a-z%]*)$", "i"),
      Pa = /queueHooks$/,
      Qa = [Va],
      Ra = {"*": [function(a, b) {
          var c = this.createTween(a, b),
              d = c.cur(),
              e = Oa.exec(b),
              f = e && e[3] || (n.cssNumber[a] ? "" : "px"),
              g = (n.cssNumber[a] || "px" !== f && +d) && Oa.exec(n.css(c.elem, a)),
              h = 1,
              i = 20;
          if (g && g[3] !== f) {
            f = f || g[3], e = e || [], g = +d || 1;
            do
              h = h || ".5", g /= h, n.style(c.elem, a, g + f);
 while (h !== (h = c.cur() / d) && 1 !== h && --i);
          }
          return e && (g = c.start = +g || +d || 0, c.unit = f, c.end = e[1] ? g + (e[1] + 1) * e[2] : +e[2]), c;
        }]};
  function Sa() {
    return setTimeout(function() {
      La = void 0;
    }), La = n.now();
  }
  function Ta(a, b) {
    var c,
        d = 0,
        e = {height: a};
    for (b = b ? 1 : 0; 4 > d; d += 2 - b)
      c = R[d], e["margin" + c] = e["padding" + c] = a;
    return b && (e.opacity = e.width = a), e;
  }
  function Ua(a, b, c) {
    for (var d,
        e = (Ra[b] || []).concat(Ra["*"]),
        f = 0,
        g = e.length; g > f; f++)
      if (d = e[f].call(c, b, a))
        return d;
  }
  function Va(a, b, c) {
    var d,
        e,
        f,
        g,
        h,
        i,
        j,
        k,
        l = this,
        m = {},
        o = a.style,
        p = a.nodeType && S(a),
        q = L.get(a, "fxshow");
    c.queue || (h = n._queueHooks(a, "fx"), null == h.unqueued && (h.unqueued = 0, i = h.empty.fire, h.empty.fire = function() {
      h.unqueued || i();
    }), h.unqueued++, l.always(function() {
      l.always(function() {
        h.unqueued--, n.queue(a, "fx").length || h.empty.fire();
      });
    })), 1 === a.nodeType && ("height" in b || "width" in b) && (c.overflow = [o.overflow, o.overflowX, o.overflowY], j = n.css(a, "display"), k = "none" === j ? L.get(a, "olddisplay") || ta(a.nodeName) : j, "inline" === k && "none" === n.css(a, "float") && (o.display = "inline-block")), c.overflow && (o.overflow = "hidden", l.always(function() {
      o.overflow = c.overflow[0], o.overflowX = c.overflow[1], o.overflowY = c.overflow[2];
    }));
    for (d in b)
      if (e = b[d], Na.exec(e)) {
        if (delete b[d], f = f || "toggle" === e, e === (p ? "hide" : "show")) {
          if ("show" !== e || !q || void 0 === q[d])
            continue;
          p = !0;
        }
        m[d] = q && q[d] || n.style(a, d);
      } else
        j = void 0;
    if (n.isEmptyObject(m))
      "inline" === ("none" === j ? ta(a.nodeName) : j) && (o.display = j);
    else {
      q ? "hidden" in q && (p = q.hidden) : q = L.access(a, "fxshow", {}), f && (q.hidden = !p), p ? n(a).show() : l.done(function() {
        n(a).hide();
      }), l.done(function() {
        var b;
        L.remove(a, "fxshow");
        for (b in m)
          n.style(a, b, m[b]);
      });
      for (d in m)
        g = Ua(p ? q[d] : 0, d, l), d in q || (q[d] = g.start, p && (g.end = g.start, g.start = "width" === d || "height" === d ? 1 : 0));
    }
  }
  function Wa(a, b) {
    var c,
        d,
        e,
        f,
        g;
    for (c in a)
      if (d = n.camelCase(c), e = b[d], f = a[c], n.isArray(f) && (e = f[1], f = a[c] = f[0]), c !== d && (a[d] = f, delete a[c]), g = n.cssHooks[d], g && "expand" in g) {
        f = g.expand(f), delete a[d];
        for (c in f)
          c in a || (a[c] = f[c], b[c] = e);
      } else
        b[d] = e;
  }
  function Xa(a, b, c) {
    var d,
        e,
        f = 0,
        g = Qa.length,
        h = n.Deferred().always(function() {
          delete i.elem;
        }),
        i = function() {
          if (e)
            return !1;
          for (var b = La || Sa(),
              c = Math.max(0, j.startTime + j.duration - b),
              d = c / j.duration || 0,
              f = 1 - d,
              g = 0,
              i = j.tweens.length; i > g; g++)
            j.tweens[g].run(f);
          return h.notifyWith(a, [j, f, c]), 1 > f && i ? c : (h.resolveWith(a, [j]), !1);
        },
        j = h.promise({
          elem: a,
          props: n.extend({}, b),
          opts: n.extend(!0, {specialEasing: {}}, c),
          originalProperties: b,
          originalOptions: c,
          startTime: La || Sa(),
          duration: c.duration,
          tweens: [],
          createTween: function(b, c) {
            var d = n.Tween(a, j.opts, b, c, j.opts.specialEasing[b] || j.opts.easing);
            return j.tweens.push(d), d;
          },
          stop: function(b) {
            var c = 0,
                d = b ? j.tweens.length : 0;
            if (e)
              return this;
            for (e = !0; d > c; c++)
              j.tweens[c].run(1);
            return b ? h.resolveWith(a, [j, b]) : h.rejectWith(a, [j, b]), this;
          }
        }),
        k = j.props;
    for (Wa(k, j.opts.specialEasing); g > f; f++)
      if (d = Qa[f].call(j, a, k, j.opts))
        return d;
    return n.map(k, Ua, j), n.isFunction(j.opts.start) && j.opts.start.call(a, j), n.fx.timer(n.extend(i, {
      elem: a,
      anim: j,
      queue: j.opts.queue
    })), j.progress(j.opts.progress).done(j.opts.done, j.opts.complete).fail(j.opts.fail).always(j.opts.always);
  }
  n.Animation = n.extend(Xa, {
    tweener: function(a, b) {
      n.isFunction(a) ? (b = a, a = ["*"]) : a = a.split(" ");
      for (var c,
          d = 0,
          e = a.length; e > d; d++)
        c = a[d], Ra[c] = Ra[c] || [], Ra[c].unshift(b);
    },
    prefilter: function(a, b) {
      b ? Qa.unshift(a) : Qa.push(a);
    }
  }), n.speed = function(a, b, c) {
    var d = a && "object" == typeof a ? n.extend({}, a) : {
      complete: c || !c && b || n.isFunction(a) && a,
      duration: a,
      easing: c && b || b && !n.isFunction(b) && b
    };
    return d.duration = n.fx.off ? 0 : "number" == typeof d.duration ? d.duration : d.duration in n.fx.speeds ? n.fx.speeds[d.duration] : n.fx.speeds._default, (null == d.queue || d.queue === !0) && (d.queue = "fx"), d.old = d.complete, d.complete = function() {
      n.isFunction(d.old) && d.old.call(this), d.queue && n.dequeue(this, d.queue);
    }, d;
  }, n.fn.extend({
    fadeTo: function(a, b, c, d) {
      return this.filter(S).css("opacity", 0).show().end().animate({opacity: b}, a, c, d);
    },
    animate: function(a, b, c, d) {
      var e = n.isEmptyObject(a),
          f = n.speed(b, c, d),
          g = function() {
            var b = Xa(this, n.extend({}, a), f);
            (e || L.get(this, "finish")) && b.stop(!0);
          };
      return g.finish = g, e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g);
    },
    stop: function(a, b, c) {
      var d = function(a) {
        var b = a.stop;
        delete a.stop, b(c);
      };
      return "string" != typeof a && (c = b, b = a, a = void 0), b && a !== !1 && this.queue(a || "fx", []), this.each(function() {
        var b = !0,
            e = null != a && a + "queueHooks",
            f = n.timers,
            g = L.get(this);
        if (e)
          g[e] && g[e].stop && d(g[e]);
        else
          for (e in g)
            g[e] && g[e].stop && Pa.test(e) && d(g[e]);
        for (e = f.length; e--; )
          f[e].elem !== this || null != a && f[e].queue !== a || (f[e].anim.stop(c), b = !1, f.splice(e, 1));
        (b || !c) && n.dequeue(this, a);
      });
    },
    finish: function(a) {
      return a !== !1 && (a = a || "fx"), this.each(function() {
        var b,
            c = L.get(this),
            d = c[a + "queue"],
            e = c[a + "queueHooks"],
            f = n.timers,
            g = d ? d.length : 0;
        for (c.finish = !0, n.queue(this, a, []), e && e.stop && e.stop.call(this, !0), b = f.length; b--; )
          f[b].elem === this && f[b].queue === a && (f[b].anim.stop(!0), f.splice(b, 1));
        for (b = 0; g > b; b++)
          d[b] && d[b].finish && d[b].finish.call(this);
        delete c.finish;
      });
    }
  }), n.each(["toggle", "show", "hide"], function(a, b) {
    var c = n.fn[b];
    n.fn[b] = function(a, d, e) {
      return null == a || "boolean" == typeof a ? c.apply(this, arguments) : this.animate(Ta(b, !0), a, d, e);
    };
  }), n.each({
    slideDown: Ta("show"),
    slideUp: Ta("hide"),
    slideToggle: Ta("toggle"),
    fadeIn: {opacity: "show"},
    fadeOut: {opacity: "hide"},
    fadeToggle: {opacity: "toggle"}
  }, function(a, b) {
    n.fn[a] = function(a, c, d) {
      return this.animate(b, a, c, d);
    };
  }), n.timers = [], n.fx.tick = function() {
    var a,
        b = 0,
        c = n.timers;
    for (La = n.now(); b < c.length; b++)
      a = c[b], a() || c[b] !== a || c.splice(b--, 1);
    c.length || n.fx.stop(), La = void 0;
  }, n.fx.timer = function(a) {
    n.timers.push(a), a() ? n.fx.start() : n.timers.pop();
  }, n.fx.interval = 13, n.fx.start = function() {
    Ma || (Ma = setInterval(n.fx.tick, n.fx.interval));
  }, n.fx.stop = function() {
    clearInterval(Ma), Ma = null;
  }, n.fx.speeds = {
    slow: 600,
    fast: 200,
    _default: 400
  }, n.fn.delay = function(a, b) {
    return a = n.fx ? n.fx.speeds[a] || a : a, b = b || "fx", this.queue(b, function(b, c) {
      var d = setTimeout(b, a);
      c.stop = function() {
        clearTimeout(d);
      };
    });
  }, function() {
    var a = l.createElement("input"),
        b = l.createElement("select"),
        c = b.appendChild(l.createElement("option"));
    a.type = "checkbox", k.checkOn = "" !== a.value, k.optSelected = c.selected, b.disabled = !0, k.optDisabled = !c.disabled, a = l.createElement("input"), a.value = "t", a.type = "radio", k.radioValue = "t" === a.value;
  }();
  var Ya,
      Za,
      $a = n.expr.attrHandle;
  n.fn.extend({
    attr: function(a, b) {
      return J(this, n.attr, a, b, arguments.length > 1);
    },
    removeAttr: function(a) {
      return this.each(function() {
        n.removeAttr(this, a);
      });
    }
  }), n.extend({
    attr: function(a, b, c) {
      var d,
          e,
          f = a.nodeType;
      if (a && 3 !== f && 8 !== f && 2 !== f)
        return typeof a.getAttribute === U ? n.prop(a, b, c) : (1 === f && n.isXMLDoc(a) || (b = b.toLowerCase(), d = n.attrHooks[b] || (n.expr.match.bool.test(b) ? Za : Ya)), void 0 === c ? d && "get" in d && null !== (e = d.get(a, b)) ? e : (e = n.find.attr(a, b), null == e ? void 0 : e) : null !== c ? d && "set" in d && void 0 !== (e = d.set(a, c, b)) ? e : (a.setAttribute(b, c + ""), c) : void n.removeAttr(a, b));
    },
    removeAttr: function(a, b) {
      var c,
          d,
          e = 0,
          f = b && b.match(E);
      if (f && 1 === a.nodeType)
        while (c = f[e++])
          d = n.propFix[c] || c, n.expr.match.bool.test(c) && (a[d] = !1), a.removeAttribute(c);
    },
    attrHooks: {type: {set: function(a, b) {
          if (!k.radioValue && "radio" === b && n.nodeName(a, "input")) {
            var c = a.value;
            return a.setAttribute("type", b), c && (a.value = c), b;
          }
        }}}
  }), Za = {set: function(a, b, c) {
      return b === !1 ? n.removeAttr(a, c) : a.setAttribute(c, c), c;
    }}, n.each(n.expr.match.bool.source.match(/\w+/g), function(a, b) {
    var c = $a[b] || n.find.attr;
    $a[b] = function(a, b, d) {
      var e,
          f;
      return d || (f = $a[b], $a[b] = e, e = null != c(a, b, d) ? b.toLowerCase() : null, $a[b] = f), e;
    };
  });
  var _a = /^(?:input|select|textarea|button)$/i;
  n.fn.extend({
    prop: function(a, b) {
      return J(this, n.prop, a, b, arguments.length > 1);
    },
    removeProp: function(a) {
      return this.each(function() {
        delete this[n.propFix[a] || a];
      });
    }
  }), n.extend({
    propFix: {
      "for": "htmlFor",
      "class": "className"
    },
    prop: function(a, b, c) {
      var d,
          e,
          f,
          g = a.nodeType;
      if (a && 3 !== g && 8 !== g && 2 !== g)
        return f = 1 !== g || !n.isXMLDoc(a), f && (b = n.propFix[b] || b, e = n.propHooks[b]), void 0 !== c ? e && "set" in e && void 0 !== (d = e.set(a, c, b)) ? d : a[b] = c : e && "get" in e && null !== (d = e.get(a, b)) ? d : a[b];
    },
    propHooks: {tabIndex: {get: function(a) {
          return a.hasAttribute("tabindex") || _a.test(a.nodeName) || a.href ? a.tabIndex : -1;
        }}}
  }), k.optSelected || (n.propHooks.selected = {get: function(a) {
      var b = a.parentNode;
      return b && b.parentNode && b.parentNode.selectedIndex, null;
    }}), n.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
    n.propFix[this.toLowerCase()] = this;
  });
  var ab = /[\t\r\n\f]/g;
  n.fn.extend({
    addClass: function(a) {
      var b,
          c,
          d,
          e,
          f,
          g,
          h = "string" == typeof a && a,
          i = 0,
          j = this.length;
      if (n.isFunction(a))
        return this.each(function(b) {
          n(this).addClass(a.call(this, b, this.className));
        });
      if (h)
        for (b = (a || "").match(E) || []; j > i; i++)
          if (c = this[i], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ab, " ") : " ")) {
            f = 0;
            while (e = b[f++])
              d.indexOf(" " + e + " ") < 0 && (d += e + " ");
            g = n.trim(d), c.className !== g && (c.className = g);
          }
      return this;
    },
    removeClass: function(a) {
      var b,
          c,
          d,
          e,
          f,
          g,
          h = 0 === arguments.length || "string" == typeof a && a,
          i = 0,
          j = this.length;
      if (n.isFunction(a))
        return this.each(function(b) {
          n(this).removeClass(a.call(this, b, this.className));
        });
      if (h)
        for (b = (a || "").match(E) || []; j > i; i++)
          if (c = this[i], d = 1 === c.nodeType && (c.className ? (" " + c.className + " ").replace(ab, " ") : "")) {
            f = 0;
            while (e = b[f++])
              while (d.indexOf(" " + e + " ") >= 0)
                d = d.replace(" " + e + " ", " ");
            g = a ? n.trim(d) : "", c.className !== g && (c.className = g);
          }
      return this;
    },
    toggleClass: function(a, b) {
      var c = typeof a;
      return "boolean" == typeof b && "string" === c ? b ? this.addClass(a) : this.removeClass(a) : this.each(n.isFunction(a) ? function(c) {
        n(this).toggleClass(a.call(this, c, this.className, b), b);
      } : function() {
        if ("string" === c) {
          var b,
              d = 0,
              e = n(this),
              f = a.match(E) || [];
          while (b = f[d++])
            e.hasClass(b) ? e.removeClass(b) : e.addClass(b);
        } else
          (c === U || "boolean" === c) && (this.className && L.set(this, "__className__", this.className), this.className = this.className || a === !1 ? "" : L.get(this, "__className__") || "");
      });
    },
    hasClass: function(a) {
      for (var b = " " + a + " ",
          c = 0,
          d = this.length; d > c; c++)
        if (1 === this[c].nodeType && (" " + this[c].className + " ").replace(ab, " ").indexOf(b) >= 0)
          return !0;
      return !1;
    }
  });
  var bb = /\r/g;
  n.fn.extend({val: function(a) {
      var b,
          c,
          d,
          e = this[0];
      {
        if (arguments.length)
          return d = n.isFunction(a), this.each(function(c) {
            var e;
            1 === this.nodeType && (e = d ? a.call(this, c, n(this).val()) : a, null == e ? e = "" : "number" == typeof e ? e += "" : n.isArray(e) && (e = n.map(e, function(a) {
              return null == a ? "" : a + "";
            })), b = n.valHooks[this.type] || n.valHooks[this.nodeName.toLowerCase()], b && "set" in b && void 0 !== b.set(this, e, "value") || (this.value = e));
          });
        if (e)
          return b = n.valHooks[e.type] || n.valHooks[e.nodeName.toLowerCase()], b && "get" in b && void 0 !== (c = b.get(e, "value")) ? c : (c = e.value, "string" == typeof c ? c.replace(bb, "") : null == c ? "" : c);
      }
    }}), n.extend({valHooks: {
      option: {get: function(a) {
          var b = n.find.attr(a, "value");
          return null != b ? b : n.trim(n.text(a));
        }},
      select: {
        get: function(a) {
          for (var b,
              c,
              d = a.options,
              e = a.selectedIndex,
              f = "select-one" === a.type || 0 > e,
              g = f ? null : [],
              h = f ? e + 1 : d.length,
              i = 0 > e ? h : f ? e : 0; h > i; i++)
            if (c = d[i], !(!c.selected && i !== e || (k.optDisabled ? c.disabled : null !== c.getAttribute("disabled")) || c.parentNode.disabled && n.nodeName(c.parentNode, "optgroup"))) {
              if (b = n(c).val(), f)
                return b;
              g.push(b);
            }
          return g;
        },
        set: function(a, b) {
          var c,
              d,
              e = a.options,
              f = n.makeArray(b),
              g = e.length;
          while (g--)
            d = e[g], (d.selected = n.inArray(d.value, f) >= 0) && (c = !0);
          return c || (a.selectedIndex = -1), f;
        }
      }
    }}), n.each(["radio", "checkbox"], function() {
    n.valHooks[this] = {set: function(a, b) {
        return n.isArray(b) ? a.checked = n.inArray(n(a).val(), b) >= 0 : void 0;
      }}, k.checkOn || (n.valHooks[this].get = function(a) {
      return null === a.getAttribute("value") ? "on" : a.value;
    });
  }), n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(a, b) {
    n.fn[b] = function(a, c) {
      return arguments.length > 0 ? this.on(b, null, a, c) : this.trigger(b);
    };
  }), n.fn.extend({
    hover: function(a, b) {
      return this.mouseenter(a).mouseleave(b || a);
    },
    bind: function(a, b, c) {
      return this.on(a, null, b, c);
    },
    unbind: function(a, b) {
      return this.off(a, null, b);
    },
    delegate: function(a, b, c, d) {
      return this.on(b, a, c, d);
    },
    undelegate: function(a, b, c) {
      return 1 === arguments.length ? this.off(a, "**") : this.off(b, a || "**", c);
    }
  });
  var cb = n.now(),
      db = /\?/;
  n.parseJSON = function(a) {
    return JSON.parse(a + "");
  }, n.parseXML = function(a) {
    var b,
        c;
    if (!a || "string" != typeof a)
      return null;
    try {
      c = new DOMParser, b = c.parseFromString(a, "text/xml");
    } catch (d) {
      b = void 0;
    }
    return (!b || b.getElementsByTagName("parsererror").length) && n.error("Invalid XML: " + a), b;
  };
  var eb = /#.*$/,
      fb = /([?&])_=[^&]*/,
      gb = /^(.*?):[ \t]*([^\r\n]*)$/gm,
      hb = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
      ib = /^(?:GET|HEAD)$/,
      jb = /^\/\//,
      kb = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,
      lb = {},
      mb = {},
      nb = "*/".concat("*"),
      ob = a.location.href,
      pb = kb.exec(ob.toLowerCase()) || [];
  function qb(a) {
    return function(b, c) {
      "string" != typeof b && (c = b, b = "*");
      var d,
          e = 0,
          f = b.toLowerCase().match(E) || [];
      if (n.isFunction(c))
        while (d = f[e++])
          "+" === d[0] ? (d = d.slice(1) || "*", (a[d] = a[d] || []).unshift(c)) : (a[d] = a[d] || []).push(c);
    };
  }
  function rb(a, b, c, d) {
    var e = {},
        f = a === mb;
    function g(h) {
      var i;
      return e[h] = !0, n.each(a[h] || [], function(a, h) {
        var j = h(b, c, d);
        return "string" != typeof j || f || e[j] ? f ? !(i = j) : void 0 : (b.dataTypes.unshift(j), g(j), !1);
      }), i;
    }
    return g(b.dataTypes[0]) || !e["*"] && g("*");
  }
  function sb(a, b) {
    var c,
        d,
        e = n.ajaxSettings.flatOptions || {};
    for (c in b)
      void 0 !== b[c] && ((e[c] ? a : d || (d = {}))[c] = b[c]);
    return d && n.extend(!0, a, d), a;
  }
  function tb(a, b, c) {
    var d,
        e,
        f,
        g,
        h = a.contents,
        i = a.dataTypes;
    while ("*" === i[0])
      i.shift(), void 0 === d && (d = a.mimeType || b.getResponseHeader("Content-Type"));
    if (d)
      for (e in h)
        if (h[e] && h[e].test(d)) {
          i.unshift(e);
          break;
        }
    if (i[0] in c)
      f = i[0];
    else {
      for (e in c) {
        if (!i[0] || a.converters[e + " " + i[0]]) {
          f = e;
          break;
        }
        g || (g = e);
      }
      f = f || g;
    }
    return f ? (f !== i[0] && i.unshift(f), c[f]) : void 0;
  }
  function ub(a, b, c, d) {
    var e,
        f,
        g,
        h,
        i,
        j = {},
        k = a.dataTypes.slice();
    if (k[1])
      for (g in a.converters)
        j[g.toLowerCase()] = a.converters[g];
    f = k.shift();
    while (f)
      if (a.responseFields[f] && (c[a.responseFields[f]] = b), !i && d && a.dataFilter && (b = a.dataFilter(b, a.dataType)), i = f, f = k.shift())
        if ("*" === f)
          f = i;
        else if ("*" !== i && i !== f) {
          if (g = j[i + " " + f] || j["* " + f], !g)
            for (e in j)
              if (h = e.split(" "), h[1] === f && (g = j[i + " " + h[0]] || j["* " + h[0]])) {
                g === !0 ? g = j[e] : j[e] !== !0 && (f = h[0], k.unshift(h[1]));
                break;
              }
          if (g !== !0)
            if (g && a["throws"])
              b = g(b);
            else
              try {
                b = g(b);
              } catch (l) {
                return {
                  state: "parsererror",
                  error: g ? l : "No conversion from " + i + " to " + f
                };
              }
        }
    return {
      state: "success",
      data: b
    };
  }
  n.extend({
    active: 0,
    lastModified: {},
    etag: {},
    ajaxSettings: {
      url: ob,
      type: "GET",
      isLocal: hb.test(pb[1]),
      global: !0,
      processData: !0,
      async: !0,
      contentType: "application/x-www-form-urlencoded; charset=UTF-8",
      accepts: {
        "*": nb,
        text: "text/plain",
        html: "text/html",
        xml: "application/xml, text/xml",
        json: "application/json, text/javascript"
      },
      contents: {
        xml: /xml/,
        html: /html/,
        json: /json/
      },
      responseFields: {
        xml: "responseXML",
        text: "responseText",
        json: "responseJSON"
      },
      converters: {
        "* text": String,
        "text html": !0,
        "text json": n.parseJSON,
        "text xml": n.parseXML
      },
      flatOptions: {
        url: !0,
        context: !0
      }
    },
    ajaxSetup: function(a, b) {
      return b ? sb(sb(a, n.ajaxSettings), b) : sb(n.ajaxSettings, a);
    },
    ajaxPrefilter: qb(lb),
    ajaxTransport: qb(mb),
    ajax: function(a, b) {
      "object" == typeof a && (b = a, a = void 0), b = b || {};
      var c,
          d,
          e,
          f,
          g,
          h,
          i,
          j,
          k = n.ajaxSetup({}, b),
          l = k.context || k,
          m = k.context && (l.nodeType || l.jquery) ? n(l) : n.event,
          o = n.Deferred(),
          p = n.Callbacks("once memory"),
          q = k.statusCode || {},
          r = {},
          s = {},
          t = 0,
          u = "canceled",
          v = {
            readyState: 0,
            getResponseHeader: function(a) {
              var b;
              if (2 === t) {
                if (!f) {
                  f = {};
                  while (b = gb.exec(e))
                    f[b[1].toLowerCase()] = b[2];
                }
                b = f[a.toLowerCase()];
              }
              return null == b ? null : b;
            },
            getAllResponseHeaders: function() {
              return 2 === t ? e : null;
            },
            setRequestHeader: function(a, b) {
              var c = a.toLowerCase();
              return t || (a = s[c] = s[c] || a, r[a] = b), this;
            },
            overrideMimeType: function(a) {
              return t || (k.mimeType = a), this;
            },
            statusCode: function(a) {
              var b;
              if (a)
                if (2 > t)
                  for (b in a)
                    q[b] = [q[b], a[b]];
                else
                  v.always(a[v.status]);
              return this;
            },
            abort: function(a) {
              var b = a || u;
              return c && c.abort(b), x(0, b), this;
            }
          };
      if (o.promise(v).complete = p.add, v.success = v.done, v.error = v.fail, k.url = ((a || k.url || ob) + "").replace(eb, "").replace(jb, pb[1] + "//"), k.type = b.method || b.type || k.method || k.type, k.dataTypes = n.trim(k.dataType || "*").toLowerCase().match(E) || [""], null == k.crossDomain && (h = kb.exec(k.url.toLowerCase()), k.crossDomain = !(!h || h[1] === pb[1] && h[2] === pb[2] && (h[3] || ("http:" === h[1] ? "80" : "443")) === (pb[3] || ("http:" === pb[1] ? "80" : "443")))), k.data && k.processData && "string" != typeof k.data && (k.data = n.param(k.data, k.traditional)), rb(lb, k, b, v), 2 === t)
        return v;
      i = n.event && k.global, i && 0 === n.active++ && n.event.trigger("ajaxStart"), k.type = k.type.toUpperCase(), k.hasContent = !ib.test(k.type), d = k.url, k.hasContent || (k.data && (d = k.url += (db.test(d) ? "&" : "?") + k.data, delete k.data), k.cache === !1 && (k.url = fb.test(d) ? d.replace(fb, "$1_=" + cb++) : d + (db.test(d) ? "&" : "?") + "_=" + cb++)), k.ifModified && (n.lastModified[d] && v.setRequestHeader("If-Modified-Since", n.lastModified[d]), n.etag[d] && v.setRequestHeader("If-None-Match", n.etag[d])), (k.data && k.hasContent && k.contentType !== !1 || b.contentType) && v.setRequestHeader("Content-Type", k.contentType), v.setRequestHeader("Accept", k.dataTypes[0] && k.accepts[k.dataTypes[0]] ? k.accepts[k.dataTypes[0]] + ("*" !== k.dataTypes[0] ? ", " + nb + "; q=0.01" : "") : k.accepts["*"]);
      for (j in k.headers)
        v.setRequestHeader(j, k.headers[j]);
      if (k.beforeSend && (k.beforeSend.call(l, v, k) === !1 || 2 === t))
        return v.abort();
      u = "abort";
      for (j in {
        success: 1,
        error: 1,
        complete: 1
      })
        v[j](k[j]);
      if (c = rb(mb, k, b, v)) {
        v.readyState = 1, i && m.trigger("ajaxSend", [v, k]), k.async && k.timeout > 0 && (g = setTimeout(function() {
          v.abort("timeout");
        }, k.timeout));
        try {
          t = 1, c.send(r, x);
        } catch (w) {
          if (!(2 > t))
            throw w;
          x(-1, w);
        }
      } else
        x(-1, "No Transport");
      function x(a, b, f, h) {
        var j,
            r,
            s,
            u,
            w,
            x = b;
        2 !== t && (t = 2, g && clearTimeout(g), c = void 0, e = h || "", v.readyState = a > 0 ? 4 : 0, j = a >= 200 && 300 > a || 304 === a, f && (u = tb(k, v, f)), u = ub(k, u, v, j), j ? (k.ifModified && (w = v.getResponseHeader("Last-Modified"), w && (n.lastModified[d] = w), w = v.getResponseHeader("etag"), w && (n.etag[d] = w)), 204 === a || "HEAD" === k.type ? x = "nocontent" : 304 === a ? x = "notmodified" : (x = u.state, r = u.data, s = u.error, j = !s)) : (s = x, (a || !x) && (x = "error", 0 > a && (a = 0))), v.status = a, v.statusText = (b || x) + "", j ? o.resolveWith(l, [r, x, v]) : o.rejectWith(l, [v, x, s]), v.statusCode(q), q = void 0, i && m.trigger(j ? "ajaxSuccess" : "ajaxError", [v, k, j ? r : s]), p.fireWith(l, [v, x]), i && (m.trigger("ajaxComplete", [v, k]), --n.active || n.event.trigger("ajaxStop")));
      }
      return v;
    },
    getJSON: function(a, b, c) {
      return n.get(a, b, c, "json");
    },
    getScript: function(a, b) {
      return n.get(a, void 0, b, "script");
    }
  }), n.each(["get", "post"], function(a, b) {
    n[b] = function(a, c, d, e) {
      return n.isFunction(c) && (e = e || d, d = c, c = void 0), n.ajax({
        url: a,
        type: b,
        dataType: e,
        data: c,
        success: d
      });
    };
  }), n._evalUrl = function(a) {
    return n.ajax({
      url: a,
      type: "GET",
      dataType: "script",
      async: !1,
      global: !1,
      "throws": !0
    });
  }, n.fn.extend({
    wrapAll: function(a) {
      var b;
      return n.isFunction(a) ? this.each(function(b) {
        n(this).wrapAll(a.call(this, b));
      }) : (this[0] && (b = n(a, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && b.insertBefore(this[0]), b.map(function() {
        var a = this;
        while (a.firstElementChild)
          a = a.firstElementChild;
        return a;
      }).append(this)), this);
    },
    wrapInner: function(a) {
      return this.each(n.isFunction(a) ? function(b) {
        n(this).wrapInner(a.call(this, b));
      } : function() {
        var b = n(this),
            c = b.contents();
        c.length ? c.wrapAll(a) : b.append(a);
      });
    },
    wrap: function(a) {
      var b = n.isFunction(a);
      return this.each(function(c) {
        n(this).wrapAll(b ? a.call(this, c) : a);
      });
    },
    unwrap: function() {
      return this.parent().each(function() {
        n.nodeName(this, "body") || n(this).replaceWith(this.childNodes);
      }).end();
    }
  }), n.expr.filters.hidden = function(a) {
    return a.offsetWidth <= 0 && a.offsetHeight <= 0;
  }, n.expr.filters.visible = function(a) {
    return !n.expr.filters.hidden(a);
  };
  var vb = /%20/g,
      wb = /\[\]$/,
      xb = /\r?\n/g,
      yb = /^(?:submit|button|image|reset|file)$/i,
      zb = /^(?:input|select|textarea|keygen)/i;
  function Ab(a, b, c, d) {
    var e;
    if (n.isArray(b))
      n.each(b, function(b, e) {
        c || wb.test(a) ? d(a, e) : Ab(a + "[" + ("object" == typeof e ? b : "") + "]", e, c, d);
      });
    else if (c || "object" !== n.type(b))
      d(a, b);
    else
      for (e in b)
        Ab(a + "[" + e + "]", b[e], c, d);
  }
  n.param = function(a, b) {
    var c,
        d = [],
        e = function(a, b) {
          b = n.isFunction(b) ? b() : null == b ? "" : b, d[d.length] = encodeURIComponent(a) + "=" + encodeURIComponent(b);
        };
    if (void 0 === b && (b = n.ajaxSettings && n.ajaxSettings.traditional), n.isArray(a) || a.jquery && !n.isPlainObject(a))
      n.each(a, function() {
        e(this.name, this.value);
      });
    else
      for (c in a)
        Ab(c, a[c], b, e);
    return d.join("&").replace(vb, "+");
  }, n.fn.extend({
    serialize: function() {
      return n.param(this.serializeArray());
    },
    serializeArray: function() {
      return this.map(function() {
        var a = n.prop(this, "elements");
        return a ? n.makeArray(a) : this;
      }).filter(function() {
        var a = this.type;
        return this.name && !n(this).is(":disabled") && zb.test(this.nodeName) && !yb.test(a) && (this.checked || !T.test(a));
      }).map(function(a, b) {
        var c = n(this).val();
        return null == c ? null : n.isArray(c) ? n.map(c, function(a) {
          return {
            name: b.name,
            value: a.replace(xb, "\r\n")
          };
        }) : {
          name: b.name,
          value: c.replace(xb, "\r\n")
        };
      }).get();
    }
  }), n.ajaxSettings.xhr = function() {
    try {
      return new XMLHttpRequest;
    } catch (a) {}
  };
  var Bb = 0,
      Cb = {},
      Db = {
        0: 200,
        1223: 204
      },
      Eb = n.ajaxSettings.xhr();
  a.attachEvent && a.attachEvent("onunload", function() {
    for (var a in Cb)
      Cb[a]();
  }), k.cors = !!Eb && "withCredentials" in Eb, k.ajax = Eb = !!Eb, n.ajaxTransport(function(a) {
    var b;
    return k.cors || Eb && !a.crossDomain ? {
      send: function(c, d) {
        var e,
            f = a.xhr(),
            g = ++Bb;
        if (f.open(a.type, a.url, a.async, a.username, a.password), a.xhrFields)
          for (e in a.xhrFields)
            f[e] = a.xhrFields[e];
        a.mimeType && f.overrideMimeType && f.overrideMimeType(a.mimeType), a.crossDomain || c["X-Requested-With"] || (c["X-Requested-With"] = "XMLHttpRequest");
        for (e in c)
          f.setRequestHeader(e, c[e]);
        b = function(a) {
          return function() {
            b && (delete Cb[g], b = f.onload = f.onerror = null, "abort" === a ? f.abort() : "error" === a ? d(f.status, f.statusText) : d(Db[f.status] || f.status, f.statusText, "string" == typeof f.responseText ? {text: f.responseText} : void 0, f.getAllResponseHeaders()));
          };
        }, f.onload = b(), f.onerror = b("error"), b = Cb[g] = b("abort");
        try {
          f.send(a.hasContent && a.data || null);
        } catch (h) {
          if (b)
            throw h;
        }
      },
      abort: function() {
        b && b();
      }
    } : void 0;
  }), n.ajaxSetup({
    accepts: {script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},
    contents: {script: /(?:java|ecma)script/},
    converters: {"text script": function(a) {
        return n.globalEval(a), a;
      }}
  }), n.ajaxPrefilter("script", function(a) {
    void 0 === a.cache && (a.cache = !1), a.crossDomain && (a.type = "GET");
  }), n.ajaxTransport("script", function(a) {
    if (a.crossDomain) {
      var b,
          c;
      return {
        send: function(d, e) {
          b = n("<script>").prop({
            async: !0,
            charset: a.scriptCharset,
            src: a.url
          }).on("load error", c = function(a) {
            b.remove(), c = null, a && e("error" === a.type ? 404 : 200, a.type);
          }), l.head.appendChild(b[0]);
        },
        abort: function() {
          c && c();
        }
      };
    }
  });
  var Fb = [],
      Gb = /(=)\?(?=&|$)|\?\?/;
  n.ajaxSetup({
    jsonp: "callback",
    jsonpCallback: function() {
      var a = Fb.pop() || n.expando + "_" + cb++;
      return this[a] = !0, a;
    }
  }), n.ajaxPrefilter("json jsonp", function(b, c, d) {
    var e,
        f,
        g,
        h = b.jsonp !== !1 && (Gb.test(b.url) ? "url" : "string" == typeof b.data && !(b.contentType || "").indexOf("application/x-www-form-urlencoded") && Gb.test(b.data) && "data");
    return h || "jsonp" === b.dataTypes[0] ? (e = b.jsonpCallback = n.isFunction(b.jsonpCallback) ? b.jsonpCallback() : b.jsonpCallback, h ? b[h] = b[h].replace(Gb, "$1" + e) : b.jsonp !== !1 && (b.url += (db.test(b.url) ? "&" : "?") + b.jsonp + "=" + e), b.converters["script json"] = function() {
      return g || n.error(e + " was not called"), g[0];
    }, b.dataTypes[0] = "json", f = a[e], a[e] = function() {
      g = arguments;
    }, d.always(function() {
      a[e] = f, b[e] && (b.jsonpCallback = c.jsonpCallback, Fb.push(e)), g && n.isFunction(f) && f(g[0]), g = f = void 0;
    }), "script") : void 0;
  }), n.parseHTML = function(a, b, c) {
    if (!a || "string" != typeof a)
      return null;
    "boolean" == typeof b && (c = b, b = !1), b = b || l;
    var d = v.exec(a),
        e = !c && [];
    return d ? [b.createElement(d[1])] : (d = n.buildFragment([a], b, e), e && e.length && n(e).remove(), n.merge([], d.childNodes));
  };
  var Hb = n.fn.load;
  n.fn.load = function(a, b, c) {
    if ("string" != typeof a && Hb)
      return Hb.apply(this, arguments);
    var d,
        e,
        f,
        g = this,
        h = a.indexOf(" ");
    return h >= 0 && (d = n.trim(a.slice(h)), a = a.slice(0, h)), n.isFunction(b) ? (c = b, b = void 0) : b && "object" == typeof b && (e = "POST"), g.length > 0 && n.ajax({
      url: a,
      type: e,
      dataType: "html",
      data: b
    }).done(function(a) {
      f = arguments, g.html(d ? n("<div>").append(n.parseHTML(a)).find(d) : a);
    }).complete(c && function(a, b) {
      g.each(c, f || [a.responseText, b, a]);
    }), this;
  }, n.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(a, b) {
    n.fn[b] = function(a) {
      return this.on(b, a);
    };
  }), n.expr.filters.animated = function(a) {
    return n.grep(n.timers, function(b) {
      return a === b.elem;
    }).length;
  };
  var Ib = a.document.documentElement;
  function Jb(a) {
    return n.isWindow(a) ? a : 9 === a.nodeType && a.defaultView;
  }
  n.offset = {setOffset: function(a, b, c) {
      var d,
          e,
          f,
          g,
          h,
          i,
          j,
          k = n.css(a, "position"),
          l = n(a),
          m = {};
      "static" === k && (a.style.position = "relative"), h = l.offset(), f = n.css(a, "top"), i = n.css(a, "left"), j = ("absolute" === k || "fixed" === k) && (f + i).indexOf("auto") > -1, j ? (d = l.position(), g = d.top, e = d.left) : (g = parseFloat(f) || 0, e = parseFloat(i) || 0), n.isFunction(b) && (b = b.call(a, c, h)), null != b.top && (m.top = b.top - h.top + g), null != b.left && (m.left = b.left - h.left + e), "using" in b ? b.using.call(a, m) : l.css(m);
    }}, n.fn.extend({
    offset: function(a) {
      if (arguments.length)
        return void 0 === a ? this : this.each(function(b) {
          n.offset.setOffset(this, a, b);
        });
      var b,
          c,
          d = this[0],
          e = {
            top: 0,
            left: 0
          },
          f = d && d.ownerDocument;
      if (f)
        return b = f.documentElement, n.contains(b, d) ? (typeof d.getBoundingClientRect !== U && (e = d.getBoundingClientRect()), c = Jb(f), {
          top: e.top + c.pageYOffset - b.clientTop,
          left: e.left + c.pageXOffset - b.clientLeft
        }) : e;
    },
    position: function() {
      if (this[0]) {
        var a,
            b,
            c = this[0],
            d = {
              top: 0,
              left: 0
            };
        return "fixed" === n.css(c, "position") ? b = c.getBoundingClientRect() : (a = this.offsetParent(), b = this.offset(), n.nodeName(a[0], "html") || (d = a.offset()), d.top += n.css(a[0], "borderTopWidth", !0), d.left += n.css(a[0], "borderLeftWidth", !0)), {
          top: b.top - d.top - n.css(c, "marginTop", !0),
          left: b.left - d.left - n.css(c, "marginLeft", !0)
        };
      }
    },
    offsetParent: function() {
      return this.map(function() {
        var a = this.offsetParent || Ib;
        while (a && !n.nodeName(a, "html") && "static" === n.css(a, "position"))
          a = a.offsetParent;
        return a || Ib;
      });
    }
  }), n.each({
    scrollLeft: "pageXOffset",
    scrollTop: "pageYOffset"
  }, function(b, c) {
    var d = "pageYOffset" === c;
    n.fn[b] = function(e) {
      return J(this, function(b, e, f) {
        var g = Jb(b);
        return void 0 === f ? g ? g[c] : b[e] : void(g ? g.scrollTo(d ? a.pageXOffset : f, d ? f : a.pageYOffset) : b[e] = f);
      }, b, e, arguments.length, null);
    };
  }), n.each(["top", "left"], function(a, b) {
    n.cssHooks[b] = ya(k.pixelPosition, function(a, c) {
      return c ? (c = xa(a, b), va.test(c) ? n(a).position()[b] + "px" : c) : void 0;
    });
  }), n.each({
    Height: "height",
    Width: "width"
  }, function(a, b) {
    n.each({
      padding: "inner" + a,
      content: b,
      "": "outer" + a
    }, function(c, d) {
      n.fn[d] = function(d, e) {
        var f = arguments.length && (c || "boolean" != typeof d),
            g = c || (d === !0 || e === !0 ? "margin" : "border");
        return J(this, function(b, c, d) {
          var e;
          return n.isWindow(b) ? b.document.documentElement["client" + a] : 9 === b.nodeType ? (e = b.documentElement, Math.max(b.body["scroll" + a], e["scroll" + a], b.body["offset" + a], e["offset" + a], e["client" + a])) : void 0 === d ? n.css(b, c, g) : n.style(b, c, d, g);
        }, b, f ? d : void 0, f, null);
      };
    });
  }), n.fn.size = function() {
    return this.length;
  }, n.fn.andSelf = n.fn.addBack, "function" == typeof define && define.amd && define("5", [], function() {
    return n;
  });
  var Kb = a.jQuery,
      Lb = a.$;
  return n.noConflict = function(b) {
    return a.$ === n && (a.$ = Lb), b && a.jQuery === n && (a.jQuery = Kb), n;
  }, typeof b === U && (a.jQuery = a.$ = n), n;
});

_removeDefine();
})();
$__System.registerDynamic("7d", [], false, function(__require, __exports, __module) {
  var _retrieveGlobal = $__System.get("@@global-helpers").prepareGlobal(__module.id, null, null);
  (function() {
    !function() {
      window.WebComponents = window.WebComponents || {flags: {}};
      var e = "webcomponents-lite.js",
          t = document.querySelector('script[src*="' + e + '"]'),
          n = {};
      if (!n.noOpts) {
        if (location.search.slice(1).split("&").forEach(function(e) {
          var t,
              r = e.split("=");
          r[0] && (t = r[0].match(/wc-(.+)/)) && (n[t[1]] = r[1] || !0);
        }), t)
          for (var r,
              o = 0; r = t.attributes[o]; o++)
            "src" !== r.name && (n[r.name] = r.value || !0);
        if (n.log && n.log.split) {
          var i = n.log.split(",");
          n.log = {}, i.forEach(function(e) {
            n.log[e] = !0;
          });
        } else
          n.log = {};
      }
      n.register && (window.CustomElements = window.CustomElements || {flags: {}}, window.CustomElements.flags.register = n.register), WebComponents.flags = n;
    }(), function(e) {
      "use strict";
      function t(e) {
        return void 0 !== h[e];
      }
      function n() {
        s.call(this), this._isInvalid = !0;
      }
      function r(e) {
        return "" == e && n.call(this), e.toLowerCase();
      }
      function o(e) {
        var t = e.charCodeAt(0);
        return t > 32 && 127 > t && -1 == [34, 35, 60, 62, 63, 96].indexOf(t) ? e : encodeURIComponent(e);
      }
      function i(e) {
        var t = e.charCodeAt(0);
        return t > 32 && 127 > t && -1 == [34, 35, 60, 62, 96].indexOf(t) ? e : encodeURIComponent(e);
      }
      function a(e, a, s) {
        function c(e) {
          g.push(e);
        }
        var d = a || "scheme start",
            u = 0,
            l = "",
            w = !1,
            _ = !1,
            g = [];
        e: for (; (e[u - 1] != p || 0 == u) && !this._isInvalid; ) {
          var b = e[u];
          switch (d) {
            case "scheme start":
              if (!b || !m.test(b)) {
                if (a) {
                  c("Invalid scheme.");
                  break e;
                }
                l = "", d = "no scheme";
                continue;
              }
              l += b.toLowerCase(), d = "scheme";
              break;
            case "scheme":
              if (b && v.test(b))
                l += b.toLowerCase();
              else {
                if (":" != b) {
                  if (a) {
                    if (p == b)
                      break e;
                    c("Code point not allowed in scheme: " + b);
                    break e;
                  }
                  l = "", u = 0, d = "no scheme";
                  continue;
                }
                if (this._scheme = l, l = "", a)
                  break e;
                t(this._scheme) && (this._isRelative = !0), d = "file" == this._scheme ? "relative" : this._isRelative && s && s._scheme == this._scheme ? "relative or authority" : this._isRelative ? "authority first slash" : "scheme data";
              }
              break;
            case "scheme data":
              "?" == b ? (this._query = "?", d = "query") : "#" == b ? (this._fragment = "#", d = "fragment") : p != b && "	" != b && "\n" != b && "\r" != b && (this._schemeData += o(b));
              break;
            case "no scheme":
              if (s && t(s._scheme)) {
                d = "relative";
                continue;
              }
              c("Missing scheme."), n.call(this);
              break;
            case "relative or authority":
              if ("/" != b || "/" != e[u + 1]) {
                c("Expected /, got: " + b), d = "relative";
                continue;
              }
              d = "authority ignore slashes";
              break;
            case "relative":
              if (this._isRelative = !0, "file" != this._scheme && (this._scheme = s._scheme), p == b) {
                this._host = s._host, this._port = s._port, this._path = s._path.slice(), this._query = s._query, this._username = s._username, this._password = s._password;
                break e;
              }
              if ("/" == b || "\\" == b)
                "\\" == b && c("\\ is an invalid code point."), d = "relative slash";
              else if ("?" == b)
                this._host = s._host, this._port = s._port, this._path = s._path.slice(), this._query = "?", this._username = s._username, this._password = s._password, d = "query";
              else {
                if ("#" != b) {
                  var y = e[u + 1],
                      E = e[u + 2];
                  ("file" != this._scheme || !m.test(b) || ":" != y && "|" != y || p != E && "/" != E && "\\" != E && "?" != E && "#" != E) && (this._host = s._host, this._port = s._port, this._username = s._username, this._password = s._password, this._path = s._path.slice(), this._path.pop()), d = "relative path";
                  continue;
                }
                this._host = s._host, this._port = s._port, this._path = s._path.slice(), this._query = s._query, this._fragment = "#", this._username = s._username, this._password = s._password, d = "fragment";
              }
              break;
            case "relative slash":
              if ("/" != b && "\\" != b) {
                "file" != this._scheme && (this._host = s._host, this._port = s._port, this._username = s._username, this._password = s._password), d = "relative path";
                continue;
              }
              "\\" == b && c("\\ is an invalid code point."), d = "file" == this._scheme ? "file host" : "authority ignore slashes";
              break;
            case "authority first slash":
              if ("/" != b) {
                c("Expected '/', got: " + b), d = "authority ignore slashes";
                continue;
              }
              d = "authority second slash";
              break;
            case "authority second slash":
              if (d = "authority ignore slashes", "/" != b) {
                c("Expected '/', got: " + b);
                continue;
              }
              break;
            case "authority ignore slashes":
              if ("/" != b && "\\" != b) {
                d = "authority";
                continue;
              }
              c("Expected authority, got: " + b);
              break;
            case "authority":
              if ("@" == b) {
                w && (c("@ already seen."), l += "%40"), w = !0;
                for (var L = 0; L < l.length; L++) {
                  var T = l[L];
                  if ("	" != T && "\n" != T && "\r" != T)
                    if (":" != T || null !== this._password) {
                      var M = o(T);
                      null !== this._password ? this._password += M : this._username += M;
                    } else
                      this._password = "";
                  else
                    c("Invalid whitespace in authority.");
                }
                l = "";
              } else {
                if (p == b || "/" == b || "\\" == b || "?" == b || "#" == b) {
                  u -= l.length, l = "", d = "host";
                  continue;
                }
                l += b;
              }
              break;
            case "file host":
              if (p == b || "/" == b || "\\" == b || "?" == b || "#" == b) {
                2 != l.length || !m.test(l[0]) || ":" != l[1] && "|" != l[1] ? 0 == l.length ? d = "relative path start" : (this._host = r.call(this, l), l = "", d = "relative path start") : d = "relative path";
                continue;
              }
              "	" == b || "\n" == b || "\r" == b ? c("Invalid whitespace in file host.") : l += b;
              break;
            case "host":
            case "hostname":
              if (":" != b || _) {
                if (p == b || "/" == b || "\\" == b || "?" == b || "#" == b) {
                  if (this._host = r.call(this, l), l = "", d = "relative path start", a)
                    break e;
                  continue;
                }
                "	" != b && "\n" != b && "\r" != b ? ("[" == b ? _ = !0 : "]" == b && (_ = !1), l += b) : c("Invalid code point in host/hostname: " + b);
              } else if (this._host = r.call(this, l), l = "", d = "port", "hostname" == a)
                break e;
              break;
            case "port":
              if (/[0-9]/.test(b))
                l += b;
              else {
                if (p == b || "/" == b || "\\" == b || "?" == b || "#" == b || a) {
                  if ("" != l) {
                    var N = parseInt(l, 10);
                    N != h[this._scheme] && (this._port = N + ""), l = "";
                  }
                  if (a)
                    break e;
                  d = "relative path start";
                  continue;
                }
                "	" == b || "\n" == b || "\r" == b ? c("Invalid code point in port: " + b) : n.call(this);
              }
              break;
            case "relative path start":
              if ("\\" == b && c("'\\' not allowed in path."), d = "relative path", "/" != b && "\\" != b)
                continue;
              break;
            case "relative path":
              if (p != b && "/" != b && "\\" != b && (a || "?" != b && "#" != b))
                "	" != b && "\n" != b && "\r" != b && (l += o(b));
              else {
                "\\" == b && c("\\ not allowed in relative path.");
                var O;
                (O = f[l.toLowerCase()]) && (l = O), ".." == l ? (this._path.pop(), "/" != b && "\\" != b && this._path.push("")) : "." == l && "/" != b && "\\" != b ? this._path.push("") : "." != l && ("file" == this._scheme && 0 == this._path.length && 2 == l.length && m.test(l[0]) && "|" == l[1] && (l = l[0] + ":"), this._path.push(l)), l = "", "?" == b ? (this._query = "?", d = "query") : "#" == b && (this._fragment = "#", d = "fragment");
              }
              break;
            case "query":
              a || "#" != b ? p != b && "	" != b && "\n" != b && "\r" != b && (this._query += i(b)) : (this._fragment = "#", d = "fragment");
              break;
            case "fragment":
              p != b && "	" != b && "\n" != b && "\r" != b && (this._fragment += b);
          }
          u++;
        }
      }
      function s() {
        this._scheme = "", this._schemeData = "", this._username = "", this._password = null, this._host = "", this._port = "", this._path = [], this._query = "", this._fragment = "", this._isInvalid = !1, this._isRelative = !1;
      }
      function c(e, t) {
        void 0 === t || t instanceof c || (t = new c(String(t))), this._url = e, s.call(this);
        var n = e.replace(/^[ \t\r\n\f]+|[ \t\r\n\f]+$/g, "");
        a.call(this, n, null, t);
      }
      var d = !1;
      if (!e.forceJURL)
        try {
          var u = new URL("b", "http://a");
          u.pathname = "c%20d", d = "http://a/c%20d" === u.href;
        } catch (l) {}
      if (!d) {
        var h = Object.create(null);
        h.ftp = 21, h.file = 0, h.gopher = 70, h.http = 80, h.https = 443, h.ws = 80, h.wss = 443;
        var f = Object.create(null);
        f["%2e"] = ".", f[".%2e"] = "..", f["%2e."] = "..", f["%2e%2e"] = "..";
        var p = void 0,
            m = /[a-zA-Z]/,
            v = /[a-zA-Z0-9\+\-\.]/;
        c.prototype = {
          toString: function() {
            return this.href;
          },
          get href() {
            if (this._isInvalid)
              return this._url;
            var e = "";
            return ("" != this._username || null != this._password) && (e = this._username + (null != this._password ? ":" + this._password : "") + "@"), this.protocol + (this._isRelative ? "//" + e + this.host : "") + this.pathname + this._query + this._fragment;
          },
          set href(e) {
            s.call(this), a.call(this, e);
          },
          get protocol() {
            return this._scheme + ":";
          },
          set protocol(e) {
            this._isInvalid || a.call(this, e + ":", "scheme start");
          },
          get host() {
            return this._isInvalid ? "" : this._port ? this._host + ":" + this._port : this._host;
          },
          set host(e) {
            !this._isInvalid && this._isRelative && a.call(this, e, "host");
          },
          get hostname() {
            return this._host;
          },
          set hostname(e) {
            !this._isInvalid && this._isRelative && a.call(this, e, "hostname");
          },
          get port() {
            return this._port;
          },
          set port(e) {
            !this._isInvalid && this._isRelative && a.call(this, e, "port");
          },
          get pathname() {
            return this._isInvalid ? "" : this._isRelative ? "/" + this._path.join("/") : this._schemeData;
          },
          set pathname(e) {
            !this._isInvalid && this._isRelative && (this._path = [], a.call(this, e, "relative path start"));
          },
          get search() {
            return this._isInvalid || !this._query || "?" == this._query ? "" : this._query;
          },
          set search(e) {
            !this._isInvalid && this._isRelative && (this._query = "?", "?" == e[0] && (e = e.slice(1)), a.call(this, e, "query"));
          },
          get hash() {
            return this._isInvalid || !this._fragment || "#" == this._fragment ? "" : this._fragment;
          },
          set hash(e) {
            this._isInvalid || (this._fragment = "#", "#" == e[0] && (e = e.slice(1)), a.call(this, e, "fragment"));
          },
          get origin() {
            var e;
            if (this._isInvalid || !this._scheme)
              return "";
            switch (this._scheme) {
              case "data":
              case "file":
              case "javascript":
              case "mailto":
                return "null";
            }
            return e = this.host, e ? this._scheme + "://" + e : "";
          }
        };
        var w = e.URL;
        w && (c.createObjectURL = function(e) {
          return w.createObjectURL.apply(w, arguments);
        }, c.revokeObjectURL = function(e) {
          w.revokeObjectURL(e);
        }), e.URL = c;
      }
    }(self), "undefined" == typeof WeakMap && !function() {
      var e = Object.defineProperty,
          t = Date.now() % 1e9,
          n = function() {
            this.name = "__st" + (1e9 * Math.random() >>> 0) + (t++ + "__");
          };
      n.prototype = {
        set: function(t, n) {
          var r = t[this.name];
          return r && r[0] === t ? r[1] = n : e(t, this.name, {
            value: [t, n],
            writable: !0
          }), this;
        },
        get: function(e) {
          var t;
          return (t = e[this.name]) && t[0] === e ? t[1] : void 0;
        },
        "delete": function(e) {
          var t = e[this.name];
          return t && t[0] === e ? (t[0] = t[1] = void 0, !0) : !1;
        },
        has: function(e) {
          var t = e[this.name];
          return t ? t[0] === e : !1;
        }
      }, window.WeakMap = n;
    }(), function(e) {
      function t(e) {
        b.push(e), g || (g = !0, m(r));
      }
      function n(e) {
        return window.ShadowDOMPolyfill && window.ShadowDOMPolyfill.wrapIfNeeded(e) || e;
      }
      function r() {
        g = !1;
        var e = b;
        b = [], e.sort(function(e, t) {
          return e.uid_ - t.uid_;
        });
        var t = !1;
        e.forEach(function(e) {
          var n = e.takeRecords();
          o(e), n.length && (e.callback_(n, e), t = !0);
        }), t && r();
      }
      function o(e) {
        e.nodes_.forEach(function(t) {
          var n = v.get(t);
          n && n.forEach(function(t) {
            t.observer === e && t.removeTransientObservers();
          });
        });
      }
      function i(e, t) {
        for (var n = e; n; n = n.parentNode) {
          var r = v.get(n);
          if (r)
            for (var o = 0; o < r.length; o++) {
              var i = r[o],
                  a = i.options;
              if (n === e || a.subtree) {
                var s = t(a);
                s && i.enqueue(s);
              }
            }
        }
      }
      function a(e) {
        this.callback_ = e, this.nodes_ = [], this.records_ = [], this.uid_ = ++y;
      }
      function s(e, t) {
        this.type = e, this.target = t, this.addedNodes = [], this.removedNodes = [], this.previousSibling = null, this.nextSibling = null, this.attributeName = null, this.attributeNamespace = null, this.oldValue = null;
      }
      function c(e) {
        var t = new s(e.type, e.target);
        return t.addedNodes = e.addedNodes.slice(), t.removedNodes = e.removedNodes.slice(), t.previousSibling = e.previousSibling, t.nextSibling = e.nextSibling, t.attributeName = e.attributeName, t.attributeNamespace = e.attributeNamespace, t.oldValue = e.oldValue, t;
      }
      function d(e, t) {
        return E = new s(e, t);
      }
      function u(e) {
        return L ? L : (L = c(E), L.oldValue = e, L);
      }
      function l() {
        E = L = void 0;
      }
      function h(e) {
        return e === L || e === E;
      }
      function f(e, t) {
        return e === t ? e : L && h(e) ? L : null;
      }
      function p(e, t, n) {
        this.observer = e, this.target = t, this.options = n, this.transientObservedNodes = [];
      }
      if (!e.JsMutationObserver) {
        var m,
            v = new WeakMap;
        if (/Trident|Edge/.test(navigator.userAgent))
          m = setTimeout;
        else if (window.setImmediate)
          m = window.setImmediate;
        else {
          var w = [],
              _ = String(Math.random());
          window.addEventListener("message", function(e) {
            if (e.data === _) {
              var t = w;
              w = [], t.forEach(function(e) {
                e();
              });
            }
          }), m = function(e) {
            w.push(e), window.postMessage(_, "*");
          };
        }
        var g = !1,
            b = [],
            y = 0;
        a.prototype = {
          observe: function(e, t) {
            if (e = n(e), !t.childList && !t.attributes && !t.characterData || t.attributeOldValue && !t.attributes || t.attributeFilter && t.attributeFilter.length && !t.attributes || t.characterDataOldValue && !t.characterData)
              throw new SyntaxError;
            var r = v.get(e);
            r || v.set(e, r = []);
            for (var o,
                i = 0; i < r.length; i++)
              if (r[i].observer === this) {
                o = r[i], o.removeListeners(), o.options = t;
                break;
              }
            o || (o = new p(this, e, t), r.push(o), this.nodes_.push(e)), o.addListeners();
          },
          disconnect: function() {
            this.nodes_.forEach(function(e) {
              for (var t = v.get(e),
                  n = 0; n < t.length; n++) {
                var r = t[n];
                if (r.observer === this) {
                  r.removeListeners(), t.splice(n, 1);
                  break;
                }
              }
            }, this), this.records_ = [];
          },
          takeRecords: function() {
            var e = this.records_;
            return this.records_ = [], e;
          }
        };
        var E,
            L;
        p.prototype = {
          enqueue: function(e) {
            var n = this.observer.records_,
                r = n.length;
            if (n.length > 0) {
              var o = n[r - 1],
                  i = f(o, e);
              if (i)
                return void(n[r - 1] = i);
            } else
              t(this.observer);
            n[r] = e;
          },
          addListeners: function() {
            this.addListeners_(this.target);
          },
          addListeners_: function(e) {
            var t = this.options;
            t.attributes && e.addEventListener("DOMAttrModified", this, !0), t.characterData && e.addEventListener("DOMCharacterDataModified", this, !0), t.childList && e.addEventListener("DOMNodeInserted", this, !0), (t.childList || t.subtree) && e.addEventListener("DOMNodeRemoved", this, !0);
          },
          removeListeners: function() {
            this.removeListeners_(this.target);
          },
          removeListeners_: function(e) {
            var t = this.options;
            t.attributes && e.removeEventListener("DOMAttrModified", this, !0), t.characterData && e.removeEventListener("DOMCharacterDataModified", this, !0), t.childList && e.removeEventListener("DOMNodeInserted", this, !0), (t.childList || t.subtree) && e.removeEventListener("DOMNodeRemoved", this, !0);
          },
          addTransientObserver: function(e) {
            if (e !== this.target) {
              this.addListeners_(e), this.transientObservedNodes.push(e);
              var t = v.get(e);
              t || v.set(e, t = []), t.push(this);
            }
          },
          removeTransientObservers: function() {
            var e = this.transientObservedNodes;
            this.transientObservedNodes = [], e.forEach(function(e) {
              this.removeListeners_(e);
              for (var t = v.get(e),
                  n = 0; n < t.length; n++)
                if (t[n] === this) {
                  t.splice(n, 1);
                  break;
                }
            }, this);
          },
          handleEvent: function(e) {
            switch (e.stopImmediatePropagation(), e.type) {
              case "DOMAttrModified":
                var t = e.attrName,
                    n = e.relatedNode.namespaceURI,
                    r = e.target,
                    o = new d("attributes", r);
                o.attributeName = t, o.attributeNamespace = n;
                var a = e.attrChange === MutationEvent.ADDITION ? null : e.prevValue;
                i(r, function(e) {
                  return !e.attributes || e.attributeFilter && e.attributeFilter.length && -1 === e.attributeFilter.indexOf(t) && -1 === e.attributeFilter.indexOf(n) ? void 0 : e.attributeOldValue ? u(a) : o;
                });
                break;
              case "DOMCharacterDataModified":
                var r = e.target,
                    o = d("characterData", r),
                    a = e.prevValue;
                i(r, function(e) {
                  return e.characterData ? e.characterDataOldValue ? u(a) : o : void 0;
                });
                break;
              case "DOMNodeRemoved":
                this.addTransientObserver(e.target);
              case "DOMNodeInserted":
                var s,
                    c,
                    h = e.target;
                "DOMNodeInserted" === e.type ? (s = [h], c = []) : (s = [], c = [h]);
                var f = h.previousSibling,
                    p = h.nextSibling,
                    o = d("childList", e.target.parentNode);
                o.addedNodes = s, o.removedNodes = c, o.previousSibling = f, o.nextSibling = p, i(e.relatedNode, function(e) {
                  return e.childList ? o : void 0;
                });
            }
            l();
          }
        }, e.JsMutationObserver = a, e.MutationObserver || (e.MutationObserver = a, a._isPolyfilled = !0);
      }
    }(self), "undefined" == typeof HTMLTemplateElement && !function() {
      function e(e) {
        switch (e) {
          case "&":
            return "&amp;";
          case "<":
            return "&lt;";
          case ">":
            return "&gt;";
          case " ":
            return "&nbsp;";
        }
      }
      function t(t) {
        return t.replace(a, e);
      }
      var n = "template",
          r = document.implementation.createHTMLDocument("template"),
          o = !0;
      HTMLTemplateElement = function() {}, HTMLTemplateElement.prototype = Object.create(HTMLElement.prototype), HTMLTemplateElement.decorate = function(e) {
        if (!e.content) {
          e.content = r.createDocumentFragment();
          for (var n; n = e.firstChild; )
            e.content.appendChild(n);
          if (o)
            try {
              Object.defineProperty(e, "innerHTML", {
                get: function() {
                  for (var e = "",
                      n = this.content.firstChild; n; n = n.nextSibling)
                    e += n.outerHTML || t(n.data);
                  return e;
                },
                set: function(e) {
                  for (r.body.innerHTML = e, HTMLTemplateElement.bootstrap(r); this.content.firstChild; )
                    this.content.removeChild(this.content.firstChild);
                  for (; r.body.firstChild; )
                    this.content.appendChild(r.body.firstChild);
                },
                configurable: !0
              });
            } catch (i) {
              o = !1;
            }
          HTMLTemplateElement.bootstrap(e.content);
        }
      }, HTMLTemplateElement.bootstrap = function(e) {
        for (var t,
            r = e.querySelectorAll(n),
            o = 0,
            i = r.length; i > o && (t = r[o]); o++)
          HTMLTemplateElement.decorate(t);
      }, document.addEventListener("DOMContentLoaded", function() {
        HTMLTemplateElement.bootstrap(document);
      });
      var i = document.createElement;
      document.createElement = function() {
        "use strict";
        var e = i.apply(document, arguments);
        return "template" == e.localName && HTMLTemplateElement.decorate(e), e;
      };
      var a = /[&\u00A0<>]/g;
    }(), function(e) {
      "use strict";
      if (!window.performance) {
        var t = Date.now();
        window.performance = {now: function() {
            return Date.now() - t;
          }};
      }
      window.requestAnimationFrame || (window.requestAnimationFrame = function() {
        var e = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;
        return e ? function(t) {
          return e(function() {
            t(performance.now());
          });
        } : function(e) {
          return window.setTimeout(e, 1e3 / 60);
        };
      }()), window.cancelAnimationFrame || (window.cancelAnimationFrame = function() {
        return window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || function(e) {
          clearTimeout(e);
        };
      }());
      var n = function() {
        var e = document.createEvent("Event");
        return e.initEvent("foo", !0, !0), e.preventDefault(), e.defaultPrevented;
      }();
      if (!n) {
        var r = Event.prototype.preventDefault;
        Event.prototype.preventDefault = function() {
          this.cancelable && (r.call(this), Object.defineProperty(this, "defaultPrevented", {
            get: function() {
              return !0;
            },
            configurable: !0
          }));
        };
      }
      var o = /Trident/.test(navigator.userAgent);
      if ((!window.CustomEvent || o && "function" != typeof window.CustomEvent) && (window.CustomEvent = function(e, t) {
        t = t || {};
        var n = document.createEvent("CustomEvent");
        return n.initCustomEvent(e, Boolean(t.bubbles), Boolean(t.cancelable), t.detail), n;
      }, window.CustomEvent.prototype = window.Event.prototype), !window.Event || o && "function" != typeof window.Event) {
        var i = window.Event;
        window.Event = function(e, t) {
          t = t || {};
          var n = document.createEvent("Event");
          return n.initEvent(e, Boolean(t.bubbles), Boolean(t.cancelable)), n;
        }, window.Event.prototype = i.prototype;
      }
    }(window.WebComponents), window.HTMLImports = window.HTMLImports || {flags: {}}, function(e) {
      function t(e, t) {
        t = t || p, r(function() {
          i(e, t);
        }, t);
      }
      function n(e) {
        return "complete" === e.readyState || e.readyState === w;
      }
      function r(e, t) {
        if (n(t))
          e && e();
        else {
          var o = function() {
            ("complete" === t.readyState || t.readyState === w) && (t.removeEventListener(_, o), r(e, t));
          };
          t.addEventListener(_, o);
        }
      }
      function o(e) {
        e.target.__loaded = !0;
      }
      function i(e, t) {
        function n() {
          c == d && e && e({
            allImports: s,
            loadedImports: u,
            errorImports: l
          });
        }
        function r(e) {
          o(e), u.push(this), c++, n();
        }
        function i(e) {
          l.push(this), c++, n();
        }
        var s = t.querySelectorAll("link[rel=import]"),
            c = 0,
            d = s.length,
            u = [],
            l = [];
        if (d)
          for (var h,
              f = 0; d > f && (h = s[f]); f++)
            a(h) ? (c++, n()) : (h.addEventListener("load", r), h.addEventListener("error", i));
        else
          n();
      }
      function a(e) {
        return l ? e.__loaded || e["import"] && "loading" !== e["import"].readyState : e.__importParsed;
      }
      function s(e) {
        for (var t,
            n = 0,
            r = e.length; r > n && (t = e[n]); n++)
          c(t) && d(t);
      }
      function c(e) {
        return "link" === e.localName && "import" === e.rel;
      }
      function d(e) {
        var t = e["import"];
        t ? o({target: e}) : (e.addEventListener("load", o), e.addEventListener("error", o));
      }
      var u = "import",
          l = Boolean(u in document.createElement("link")),
          h = Boolean(window.ShadowDOMPolyfill),
          f = function(e) {
            return h ? window.ShadowDOMPolyfill.wrapIfNeeded(e) : e;
          },
          p = f(document),
          m = {
            get: function() {
              var e = window.HTMLImports.currentScript || document.currentScript || ("complete" !== document.readyState ? document.scripts[document.scripts.length - 1] : null);
              return f(e);
            },
            configurable: !0
          };
      Object.defineProperty(document, "_currentScript", m), Object.defineProperty(p, "_currentScript", m);
      var v = /Trident/.test(navigator.userAgent),
          w = v ? "complete" : "interactive",
          _ = "readystatechange";
      l && (new MutationObserver(function(e) {
        for (var t,
            n = 0,
            r = e.length; r > n && (t = e[n]); n++)
          t.addedNodes && s(t.addedNodes);
      }).observe(document.head, {childList: !0}), function() {
        if ("loading" === document.readyState)
          for (var e,
              t = document.querySelectorAll("link[rel=import]"),
              n = 0,
              r = t.length; r > n && (e = t[n]); n++)
            d(e);
      }()), t(function(e) {
        window.HTMLImports.ready = !0, window.HTMLImports.readyTime = (new Date).getTime();
        var t = p.createEvent("CustomEvent");
        t.initCustomEvent("HTMLImportsLoaded", !0, !0, e), p.dispatchEvent(t);
      }), e.IMPORT_LINK_TYPE = u, e.useNative = l, e.rootDocument = p, e.whenReady = t, e.isIE = v;
    }(window.HTMLImports), function(e) {
      var t = [],
          n = function(e) {
            t.push(e);
          },
          r = function() {
            t.forEach(function(t) {
              t(e);
            });
          };
      e.addModule = n, e.initializeModules = r;
    }(window.HTMLImports), window.HTMLImports.addModule(function(e) {
      var t = /(url\()([^)]*)(\))/g,
          n = /(@import[\s]+(?!url\())([^;]*)(;)/g,
          r = {
            resolveUrlsInStyle: function(e, t) {
              var n = e.ownerDocument,
                  r = n.createElement("a");
              return e.textContent = this.resolveUrlsInCssText(e.textContent, t, r), e;
            },
            resolveUrlsInCssText: function(e, r, o) {
              var i = this.replaceUrls(e, o, r, t);
              return i = this.replaceUrls(i, o, r, n);
            },
            replaceUrls: function(e, t, n, r) {
              return e.replace(r, function(e, r, o, i) {
                var a = o.replace(/["']/g, "");
                return n && (a = new URL(a, n).href), t.href = a, a = t.href, r + "'" + a + "'" + i;
              });
            }
          };
      e.path = r;
    }), window.HTMLImports.addModule(function(e) {
      var t = {
        async: !0,
        ok: function(e) {
          return e.status >= 200 && e.status < 300 || 304 === e.status || 0 === e.status;
        },
        load: function(n, r, o) {
          var i = new XMLHttpRequest;
          return (e.flags.debug || e.flags.bust) && (n += "?" + Math.random()), i.open("GET", n, t.async), i.addEventListener("readystatechange", function(e) {
            if (4 === i.readyState) {
              var n = null;
              try {
                var a = i.getResponseHeader("Location");
                a && (n = "/" === a.substr(0, 1) ? location.origin + a : a);
              } catch (e) {
                console.error(e.message);
              }
              r.call(o, !t.ok(i) && i, i.response || i.responseText, n);
            }
          }), i.send(), i;
        },
        loadDocument: function(e, t, n) {
          this.load(e, t, n).responseType = "document";
        }
      };
      e.xhr = t;
    }), window.HTMLImports.addModule(function(e) {
      var t = e.xhr,
          n = e.flags,
          r = function(e, t) {
            this.cache = {}, this.onload = e, this.oncomplete = t, this.inflight = 0, this.pending = {};
          };
      r.prototype = {
        addNodes: function(e) {
          this.inflight += e.length;
          for (var t,
              n = 0,
              r = e.length; r > n && (t = e[n]); n++)
            this.require(t);
          this.checkDone();
        },
        addNode: function(e) {
          this.inflight++, this.require(e), this.checkDone();
        },
        require: function(e) {
          var t = e.src || e.href;
          e.__nodeUrl = t, this.dedupe(t, e) || this.fetch(t, e);
        },
        dedupe: function(e, t) {
          if (this.pending[e])
            return this.pending[e].push(t), !0;
          return this.cache[e] ? (this.onload(e, t, this.cache[e]), this.tail(), !0) : (this.pending[e] = [t], !1);
        },
        fetch: function(e, r) {
          if (n.load && console.log("fetch", e, r), e)
            if (e.match(/^data:/)) {
              var o = e.split(","),
                  i = o[0],
                  a = o[1];
              a = i.indexOf(";base64") > -1 ? atob(a) : decodeURIComponent(a), setTimeout(function() {
                this.receive(e, r, null, a);
              }.bind(this), 0);
            } else {
              var s = function(t, n, o) {
                this.receive(e, r, t, n, o);
              }.bind(this);
              t.load(e, s);
            }
          else
            setTimeout(function() {
              this.receive(e, r, {error: "href must be specified"}, null);
            }.bind(this), 0);
        },
        receive: function(e, t, n, r, o) {
          this.cache[e] = r;
          for (var i,
              a = this.pending[e],
              s = 0,
              c = a.length; c > s && (i = a[s]); s++)
            this.onload(e, i, r, n, o), this.tail();
          this.pending[e] = null;
        },
        tail: function() {
          --this.inflight, this.checkDone();
        },
        checkDone: function() {
          this.inflight || this.oncomplete();
        }
      }, e.Loader = r;
    }), window.HTMLImports.addModule(function(e) {
      var t = function(e) {
        this.addCallback = e, this.mo = new MutationObserver(this.handler.bind(this));
      };
      t.prototype = {
        handler: function(e) {
          for (var t,
              n = 0,
              r = e.length; r > n && (t = e[n]); n++)
            "childList" === t.type && t.addedNodes.length && this.addedNodes(t.addedNodes);
        },
        addedNodes: function(e) {
          this.addCallback && this.addCallback(e);
          for (var t,
              n = 0,
              r = e.length; r > n && (t = e[n]); n++)
            t.children && t.children.length && this.addedNodes(t.children);
        },
        observe: function(e) {
          this.mo.observe(e, {
            childList: !0,
            subtree: !0
          });
        }
      }, e.Observer = t;
    }), window.HTMLImports.addModule(function(e) {
      function t(e) {
        return "link" === e.localName && e.rel === u;
      }
      function n(e) {
        var t = r(e);
        return "data:text/javascript;charset=utf-8," + encodeURIComponent(t);
      }
      function r(e) {
        return e.textContent + o(e);
      }
      function o(e) {
        var t = e.ownerDocument;
        t.__importedScripts = t.__importedScripts || 0;
        var n = e.ownerDocument.baseURI,
            r = t.__importedScripts ? "-" + t.__importedScripts : "";
        return t.__importedScripts++, "\n//# sourceURL=" + n + r + ".js\n";
      }
      function i(e) {
        var t = e.ownerDocument.createElement("style");
        return t.textContent = e.textContent, a.resolveUrlsInStyle(t), t;
      }
      var a = e.path,
          s = e.rootDocument,
          c = e.flags,
          d = e.isIE,
          u = e.IMPORT_LINK_TYPE,
          l = "link[rel=" + u + "]",
          h = {
            documentSelectors: l,
            importsSelectors: [l, "link[rel=stylesheet]:not([type])", "style:not([type])", "script:not([type])", 'script[type="application/javascript"]', 'script[type="text/javascript"]'].join(","),
            map: {
              link: "parseLink",
              script: "parseScript",
              style: "parseStyle"
            },
            dynamicElements: [],
            parseNext: function() {
              var e = this.nextToParse();
              e && this.parse(e);
            },
            parse: function(e) {
              if (this.isParsed(e))
                return void(c.parse && console.log("[%s] is already parsed", e.localName));
              var t = this[this.map[e.localName]];
              t && (this.markParsing(e), t.call(this, e));
            },
            parseDynamic: function(e, t) {
              this.dynamicElements.push(e), t || this.parseNext();
            },
            markParsing: function(e) {
              c.parse && console.log("parsing", e), this.parsingElement = e;
            },
            markParsingComplete: function(e) {
              e.__importParsed = !0, this.markDynamicParsingComplete(e), e.__importElement && (e.__importElement.__importParsed = !0, this.markDynamicParsingComplete(e.__importElement)), this.parsingElement = null, c.parse && console.log("completed", e);
            },
            markDynamicParsingComplete: function(e) {
              var t = this.dynamicElements.indexOf(e);
              t >= 0 && this.dynamicElements.splice(t, 1);
            },
            parseImport: function(e) {
              if (e["import"] = e.__doc, window.HTMLImports.__importsParsingHook && window.HTMLImports.__importsParsingHook(e), e["import"] && (e["import"].__importParsed = !0), this.markParsingComplete(e), e.__resource && !e.__error ? e.dispatchEvent(new CustomEvent("load", {bubbles: !1})) : e.dispatchEvent(new CustomEvent("error", {bubbles: !1})), e.__pending)
                for (var t; e.__pending.length; )
                  t = e.__pending.shift(), t && t({target: e});
              this.parseNext();
            },
            parseLink: function(e) {
              t(e) ? this.parseImport(e) : (e.href = e.href, this.parseGeneric(e));
            },
            parseStyle: function(e) {
              var t = e;
              e = i(e), t.__appliedElement = e, e.__importElement = t, this.parseGeneric(e);
            },
            parseGeneric: function(e) {
              this.trackElement(e), this.addElementToDocument(e);
            },
            rootImportForElement: function(e) {
              for (var t = e; t.ownerDocument.__importLink; )
                t = t.ownerDocument.__importLink;
              return t;
            },
            addElementToDocument: function(e) {
              var t = this.rootImportForElement(e.__importElement || e);
              t.parentNode.insertBefore(e, t);
            },
            trackElement: function(e, t) {
              var n = this,
                  r = function(o) {
                    e.removeEventListener("load", r), e.removeEventListener("error", r), t && t(o), n.markParsingComplete(e), n.parseNext();
                  };
              if (e.addEventListener("load", r), e.addEventListener("error", r), d && "style" === e.localName) {
                var o = !1;
                if (-1 == e.textContent.indexOf("@import"))
                  o = !0;
                else if (e.sheet) {
                  o = !0;
                  for (var i,
                      a = e.sheet.cssRules,
                      s = a ? a.length : 0,
                      c = 0; s > c && (i = a[c]); c++)
                    i.type === CSSRule.IMPORT_RULE && (o = o && Boolean(i.styleSheet));
                }
                o && setTimeout(function() {
                  e.dispatchEvent(new CustomEvent("load", {bubbles: !1}));
                });
              }
            },
            parseScript: function(t) {
              var r = document.createElement("script");
              r.__importElement = t, r.src = t.src ? t.src : n(t), e.currentScript = t, this.trackElement(r, function(t) {
                r.parentNode && r.parentNode.removeChild(r), e.currentScript = null;
              }), this.addElementToDocument(r);
            },
            nextToParse: function() {
              return this._mayParse = [], !this.parsingElement && (this.nextToParseInDoc(s) || this.nextToParseDynamic());
            },
            nextToParseInDoc: function(e, n) {
              if (e && this._mayParse.indexOf(e) < 0) {
                this._mayParse.push(e);
                for (var r,
                    o = e.querySelectorAll(this.parseSelectorsForNode(e)),
                    i = 0,
                    a = o.length; a > i && (r = o[i]); i++)
                  if (!this.isParsed(r))
                    return this.hasResource(r) ? t(r) ? this.nextToParseInDoc(r.__doc, r) : r : void 0;
              }
              return n;
            },
            nextToParseDynamic: function() {
              return this.dynamicElements[0];
            },
            parseSelectorsForNode: function(e) {
              var t = e.ownerDocument || e;
              return t === s ? this.documentSelectors : this.importsSelectors;
            },
            isParsed: function(e) {
              return e.__importParsed;
            },
            needsDynamicParsing: function(e) {
              return this.dynamicElements.indexOf(e) >= 0;
            },
            hasResource: function(e) {
              return t(e) && void 0 === e.__doc ? !1 : !0;
            }
          };
      e.parser = h, e.IMPORT_SELECTOR = l;
    }), window.HTMLImports.addModule(function(e) {
      function t(e) {
        return n(e, a);
      }
      function n(e, t) {
        return "link" === e.localName && e.getAttribute("rel") === t;
      }
      function r(e) {
        return !!Object.getOwnPropertyDescriptor(e, "baseURI");
      }
      function o(e, t) {
        var n = document.implementation.createHTMLDocument(a);
        n._URL = t;
        var o = n.createElement("base");
        o.setAttribute("href", t), n.baseURI || r(n) || Object.defineProperty(n, "baseURI", {value: t});
        var i = n.createElement("meta");
        return i.setAttribute("charset", "utf-8"), n.head.appendChild(i), n.head.appendChild(o), n.body.innerHTML = e, window.HTMLTemplateElement && HTMLTemplateElement.bootstrap && HTMLTemplateElement.bootstrap(n), n;
      }
      var i = e.flags,
          a = e.IMPORT_LINK_TYPE,
          s = e.IMPORT_SELECTOR,
          c = e.rootDocument,
          d = e.Loader,
          u = e.Observer,
          l = e.parser,
          h = {
            documents: {},
            documentPreloadSelectors: s,
            importsPreloadSelectors: [s].join(","),
            loadNode: function(e) {
              f.addNode(e);
            },
            loadSubtree: function(e) {
              var t = this.marshalNodes(e);
              f.addNodes(t);
            },
            marshalNodes: function(e) {
              return e.querySelectorAll(this.loadSelectorsForNode(e));
            },
            loadSelectorsForNode: function(e) {
              var t = e.ownerDocument || e;
              return t === c ? this.documentPreloadSelectors : this.importsPreloadSelectors;
            },
            loaded: function(e, n, r, a, s) {
              if (i.load && console.log("loaded", e, n), n.__resource = r, n.__error = a, t(n)) {
                var c = this.documents[e];
                void 0 === c && (c = a ? null : o(r, s || e), c && (c.__importLink = n, this.bootDocument(c)), this.documents[e] = c), n.__doc = c;
              }
              l.parseNext();
            },
            bootDocument: function(e) {
              this.loadSubtree(e), this.observer.observe(e), l.parseNext();
            },
            loadedAll: function() {
              l.parseNext();
            }
          },
          f = new d(h.loaded.bind(h), h.loadedAll.bind(h));
      if (h.observer = new u, !document.baseURI) {
        var p = {
          get: function() {
            var e = document.querySelector("base");
            return e ? e.href : window.location.href;
          },
          configurable: !0
        };
        Object.defineProperty(document, "baseURI", p), Object.defineProperty(c, "baseURI", p);
      }
      e.importer = h, e.importLoader = f;
    }), window.HTMLImports.addModule(function(e) {
      var t = e.parser,
          n = e.importer,
          r = {
            added: function(e) {
              for (var r,
                  o,
                  i,
                  a,
                  s = 0,
                  c = e.length; c > s && (a = e[s]); s++)
                r || (r = a.ownerDocument, o = t.isParsed(r)), i = this.shouldLoadNode(a), i && n.loadNode(a), this.shouldParseNode(a) && o && t.parseDynamic(a, i);
            },
            shouldLoadNode: function(e) {
              return 1 === e.nodeType && o.call(e, n.loadSelectorsForNode(e));
            },
            shouldParseNode: function(e) {
              return 1 === e.nodeType && o.call(e, t.parseSelectorsForNode(e));
            }
          };
      n.observer.addCallback = r.added.bind(r);
      var o = HTMLElement.prototype.matches || HTMLElement.prototype.matchesSelector || HTMLElement.prototype.webkitMatchesSelector || HTMLElement.prototype.mozMatchesSelector || HTMLElement.prototype.msMatchesSelector;
    }), function(e) {
      function t() {
        window.HTMLImports.importer.bootDocument(r);
      }
      var n = e.initializeModules;
      e.isIE;
      if (!e.useNative) {
        n();
        var r = e.rootDocument;
        "complete" === document.readyState || "interactive" === document.readyState && !window.attachEvent ? t() : document.addEventListener("DOMContentLoaded", t);
      }
    }(window.HTMLImports), window.CustomElements = window.CustomElements || {flags: {}}, function(e) {
      var t = e.flags,
          n = [],
          r = function(e) {
            n.push(e);
          },
          o = function() {
            n.forEach(function(t) {
              t(e);
            });
          };
      e.addModule = r, e.initializeModules = o, e.hasNative = Boolean(document.registerElement), e.isIE = /Trident/.test(navigator.userAgent), e.useNative = !t.register && e.hasNative && !window.ShadowDOMPolyfill && (!window.HTMLImports || window.HTMLImports.useNative);
    }(window.CustomElements), window.CustomElements.addModule(function(e) {
      function t(e, t) {
        n(e, function(e) {
          return t(e) ? !0 : void r(e, t);
        }), r(e, t);
      }
      function n(e, t, r) {
        var o = e.firstElementChild;
        if (!o)
          for (o = e.firstChild; o && o.nodeType !== Node.ELEMENT_NODE; )
            o = o.nextSibling;
        for (; o; )
          t(o, r) !== !0 && n(o, t, r), o = o.nextElementSibling;
        return null;
      }
      function r(e, n) {
        for (var r = e.shadowRoot; r; )
          t(r, n), r = r.olderShadowRoot;
      }
      function o(e, t) {
        i(e, t, []);
      }
      function i(e, t, n) {
        if (e = window.wrap(e), !(n.indexOf(e) >= 0)) {
          n.push(e);
          for (var r,
              o = e.querySelectorAll("link[rel=" + a + "]"),
              s = 0,
              c = o.length; c > s && (r = o[s]); s++)
            r["import"] && i(r["import"], t, n);
          t(e);
        }
      }
      var a = window.HTMLImports ? window.HTMLImports.IMPORT_LINK_TYPE : "none";
      e.forDocumentTree = o, e.forSubtree = t;
    }), window.CustomElements.addModule(function(e) {
      function t(e, t) {
        return n(e, t) || r(e, t);
      }
      function n(t, n) {
        return e.upgrade(t, n) ? !0 : void(n && a(t));
      }
      function r(e, t) {
        g(e, function(e) {
          return n(e, t) ? !0 : void 0;
        });
      }
      function o(e) {
        L.push(e), E || (E = !0, setTimeout(i));
      }
      function i() {
        E = !1;
        for (var e,
            t = L,
            n = 0,
            r = t.length; r > n && (e = t[n]); n++)
          e();
        L = [];
      }
      function a(e) {
        y ? o(function() {
          s(e);
        }) : s(e);
      }
      function s(e) {
        e.__upgraded__ && !e.__attached && (e.__attached = !0, e.attachedCallback && e.attachedCallback());
      }
      function c(e) {
        d(e), g(e, function(e) {
          d(e);
        });
      }
      function d(e) {
        y ? o(function() {
          u(e);
        }) : u(e);
      }
      function u(e) {
        e.__upgraded__ && e.__attached && (e.__attached = !1, e.detachedCallback && e.detachedCallback());
      }
      function l(e) {
        for (var t = e,
            n = window.wrap(document); t; ) {
          if (t == n)
            return !0;
          t = t.parentNode || t.nodeType === Node.DOCUMENT_FRAGMENT_NODE && t.host;
        }
      }
      function h(e) {
        if (e.shadowRoot && !e.shadowRoot.__watched) {
          _.dom && console.log("watching shadow-root for: ", e.localName);
          for (var t = e.shadowRoot; t; )
            m(t), t = t.olderShadowRoot;
        }
      }
      function f(e, n) {
        if (_.dom) {
          var r = n[0];
          if (r && "childList" === r.type && r.addedNodes && r.addedNodes) {
            for (var o = r.addedNodes[0]; o && o !== document && !o.host; )
              o = o.parentNode;
            var i = o && (o.URL || o._URL || o.host && o.host.localName) || "";
            i = i.split("/?").shift().split("/").pop();
          }
          console.group("mutations (%d) [%s]", n.length, i || "");
        }
        var a = l(e);
        n.forEach(function(e) {
          "childList" === e.type && (T(e.addedNodes, function(e) {
            e.localName && t(e, a);
          }), T(e.removedNodes, function(e) {
            e.localName && c(e);
          }));
        }), _.dom && console.groupEnd();
      }
      function p(e) {
        for (e = window.wrap(e), e || (e = window.wrap(document)); e.parentNode; )
          e = e.parentNode;
        var t = e.__observer;
        t && (f(e, t.takeRecords()), i());
      }
      function m(e) {
        if (!e.__observer) {
          var t = new MutationObserver(f.bind(this, e));
          t.observe(e, {
            childList: !0,
            subtree: !0
          }), e.__observer = t;
        }
      }
      function v(e) {
        e = window.wrap(e), _.dom && console.group("upgradeDocument: ", e.baseURI.split("/").pop());
        var n = e === window.wrap(document);
        t(e, n), m(e), _.dom && console.groupEnd();
      }
      function w(e) {
        b(e, v);
      }
      var _ = e.flags,
          g = e.forSubtree,
          b = e.forDocumentTree,
          y = window.MutationObserver._isPolyfilled && _["throttle-attached"];
      e.hasPolyfillMutations = y, e.hasThrottledAttached = y;
      var E = !1,
          L = [],
          T = Array.prototype.forEach.call.bind(Array.prototype.forEach),
          M = Element.prototype.createShadowRoot;
      M && (Element.prototype.createShadowRoot = function() {
        var e = M.call(this);
        return window.CustomElements.watchShadow(this), e;
      }), e.watchShadow = h, e.upgradeDocumentTree = w, e.upgradeDocument = v, e.upgradeSubtree = r, e.upgradeAll = t, e.attached = a, e.takeRecords = p;
    }), window.CustomElements.addModule(function(e) {
      function t(t, r) {
        if ("template" === t.localName && window.HTMLTemplateElement && HTMLTemplateElement.decorate && HTMLTemplateElement.decorate(t), !t.__upgraded__ && t.nodeType === Node.ELEMENT_NODE) {
          var o = t.getAttribute("is"),
              i = e.getRegisteredDefinition(t.localName) || e.getRegisteredDefinition(o);
          if (i && (o && i.tag == t.localName || !o && !i["extends"]))
            return n(t, i, r);
        }
      }
      function n(t, n, o) {
        return a.upgrade && console.group("upgrade:", t.localName), n.is && t.setAttribute("is", n.is), r(t, n), t.__upgraded__ = !0, i(t), o && e.attached(t), e.upgradeSubtree(t, o), a.upgrade && console.groupEnd(), t;
      }
      function r(e, t) {
        Object.__proto__ ? e.__proto__ = t.prototype : (o(e, t.prototype, t["native"]), e.__proto__ = t.prototype);
      }
      function o(e, t, n) {
        for (var r = {},
            o = t; o !== n && o !== HTMLElement.prototype; ) {
          for (var i,
              a = Object.getOwnPropertyNames(o),
              s = 0; i = a[s]; s++)
            r[i] || (Object.defineProperty(e, i, Object.getOwnPropertyDescriptor(o, i)), r[i] = 1);
          o = Object.getPrototypeOf(o);
        }
      }
      function i(e) {
        e.createdCallback && e.createdCallback();
      }
      var a = e.flags;
      e.upgrade = t, e.upgradeWithDefinition = n, e.implementPrototype = r;
    }), window.CustomElements.addModule(function(e) {
      function t(t, r) {
        var c = r || {};
        if (!t)
          throw new Error("document.registerElement: first argument `name` must not be empty");
        if (t.indexOf("-") < 0)
          throw new Error("document.registerElement: first argument ('name') must contain a dash ('-'). Argument provided was '" + String(t) + "'.");
        if (o(t))
          throw new Error("Failed to execute 'registerElement' on 'Document': Registration failed for type '" + String(t) + "'. The type name is invalid.");
        if (d(t))
          throw new Error("DuplicateDefinitionError: a type with name '" + String(t) + "' is already registered");
        return c.prototype || (c.prototype = Object.create(HTMLElement.prototype)), c.__name = t.toLowerCase(), c.lifecycle = c.lifecycle || {}, c.ancestry = i(c["extends"]), a(c), s(c), n(c.prototype), u(c.__name, c), c.ctor = l(c), c.ctor.prototype = c.prototype, c.prototype.constructor = c.ctor, e.ready && w(document), c.ctor;
      }
      function n(e) {
        if (!e.setAttribute._polyfilled) {
          var t = e.setAttribute;
          e.setAttribute = function(e, n) {
            r.call(this, e, n, t);
          };
          var n = e.removeAttribute;
          e.removeAttribute = function(e) {
            r.call(this, e, null, n);
          }, e.setAttribute._polyfilled = !0;
        }
      }
      function r(e, t, n) {
        e = e.toLowerCase();
        var r = this.getAttribute(e);
        n.apply(this, arguments);
        var o = this.getAttribute(e);
        this.attributeChangedCallback && o !== r && this.attributeChangedCallback(e, r, o);
      }
      function o(e) {
        for (var t = 0; t < E.length; t++)
          if (e === E[t])
            return !0;
      }
      function i(e) {
        var t = d(e);
        return t ? i(t["extends"]).concat([t]) : [];
      }
      function a(e) {
        for (var t,
            n = e["extends"],
            r = 0; t = e.ancestry[r]; r++)
          n = t.is && t.tag;
        e.tag = n || e.__name, n && (e.is = e.__name);
      }
      function s(e) {
        if (!Object.__proto__) {
          var t = HTMLElement.prototype;
          if (e.is) {
            var n = document.createElement(e.tag);
            t = Object.getPrototypeOf(n);
          }
          for (var r,
              o = e.prototype,
              i = !1; o; )
            o == t && (i = !0), r = Object.getPrototypeOf(o), r && (o.__proto__ = r), o = r;
          i || console.warn(e.tag + " prototype not found in prototype chain for " + e.is), e["native"] = t;
        }
      }
      function c(e) {
        return g(M(e.tag), e);
      }
      function d(e) {
        return e ? L[e.toLowerCase()] : void 0;
      }
      function u(e, t) {
        L[e] = t;
      }
      function l(e) {
        return function() {
          return c(e);
        };
      }
      function h(e, t, n) {
        return e === T ? f(t, n) : N(e, t);
      }
      function f(e, t) {
        e && (e = e.toLowerCase()), t && (t = t.toLowerCase());
        var n = d(t || e);
        if (n) {
          if (e == n.tag && t == n.is)
            return new n.ctor;
          if (!t && !n.is)
            return new n.ctor;
        }
        var r;
        return t ? (r = f(e), r.setAttribute("is", t), r) : (r = M(e), e.indexOf("-") >= 0 && b(r, HTMLElement), r);
      }
      function p(e, t) {
        var n = e[t];
        e[t] = function() {
          var e = n.apply(this, arguments);
          return _(e), e;
        };
      }
      var m,
          v = e.isIE,
          w = e.upgradeDocumentTree,
          _ = e.upgradeAll,
          g = e.upgradeWithDefinition,
          b = e.implementPrototype,
          y = e.useNative,
          E = ["annotation-xml", "color-profile", "font-face", "font-face-src", "font-face-uri", "font-face-format", "font-face-name", "missing-glyph"],
          L = {},
          T = "http://www.w3.org/1999/xhtml",
          M = document.createElement.bind(document),
          N = document.createElementNS.bind(document);
      m = Object.__proto__ || y ? function(e, t) {
        return e instanceof t;
      } : function(e, t) {
        if (e instanceof t)
          return !0;
        for (var n = e; n; ) {
          if (n === t.prototype)
            return !0;
          n = n.__proto__;
        }
        return !1;
      }, p(Node.prototype, "cloneNode"), p(document, "importNode"), v && !function() {
        var e = document.importNode;
        document.importNode = function() {
          var t = e.apply(document, arguments);
          if (t.nodeType == t.DOCUMENT_FRAGMENT_NODE) {
            var n = document.createDocumentFragment();
            return n.appendChild(t), n;
          }
          return t;
        };
      }(), document.registerElement = t, document.createElement = f, document.createElementNS = h, e.registry = L, e["instanceof"] = m, e.reservedTagList = E, e.getRegisteredDefinition = d, document.register = document.registerElement;
    }), function(e) {
      function t() {
        i(window.wrap(document)), window.CustomElements.ready = !0;
        var e = window.requestAnimationFrame || function(e) {
          setTimeout(e, 16);
        };
        e(function() {
          setTimeout(function() {
            window.CustomElements.readyTime = Date.now(), window.HTMLImports && (window.CustomElements.elapsed = window.CustomElements.readyTime - window.HTMLImports.readyTime), document.dispatchEvent(new CustomEvent("WebComponentsReady", {bubbles: !0}));
          });
        });
      }
      var n = e.useNative,
          r = e.initializeModules;
      e.isIE;
      if (n) {
        var o = function() {};
        e.watchShadow = o, e.upgrade = o, e.upgradeAll = o, e.upgradeDocumentTree = o, e.upgradeSubtree = o, e.takeRecords = o, e["instanceof"] = function(e, t) {
          return e instanceof t;
        };
      } else
        r();
      var i = e.upgradeDocumentTree,
          a = e.upgradeDocument;
      if (window.wrap || (window.ShadowDOMPolyfill ? (window.wrap = window.ShadowDOMPolyfill.wrapIfNeeded, window.unwrap = window.ShadowDOMPolyfill.unwrapIfNeeded) : window.wrap = window.unwrap = function(e) {
        return e;
      }), window.HTMLImports && (window.HTMLImports.__importsParsingHook = function(e) {
        e["import"] && a(wrap(e["import"]));
      }), "complete" === document.readyState || e.flags.eager)
        t();
      else if ("interactive" !== document.readyState || window.attachEvent || window.HTMLImports && !window.HTMLImports.ready) {
        var s = window.HTMLImports && !window.HTMLImports.ready ? "HTMLImportsLoaded" : "DOMContentLoaded";
        window.addEventListener(s, t);
      } else
        t();
    }(window.CustomElements), function(e) {
      var t = document.createElement("style");
      t.textContent = "body {transition: opacity ease-in 0.2s; } \nbody[unresolved] {opacity: 0; display: block; overflow: hidden; position: relative; } \n";
      var n = document.querySelector("head");
      n.insertBefore(t, n.firstChild);
    }(window.WebComponents);
  })();
  return _retrieveGlobal();
});

$__System.register("83", ["7d", "5", "21", "6", "7", "8", "34", "7f"], function($__export) {
  "use strict";
  var __moduleName = "83";
  var webcomponents,
      jQuery,
      $,
      _,
      Backbone,
      Shared,
      Material,
      router,
      initialize;
  return {
    setters: [function($__m) {
      webcomponents = $__m.default;
    }, function($__m) {
      jQuery = $__m.default;
    }, function($__m) {
      $ = $__m.default;
    }, function($__m) {
      _ = $__m.default;
    }, function($__m) {
      Backbone = $__m.default;
    }, function($__m) {
      Shared = $__m.default;
    }, function($__m) {
      Material = $__m.default;
    }, function($__m) {
      router = $__m.default;
    }],
    execute: function() {
      initialize = function() {
        var startApp = function() {
          Shared.router = new router();
          Shared.router.setupRouter();
          Shared.router.start();
        };
        if (IS_PHONEGAP) {
          document.addEventListener('deviceready', function() {
            startApp();
          });
        } else {
          startApp();
        }
      };
      $__export('default', {initialize: initialize});
    }
  };
});

$__System.register("1", ["83"], function($__export) {
  "use strict";
  var __moduleName = "1";
  var App;
  return {
    setters: [function($__m) {
      App = $__m.default;
    }],
    execute: function() {
      App.initialize();
    }
  };
});

})
(function(factory) {
  factory();
});