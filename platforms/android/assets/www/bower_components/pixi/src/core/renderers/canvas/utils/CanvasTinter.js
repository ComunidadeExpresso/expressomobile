var utils=require("../../../utils"),CanvasTinter={};module.exports=CanvasTinter,CanvasTinter.getTintedTexture=function(e,t){var n=e.texture;t=CanvasTinter.roundColor(t);var r="#"+("00000"+(t|0).toString(16)).substr(-6);n.tintCache=n.tintCache||{};if(n.tintCache[r])return n.tintCache[r];var i=CanvasTinter.canvas||document.createElement("canvas");CanvasTinter.tintMethod(n,t,i);if(CanvasTinter.convertTintToImage){var s=new Image;s.src=i.toDataURL(),n.tintCache[r]=s}else n.tintCache[r]=i,CanvasTinter.canvas=null;return i},CanvasTinter.tintWithMultiply=function(e,t,n){var r=n.getContext("2d"),i=e.baseTexture.resolution,s=e.crop.clone();s.x*=i,s.y*=i,s.width*=i,s.height*=i,n.width=s.width,n.height=s.height,r.fillStyle="#"+("00000"+(t|0).toString(16)).substr(-6),r.fillRect(0,0,s.width,s.height),r.globalCompositeOperation="multiply",r.drawImage(e.baseTexture.source,s.x,s.y,s.width,s.height,0,0,s.width,s.height),r.globalCompositeOperation="destination-atop",r.drawImage(e.baseTexture.source,s.x,s.y,s.width,s.height,0,0,s.width,s.height)},CanvasTinter.tintWithOverlay=function(e,t,n){var r=n.getContext("2d"),i=e.baseTexture.resolution,s=e.crop.clone();s.x*=i,s.y*=i,s.width*=i,s.height*=i,n.width=s.width,n.height=s.height,r.globalCompositeOperation="copy",r.fillStyle="#"+("00000"+(t|0).toString(16)).substr(-6),r.fillRect(0,0,s.width,s.height),r.globalCompositeOperation="destination-atop",r.drawImage(e.baseTexture.source,s.x,s.y,s.width,s.height,0,0,s.width,s.height)},CanvasTinter.tintWithPerPixel=function(e,t,n){var r=n.getContext("2d"),i=e.baseTexture.resolution,s=e.crop.clone();s.x*=i,s.y*=i,s.width*=i,s.height*=i,n.width=s.width,n.height=s.height,r.globalCompositeOperation="copy",r.drawImage(e.baseTexture.source,s.x,s.y,s.width,s.height,0,0,s.width,s.height);var o=utils.hex2rgb(t),u=o[0],a=o[1],f=o[2],l=r.getImageData(0,0,s.width,s.height),c=l.data;for(var h=0;h<c.length;h+=4)c[h+0]*=u,c[h+1]*=a,c[h+2]*=f;r.putImageData(l,0,0)},CanvasTinter.roundColor=function(e){var t=CanvasTinter.cacheStepsPerColorChannel,n=utils.hex2rgb(e);return n[0]=Math.min(255,n[0]/t*t),n[1]=Math.min(255,n[1]/t*t),n[2]=Math.min(255,n[2]/t*t),utils.rgb2hex(n)},CanvasTinter.cacheStepsPerColorChannel=8,CanvasTinter.convertTintToImage=!1,CanvasTinter.canUseMultiply=utils.canUseNewCanvasBlendModes(),CanvasTinter.tintMethod=CanvasTinter.canUseMultiply?CanvasTinter.tintWithMultiply:CanvasTinter.tintWithPerPixel;