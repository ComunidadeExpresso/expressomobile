function TextureShader(e,t,n,r,i){var s={uSampler:{type:"sampler2D",value:0},projectionMatrix:{type:"mat3",value:new Float32Array([1,0,0,0,1,0,0,0,1])}};if(r)for(var o in r)s[o]=r[o];var u={aVertexPosition:0,aTextureCoord:0,aColor:0};if(i)for(var a in i)u[a]=i[a];t=t||TextureShader.defaultVertexSrc,n=n||TextureShader.defaultFragmentSrc,Shader.call(this,e,t,n,s,u)}var Shader=require("./Shader");TextureShader.prototype=Object.create(Shader.prototype),TextureShader.prototype.constructor=TextureShader,module.exports=TextureShader,TextureShader.defaultVertexSrc=["precision lowp float;","attribute vec2 aVertexPosition;","attribute vec2 aTextureCoord;","attribute vec4 aColor;","uniform mat3 projectionMatrix;","varying vec2 vTextureCoord;","varying vec4 vColor;","void main(void){","   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);","   vTextureCoord = aTextureCoord;","   vColor = vec4(aColor.rgb * aColor.a, aColor.a);","}"].join("\n"),TextureShader.defaultFragmentSrc=["precision lowp float;","varying vec2 vTextureCoord;","varying vec4 vColor;","uniform sampler2D uSampler;","void main(void){","   gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor ;","}"].join("\n");