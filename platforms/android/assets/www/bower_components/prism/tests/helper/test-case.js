var fs=require("fs"),assert=require("chai").assert,PrismLoader=require("./prism-loader"),TokenStreamTransformer=require("./token-stream-transformer");module.exports={runTestCase:function(e,t){var n=this.parseTestCaseFile(t),r=this.parseLanguageNames(e);if(null===n)throw new Error("Test case file has invalid format (or the provided token stream is invalid JSON), please read the docs.");var i=PrismLoader.createInstance(r.languages),s=i.languages[r.mainLanguage],o=i.tokenize(n.testSource,s),u=TokenStreamTransformer.simplify(o);assert.deepEqual(u,n.expectedTokenStream,n.comment)},parseLanguageNames:function(e){var t=e.split("+"),n=null;return t=t.map(function(e){var t=e.indexOf("!");if(-1<t){if(n)throw"There are multiple main languages defined.";return n=e.replace("!",""),n}return e}),n||(n=t[t.length-1]),{languages:t,mainLanguage:n}},parseTestCaseFile:function(e){var t=fs.readFileSync(e,"utf8"),n=t.split(/^-{10,}\w*$/m);try{var r={testSource:n[0].trim(),expectedTokenStream:JSON.parse(n[1]),comment:null};return n[2]&&(r.comment=n[2].trim()),r}catch(i){return null}}};